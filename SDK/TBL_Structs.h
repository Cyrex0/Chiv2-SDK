#pragma once

/**
 * Name: chiv2
 * Version: 123456
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum TBL.EKillReason
	 */
	enum class TBL_EKillReason : uint8_t
	{
		EKillReason__Damage          = 0,
		EKillReason__FallDamage      = 1,
		EKillReason__Suicide         = 2,
		EKillReason__TapOut          = 3,
		EKillReason__OutOfCombat     = 4,
		EKillReason__FellOutOfWorld  = 5,
		EKillReason__Disconnect      = 6,
		EKillReason__ForwardSpawn    = 7,
		EKillReason__SwitchedTeams   = 8,
		EKillReason__Spectator       = 9,
		EKillReason__EKillReason_MAX = 10
	};

	/**
	 * Enum TBL.ELimbGoreAction
	 */
	enum class TBL_ELimbGoreAction : uint8_t
	{
		ELimbGoreAction__DoNothing           = 0,
		ELimbGoreAction__Dismember           = 1,
		ELimbGoreAction__ELimbGoreAction_MAX = 2
	};

	/**
	 * Enum TBL.EHeadGoreAction
	 */
	enum class TBL_EHeadGoreAction : uint8_t
	{
		EHeadGoreAction__DoNothing           = 0,
		EHeadGoreAction__ExplodeHead         = 1,
		EHeadGoreAction__Decapitate          = 2,
		EHeadGoreAction__EHeadGoreAction_MAX = 3
	};

	/**
	 * Enum TBL.ELocationBasedDamage
	 */
	enum class TBL_ELocationBasedDamage : uint8_t
	{
		ELocationBasedDamage__UpperBody                = 0,
		ELocationBasedDamage__LowerBody                = 1,
		ELocationBasedDamage__Headshot                 = 2,
		ELocationBasedDamage__ELocationBasedDamage_MAX = 3
	};

	/**
	 * Enum TBL.ECrowdControlVariant
	 */
	enum class TBL_ECrowdControlVariant : uint8_t
	{
		ECrowdControlVariant__CrowdControlVariant1     = 0,
		ECrowdControlVariant__CrowdControlVariant2     = 1,
		ECrowdControlVariant__CrowdControlVariant3     = 2,
		ECrowdControlVariant__ECrowdControlVariant_MAX = 3
	};

	/**
	 * Enum TBL.EConditionType
	 */
	enum class TBL_EConditionType : uint8_t
	{
		EConditionType__None            = 0,
		EConditionType__Downed          = 1,
		EConditionType__ShellShock      = 2,
		EConditionType__Bleeding        = 3,
		EConditionType__BleedingFatal   = 4,
		EConditionType__Burning         = 5,
		EConditionType__OnFire          = 6,
		EConditionType__Crippled        = 7,
		EConditionType__OutOfCombat     = 8,
		EConditionType__LeftArmMissing  = 9,
		EConditionType__RightArmMissing = 10,
		EConditionType__LeftLegMissing  = 11,
		EConditionType__RightLegMissing = 12,
		EConditionType__BandageKit      = 13,
		EConditionType__Inspired        = 14,
		EConditionType__MAX             = 15
	};

	/**
	 * Enum TBL.EHealingSource
	 */
	enum class TBL_EHealingSource : uint8_t
	{
		EHealingSource__None               = 0,
		EHealingSource__Bandage            = 1,
		EHealingSource__BandageKit         = 2,
		EHealingSource__Banner             = 3,
		EHealingSource__Food               = 4,
		EHealingSource__Restoration        = 5,
		EHealingSource__InspiredHorn       = 6,
		EHealingSource__EHealingSource_MAX = 7
	};

	/**
	 * Enum TBL.EStat
	 */
	enum class TBL_EStat : uint8_t
	{
		EStat__None       = 0,
		EStat__Health     = 1,
		EStat__MaxHealth  = 2,
		EStat__Overheal   = 3,
		EStat__Stamina    = 4,
		EStat__MaxStamina = 5,
		EStat__EStat_MAX  = 6
	};

	/**
	 * Enum TBL.EComboTimingPolicy
	 */
	enum class TBL_EComboTimingPolicy : uint8_t
	{
		EComboTimingPolicy__StandardTimings        = 0,
		EComboTimingPolicy__ComboTimings           = 1,
		EComboTimingPolicy__GlobalParryComboTiming = 2,
		EComboTimingPolicy__EComboTimingPolicy_MAX = 3
	};

	/**
	 * Enum TBL.EAttackTransition
	 */
	enum class TBL_EAttackTransition : uint8_t
	{
		EAttackTransition__Normal                = 0,
		EAttackTransition__Combo                 = 1,
		EAttackTransition__Riposte               = 2,
		EAttackTransition__EAttackTransition_MAX = 3
	};

	/**
	 * Enum TBL.ECrowdControlDirection
	 */
	enum class TBL_ECrowdControlDirection : uint8_t
	{
		ECrowdControlDirection__Default                    = 0,
		ECrowdControlDirection__Front                      = 1,
		ECrowdControlDirection__Left                       = 2,
		ECrowdControlDirection__Back                       = 3,
		ECrowdControlDirection__Right                      = 4,
		ECrowdControlDirection__ECrowdControlDirection_MAX = 5
	};

	/**
	 * Enum TBL.EResultCode
	 */
	enum class TBL_EResultCode : uint8_t
	{
		EResultCode__Success                        = 0,
		EResultCode__AbilityCannotCast              = 1,
		EResultCode__AbilityNotWhileDead            = 2,
		EResultCode__AbilityNotWhileSilenced        = 3,
		EResultCode__AbilityOnCooldown              = 4,
		EResultCode__AbilityAlreadyCasting          = 5,
		EResultCode__AbilityActivationCosts         = 6,
		EResultCode__AbilityInitiatorPrerequisites  = 7,
		EResultCode__AbilityTargetPrerequisites     = 8,
		EResultCode__AbilityNoInvocations           = 9,
		EResultCode__AbilityNoActivationMethod      = 10,
		EResultCode__AbilityNoTargetMethod          = 11,
		EResultCode__AbilityReachedMaxInvocations   = 12,
		EResultCode__AbilityNotGranted              = 13,
		EResultCode__AbilityLockedByExperienceLevel = 14,
		EResultCode__AbilityOutOfStamina            = 15,
		EResultCode__AbilityDisabled                = 16,
		EResultCode__EquipInvalidSlot               = 17,
		EResultCode__EquipMustBePawn                = 18,
		EResultCode__EquipMustBePlayer              = 19,
		EResultCode__EquipItemNotFound              = 20,
		EResultCode__EquipWrongSlotForItem          = 21,
		EResultCode__EquipNotRequiredClass          = 22,
		EResultCode__EquipNotRequiredTeam           = 23,
		EResultCode__EquipInvalidItem               = 24,
		EResultCode__GenericError                   = 25,
		EResultCode__EquipItemNeedsReload           = 26,
		EResultCode__QuickThrowItemNotFound         = 27,
		EResultCode__EResultCode_MAX                = 28
	};

	/**
	 * Enum TBL.EInventoryItemDamagedState
	 */
	enum class TBL_EInventoryItemDamagedState : uint8_t
	{
		EInventoryItemDamagedState__Healthy                        = 0,
		EInventoryItemDamagedState__Damaged                        = 1,
		EInventoryItemDamagedState__Destroyed                      = 2,
		EInventoryItemDamagedState__EInventoryItemDamagedState_MAX = 3
	};

	/**
	 * Enum TBL.EWeaponAbilitySlotKey
	 */
	enum class TBL_EWeaponAbilitySlotKey : uint8_t
	{
		EWeaponAbilitySlotKey__Slash                     = 0,
		EWeaponAbilitySlotKey__Stab                      = 1,
		EWeaponAbilitySlotKey__Overhead                  = 2,
		EWeaponAbilitySlotKey__Parry                     = 3,
		EWeaponAbilitySlotKey__Special                   = 4,
		EWeaponAbilitySlotKey__Shove                     = 5,
		EWeaponAbilitySlotKey__KickLow                   = 6,
		EWeaponAbilitySlotKey__SprintAttack              = 7,
		EWeaponAbilitySlotKey__SprintCharge              = 8,
		EWeaponAbilitySlotKey__SprintShove               = 9,
		EWeaponAbilitySlotKey__SprintJump                = 10,
		EWeaponAbilitySlotKey__Jab                       = 11,
		EWeaponAbilitySlotKey__Headbutt                  = 12,
		EWeaponAbilitySlotKey__Throw                     = 13,
		EWeaponAbilitySlotKey__QuickThrow                = 14,
		EWeaponAbilitySlotKey__Flourish                  = 15,
		EWeaponAbilitySlotKey__Emote                     = 16,
		EWeaponAbilitySlotKey__DashLeft                  = 17,
		EWeaponAbilitySlotKey__DashRight                 = 18,
		EWeaponAbilitySlotKey__DashBack                  = 19,
		EWeaponAbilitySlotKey__Jump                      = 20,
		EWeaponAbilitySlotKey__SwitchInventoryItem       = 21,
		EWeaponAbilitySlotKey__LoadItem                  = 22,
		EWeaponAbilitySlotKey__UseItem                   = 23,
		EWeaponAbilitySlotKey__HorseFrontKick            = 24,
		EWeaponAbilitySlotKey__HorseRearKick             = 25,
		EWeaponAbilitySlotKey__HorseEmote                = 26,
		EWeaponAbilitySlotKey__HorseSpecial              = 27,
		EWeaponAbilitySlotKey__HorseJump                 = 28,
		EWeaponAbilitySlotKey__HorseDashLeft             = 29,
		EWeaponAbilitySlotKey__HorseDashRight            = 30,
		EWeaponAbilitySlotKey__HorseDashBack             = 31,
		EWeaponAbilitySlotKey__HorseCharge               = 32,
		EWeaponAbilitySlotKey__EmoteHeld                 = 33,
		EWeaponAbilitySlotKey__UseBandage                = 34,
		EWeaponAbilitySlotKey__None                      = 35,
		EWeaponAbilitySlotKey__EWeaponAbilitySlotKey_MAX = 36
	};

	/**
	 * Enum TBL.EFailedInventoryAction
	 */
	enum class TBL_EFailedInventoryAction : uint8_t
	{
		EFailedInventoryAction__None                       = 0,
		EFailedInventoryAction__EquipBandage               = 1,
		EFailedInventoryAction__BandageAtFullHealth        = 2,
		EFailedInventoryAction__BandageRegenAtFullHealth   = 3,
		EFailedInventoryAction__NoThrowableEquipped        = 4,
		EFailedInventoryAction__NoStacks                   = 5,
		EFailedInventoryAction__CannotUseItem              = 6,
		EFailedInventoryAction__CannotEquipSpecial         = 7,
		EFailedInventoryAction__CannotEquipPrimary         = 8,
		EFailedInventoryAction__CannotEquipSecondary       = 9,
		EFailedInventoryAction__CannotEquipKnife           = 10,
		EFailedInventoryAction__CannotEquipFists           = 11,
		EFailedInventoryAction__CannotEquipItem            = 12,
		EFailedInventoryAction__CannotEquipNovelty         = 13,
		EFailedInventoryAction__OutOfCombat                = 14,
		EFailedInventoryAction__EFailedInventoryAction_MAX = 15
	};

	/**
	 * Enum TBL.ESpecialItemChargeType
	 */
	enum class TBL_ESpecialItemChargeType : uint8_t
	{
		ESpecialItemChargeType__Time                       = 0,
		ESpecialItemChargeType__Kill                       = 1,
		ESpecialItemChargeType__Death                      = 2,
		ESpecialItemChargeType__TeamDamage                 = 3,
		ESpecialItemChargeType__HeadHunter                 = 4,
		ESpecialItemChargeType__Charger                    = 5,
		ESpecialItemChargeType__Medic                      = 6,
		ESpecialItemChargeType__Unbreakable                = 7,
		ESpecialItemChargeType__Murderer                   = 8,
		ESpecialItemChargeType__Respawn                    = 9,
		ESpecialItemChargeType__UseCharge                  = 10,
		ESpecialItemChargeType__Cleaver                    = 11,
		ESpecialItemChargeType__Cheat                      = 12,
		ESpecialItemChargeType__ESpecialItemChargeType_MAX = 13
	};

	/**
	 * Enum TBL.EObjectiveState
	 */
	enum class TBL_EObjectiveState : uint8_t
	{
		EObjectiveState__Disabled            = 0,
		EObjectiveState__Neutral             = 1,
		EObjectiveState__Active              = 2,
		EObjectiveState__Blocked             = 3,
		EObjectiveState__Complete            = 4,
		EObjectiveState__EObjectiveState_MAX = 5
	};

	/**
	 * Enum TBL.EFaction
	 */
	enum class TBL_EFaction : uint8_t
	{
		EFaction__Agatha       = 0,
		EFaction__Mason        = 1,
		EFaction__FFA          = 2,
		EFaction__None         = 3,
		EFaction__All          = 4,
		EFaction__EFaction_MAX = 5
	};

	/**
	 * Enum TBL.EGamepadNavigationMode
	 */
	enum class TBL_EGamepadNavigationMode : uint8_t
	{
		EGamepadNavigationMode__Mouse                      = 0,
		EGamepadNavigationMode__KeyboardGamepad            = 1,
		EGamepadNavigationMode__EGamepadNavigationMode_MAX = 2
	};

	/**
	 * Enum TBL.EGamepadInputMode
	 */
	enum class TBL_EGamepadInputMode : uint8_t
	{
		EGamepadInputMode__MouseKeyboard         = 0,
		EGamepadInputMode__Gamepad               = 1,
		EGamepadInputMode__Any                   = 2,
		EGamepadInputMode__EGamepadInputMode_MAX = 3
	};

	/**
	 * Enum TBL.ECharacterSignificanceLevel
	 */
	enum class TBL_ECharacterSignificanceLevel : uint8_t
	{
		ECharacterSignificanceLevel__Hidden                          = 0,
		ECharacterSignificanceLevel__Low                             = 1,
		ECharacterSignificanceLevel__Medium                          = 2,
		ECharacterSignificanceLevel__High                            = 3,
		ECharacterSignificanceLevel__Critical                        = 4,
		ECharacterSignificanceLevel__Num                             = 5,
		ECharacterSignificanceLevel__None                            = 6,
		ECharacterSignificanceLevel__ECharacterSignificanceLevel_MAX = 7
	};

	/**
	 * Enum TBL.EDefenderBlockedPolicy
	 */
	enum class TBL_EDefenderBlockedPolicy : uint8_t
	{
		EDefenderBlockedPolicy__None                       = 0,
		EDefenderBlockedPolicy__Parry                      = 1,
		EDefenderBlockedPolicy__WeakParry                  = 2,
		EDefenderBlockedPolicy__TakeHit                    = 3,
		EDefenderBlockedPolicy__Stagger                    = 4,
		EDefenderBlockedPolicy__Stun                       = 5,
		EDefenderBlockedPolicy__Knockdown                  = 6,
		EDefenderBlockedPolicy__ParryBreak                 = 7,
		EDefenderBlockedPolicy__BreakShield                = 8,
		EDefenderBlockedPolicy__Blocked                    = 9,
		EDefenderBlockedPolicy__Thwack                     = 10,
		EDefenderBlockedPolicy__EDefenderBlockedPolicy_MAX = 11
	};

	/**
	 * Enum TBL.EAttackerBlockedPolicy
	 */
	enum class TBL_EAttackerBlockedPolicy : uint8_t
	{
		EAttackerBlockedPolicy__None                       = 0,
		EAttackerBlockedPolicy__Parried                    = 1,
		EAttackerBlockedPolicy__Stagger                    = 2,
		EAttackerBlockedPolicy__Thwack                     = 3,
		EAttackerBlockedPolicy__ParryBreak                 = 4,
		EAttackerBlockedPolicy__HitSuccess                 = 5,
		EAttackerBlockedPolicy__Deflect                    = 6,
		EAttackerBlockedPolicy__EAttackerBlockedPolicy_MAX = 7
	};

	/**
	 * Enum TBL.EDismountType
	 */
	enum class TBL_EDismountType : uint8_t
	{
		EDismountType__Immediate         = 0,
		EDismountType__Knockdown         = 1,
		EDismountType__EDismountType_MAX = 2
	};

	/**
	 * Enum TBL.ERadialVOMenuPage
	 */
	enum class TBL_ERadialVOMenuPage : uint8_t
	{
		ERadialVOMenuPage__PersonalPage          = 0,
		ERadialVOMenuPage__TacticalPage          = 1,
		ERadialVOMenuPage__EmotePage             = 2,
		ERadialVOMenuPage__Battlecry             = 3,
		ERadialVOMenuPage__None                  = 4,
		ERadialVOMenuPage__ERadialVOMenuPage_MAX = 5
	};

	/**
	 * Enum TBL.EOnlineStat
	 */
	enum class TBL_EOnlineStat : uint8_t
	{
		EOnlineStat__Invalid                          = 0,
		EOnlineStat__Default                          = 1,
		EOnlineStat__Store                            = 2,
		EOnlineStat__Unknown                          = 3,
		EOnlineStat__Playtime                         = 4,
		EOnlineStat__GlobalXp                         = 5,
		EOnlineStat__ExperienceFootman                = 6,
		EOnlineStat__ExperienceArcher                 = 7,
		EOnlineStat__ExperienceKnight                 = 8,
		EOnlineStat__ExperienceVanguard               = 9,
		EOnlineStat__ExperienceWeaponAxe              = 10,
		EOnlineStat__ExperienceWeaponBastardSword     = 11,
		EOnlineStat__ExperienceWeaponBattleAxe        = 12,
		EOnlineStat__ExperienceWeaponCudgel           = 13,
		EOnlineStat__ExperienceWeaponDagger           = 14,
		EOnlineStat__ExperienceWeaponDaneAxe          = 15,
		EOnlineStat__ExperienceWeaponGreatsword       = 16,
		EOnlineStat__ExperienceWeaponHalberd          = 17,
		EOnlineStat__ExperienceWeaponHeavyMace        = 18,
		EOnlineStat__ExperienceWeaponLance            = 19,
		EOnlineStat__ExperienceWeaponMace             = 20,
		EOnlineStat__ExperienceWeaponMaul             = 21,
		EOnlineStat__ExperienceWeaponMesser           = 22,
		EOnlineStat__ExperienceWeaponPoleAxe          = 23,
		EOnlineStat__ExperienceWeaponPoleHammer       = 24,
		EOnlineStat__ExperienceWeaponShortSword       = 25,
		EOnlineStat__ExperienceWeaponSpear            = 26,
		EOnlineStat__ExperienceWeaponSword            = 27,
		EOnlineStat__ExperienceWeaponWarHammer        = 28,
		EOnlineStat__ExperienceWeaponBow              = 29,
		EOnlineStat__ExperienceWeaponCrossbow         = 30,
		EOnlineStat__ExperienceWeaponThrowingAxe      = 31,
		EOnlineStat__ExperienceWeaponThrowingKnife    = 32,
		EOnlineStat__ExperienceWeaponHeavyShield      = 33,
		EOnlineStat__ExperienceWeaponLightShield      = 34,
		EOnlineStat__ExperienceWeaponMediumShield     = 35,
		EOnlineStat__ExperienceWeaponJavelin          = 36,
		EOnlineStat__ExperienceWeaponFalchion         = 37,
		EOnlineStat__ExperienceWeaponShovel           = 38,
		EOnlineStat__ExperienceWeaponSledgeHammer     = 39,
		EOnlineStat__ExperienceWeaponPickAxe          = 40,
		EOnlineStat__ExperienceWeaponTwoHandedHammer  = 41,
		EOnlineStat__ExperienceWeaponWarClub          = 42,
		EOnlineStat__ExperienceWeaponExecutionersAxe  = 43,
		EOnlineStat__ExperienceWeaponGlaive           = 44,
		EOnlineStat__ExperienceWeaponKnife            = 45,
		EOnlineStat__ExperienceWeaponWarAxe           = 46,
		EOnlineStat__ExperienceWeaponMorningStar      = 47,
		EOnlineStat__ExperienceWeaponHatchet          = 48,
		EOnlineStat__ExperienceWeaponOneHandedSpear   = 49,
		EOnlineStat__ExperienceWeaponThrowingMallet   = 50,
		EOnlineStat__ExperienceWeaponRapier           = 51,
		EOnlineStat__ExperienceWeaponHighlandSword    = 52,
		EOnlineStat__ExperienceWeaponWarBow           = 53,
		EOnlineStat__DailyPlaytime                    = 54,
		EOnlineStat__PROGRESSION_MAX                  = 55,
		EOnlineStat__Kills                            = 56,
		EOnlineStat__Deaths                           = 57,
		EOnlineStat__Suicides                         = 58,
		EOnlineStat__WinsAgatha                       = 59,
		EOnlineStat__LossesAgatha                     = 60,
		EOnlineStat__WinsMason                        = 61,
		EOnlineStat__LossesMason                      = 62,
		EOnlineStat__MatchesCompleted                 = 63,
		EOnlineStat__MatchesCompletedTeamObjective    = 64,
		EOnlineStat__MatchesCompletedTeamDeathmatch   = 65,
		EOnlineStat__MatchesCompletedFreeForAll       = 66,
		EOnlineStat__MatchesCompletedArena            = 67,
		EOnlineStat__MatchesCompletedLastTeamStanding = 68,
		EOnlineStat__MatchesCompletedBrawl            = 69,
		EOnlineStat__ItemsConstructed                 = 70,
		EOnlineStat__Revives                          = 71,
		EOnlineStat__DISUSED_A                        = 72,
		EOnlineStat__DISUSED_B                        = 73,
		EOnlineStat__DISUSED_C                        = 74,
		EOnlineStat__DamageInflicted                  = 75,
		EOnlineStat__Blocks                           = 76,
		EOnlineStat__FFAFirst                         = 77,
		EOnlineStat__FFASecond                        = 78,
		EOnlineStat__FFAThird                         = 79,
		EOnlineStat__MultiKills                       = 80,
		EOnlineStat__KillingSprees                    = 81,
		EOnlineStat__VoteKickSeverity                 = 82,
		EOnlineStat__VoteKickTime                     = 83,
		EOnlineStat__FLAVOR_MAX                       = 84,
		EOnlineStat__EOnlineStat_MAX                  = 85
	};

	/**
	 * Enum TBL.EScoreGroup
	 */
	enum class TBL_EScoreGroup : uint8_t
	{
		EScoreGroup__Player          = 0,
		EScoreGroup__Standalone      = 1,
		EScoreGroup__Objective       = 2,
		EScoreGroup__Healing         = 3,
		EScoreGroup__EScoreGroup_MAX = 4
	};

	/**
	 * Enum TBL.EEpicEndGameState
	 */
	enum class TBL_EEpicEndGameState : uint8_t
	{
		EEpicEndGameState__None                  = 0,
		EEpicEndGameState__Start                 = 1,
		EEpicEndGameState__End                   = 2,
		EEpicEndGameState__EEpicEndGameState_MAX = 3
	};

	/**
	 * Enum TBL.ECinematicGameState
	 */
	enum class TBL_ECinematicGameState : uint8_t
	{
		ECinematicGameState__NotReplicated           = 0,
		ECinematicGameState__Inactive                = 1,
		ECinematicGameState__Forced                  = 2,
		ECinematicGameState__ECinematicGameState_MAX = 3
	};

	/**
	 * Enum TBL.EContextVoType
	 */
	enum class TBL_EContextVoType : uint8_t
	{
		EContextVoType__Repeated           = 0,
		EContextVoType__SendOnce           = 1,
		EContextVoType__EContextVoType_MAX = 2
	};

	/**
	 * Enum TBL.EAudioAutoVOType
	 */
	enum class TBL_EAudioAutoVOType : uint8_t
	{
		EAudioAutoVOType__None                 = 0,
		EAudioAutoVOType__Crippled             = 1,
		EAudioAutoVOType__DeathArm             = 2,
		EAudioAutoVOType__DeathGen             = 3,
		EAudioAutoVOType__DeathLeg             = 4,
		EAudioAutoVOType__HorseAccelerate      = 5,
		EAudioAutoVOType__HorseControl         = 6,
		EAudioAutoVOType__HorseDeath           = 7,
		EAudioAutoVOType__HorseDecelerate      = 8,
		EAudioAutoVOType__HorseMount           = 9,
		EAudioAutoVOType__HorseSoothe          = 10,
		EAudioAutoVOType__Invalid              = 11,
		EAudioAutoVOType__Negative             = 12,
		EAudioAutoVOType__NoAmmo               = 13,
		EAudioAutoVOType__Pain                 = 14,
		EAudioAutoVOType__Positive             = 15,
		EAudioAutoVOType__Rage                 = 16,
		EAudioAutoVOType__Revived              = 17,
		EAudioAutoVOType__Reviving             = 18,
		EAudioAutoVOType__Sorry                = 19,
		EAudioAutoVOType__Thanks               = 20,
		EAudioAutoVOType__RefuseDeath          = 21,
		EAudioAutoVOType__KillArchers          = 22,
		EAudioAutoVOType__Defend               = 23,
		EAudioAutoVOType__DefendWinning        = 24,
		EAudioAutoVOType__HoldWalls            = 25,
		EAudioAutoVOType__AttackWinning        = 26,
		EAudioAutoVOType__Attack               = 27,
		EAudioAutoVOType__GateAttack           = 28,
		EAudioAutoVOType__CavalryIncomingEnemy = 29,
		EAudioAutoVOType__CavalryWarning       = 30,
		EAudioAutoVOType__CavalryCharge        = 31,
		EAudioAutoVOType__SiegeDefend          = 32,
		EAudioAutoVOType__SiegeDestroy         = 33,
		EAudioAutoVOType__CavalryIncomingAlly  = 34,
		EAudioAutoVOType__GateLost             = 35,
		EAudioAutoVOType__GateWon              = 36,
		EAudioAutoVOType__GateDefend           = 37,
		EAudioAutoVOType__SiegeRam             = 38,
		EAudioAutoVOType__ObjKill              = 39,
		EAudioAutoVOType__ObjBurn              = 40,
		EAudioAutoVOType__SiegeRamStop         = 41,
		EAudioAutoVOType__ObjPeasantDefend     = 42,
		EAudioAutoVOType__ObjPeasantKill       = 43,
		EAudioAutoVOType__SiegeTower           = 44,
		EAudioAutoVOType__ObjLordDefend        = 45,
		EAudioAutoVOType__ObjLordKill          = 46,
		EAudioAutoVOType__SiegeTowerStop       = 47,
		EAudioAutoVOType__SiegeFire            = 48,
		EAudioAutoVOType__ObjSupplySteal       = 49,
		EAudioAutoVOType__OffenseCharge        = 50,
		EAudioAutoVOType__DefenseShields       = 51,
		EAudioAutoVOType__ObjSupplyDefend      = 52,
		EAudioAutoVOType__OffenseFire          = 53,
		EAudioAutoVOType__DefensePrepare       = 54,
		EAudioAutoVOType__MAX                  = 55
	};

	/**
	 * Enum TBL.EGameModeMessageDisplayType
	 */
	enum class TBL_EGameModeMessageDisplayType : uint8_t
	{
		EGameModeMessageDisplayType__GameModeMessage                 = 0,
		EGameModeMessageDisplayType__ChatOnlyMessage                 = 1,
		EGameModeMessageDisplayType__GameModeOnlyMessage             = 2,
		EGameModeMessageDisplayType__KillFeedMessage                 = 3,
		EGameModeMessageDisplayType__EGameModeMessageDisplayType_MAX = 4
	};

	/**
	 * Enum TBL.EMessagePriority
	 */
	enum class TBL_EMessagePriority : uint8_t
	{
		EMessagePriority__LowPriority          = 0,
		EMessagePriority__MediumPriority       = 1,
		EMessagePriority__HighPriority         = 2,
		EMessagePriority__EMessagePriority_MAX = 3
	};

	/**
	 * Enum TBL.EGlobalGameNotificationCategory
	 */
	enum class TBL_EGlobalGameNotificationCategory : uint8_t
	{
		EGlobalGameNotificationCategory__Display                             = 0,
		EGlobalGameNotificationCategory__Alert                               = 1,
		EGlobalGameNotificationCategory__Error                               = 2,
		EGlobalGameNotificationCategory__Social                              = 3,
		EGlobalGameNotificationCategory__Online                              = 4,
		EGlobalGameNotificationCategory__Matchmaking                         = 5,
		EGlobalGameNotificationCategory__EGlobalGameNotificationCategory_MAX = 6
	};

	/**
	 * Enum TBL.ETeamCapturePointComponentState
	 */
	enum class TBL_ETeamCapturePointComponentState : uint8_t
	{
		ETeamCapturePointComponentState__Neutral                             = 0,
		ETeamCapturePointComponentState__Contested                           = 1,
		ETeamCapturePointComponentState__Neutralizing                        = 2,
		ETeamCapturePointComponentState__Capturing                           = 3,
		ETeamCapturePointComponentState__Captured                            = 4,
		ETeamCapturePointComponentState__Invalid                             = 5,
		ETeamCapturePointComponentState__ETeamCapturePointComponentState_MAX = 6
	};

	/**
	 * Enum TBL.EServerListType
	 */
	enum class TBL_EServerListType : uint8_t
	{
		EServerListType__Internet            = 0,
		EServerListType__Lan                 = 1,
		EServerListType__Friends             = 2,
		EServerListType__History             = 3,
		EServerListType__Favorites           = 4,
		EServerListType__EServerListType_MAX = 5
	};

	/**
	 * Enum TBL.EInputActionMode
	 */
	enum class TBL_EInputActionMode : uint8_t
	{
		EInputActionMode__None                  = 0,
		EInputActionMode__WhitelistedOnly       = 1,
		EInputActionMode__InGameWhitelistedOnly = 2,
		EInputActionMode__EInputActionMode_MAX  = 3
	};

	/**
	 * Enum TBL.EChatType
	 */
	enum class TBL_EChatType : uint8_t
	{
		EChatType__AllSay              = 0,
		EChatType__TeamSay             = 1,
		EChatType__Whisper             = 2,
		EChatType__Admin               = 3,
		EChatType__Objective           = 4,
		EChatType__System              = 5,
		EChatType__ServerSay           = 6,
		EChatType__Debug               = 7,
		EChatType__CrosshairMsg        = 8,
		EChatType__Backend             = 9,
		EChatType__Party               = 10,
		EChatType__Spectator           = 11,
		EChatType__ClosedCaption       = 12,
		EChatType__ClosedCaptionMason  = 13,
		EChatType__ClosedCaptionAgatha = 14,
		EChatType__MAX                 = 15
	};

	/**
	 * Enum TBL.EFriendsListType
	 */
	enum class TBL_EFriendsListType : uint8_t
	{
		EFriendsListType__Friends_All                      = 0,
		EFriendsListType__Friends_Online                   = 1,
		EFriendsListType__Friends_PlayingSameGame          = 2,
		EFriendsListType__Friends_AllNotPlayingSameGame    = 3,
		EFriendsListType__Friends_OnlineNotPlayingSameGame = 4,
		EFriendsListType__Party                            = 5,
		EFriendsListType__PartyInvites                     = 6,
		EFriendsListType__Recent                           = 7,
		EFriendsListType__Blocked                          = 8,
		EFriendsListType__DummyList                        = 9,
		EFriendsListType__EFriendsListType_MAX             = 10
	};

	/**
	 * Enum TBL.EAbilitiesComponentVersion
	 */
	enum class TBL_EAbilitiesComponentVersion : uint8_t
	{
		EAbilitiesComponentVersion__MigrateAbilityGrants           = 0,
		EAbilitiesComponentVersion__SaveVersionAsInt               = 1,
		EAbilitiesComponentVersion__Latest                         = 2,
		EAbilitiesComponentVersion__EAbilitiesComponentVersion_MAX = 3
	};

	/**
	 * Enum TBL.EAbilityInvocationFlags
	 */
	enum class TBL_EAbilityInvocationFlags : uint8_t
	{
		EAbilityInvocationFlags__None                        = 0,
		EAbilityInvocationFlags__FxAmmo                      = 1,
		EAbilityInvocationFlags__SkipReplication             = 2,
		EAbilityInvocationFlags__EAbilityInvocationFlags_MAX = 3
	};

	/**
	 * Enum TBL.EAttackDirection
	 */
	enum class TBL_EAttackDirection : uint8_t
	{
		EAttackDirection__FromInitiator        = 0,
		EAttackDirection__FromShapeLocation    = 1,
		EAttackDirection__EAttackDirection_MAX = 2
	};

	/**
	 * Enum TBL.ETargetVisibilityCheck
	 */
	enum class TBL_ETargetVisibilityCheck : uint8_t
	{
		ETargetVisibilityCheck__NoVisibilityCheck          = 0,
		ETargetVisibilityCheck__VisibleFromInitiator       = 1,
		ETargetVisibilityCheck__VisibleFromShapeLocation   = 2,
		ETargetVisibilityCheck__ETargetVisibilityCheck_MAX = 3
	};

	/**
	 * Enum TBL.ERewardPolicy
	 */
	enum class TBL_ERewardPolicy : uint8_t
	{
		ERewardPolicy__None              = 0,
		ERewardPolicy__Immediate         = 1,
		ERewardPolicy__Notification      = 2,
		ERewardPolicy__ERewardPolicy_MAX = 3
	};

	/**
	 * Enum TBL.EActionScaling
	 */
	enum class TBL_EActionScaling : uint8_t
	{
		EActionScaling__None               = 0,
		EActionScaling__OneTime            = 1,
		EActionScaling__Continuous         = 2,
		EActionScaling__EActionScaling_MAX = 3
	};

	/**
	 * Enum TBL.EActionVersion
	 */
	enum class TBL_EActionVersion : uint8_t
	{
		EActionVersion__EffectSpecStructToUObject = 0,
		EActionVersion__SaveVersionAsInt          = 1,
		EActionVersion__Latest                    = 2,
		EActionVersion__EActionVersion_MAX        = 3
	};

	/**
	 * Enum TBL.EActionFlags
	 */
	enum class TBL_EActionFlags : uint8_t
	{
		EActionFlags__None             = 0,
		EActionFlags__Enabled          = 1,
		EActionFlags__Instanced        = 2,
		EActionFlags__ManualComplete   = 3,
		EActionFlags__Autonomous       = 4,
		EActionFlags__Cosmetic         = 5,
		EActionFlags__EActionFlags_MAX = 6
	};

	/**
	 * Enum TBL.EInputPriority
	 */
	enum class TBL_EInputPriority : uint8_t
	{
		EInputPriority__Override           = 0,
		EInputPriority__Reaction           = 1,
		EInputPriority__High               = 2,
		EInputPriority__Low                = 3,
		EInputPriority__Idle               = 4,
		EInputPriority__EInputPriority_MAX = 5
	};

	/**
	 * Enum TBL.EAlwaysOnMusicState
	 */
	enum class TBL_EAlwaysOnMusicState : uint8_t
	{
		EAlwaysOnMusicState__None                    = 0,
		EAlwaysOnMusicState__Tier1                   = 1,
		EAlwaysOnMusicState__Tier2                   = 2,
		EAlwaysOnMusicState__Tier3                   = 3,
		EAlwaysOnMusicState__Tier4                   = 4,
		EAlwaysOnMusicState__EndStageTransition      = 5,
		EAlwaysOnMusicState__ObjectiveComplete       = 6,
		EAlwaysOnMusicState__EAlwaysOnMusicState_MAX = 7
	};

	/**
	 * Enum TBL.EAnalyticsMenuScreen
	 */
	enum class TBL_EAnalyticsMenuScreen : uint8_t
	{
		EAnalyticsMenuScreen__None                        = 0,
		EAnalyticsMenuScreen__CustomizationClassSelection = 1,
		EAnalyticsMenuScreen__CustomizationScreen         = 2,
		EAnalyticsMenuScreen__EAnalyticsMenuScreen_MAX    = 3
	};

	/**
	 * Enum TBL.ETargetMethodParameters
	 */
	enum class TBL_ETargetMethodParameters : uint8_t
	{
		ETargetMethodParameters__Initiator                   = 0,
		ETargetMethodParameters__Target                      = 1,
		ETargetMethodParameters__WorldLocation               = 2,
		ETargetMethodParameters__CaptureFromTargetMethod     = 3,
		ETargetMethodParameters__ETargetMethodParameters_MAX = 4
	};

	/**
	 * Enum TBL.EArenaSounds
	 */
	enum class TBL_EArenaSounds : uint8_t
	{
		EArenaSounds__None                      = 0,
		EArenaSounds__FiveSecondCountdown       = 1,
		EArenaSounds__ThreeSecondCountdown      = 2,
		EArenaSounds__MasonVictory              = 3,
		EArenaSounds__AgathaVictory             = 4,
		EArenaSounds__ThirtySecondsRemainging   = 5,
		EArenaSounds__FifteenSecondsRemainging  = 6,
		EArenaSounds__MatchNearEndingMusicStart = 7,
		EArenaSounds__MatchNearEndingMusicStop  = 8,
		EArenaSounds__RoundStart                = 9,
		EArenaSounds__RoundFight                = 10,
		EArenaSounds__AgathaMatchPoint          = 11,
		EArenaSounds__MasonMatchPoint           = 12,
		EArenaSounds__MatchPoint                = 13,
		EArenaSounds__EArenaSounds_MAX          = 14
	};

	/**
	 * Enum TBL.EOnStaminaDrainedPolicy
	 */
	enum class TBL_EOnStaminaDrainedPolicy : uint8_t
	{
		EOnStaminaDrainedPolicy__Nothing                     = 0,
		EOnStaminaDrainedPolicy__CancelAttack                = 1,
		EOnStaminaDrainedPolicy__EOnStaminaDrainedPolicy_MAX = 2
	};

	/**
	 * Enum TBL.ETeamHitDamagePolicy
	 */
	enum class TBL_ETeamHitDamagePolicy : uint8_t
	{
		ETeamHitDamagePolicy__DealDamage               = 0,
		ETeamHitDamagePolicy__DoNotDealDamage          = 1,
		ETeamHitDamagePolicy__ETeamHitDamagePolicy_MAX = 2
	};

	/**
	 * Enum TBL.ECombatStateEvent
	 */
	enum class TBL_ECombatStateEvent : uint8_t
	{
		ECombatStateEvent__OnStartAttack         = 0,
		ECombatStateEvent__OnActivateAbility     = 1,
		ECombatStateEvent__ECombatStateEvent_MAX = 2
	};

	/**
	 * Enum TBL.EEarlyHitPolicy
	 */
	enum class TBL_EEarlyHitPolicy : uint8_t
	{
		EEarlyHitPolicy__Nothing             = 0,
		EEarlyHitPolicy__Thwack              = 1,
		EEarlyHitPolicy__HitSuccess          = 2,
		EEarlyHitPolicy__Blocked             = 3,
		EEarlyHitPolicy__Interrupt           = 4,
		EEarlyHitPolicy__Stagger             = 5,
		EEarlyHitPolicy__Stun                = 6,
		EEarlyHitPolicy__Knockdown           = 7,
		EEarlyHitPolicy__WorldHit            = 8,
		EEarlyHitPolicy__Cancel              = 9,
		EEarlyHitPolicy__EEarlyHitPolicy_MAX = 10
	};

	/**
	 * Enum TBL.EClashPolicy
	 */
	enum class TBL_EClashPolicy : uint8_t
	{
		EClashPolicy__Nothing          = 0,
		EClashPolicy__Clash            = 1,
		EClashPolicy__EClashPolicy_MAX = 2
	};

	/**
	 * Enum TBL.ETeamHitPolicy
	 */
	enum class TBL_ETeamHitPolicy : uint8_t
	{
		ETeamHitPolicy__Nothing            = 0,
		ETeamHitPolicy__Thwack             = 1,
		ETeamHitPolicy__WorldHit           = 2,
		ETeamHitPolicy__Blocked            = 3,
		ETeamHitPolicy__ETeamHitPolicy_MAX = 4
	};

	/**
	 * Enum TBL.EOnHitPolicy
	 */
	enum class TBL_EOnHitPolicy : uint8_t
	{
		EOnHitPolicy__Nothing          = 0,
		EOnHitPolicy__Cancel           = 1,
		EOnHitPolicy__HitSuccess       = 2,
		EOnHitPolicy__EOnHitPolicy_MAX = 3
	};

	/**
	 * Enum TBL.EWorldHitPolicy
	 */
	enum class TBL_EWorldHitPolicy : uint8_t
	{
		EWorldHitPolicy__Nothing             = 0,
		EWorldHitPolicy__WorldHit            = 1,
		EWorldHitPolicy__Thwack              = 2,
		EWorldHitPolicy__Stagger             = 3,
		EWorldHitPolicy__Blocked             = 4,
		EWorldHitPolicy__HitSuccess          = 5,
		EWorldHitPolicy__EWorldHitPolicy_MAX = 6
	};

	/**
	 * Enum TBL.EReleaseCancelPolicy
	 */
	enum class TBL_EReleaseCancelPolicy : uint8_t
	{
		EReleaseCancelPolicy__CannotBeCancelled        = 0,
		EReleaseCancelPolicy__CanCancelToRecovery      = 1,
		EReleaseCancelPolicy__EReleaseCancelPolicy_MAX = 2
	};

	/**
	 * Enum TBL.EWindupInputReleasedPolicy
	 */
	enum class TBL_EWindupInputReleasedPolicy : uint8_t
	{
		EWindupInputReleasedPolicy__Nothing                        = 0,
		EWindupInputReleasedPolicy__GotoIdle                       = 1,
		EWindupInputReleasedPolicy__DropItem                       = 2,
		EWindupInputReleasedPolicy__EWindupInputReleasedPolicy_MAX = 3
	};

	/**
	 * Enum TBL.EFullBodyCombatState
	 */
	enum class TBL_EFullBodyCombatState : uint8_t
	{
		EFullBodyCombatState__StartOfCombatState       = 0,
		EFullBodyCombatState__EndOfCombatState         = 1,
		EFullBodyCombatState__EFullBodyCombatState_MAX = 2
	};

	/**
	 * Enum TBL.EPassiveShieldPolicy
	 */
	enum class TBL_EPassiveShieldPolicy : uint8_t
	{
		EPassiveShieldPolicy__TakeHit                  = 0,
		EPassiveShieldPolicy__Block                    = 1,
		EPassiveShieldPolicy__BreakShield              = 2,
		EPassiveShieldPolicy__Ignore                   = 3,
		EPassiveShieldPolicy__EPassiveShieldPolicy_MAX = 4
	};

	/**
	 * Enum TBL.EOnHitEffect
	 */
	enum class TBL_EOnHitEffect : uint8_t
	{
		EOnHitEffect__None             = 0,
		EOnHitEffect__Interrupt        = 1,
		EOnHitEffect__Stagger          = 2,
		EOnHitEffect__Stun             = 3,
		EOnHitEffect__Knockdown        = 4,
		EOnHitEffect__DownedStagger    = 5,
		EOnHitEffect__Getup            = 6,
		EOnHitEffect__EOnHitEffect_MAX = 7
	};

	/**
	 * Enum TBL.EHeldBehavior
	 */
	enum class TBL_EHeldBehavior : uint8_t
	{
		EHeldBehavior__None              = 0,
		EHeldBehavior__UseHoldingState   = 1,
		EHeldBehavior__HoldRelease       = 2,
		EHeldBehavior__EHeldBehavior_MAX = 3
	};

	/**
	 * Enum TBL.ECombatStateBehavior
	 */
	enum class TBL_ECombatStateBehavior : uint8_t
	{
		ECombatStateBehavior__MeleeAttack              = 0,
		ECombatStateBehavior__DrawnRangedAttack        = 1,
		ECombatStateBehavior__ImmediateRangedAttack    = 2,
		ECombatStateBehavior__ChargeAttack             = 3,
		ECombatStateBehavior__ECombatStateBehavior_MAX = 4
	};

	/**
	 * Enum TBL.EAttackTypeCategory
	 */
	enum class TBL_EAttackTypeCategory : uint8_t
	{
		EAttackTypeCategory__Standard                = 0,
		EAttackTypeCategory__QuickStrike             = 1,
		EAttackTypeCategory__Special                 = 2,
		EAttackTypeCategory__PassiveCharge           = 3,
		EAttackTypeCategory__EAttackTypeCategory_MAX = 4
	};

	/**
	 * Enum TBL.EAnimationType
	 */
	enum class TBL_EAnimationType : uint8_t
	{
		EAnimationType__UpperBody                  = 0,
		EAnimationType__LowerBody                  = 1,
		EAnimationType__FullBody                   = 2,
		EAnimationType__FullBodyReleaseOnly        = 3,
		EAnimationType__FullBodyStartOfReleaseOnly = 4,
		EAnimationType__EAnimationType_MAX         = 5
	};

	/**
	 * Enum TBL.EActivateAbility
	 */
	enum class TBL_EActivateAbility : uint8_t
	{
		EActivateAbility__StartOfCombatState   = 0,
		EActivateAbility__EndOfCombatState     = 1,
		EActivateAbility__AnimNotify           = 2,
		EActivateAbility__EActivateAbility_MAX = 3
	};

	/**
	 * Enum TBL.EWeaponTipResult
	 */
	enum class TBL_EWeaponTipResult : uint8_t
	{
		EWeaponTipResult__Hit                  = 0,
		EWeaponTipResult__IgnoreHit            = 1,
		EWeaponTipResult__DelayHit             = 2,
		EWeaponTipResult__EWeaponTipResult_MAX = 3
	};

	/**
	 * Enum TBL.EBrawlAlwaysOnMusicState
	 */
	enum class TBL_EBrawlAlwaysOnMusicState : uint8_t
	{
		EBrawlAlwaysOnMusicState__None                         = 0,
		EBrawlAlwaysOnMusicState__WaitingToStart               = 1,
		EBrawlAlwaysOnMusicState__RecordScratch                = 2,
		EBrawlAlwaysOnMusicState__PlayJukeBox                  = 3,
		EBrawlAlwaysOnMusicState__StopJukeBox                  = 4,
		EBrawlAlwaysOnMusicState__EBrawlAlwaysOnMusicState_MAX = 5
	};

	/**
	 * Enum TBL.ECapturePointState
	 */
	enum class TBL_ECapturePointState : uint8_t
	{
		ECapturePointState__Neutral                = 0,
		ECapturePointState__Contested              = 1,
		ECapturePointState__Neutralizing           = 2,
		ECapturePointState__Capturing              = 3,
		ECapturePointState__Captured               = 4,
		ECapturePointState__Invalid                = 5,
		ECapturePointState__ECapturePointState_MAX = 6
	};

	/**
	 * Enum TBL.ECatapultState
	 */
	enum class TBL_ECatapultState : uint8_t
	{
		ECatapultState__Disabled            = 0,
		ECatapultState__Interactable        = 1,
		ECatapultState__Pushable            = 2,
		ECatapultState__Packaged            = 3,
		ECatapultState__PackagedAndDisabled = 4,
		ECatapultState__ECatapultState_MAX  = 5
	};

	/**
	 * Enum TBL.EComboInRecoveryOptions
	 */
	enum class TBL_EComboInRecoveryOptions : uint8_t
	{
		EComboInRecoveryOptions__UseDefault                  = 0,
		EComboInRecoveryOptions__CanCombo                    = 1,
		EComboInRecoveryOptions__CannotCombo                 = 2,
		EComboInRecoveryOptions__EComboInRecoveryOptions_MAX = 3
	};

	/**
	 * Enum TBL.ESwingThroughReason
	 */
	enum class TBL_ESwingThroughReason : uint8_t
	{
		STR_IsFacingTarget           = 0,
		STR_IsTargetVisible          = 1,
		STR_IsFacingWeaponTip        = 2,
		STR_IsFacingWeaponTipDelayed = 3,
		STR_MAX                      = 4
	};

	/**
	 * Enum TBL.ECrowdControlCombatState
	 */
	enum class TBL_ECrowdControlCombatState : uint8_t
	{
		ECrowdControlCombatState__Interrupt                    = 0,
		ECrowdControlCombatState__Stagger                      = 1,
		ECrowdControlCombatState__Knockdown                    = 2,
		ECrowdControlCombatState__Stun                         = 3,
		ECrowdControlCombatState__DownedStagger                = 4,
		ECrowdControlCombatState__ECrowdControlCombatState_MAX = 5
	};

	/**
	 * Enum TBL.ECreditsSectionType
	 */
	enum class TBL_ECreditsSectionType : uint8_t
	{
		ECreditsSectionType__Normal                  = 0,
		ECreditsSectionType__MultiColumn             = 1,
		ECreditsSectionType__Header1                 = 2,
		ECreditsSectionType__Header2                 = 3,
		ECreditsSectionType__Header3                 = 4,
		ECreditsSectionType__BigSeparator            = 5,
		ECreditsSectionType__Separator               = 6,
		ECreditsSectionType__ECreditsSectionType_MAX = 7
	};

	/**
	 * Enum TBL.EWeaponTag
	 */
	enum class TBL_EWeaponTag : uint8_t
	{
		EWeaponTag__None            = 0,
		EWeaponTag__Axe             = 1,
		EWeaponTag__BastardSword    = 2,
		EWeaponTag__BattleAxe       = 3,
		EWeaponTag__Cudgel          = 4,
		EWeaponTag__Dagger          = 5,
		EWeaponTag__DaneAxe         = 6,
		EWeaponTag__Greatsword      = 7,
		EWeaponTag__Halberd         = 8,
		EWeaponTag__HeavyMace       = 9,
		EWeaponTag__Lance           = 10,
		EWeaponTag__Mace            = 11,
		EWeaponTag__Maul            = 12,
		EWeaponTag__Messer          = 13,
		EWeaponTag__PoleAxe         = 14,
		EWeaponTag__PoleHammer      = 15,
		EWeaponTag__ShortSword      = 16,
		EWeaponTag__Spear           = 17,
		EWeaponTag__Sword           = 18,
		EWeaponTag__WarHammer       = 19,
		EWeaponTag__Bow             = 20,
		EWeaponTag__Crossbow        = 21,
		EWeaponTag__ThrowingAxe     = 22,
		EWeaponTag__ThrowingKnife   = 23,
		EWeaponTag__HeavyShield     = 24,
		EWeaponTag__LightShield     = 25,
		EWeaponTag__MediumShield    = 26,
		EWeaponTag__Javelin         = 27,
		EWeaponTag__Falchion        = 28,
		EWeaponTag__Shovel          = 29,
		EWeaponTag__SledgeHammer    = 30,
		EWeaponTag__PickAxe         = 31,
		EWeaponTag__TwoHandedHammer = 32,
		EWeaponTag__WarClub         = 33,
		EWeaponTag__ExecutionersAxe = 34,
		EWeaponTag__Glaive          = 35,
		EWeaponTag__Knife           = 36,
		EWeaponTag__WarAxe          = 37,
		EWeaponTag__MorningStar     = 38,
		EWeaponTag__Hatchet         = 39,
		EWeaponTag__OneHandedSpear  = 40,
		EWeaponTag__ThrowingMallet  = 41,
		EWeaponTag__Rapier          = 42,
		EWeaponTag__HighlandSword   = 43,
		EWeaponTag__WarBow          = 44,
		EWeaponTag__MAX             = 45
	};

	/**
	 * Enum TBL.ECustomizationTag
	 */
	enum class TBL_ECustomizationTag : uint8_t
	{
		ECustomizationTag__Team_Agatha           = 0,
		ECustomizationTag__Team_Mason            = 1,
		ECustomizationTag__Team_FFA              = 2,
		ECustomizationTag__Class_Archer          = 3,
		ECustomizationTag__Class_Footman         = 4,
		ECustomizationTag__Class_Knight          = 5,
		ECustomizationTag__Class_Vanguard        = 6,
		ECustomizationTag__ECustomizationTag_MAX = 7
	};

	/**
	 * Enum TBL.ETattooColorChannel
	 */
	enum class TBL_ETattooColorChannel : uint8_t
	{
		ETattooColorChannel__Red                     = 0,
		ETattooColorChannel__Green                   = 1,
		ETattooColorChannel__Blue                    = 2,
		ETattooColorChannel__Alpha                   = 3,
		ETattooColorChannel__ETattooColorChannel_MAX = 4
	};

	/**
	 * Enum TBL.ECustomizationGroupSearchResult
	 */
	enum class TBL_ECustomizationGroupSearchResult : uint8_t
	{
		ECustomizationGroupSearchResult__WithoutGroups                       = 0,
		ECustomizationGroupSearchResult__WithGroups                          = 1,
		ECustomizationGroupSearchResult__ECustomizationGroupSearchResult_MAX = 2
	};

	/**
	 * Enum TBL.EGenerationMode
	 */
	enum class TBL_EGenerationMode : uint8_t
	{
		EGenerationMode__Uniform             = 0,
		EGenerationMode__UniformRandom       = 1,
		EGenerationMode__Random              = 2,
		EGenerationMode__EGenerationMode_MAX = 3
	};

	/**
	 * Enum TBL.EMarkerType
	 */
	enum class TBL_EMarkerType : uint8_t
	{
		EMarkerType__Objective       = 0,
		EMarkerType__NonObjective    = 1,
		EMarkerType__Hostile         = 2,
		EMarkerType__Invalid         = 3,
		EMarkerType__EMarkerType_MAX = 4
	};

	/**
	 * Enum TBL.EMountVisibilityCondition
	 */
	enum class TBL_EMountVisibilityCondition : uint8_t
	{
		EMountVisibilityCondition__VisibleIfMounted              = 0,
		EMountVisibilityCondition__VisibleIfNotMounted           = 1,
		EMountVisibilityCondition__EMountVisibilityCondition_MAX = 2
	};

	/**
	 * Enum TBL.EInventoryVisibilityCondition
	 */
	enum class TBL_EInventoryVisibilityCondition : uint8_t
	{
		EInventoryVisibilityCondition__VisibleIfEquipped                 = 0,
		EInventoryVisibilityCondition__VisibleIfUnEquipped               = 1,
		EInventoryVisibilityCondition__EInventoryVisibilityCondition_MAX = 2
	};

	/**
	 * Enum TBL.EFactionOrAttackerDefender
	 */
	enum class TBL_EFactionOrAttackerDefender : uint8_t
	{
		EFactionOrAttackerDefender__Agatha                         = 0,
		EFactionOrAttackerDefender__Mason                          = 1,
		EFactionOrAttackerDefender__Attacker                       = 2,
		EFactionOrAttackerDefender__Defender                       = 3,
		EFactionOrAttackerDefender__Friendly                       = 4,
		EFactionOrAttackerDefender__Enemy                          = 5,
		EFactionOrAttackerDefender__All                            = 6,
		EFactionOrAttackerDefender__EFactionOrAttackerDefender_MAX = 7
	};

	/**
	 * Enum TBL.EWidgetContainer
	 */
	enum class TBL_EWidgetContainer : uint8_t
	{
		EWidgetContainer__LookAt               = 0,
		EWidgetContainer__ObjectiveBar         = 1,
		EWidgetContainer__AlwaysVisible        = 2,
		EWidgetContainer__HudMarker            = 3,
		EWidgetContainer__HudZone              = 4,
		EWidgetContainer__EWidgetContainer_MAX = 5
	};

	/**
	 * Enum TBL.ECinematicCameraTargetLockMode
	 */
	enum class TBL_ECinematicCameraTargetLockMode : uint8_t
	{
		ECinematicCameraTargetLockMode__Forward                            = 0,
		ECinematicCameraTargetLockMode__Tracking                           = 1,
		ECinematicCameraTargetLockMode__LockForward                        = 2,
		ECinematicCameraTargetLockMode__LockTracking                       = 3,
		ECinematicCameraTargetLockMode__ECinematicCameraTargetLockMode_MAX = 4
	};

	/**
	 * Enum TBL.EAttachMethod
	 */
	enum class TBL_EAttachMethod : uint8_t
	{
		EAttachMethod__SocketRelative                    = 0,
		EAttachMethod__SocketAbsoluteLocation            = 1,
		EAttachMethod__SocketAbsoluteLocationAndRotation = 2,
		EAttachMethod__EAttachMethod_MAX                 = 3
	};

	/**
	 * Enum TBL.EOnProjectileHitEffect
	 */
	enum class TBL_EOnProjectileHitEffect : uint8_t
	{
		EOnProjectileHitEffect__Stick                      = 0,
		EOnProjectileHitEffect__Bounce                     = 1,
		EOnProjectileHitEffect__Destroy                    = 2,
		EOnProjectileHitEffect__EOnProjectileHitEffect_MAX = 3
	};

	/**
	 * Enum TBL.ETBLRarity
	 */
	enum class TBL_ETBLRarity : uint8_t
	{
		ETBLRarity__None           = 0,
		ETBLRarity__Common         = 1,
		ETBLRarity__Uncommon       = 2,
		ETBLRarity__Rare           = 3,
		ETBLRarity__Epic           = 4,
		ETBLRarity__Legendary      = 5,
		ETBLRarity__ETBLRarity_MAX = 6
	};

	/**
	 * Enum TBL.EGameSparksDataType
	 */
	enum class TBL_EGameSparksDataType : uint8_t
	{
		EGameSparksDataType__VirtualGood             = 0,
		EGameSparksDataType__Achievement             = 1,
		EGameSparksDataType__EGameSparksDataType_MAX = 2
	};

	/**
	 * Enum TBL.ESpawnerSelectionMode
	 */
	enum class TBL_ESpawnerSelectionMode : uint8_t
	{
		ESpawnerSelectionMode__UniformDistribute         = 0,
		ESpawnerSelectionMode__RandomDistribute          = 1,
		ESpawnerSelectionMode__SequentialFill            = 2,
		ESpawnerSelectionMode__RandomFill                = 3,
		ESpawnerSelectionMode__ESpawnerSelectionMode_MAX = 4
	};

	/**
	 * Enum TBL.ECollisionInteraction
	 */
	enum class TBL_ECollisionInteraction : uint8_t
	{
		ECollisionInteraction__Knockoff                  = 0,
		ECollisionInteraction__Stagger                   = 1,
		ECollisionInteraction__Rear                      = 2,
		ECollisionInteraction__BumpOff                   = 3,
		ECollisionInteraction__Push                      = 4,
		ECollisionInteraction__None                      = 5,
		ECollisionInteraction__ECollisionInteraction_MAX = 6
	};

	/**
	 * Enum TBL.EHorseWorldCollision
	 */
	enum class TBL_EHorseWorldCollision : uint8_t
	{
		EHorseWorldCollision__Front                    = 0,
		EHorseWorldCollision__Back                     = 1,
		EHorseWorldCollision__Both                     = 2,
		EHorseWorldCollision__EHorseWorldCollision_MAX = 3
	};

	/**
	 * Enum TBL.EHorseToWorldImpactType
	 */
	enum class TBL_EHorseToWorldImpactType : uint8_t
	{
		EHorseToWorldImpactType__StraightImpact              = 0,
		EHorseToWorldImpactType__GlancingImpact              = 1,
		EHorseToWorldImpactType__Bump                        = 2,
		EHorseToWorldImpactType__EHorseToWorldImpactType_MAX = 3
	};

	/**
	 * Enum TBL.EHorseToHorseImpactType
	 */
	enum class TBL_EHorseToHorseImpactType : uint8_t
	{
		EHorseToHorseImpactType__StraightImpact              = 0,
		EHorseToHorseImpactType__SideImpact                  = 1,
		EHorseToHorseImpactType__BackImpact                  = 2,
		EHorseToHorseImpactType__EHorseToHorseImpactType_MAX = 3
	};

	/**
	 * Enum TBL.EHorseDashDirection
	 */
	enum class TBL_EHorseDashDirection : uint8_t
	{
		EHorseDashDirection__Jump                    = 0,
		EHorseDashDirection__Left                    = 1,
		EHorseDashDirection__Right                   = 2,
		EHorseDashDirection__Back                    = 3,
		EHorseDashDirection__EHorseDashDirection_MAX = 4
	};

	/**
	 * Enum TBL.EHorseToCharacterImpactType
	 */
	enum class TBL_EHorseToCharacterImpactType : uint8_t
	{
		EHorseToCharacterImpactType__StraightImpact                  = 0,
		EHorseToCharacterImpactType__GlancingImpact                  = 1,
		EHorseToCharacterImpactType__Bump                            = 2,
		EHorseToCharacterImpactType__EHorseToCharacterImpactType_MAX = 3
	};

	/**
	 * Enum TBL.EHorseImpactLocation
	 */
	enum class TBL_EHorseImpactLocation : uint8_t
	{
		EHorseImpactLocation__Left                     = 0,
		EHorseImpactLocation__Right                    = 1,
		EHorseImpactLocation__EHorseImpactLocation_MAX = 2
	};

	/**
	 * Enum TBL.EHorseMovementEndCondition
	 */
	enum class TBL_EHorseMovementEndCondition : uint8_t
	{
		EHorseMovementEndCondition__None                           = 0,
		EHorseMovementEndCondition__Time                           = 1,
		EHorseMovementEndCondition__StrafeDistance                 = 2,
		EHorseMovementEndCondition__TurnAngle                      = 3,
		EHorseMovementEndCondition__EHorseMovementEndCondition_MAX = 4
	};

	/**
	 * Enum TBL.EHorseTurnInput
	 */
	enum class TBL_EHorseTurnInput : uint8_t
	{
		EHorseTurnInput__None                = 0,
		EHorseTurnInput__TurnSlow            = 1,
		EHorseTurnInput__Turn                = 2,
		EHorseTurnInput__TurnFast            = 3,
		EHorseTurnInput__EHorseTurnInput_MAX = 4
	};

	/**
	 * Enum TBL.EHorseMovementInput
	 */
	enum class TBL_EHorseMovementInput : uint8_t
	{
		EHorseMovementInput__None                    = 0,
		EHorseMovementInput__Forward                 = 1,
		EHorseMovementInput__ForwardTurn             = 2,
		EHorseMovementInput__Turn                    = 3,
		EHorseMovementInput__BackwardTurn            = 4,
		EHorseMovementInput__ForwardStrafe           = 5,
		EHorseMovementInput__Strafe                  = 6,
		EHorseMovementInput__BackwardStafe           = 7,
		EHorseMovementInput__Backward                = 8,
		EHorseMovementInput__EHorseMovementInput_MAX = 9
	};

	/**
	 * Enum TBL.EInfluenceMapFindMethod
	 */
	enum class TBL_EInfluenceMapFindMethod : uint8_t
	{
		EInfluenceMapFindMethod__Spatial                     = 0,
		EInfluenceMapFindMethod__Tag                         = 1,
		EInfluenceMapFindMethod__EInfluenceMapFindMethod_MAX = 2
	};

	/**
	 * Enum TBL.EInfluenceMapTypeWeaponRestriction
	 */
	enum class TBL_EInfluenceMapTypeWeaponRestriction : uint8_t
	{
		EInfluenceMapTypeWeaponRestriction__Any                                    = 0,
		EInfluenceMapTypeWeaponRestriction__RangedWeaponOnly                       = 1,
		EInfluenceMapTypeWeaponRestriction__ThrowableWeaponOnly                    = 2,
		EInfluenceMapTypeWeaponRestriction__MeleeWeaponOnly                        = 3,
		EInfluenceMapTypeWeaponRestriction__EInfluenceMapTypeWeaponRestriction_MAX = 4
	};

	/**
	 * Enum TBL.EAIObjectiveType
	 */
	enum class TBL_EAIObjectiveType : uint8_t
	{
		EAIObjectiveType__Unknown              = 0,
		EAIObjectiveType__Capture              = 1,
		EAIObjectiveType__Push                 = 2,
		EAIObjectiveType__PushDefend           = 3,
		EAIObjectiveType__Flag                 = 4,
		EAIObjectiveType__FlagPlant            = 5,
		EAIObjectiveType__EAIObjectiveType_MAX = 6
	};

	/**
	 * Enum TBL.EInputReplayState
	 */
	enum class TBL_EInputReplayState : uint8_t
	{
		EInputReplayState__Disabled              = 0,
		EInputReplayState__Playing               = 1,
		EInputReplayState__Recording             = 2,
		EInputReplayState__EInputReplayState_MAX = 3
	};

	/**
	 * Enum TBL.EReplayInputKeys
	 */
	enum class TBL_EReplayInputKeys : uint8_t
	{
		EReplayInputKeys__AltAttack            = 0,
		EReplayInputKeys__Slash                = 1,
		EReplayInputKeys__Overhead             = 2,
		EReplayInputKeys__Stab                 = 3,
		EReplayInputKeys__Parry                = 4,
		EReplayInputKeys__AbilityQ             = 5,
		EReplayInputKeys__AbilityE             = 6,
		EReplayInputKeys__AbilityF             = 7,
		EReplayInputKeys__Jump                 = 8,
		EReplayInputKeys__BattleCry            = 9,
		EReplayInputKeys__Crouch               = 10,
		EReplayInputKeys__CancelAttack         = 11,
		EReplayInputKeys__CancelIntoParry      = 12,
		EReplayInputKeys__HorseMoveForward     = 13,
		EReplayInputKeys__HorseMoveBackward    = 14,
		EReplayInputKeys__HorseMoveLeft        = 15,
		EReplayInputKeys__HorseMoveRight       = 16,
		EReplayInputKeys__HorseControlMode     = 17,
		EReplayInputKeys__HorseBoost           = 18,
		EReplayInputKeys__EReplayInputKeys_MAX = 19
	};

	/**
	 * Enum TBL.EInstanceContainerType
	 */
	enum class TBL_EInstanceContainerType : uint8_t
	{
		EInstanceContainerType__None                       = 0,
		EInstanceContainerType__Effect                     = 1,
		EInstanceContainerType__EInstanceContainerType_MAX = 2
	};

	/**
	 * Enum TBL.EInteractableRechargeRule
	 */
	enum class TBL_EInteractableRechargeRule : uint8_t
	{
		EInteractableRechargeRule__RechargeWhenBelowMaxUses      = 0,
		EInteractableRechargeRule__RechargeWhenAtZeroUses        = 1,
		EInteractableRechargeRule__RechargeByManualControl       = 2,
		EInteractableRechargeRule__EInteractableRechargeRule_MAX = 3
	};

	/**
	 * Enum TBL.EInteractableUILocation
	 */
	enum class TBL_EInteractableUILocation : uint8_t
	{
		EInteractableUILocation__AttachedToActor             = 0,
		EInteractableUILocation__Pinned                      = 1,
		EInteractableUILocation__EInteractableUILocation_MAX = 2
	};

	/**
	 * Enum TBL.EInteractionType
	 */
	enum class TBL_EInteractionType : uint8_t
	{
		EInteractionType__Instant              = 0,
		EInteractionType__Mounted              = 1,
		EInteractionType__LockedIn             = 2,
		EInteractionType__EInteractionType_MAX = 3
	};

	/**
	 * Enum TBL.EGamepadBattleCryState
	 */
	enum class TBL_EGamepadBattleCryState : uint8_t
	{
		EGamepadBattleCryState__NONE                       = 0,
		EGamepadBattleCryState__PENDING_HOLD               = 1,
		EGamepadBattleCryState__HELD                       = 2,
		EGamepadBattleCryState__EGamepadBattleCryState_MAX = 3
	};

	/**
	 * Enum TBL.EPickupEquipOptions
	 */
	enum class TBL_EPickupEquipOptions : uint8_t
	{
		EPickupEquipOptions__Equip                   = 0,
		EPickupEquipOptions__EquipImmediately        = 1,
		EPickupEquipOptions__LeaveUnequipped         = 2,
		EPickupEquipOptions__EPickupEquipOptions_MAX = 3
	};

	/**
	 * Enum TBL.EParryHitLocationAdjust
	 */
	enum class TBL_EParryHitLocationAdjust : uint8_t
	{
		EParryHitLocationAdjust__Disable                     = 0,
		EParryHitLocationAdjust__ProjectToLine               = 1,
		EParryHitLocationAdjust__ClosestPointOnBox           = 2,
		EParryHitLocationAdjust__EParryHitLocationAdjust_MAX = 3
	};

	/**
	 * Enum TBL.EItemSoundPolicy
	 */
	enum class TBL_EItemSoundPolicy : uint8_t
	{
		EItemSoundPolicy__PlaySoundOnItem            = 0,
		EItemSoundPolicy__PlaySoundOnOwningCharacter = 1,
		EItemSoundPolicy__EItemSoundPolicy_MAX       = 2
	};

	/**
	 * Enum TBL.EWeaponMaterial
	 */
	enum class TBL_EWeaponMaterial : uint8_t
	{
		EWeaponMaterial__Metal               = 0,
		EWeaponMaterial__Wood                = 1,
		EWeaponMaterial__Shield              = 2,
		EWeaponMaterial__Body                = 3,
		EWeaponMaterial__Arrow               = 4,
		EWeaponMaterial__EWeaponMaterial_MAX = 5
	};

	/**
	 * Enum TBL.EUpdateMode
	 */
	enum class TBL_EUpdateMode : uint8_t
	{
		EUpdateMode__None            = 0,
		EUpdateMode__TickEveryFrame  = 1,
		EUpdateMode__SkipAnimations  = 2,
		EUpdateMode__EUpdateMode_MAX = 3
	};

	/**
	 * Enum TBL.ERangedAttackCategory
	 */
	enum class TBL_ERangedAttackCategory : uint8_t
	{
		ERangedAttackCategory__Light                     = 0,
		ERangedAttackCategory__Medium                    = 1,
		ERangedAttackCategory__Heavy                     = 2,
		ERangedAttackCategory__Great                     = 3,
		ERangedAttackCategory__Projectile                = 4,
		ERangedAttackCategory__Unblockable               = 5,
		ERangedAttackCategory__ERangedAttackCategory_MAX = 6
	};

	/**
	 * Enum TBL.EMeleeAttackCategory
	 */
	enum class TBL_EMeleeAttackCategory : uint8_t
	{
		EMeleeAttackCategory__Light                    = 0,
		EMeleeAttackCategory__Medium                   = 1,
		EMeleeAttackCategory__Heavy                    = 2,
		EMeleeAttackCategory__Great                    = 3,
		EMeleeAttackCategory__EMeleeAttackCategory_MAX = 4
	};

	/**
	 * Enum TBL.EAmmoStackType
	 */
	enum class TBL_EAmmoStackType : uint8_t
	{
		EAmmoStackType__Exhaustable        = 0,
		EAmmoStackType__Unlimited          = 1,
		EAmmoStackType__EAmmoStackType_MAX = 2
	};

	/**
	 * Enum TBL.EHelmetRemovalPolicy
	 */
	enum class TBL_EHelmetRemovalPolicy : uint8_t
	{
		EHelmetRemovalPolicy__DoNothing                = 0,
		EHelmetRemovalPolicy__RemoveHelmet             = 1,
		EHelmetRemovalPolicy__EHelmetRemovalPolicy_MAX = 2
	};

	/**
	 * Enum TBL.ESpeedPenalty
	 */
	enum class TBL_ESpeedPenalty : uint8_t
	{
		ESpeedPenalty__Light             = 0,
		ESpeedPenalty__Medium            = 1,
		ESpeedPenalty__Heavy             = 2,
		ESpeedPenalty__SuperHeavy        = 3,
		ESpeedPenalty__LightCarryable    = 4,
		ESpeedPenalty__MediumCarryable   = 5,
		ESpeedPenalty__HeavyCarryable    = 6,
		ESpeedPenalty__ESpeedPenalty_MAX = 7
	};

	/**
	 * Enum TBL.EWeaponType
	 */
	enum class TBL_EWeaponType : uint8_t
	{
		EWeaponType__Sword2h          = 0,
		EWeaponType__Sword1h          = 1,
		EWeaponType__Axe1h            = 2,
		EWeaponType__Mace1h           = 3,
		EWeaponType__ProjectileWeapon = 4,
		EWeaponType__EWeaponType_MAX  = 5
	};

	/**
	 * Enum TBL.EInventoryItemCondition
	 */
	enum class TBL_EInventoryItemCondition : uint8_t
	{
		EInventoryItemCondition__NoCondition                 = 0,
		EInventoryItemCondition__OffHandMustBeFree           = 1,
		EInventoryItemCondition__MustBePrimaryWeapon         = 2,
		EInventoryItemCondition__MustBeOffHandWeapon         = 3,
		EInventoryItemCondition__OnlyAs1hWeapon              = 4,
		EInventoryItemCondition__OnlyAs2hWeapon              = 5,
		EInventoryItemCondition__EInventoryItemCondition_MAX = 6
	};

	/**
	 * Enum TBL.EAttachedState
	 */
	enum class TBL_EAttachedState : uint8_t
	{
		EAttachedState__Free               = 0,
		EAttachedState__Attached           = 1,
		EAttachedState__Detached           = 2,
		EAttachedState__Hide               = 3,
		EAttachedState__EAttachedState_MAX = 4
	};

	/**
	 * Enum TBL.EEquippedHand
	 */
	enum class TBL_EEquippedHand : uint8_t
	{
		EEquippedHand__Unequipped        = 0,
		EEquippedHand__PrimaryHand       = 1,
		EEquippedHand__OffHand           = 2,
		EEquippedHand__TwoHands          = 3,
		EEquippedHand__NoHands           = 4,
		EEquippedHand__EEquippedHand_MAX = 5
	};

	/**
	 * Enum TBL.EEquippedState
	 */
	enum class TBL_EEquippedState : uint8_t
	{
		EEquippedState__Free                    = 0,
		EEquippedState__Equipping               = 1,
		EEquippedState__Equipped                = 2,
		EEquippedState__Unequipping             = 3,
		EEquippedState__Unequipped              = 4,
		EEquippedState__Hide                    = 5,
		EEquippedState__Using                   = 6,
		EEquippedState__Pickup                  = 7,
		EEquippedState__EquipFromStanding       = 8,
		EEquippedState__UnequipToStanding       = 9,
		EEquippedState__Reloading               = 10,
		EEquippedState__EquippingFromParryBreak = 11,
		EEquippedState__EEquippedState_MAX      = 12
	};

	/**
	 * Enum TBL.EInventoryItemSlot
	 */
	enum class TBL_EInventoryItemSlot : uint8_t
	{
		EInventoryItemSlot__Carryable = 0,
		EInventoryItemSlot__Primary   = 1,
		EInventoryItemSlot__Secondary = 2,
		EInventoryItemSlot__Shield    = 3,
		EInventoryItemSlot__Knife     = 4,
		EInventoryItemSlot__Fists     = 5,
		EInventoryItemSlot__Item      = 6,
		EInventoryItemSlot__Bandage   = 7,
		EInventoryItemSlot__Ammo      = 8,
		EInventoryItemSlot__Custom    = 9,
		EInventoryItemSlot__Downed    = 10,
		EInventoryItemSlot__Quiver    = 11,
		EInventoryItemSlot__Novelty   = 12,
		EInventoryItemSlot__Special   = 13,
		EInventoryItemSlot__MAX       = 14
	};

	/**
	 * Enum TBL.EInventoryType
	 */
	enum class TBL_EInventoryType : uint8_t
	{
		EInventoryType__None          = 0,
		EInventoryType__Axe           = 1,
		EInventoryType__Ballista      = 2,
		EInventoryType__BandageKit    = 3,
		EInventoryType__BastardSword  = 4,
		EInventoryType__BattleAxe     = 5,
		EInventoryType__Bow           = 6,
		EInventoryType__Catapult      = 7,
		EInventoryType__Crossbow      = 8,
		EInventoryType__Cudgel        = 9,
		EInventoryType__Dagger        = 10,
		EInventoryType__DaneAxe       = 11,
		EInventoryType__Greatsword    = 12,
		EInventoryType__Halberd       = 13,
		EInventoryType__HeavyMace     = 14,
		EInventoryType__HeavyShield   = 15,
		EInventoryType__Horse         = 16,
		EInventoryType__Fists         = 17,
		EInventoryType__Lance         = 18,
		EInventoryType__LightShield   = 19,
		EInventoryType__Mace          = 20,
		EInventoryType__Maul          = 21,
		EInventoryType__MediumShield  = 22,
		EInventoryType__Messer        = 23,
		EInventoryType__PoleAxe       = 24,
		EInventoryType__PoleHammer    = 25,
		EInventoryType__ShortSword    = 26,
		EInventoryType__Spear         = 27,
		EInventoryType__Sword         = 28,
		EInventoryType__ThrowingAxe   = 29,
		EInventoryType__ThrowingKnife = 30,
		EInventoryType__WarHammer     = 31,
		EInventoryType__Javelin       = 32,
		EInventoryType__Absurd        = 33,
		EInventoryType__BatteringRam  = 34,
		EInventoryType__TopplingStone = 35,
		EInventoryType__MAX           = 36
	};

	/**
	 * Enum TBL.EHorseMovementStateOp
	 */
	enum class TBL_EHorseMovementStateOp : uint8_t
	{
		EHorseMovementStateOp__GreaterThan               = 0,
		EHorseMovementStateOp__EqualTo                   = 1,
		EHorseMovementStateOp__LessThanOrEqualTo         = 2,
		EHorseMovementStateOp__EHorseMovementStateOp_MAX = 3
	};

	/**
	 * Enum TBL.EIsTypeVersion
	 */
	enum class TBL_EIsTypeVersion : uint8_t
	{
		EIsTypeVersion__Multiple           = 0,
		EIsTypeVersion__Latest             = 1,
		EIsTypeVersion__EIsTypeVersion_MAX = 2
	};

	/**
	 * Enum TBL.EMatchWinType
	 */
	enum class TBL_EMatchWinType : uint8_t
	{
		EMatchWinType__TEAM              = 0,
		EMatchWinType__MAP               = 1,
		EMatchWinType__EMatchWinType_MAX = 2
	};

	/**
	 * Enum TBL.EMovementFrameOfReference
	 */
	enum class TBL_EMovementFrameOfReference : uint8_t
	{
		EMovementFrameOfReference__InitiatorToTarget             = 0,
		EMovementFrameOfReference__CharacterRotation             = 1,
		EMovementFrameOfReference__AttackDirectionHit            = 2,
		EMovementFrameOfReference__AttackDirectionParry          = 3,
		EMovementFrameOfReference__Default                       = 4,
		EMovementFrameOfReference__EMovementFrameOfReference_MAX = 5
	};

	/**
	 * Enum TBL.EObjectiveZoneVisibilityMode
	 */
	enum class TBL_EObjectiveZoneVisibilityMode : uint8_t
	{
		EObjectiveZoneVisibilityMode__None                             = 0,
		EObjectiveZoneVisibilityMode__HideWhenInside                   = 1,
		EObjectiveZoneVisibilityMode__HideWhenOutside                  = 2,
		EObjectiveZoneVisibilityMode__EObjectiveZoneVisibilityMode_MAX = 3
	};

	/**
	 * Enum TBL.ENameType
	 */
	enum class TBL_ENameType : uint8_t
	{
		ENameType__PersonName     = 0,
		ENameType__FirstName      = 1,
		ENameType__LastName       = 2,
		ENameType__ServerName     = 3,
		ENameType__SpecialBotName = 4,
		ENameType__ENameType_MAX  = 5
	};

	/**
	 * Enum TBL.ERankTitleFormat
	 */
	enum class TBL_ERankTitleFormat : uint8_t
	{
		ERankTitleFormat__NoFormat             = 0,
		ERankTitleFormat__RomanNumerals        = 1,
		ERankTitleFormat__ArabicNumberals      = 2,
		ERankTitleFormat__ERankTitleFormat_MAX = 3
	};

	/**
	 * Enum TBL.EOnlineAccountProperty
	 */
	enum class TBL_EOnlineAccountProperty : uint8_t
	{
		EOnlineAccountProperty__None                       = 0,
		EOnlineAccountProperty__Title                      = 1,
		EOnlineAccountProperty__Level                      = 2,
		EOnlineAccountProperty__Debug                      = 3,
		EOnlineAccountProperty__EOnlineAccountProperty_MAX = 4
	};

	/**
	 * Enum TBL.EOutOfCombatZoneVolumeActivateDeactivateAction
	 */
	enum class TBL_EOutOfCombatZoneVolumeActivateDeactivateAction : uint8_t
	{
		EOutOfCombatZoneVolumeActivateDeactivateAction__Activate                                           = 0,
		EOutOfCombatZoneVolumeActivateDeactivateAction__Deactivate                                         = 1,
		EOutOfCombatZoneVolumeActivateDeactivateAction__EOutOfCombatZoneVolumeActivateDeactivateAction_MAX = 2
	};

	/**
	 * Enum TBL.EDisplayPerk
	 */
	enum class TBL_EDisplayPerk : uint8_t
	{
		EDisplayPerk__DisplayAsPerk           = 0,
		EDisplayPerk__DisplayAsAbility        = 1,
		EDisplayPerk__DisplayAsVulnerability  = 2,
		EDisplayPerk__DisplayAsChargingMethod = 3,
		EDisplayPerk__EDisplayPerk_MAX        = 4
	};

	/**
	 * Enum TBL.EEmoteType
	 */
	enum class TBL_EEmoteType : uint8_t
	{
		EEmoteType__VO                      = 0,
		EEmoteType__UpperBody               = 1,
		EEmoteType__UpperBodyInterruptible  = 2,
		EEmoteType__RootMotion              = 3,
		EEmoteType__RootMotionInterruptible = 4,
		EEmoteType__Lasting                 = 5,
		EEmoteType__Dynamic                 = 6,
		EEmoteType__EEmoteType_MAX          = 7
	};

	/**
	 * Enum TBL.EEmoteAnimationSource
	 */
	enum class TBL_EEmoteAnimationSource : uint8_t
	{
		EEmoteAnimationSource__None                      = 0,
		EEmoteAnimationSource__Character                 = 1,
		EEmoteAnimationSource__Weapon                    = 2,
		EEmoteAnimationSource__EEmoteAnimationSource_MAX = 3
	};

	/**
	 * Enum TBL.EAudioVOType
	 */
	enum class TBL_EAudioVOType : uint8_t
	{
		EAudioVOType__None                       = 0,
		EAudioVOType__FollowMe                   = 1,
		EAudioVOType__Forward                    = 2,
		EAudioVOType__Retreat                    = 3,
		EAudioVOType__Confusion                  = 4,
		EAudioVOType__Disappointment             = 5,
		EAudioVOType__HoldGround                 = 6,
		EAudioVOType__Panic                      = 7,
		EAudioVOType__Incoming                   = 8,
		EAudioVOType__BehindUs                   = 9,
		EAudioVOType__Awe                        = 10,
		EAudioVOType__BattlecryStanding          = 11,
		EAudioVOType__BattlecrySprinting         = 12,
		EAudioVOType__BattlecryCrouching         = 13,
		EAudioVOType__Yes                        = 14,
		EAudioVOType__No                         = 15,
		EAudioVOType__Help                       = 16,
		EAudioVOType__Maybe                      = 17,
		EAudioVOType__Thanks                     = 18,
		EAudioVOType__Welcome                    = 19,
		EAudioVOType__Sorry                      = 20,
		EAudioVOType__Taunt                      = 21,
		EAudioVOType__Laugh                      = 22,
		EAudioVOType__RespectAlly                = 23,
		EAudioVOType__RespectEnemy               = 24,
		EAudioVOType__PersonalPersonalityOption1 = 25,
		EAudioVOType__PersonalPersonalityOption2 = 26,
		EAudioVOType__TacticalPersonalityOption1 = 27,
		EAudioVOType__TacticalPersonalityOption2 = 28,
		EAudioVOType__EmotePersonalityOption1    = 29,
		EAudioVOType__EmotePersonalityOption2    = 30,
		EAudioVOType__RequestHelp                = 31,
		EAudioVOType__RequestDeath               = 32,
		EAudioVOType__RefuseDeath                = 33,
		EAudioVOType__AcceptDeath                = 34,
		EAudioVOType__Cheer                      = 35,
		EAudioVOType__Goodbye                    = 36,
		EAudioVOType__Hello                      = 37,
		EAudioVOType__BegCower                   = 38,
		EAudioVOType__Soliloquy                  = 39,
		EAudioVOType__Customization              = 40,
		EAudioVOType__Friendly                   = 41,
		EAudioVOType__Enemy                      = 42,
		EAudioVOType__Cry                        = 43,
		EAudioVOType__Cower                      = 44,
		EAudioVOType__IdleChatter                = 45,
		EAudioVOType__LetMeIn                    = 46,
		EAudioVOType__Pain                       = 47,
		EAudioVOType__DeathCry                   = 48,
		EAudioVOType__DefendMe                   = 49,
		EAudioVOType__Hymn                       = 50,
		EAudioVOType__Chant                      = 51,
		EAudioVOType__YouAreWelcome              = 52,
		EAudioVOType__Prayer                     = 53,
		EAudioVOType__Rally                      = 54,
		EAudioVOType__RequestHeal                = 55,
		EAudioVOType__AncientCurse               = 56,
		EAudioVOType__AnimalKinship              = 57,
		EAudioVOType__MAX                        = 58
	};

	/**
	 * Enum TBL.ECharacterClassType
	 */
	enum class TBL_ECharacterClassType : uint8_t
	{
		ECharacterClassType__Invalid                 = 0,
		ECharacterClassType__Archetype               = 1,
		ECharacterClassType__Subclass                = 2,
		ECharacterClassType__Special                 = 3,
		ECharacterClassType__ECharacterClassType_MAX = 4
	};

	/**
	 * Enum TBL.ECharacterClass
	 */
	enum class TBL_ECharacterClass : uint8_t
	{
		ECharacterClass__None                       = 0,
		ECharacterClass__Archer                     = 1,
		ECharacterClass__Longbowman                 = 2,
		ECharacterClass__Crossbowman                = 3,
		ECharacterClass__Skirmisher                 = 4,
		ECharacterClass__ARCHER_CUSTOM_SUBCLASS     = 5,
		ECharacterClass__Vanguard                   = 6,
		ECharacterClass__Devastator                 = 7,
		ECharacterClass__Raider                     = 8,
		ECharacterClass__Ambusher                   = 9,
		ECharacterClass__Highlander                 = 10,
		ECharacterClass__Footman                    = 11,
		ECharacterClass__Poleman                    = 12,
		ECharacterClass__ManAtArms                  = 13,
		ECharacterClass__FieldEngineer              = 14,
		ECharacterClass__FOOTMAN_CUSTOM_SUBCLASS    = 15,
		ECharacterClass__Knight                     = 16,
		ECharacterClass__Officer                    = 17,
		ECharacterClass__Guardian                   = 18,
		ECharacterClass__Crusader                   = 19,
		ECharacterClass__KNIGHT_CUSTOM_SUBCLASS     = 20,
		ECharacterClass__Duke                       = 21,
		ECharacterClass__Botman                     = 22,
		ECharacterClass__Peasant                    = 23,
		ECharacterClass__CUSTOM_ARCHETYPE           = 24,
		ECharacterClass__ARCHETYPE_CUSTOM_SUBCLASS1 = 25,
		ECharacterClass__ARCHETYPE_CUSTOM_SUBCLASS2 = 26,
		ECharacterClass__ARCHETYPE_CUSTOM_SUBCLASS3 = 27,
		ECharacterClass__ARCHETYPE_CUSTOM_SUBCLASS4 = 28,
		ECharacterClass__MAX                        = 29
	};

	/**
	 * Enum TBL.EAudioClassType
	 */
	enum class TBL_EAudioClassType : uint8_t
	{
		EAudioClassType__Archer          = 0,
		EAudioClassType__Footman         = 1,
		EAudioClassType__Knight          = 2,
		EAudioClassType__Vanguard        = 3,
		EAudioClassType__Peasant         = 4,
		EAudioClassType__PeasantAI       = 5,
		EAudioClassType__Duke            = 6,
		EAudioClassType__Bot             = 7,
		EAudioClassType__Monk            = 8,
		EAudioClassType__PeasantAIFemale = 9,
		EAudioClassType__Druid           = 10,
		EAudioClassType__MAX             = 11
	};

	/**
	 * Enum TBL.EAudioPersonalityType
	 */
	enum class TBL_EAudioPersonalityType : uint8_t
	{
		EAudioPersonalityType__Chiv1_Ag_Archer               = 0,
		EAudioPersonalityType__Chiv1_Ag_Knight               = 1,
		EAudioPersonalityType__Chiv1_Ag_Maa                  = 2,
		EAudioPersonalityType__Chiv1_Ag_Vanguard             = 3,
		EAudioPersonalityType__Chiv1_Ma_Archer               = 4,
		EAudioPersonalityType__Chiv1_Ma_Knight               = 5,
		EAudioPersonalityType__Chiv1_Ma_Maa                  = 6,
		EAudioPersonalityType__Chiv1_Ma_Vanguard             = 7,
		EAudioPersonalityType__FilthyPeasant1                = 8,
		EAudioPersonalityType__Chiv2_DrillSgt                = 9,
		EAudioPersonalityType__Chiv2_SnobbyNoble             = 10,
		EAudioPersonalityType__Chiv2_RighteousKnight         = 11,
		EAudioPersonalityType__Chiv2_ToughGuy                = 12,
		EAudioPersonalityType__Chiv2_DemiGod                 = 13,
		EAudioPersonalityType__Chiv2_SellSword               = 14,
		EAudioPersonalityType__Chiv2_DarkPrince              = 15,
		EAudioPersonalityType__Chiv2_Imposter                = 16,
		EAudioPersonalityType__Chiv2_SquireBoy               = 17,
		EAudioPersonalityType__Peasant_Pillaged_Veteran      = 18,
		EAudioPersonalityType__Peasant_Player_01             = 19,
		EAudioPersonalityType__Peasant_Player_02             = 20,
		EAudioPersonalityType__Peasant_Player_03             = 21,
		EAudioPersonalityType__Peasant_Player_04             = 22,
		EAudioPersonalityType__Peasant_AI_Buckley            = 23,
		EAudioPersonalityType__Peasant_AI_JackSepticeye      = 24,
		EAudioPersonalityType__Peasant_AI_Unknown3           = 25,
		EAudioPersonalityType__Peasant_AI_Unknown4           = 26,
		EAudioPersonalityType__Peasant_AI_Unknown5           = 27,
		EAudioPersonalityType__Duke_Mason                    = 28,
		EAudioPersonalityType__Duke_Agatha                   = 29,
		EAudioPersonalityType__Bot_Agatha                    = 30,
		EAudioPersonalityType__Bot_Agatha01                  = 31,
		EAudioPersonalityType__Bot_Agatha02                  = 32,
		EAudioPersonalityType__Bot_Agatha03                  = 33,
		EAudioPersonalityType__Bot_Agatha04                  = 34,
		EAudioPersonalityType__Bot_Mason                     = 35,
		EAudioPersonalityType__Bot_Mason01                   = 36,
		EAudioPersonalityType__Bot_Mason02                   = 37,
		EAudioPersonalityType__Bot_Mason03                   = 38,
		EAudioPersonalityType__Bot_Mason04                   = 39,
		EAudioPersonalityType__Chiv2_FemAgatha               = 40,
		EAudioPersonalityType__Chiv2_FemMason                = 41,
		EAudioPersonalityType__Chiv2_BarMaid                 = 42,
		EAudioPersonalityType__Chiv2_EvilQueen               = 43,
		EAudioPersonalityType__Peasant_AI_Unknown6           = 44,
		EAudioPersonalityType__Peasant_AI_Unknown7           = 45,
		EAudioPersonalityType__Peasant_AI_Unknown8           = 46,
		EAudioPersonalityType__Peasant_Fem_AI_Unknown1       = 47,
		EAudioPersonalityType__Peasant_Fem_AI_Unknown2       = 48,
		EAudioPersonalityType__Peasant_Fem_AI_Unknown3       = 49,
		EAudioPersonalityType__Peasant_Fem_AI_Unknown4       = 50,
		EAudioPersonalityType__Monk_Agatha                   = 51,
		EAudioPersonalityType__Monk_Agatha01                 = 52,
		EAudioPersonalityType__Monk_Agatha02                 = 53,
		EAudioPersonalityType__Monk_Agatha03                 = 54,
		EAudioPersonalityType__Monk_Agatha04                 = 55,
		EAudioPersonalityType__Monk_Agatha05                 = 56,
		EAudioPersonalityType__Druid_Mason                   = 57,
		EAudioPersonalityType__Druid_Mason01                 = 58,
		EAudioPersonalityType__Druid_Mason02                 = 59,
		EAudioPersonalityType__Druid_Mason03                 = 60,
		EAudioPersonalityType__Peasant_Fem_AI_Mason_Unknown1 = 61,
		EAudioPersonalityType__Peasant_Fem_AI_Mason_Unknown2 = 62,
		EAudioPersonalityType__Peasant_Fem_AI_Mason_Unknown3 = 63,
		EAudioPersonalityType__Peasant_Fem_AI_Mason_Unknown4 = 64,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown0     = 65,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown1     = 66,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown2     = 67,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown3     = 68,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown4     = 69,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown5     = 70,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown6     = 71,
		EAudioPersonalityType__Peasant_AI_Mason_Unknown7     = 72,
		EAudioPersonalityType__Chiv2_Highlander              = 73,
		EAudioPersonalityType__Chiv2_Berserker               = 74,
		EAudioPersonalityType__MAX                           = 75
	};

	/**
	 * Enum TBL.EVOType
	 */
	enum class TBL_EVOType : uint8_t
	{
		EVOType__Manual      = 0,
		EVOType__Auto        = 1,
		EVOType__Context     = 2,
		EVOType__None        = 3,
		EVOType__EVOType_MAX = 4
	};

	/**
	 * Enum TBL.EPushableComponentMovementState
	 */
	enum class TBL_EPushableComponentMovementState : uint8_t
	{
		EPushableComponentMovementState__STATIONARY                          = 0,
		EPushableComponentMovementState__ACCELERATING                        = 1,
		EPushableComponentMovementState__DECELERATING                        = 2,
		EPushableComponentMovementState__MAXSPEED                            = 3,
		EPushableComponentMovementState__DEACTIVATED                         = 4,
		EPushableComponentMovementState__EPushableComponentMovementState_MAX = 5
	};

	/**
	 * Enum TBL.EPushableMovementType
	 */
	enum class TBL_EPushableMovementType : uint8_t
	{
		EPushableMovementType__INDEPENDENT               = 0,
		EPushableMovementType__LEADER                    = 1,
		EPushableMovementType__FOLLOWER                  = 2,
		EPushableMovementType__EPushableMovementType_MAX = 3
	};

	/**
	 * Enum TBL.ESiegeActorState
	 */
	enum class TBL_ESiegeActorState : uint8_t
	{
		ESiegeActorState__None                 = 0,
		ESiegeActorState__Idle                 = 1,
		ESiegeActorState__Pushing              = 2,
		ESiegeActorState__Open                 = 3,
		ESiegeActorState__Close                = 4,
		ESiegeActorState__ESiegeActorState_MAX = 5
	};

	/**
	 * Enum TBL.EPushingDirection
	 */
	enum class TBL_EPushingDirection : uint8_t
	{
		EPushingDirection__LeftOrRight           = 0,
		EPushingDirection__Forward               = 1,
		EPushingDirection__Backwards             = 2,
		EPushingDirection__EPushingDirection_MAX = 3
	};

	/**
	 * Enum TBL.EButtonAnimationStyle
	 */
	enum class TBL_EButtonAnimationStyle : uint8_t
	{
		EButtonAnimationStyle__Normal                    = 0,
		EButtonAnimationStyle__Click                     = 1,
		EButtonAnimationStyle__Hovered                   = 2,
		EButtonAnimationStyle__Leave                     = 3,
		EButtonAnimationStyle__HoveredSelected           = 4,
		EButtonAnimationStyle__LeaveSelected             = 5,
		EButtonAnimationStyle__Release                   = 6,
		EButtonAnimationStyle__EButtonAnimationStyle_MAX = 7
	};

	/**
	 * Enum TBL.ESeatSelectionMode
	 */
	enum class TBL_ESeatSelectionMode : uint8_t
	{
		ESeatSelectionMode__Sequential             = 0,
		ESeatSelectionMode__Random                 = 1,
		ESeatSelectionMode__ESeatSelectionMode_MAX = 2
	};

	/**
	 * Enum TBL.EShapeTargetMethodVersion
	 */
	enum class TBL_EShapeTargetMethodVersion : uint8_t
	{
		EShapeTargetMethodVersion__QueryObjectTypes              = 0,
		EShapeTargetMethodVersion__SaveVersionAsInt              = 1,
		EShapeTargetMethodVersion__Latest                        = 2,
		EShapeTargetMethodVersion__EShapeTargetMethodVersion_MAX = 3
	};

	/**
	 * Enum TBL.ESiegeEngineType
	 */
	enum class TBL_ESiegeEngineType : uint8_t
	{
		ESiegeEngineType__None                    = 0,
		ESiegeEngineType__Horse                   = 1,
		ESiegeEngineType__Catapult                = 2,
		ESiegeEngineType__Ballista                = 3,
		ESiegeEngineType__BatteringRam            = 4,
		ESiegeEngineType__CharacterMountableActor = 5,
		ESiegeEngineType__ESiegeEngineType_MAX    = 6
	};

	/**
	 * Enum TBL.ESingleTargetMethodVersion
	 */
	enum class TBL_ESingleTargetMethodVersion : uint8_t
	{
		ESingleTargetMethodVersion__MultipleTraces                 = 0,
		ESingleTargetMethodVersion__SaveVersionAsInt               = 1,
		ESingleTargetMethodVersion__TargetObjectTypes              = 2,
		ESingleTargetMethodVersion__Latest                         = 3,
		ESingleTargetMethodVersion__ESingleTargetMethodVersion_MAX = 4
	};

	/**
	 * Enum TBL.EPendingSpawnRequestResult
	 */
	enum class TBL_EPendingSpawnRequestResult : uint8_t
	{
		EPendingSpawnRequestResult__Pending                        = 0,
		EPendingSpawnRequestResult__Consumed                       = 1,
		EPendingSpawnRequestResult__Failed                         = 2,
		EPendingSpawnRequestResult__Deferred                       = 3,
		EPendingSpawnRequestResult__EPendingSpawnRequestResult_MAX = 4
	};

	/**
	 * Enum TBL.ESpawnSequenceActivateDeactivateAction
	 */
	enum class TBL_ESpawnSequenceActivateDeactivateAction : uint8_t
	{
		ESpawnSequenceActivateDeactivateAction__Activate                                   = 0,
		ESpawnSequenceActivateDeactivateAction__Deactivate                                 = 1,
		ESpawnSequenceActivateDeactivateAction__ESpawnSequenceActivateDeactivateAction_MAX = 2
	};

	/**
	 * Enum TBL.ESpawnWaveState
	 */
	enum class TBL_ESpawnWaveState : uint8_t
	{
		ESpawnWaveState__EWaveState_NotStarted = 0,
		ESpawnWaveState__EWaveState_Spawning   = 1,
		ESpawnWaveState__EWaveState_Ending     = 2,
		ESpawnWaveState__EWaveState_MAX        = 3
	};

	/**
	 * Enum TBL.ESphereHitDirection
	 */
	enum class TBL_ESphereHitDirection : uint8_t
	{
		ESphereHitDirection__FromSphereCenter        = 0,
		ESphereHitDirection__InitiatorHorseForward   = 1,
		ESphereHitDirection__InitiatorHorseBackward  = 2,
		ESphereHitDirection__ESphereHitDirection_MAX = 3
	};

	/**
	 * Enum TBL.EDamageProperty
	 */
	enum class TBL_EDamageProperty : uint8_t
	{
		EDamageProperty__Damage              = 0,
		EDamageProperty__SiegeDamage         = 1,
		EDamageProperty__EDamageProperty_MAX = 2
	};

	/**
	 * Enum TBL.ETeamDamageOptions
	 */
	enum class TBL_ETeamDamageOptions : uint8_t
	{
		ETeamDamageOptions__IgnoreDamage           = 0,
		ETeamDamageOptions__ScaledDamage           = 1,
		ETeamDamageOptions__FullDamage             = 2,
		ETeamDamageOptions__ETeamDamageOptions_MAX = 3
	};

	/**
	 * Enum TBL.EMod
	 */
	enum class TBL_EMod : uint8_t
	{
		EMod__Invulnerable           = 0,
		EMod__DisableStaminaDrain    = 1,
		EMod__UnlimitedAmmo          = 2,
		EMod__CannotUseInteractables = 3,
		EMod__EMod_MAX               = 4
	};

	/**
	 * Enum TBL.EAiComboMode
	 */
	enum class TBL_EAiComboMode : uint8_t
	{
		EAiComboMode__Always           = 0,
		EAiComboMode__Never            = 1,
		EAiComboMode__AdvantageOnly    = 2,
		EAiComboMode__EAiComboMode_MAX = 3
	};

	/**
	 * Enum TBL.EAiAttackMoveMode
	 */
	enum class TBL_EAiAttackMoveMode : uint8_t
	{
		EAiAttackMoveMode__CurrentLocation       = 0,
		EAiAttackMoveMode__IdealRange            = 1,
		EAiAttackMoveMode__FaceHug               = 2,
		EAiAttackMoveMode__EAiAttackMoveMode_MAX = 3
	};

	/**
	 * Enum TBL.EVariancePattern
	 */
	enum class TBL_EVariancePattern : uint8_t
	{
		EVariancePattern__None                 = 0,
		EVariancePattern__SineWave             = 1,
		EVariancePattern__SquareWave           = 2,
		EVariancePattern__JDWave               = 3,
		EVariancePattern__EVariancePattern_MAX = 4
	};

	/**
	 * Enum TBL.EStrafeDirection
	 */
	enum class TBL_EStrafeDirection : uint8_t
	{
		EStrafeDirection__None                 = 0,
		EStrafeDirection__Left                 = 1,
		EStrafeDirection__Right                = 2,
		EStrafeDirection__EStrafeDirection_MAX = 3
	};

	/**
	 * Enum TBL.EAiCombatStrafing
	 */
	enum class TBL_EAiCombatStrafing : uint8_t
	{
		EAiCombatStrafing__SafeStrafe            = 0,
		EAiCombatStrafing__BypassParry           = 1,
		EAiCombatStrafing__CirclyStrafe          = 2,
		EAiCombatStrafing__EAiCombatStrafing_MAX = 3
	};

	/**
	 * Enum TBL.EAiCombatDistance
	 */
	enum class TBL_EAiCombatDistance : uint8_t
	{
		EAiCombatDistance__Facehug                 = 0,
		EAiCombatDistance__MyAttackRange           = 1,
		EAiCombatDistance__OutsideEnemyAttackRange = 2,
		EAiCombatDistance__StandoffRange           = 3,
		EAiCombatDistance__EAiCombatDistance_MAX   = 4
	};

	/**
	 * Enum TBL.EAiMeleeCombatMode
	 */
	enum class TBL_EAiMeleeCombatMode : uint8_t
	{
		EAiMeleeCombatMode__OutOfCombat            = 0,
		EAiMeleeCombatMode__Engaging               = 1,
		EAiMeleeCombatMode__InCombat               = 2,
		EAiMeleeCombatMode__Disengaging            = 3,
		EAiMeleeCombatMode__EAiMeleeCombatMode_MAX = 4
	};

	/**
	 * Enum TBL.EAnimGraphBranch01
	 */
	enum class TBL_EAnimGraphBranch01 : uint8_t
	{
		EAnimGraphBranch01__Default                = 0,
		EAnimGraphBranch01__IsDeath                = 1,
		EAnimGraphBranch01__IsMiniAnim             = 2,
		EAnimGraphBranch01__IsServer               = 3,
		EAnimGraphBranch01__IsSimulatedCloth       = 4,
		EAnimGraphBranch01__EAnimGraphBranch01_MAX = 5
	};

	/**
	 * Enum TBL.EMeshVisibilityFlag
	 */
	enum class TBL_EMeshVisibilityFlag : uint8_t
	{
		EMeshVisibilityFlag__None      = 0,
		EMeshVisibilityFlag__SpawnIn   = 1,
		EMeshVisibilityFlag__Cinematic = 2,
		EMeshVisibilityFlag__MAX       = 3
	};

	/**
	 * Enum TBL.ECustomMovementMode
	 */
	enum class TBL_ECustomMovementMode : uint8_t
	{
		MOVECUSTOM_None             = 0,
		MOVECUSTOM_Ladder           = 1,
		MOVECUSTOM_Attached         = 2,
		MOVECUSTOM_InterpOnDismount = 3,
		MOVECUSTOM_FollowGround     = 4,
		MOVECUSTOM_Formation        = 5,
		MOVECUSTOM_Spawn            = 6,
		MOVECUSTOM_MAX              = 7
	};

	/**
	 * Enum TBL.EAutorunEndOfSplineAction
	 */
	enum class TBL_EAutorunEndOfSplineAction : uint8_t
	{
		EAutorunEndOfSplineAction__RestoreFullControl            = 0,
		EAutorunEndOfSplineAction__Nothing                       = 1,
		EAutorunEndOfSplineAction__EAutorunEndOfSplineAction_MAX = 2
	};

	/**
	 * Enum TBL.EAutorunMovementMode
	 */
	enum class TBL_EAutorunMovementMode : uint8_t
	{
		EAutorunMovementMode__Invalid                  = 0,
		EAutorunMovementMode__Stop                     = 1,
		EAutorunMovementMode__Sprint                   = 2,
		EAutorunMovementMode__Run                      = 3,
		EAutorunMovementMode__Walk                     = 4,
		EAutorunMovementMode__Crouchwalk               = 5,
		EAutorunMovementMode__EAutorunMovementMode_MAX = 6
	};

	/**
	 * Enum TBL.EAutorunStartSpeed
	 */
	enum class TBL_EAutorunStartSpeed : uint8_t
	{
		EAutorunStartSpeed__StartStopped           = 0,
		EAutorunStartSpeed__StartFullSpeed         = 1,
		EAutorunStartSpeed__EAutorunStartSpeed_MAX = 2
	};

	/**
	 * Enum TBL.EStartMovementResult
	 */
	enum class TBL_EStartMovementResult : uint8_t
	{
		EStartMovementResult__Invalid                  = 0,
		EStartMovementResult__NoSequence               = 1,
		EStartMovementResult__CanExecuteFailed         = 2,
		EStartMovementResult__LowPriority              = 3,
		EStartMovementResult__Success                  = 4,
		EStartMovementResult__EStartMovementResult_MAX = 5
	};

	/**
	 * Enum TBL.ESyncMovementType
	 */
	enum class TBL_ESyncMovementType : uint8_t
	{
		ESyncMovementType__Invalid                  = 0,
		ESyncMovementType__StartMovement            = 1,
		ESyncMovementType__StartForcedAutorun       = 2,
		ESyncMovementType__SetAutorunMovementMode   = 3,
		ESyncMovementType__StopForcedAutorun        = 4,
		ESyncMovementType__CinematicRestrictControl = 5,
		ESyncMovementType__CinematicAllowControl    = 6,
		ESyncMovementType__Downed                   = 7,
		ESyncMovementType__Revive                   = 8,
		ESyncMovementType__PlaySpawnAnimation       = 9,
		ESyncMovementType__InitiateAbility          = 10,
		ESyncMovementType__HitWorld                 = 11,
		ESyncMovementType__TrapEvent                = 12,
		ESyncMovementType__StartAttack              = 13,
		ESyncMovementType__StartHeavyAttack         = 14,
		ESyncMovementType__StartFire                = 15,
		ESyncMovementType__CancelAttack             = 16,
		ESyncMovementType__ChargeStab               = 17,
		ESyncMovementType__ReleaseStab              = 18,
		ESyncMovementType__GetUp                    = 19,
		ESyncMovementType__ManualReload             = 20,
		ESyncMovementType__DisableAttackRootMotion  = 21,
		ESyncMovementType__StartSpawnBonus          = 22,
		ESyncMovementType__MountLadder              = 23,
		ESyncMovementType__PlayLadderAnimation      = 24,
		ESyncMovementType__EndLadderMovement        = 25,
		ESyncMovementType__ESyncMovementType_MAX    = 26
	};

	/**
	 * Enum TBL.EDialogTypes
	 */
	enum class TBL_EDialogTypes : uint8_t
	{
		EDialogTypes__None             = 0,
		EDialogTypes__Ok               = 1,
		EDialogTypes__Cancel           = 2,
		EDialogTypes__OkCancel         = 3,
		EDialogTypes__YesNo            = 4,
		EDialogTypes__Exit             = 5,
		EDialogTypes__EDialogTypes_MAX = 6
	};

	/**
	 * Enum TBL.EDialogButtons
	 */
	enum class TBL_EDialogButtons : uint8_t
	{
		EDialogButtons__None               = 0,
		EDialogButtons__Ok                 = 1,
		EDialogButtons__Cancel             = 2,
		EDialogButtons__Yes                = 3,
		EDialogButtons__No                 = 4,
		EDialogButtons__Exit               = 5,
		EDialogButtons__EDialogButtons_MAX = 6
	};

	/**
	 * Enum TBL.EPostMatchMatchmakingMode
	 */
	enum class TBL_EPostMatchMatchmakingMode : uint8_t
	{
		EPostMatchMatchmakingMode__None                          = 0,
		EPostMatchMatchmakingMode__MigrateToNewServer            = 1,
		EPostMatchMatchmakingMode__MatchmakeToNewServer          = 2,
		EPostMatchMatchmakingMode__EPostMatchMatchmakingMode_MAX = 3
	};

	/**
	 * Enum TBL.EPendingSpawnResult
	 */
	enum class TBL_EPendingSpawnResult : uint8_t
	{
		EPendingSpawnResult__Success                 = 0,
		EPendingSpawnResult__NotReady                = 1,
		EPendingSpawnResult__Invalid                 = 2,
		EPendingSpawnResult__EPendingSpawnResult_MAX = 3
	};

	/**
	 * Enum TBL.EMatchmakingQueueCategory
	 */
	enum class TBL_EMatchmakingQueueCategory : uint8_t
	{
		EMatchmakingQueueCategory__Normal                        = 0,
		EMatchmakingQueueCategory__Competitive                   = 1,
		EMatchmakingQueueCategory__Ranked                        = 2,
		EMatchmakingQueueCategory__EMatchmakingQueueCategory_MAX = 3
	};

	/**
	 * Enum TBL.EMatchmakingQueueType
	 */
	enum class TBL_EMatchmakingQueueType : uint8_t
	{
		EMatchmakingQueueType__Standalone                = 0,
		EMatchmakingQueueType__Quickplay                 = 1,
		EMatchmakingQueueType__QuickplayAndStandalone    = 2,
		EMatchmakingQueueType__EMatchmakingQueueType_MAX = 3
	};

	/**
	 * Enum TBL.EGameUpdateType
	 */
	enum class TBL_EGameUpdateType : uint8_t
	{
		EGameUpdateType__Invalid             = 0,
		EGameUpdateType__Hotfix              = 1,
		EGameUpdateType__Patch               = 2,
		EGameUpdateType__ContentUpdate       = 3,
		EGameUpdateType__Expansion           = 4,
		EGameUpdateType__EGameUpdateType_MAX = 5
	};

	/**
	 * Enum TBL.EDLSSOperatingMode
	 */
	enum class TBL_EDLSSOperatingMode : uint8_t
	{
		EDLSSOperatingMode__Off                    = 0,
		EDLSSOperatingMode__Performance            = 1,
		EDLSSOperatingMode__Balanced               = 2,
		EDLSSOperatingMode__Quality                = 3,
		EDLSSOperatingMode__EDLSSOperatingMode_MAX = 4
	};

	/**
	 * Enum TBL.EAllyMarkerLevel
	 */
	enum class TBL_EAllyMarkerLevel : uint8_t
	{
		EAllyMarkerLevel__All                  = 0,
		EAllyMarkerLevel__AllHumanPlayers      = 1,
		EAllyMarkerLevel__FriendsAndParty      = 2,
		EAllyMarkerLevel__None                 = 3,
		EAllyMarkerLevel__EAllyMarkerLevel_MAX = 4
	};

	/**
	 * Enum TBL.EHapticsVolumeSettings
	 */
	enum class TBL_EHapticsVolumeSettings : uint8_t
	{
		EHapticsVolumeSettings__HIGH_VOLUME                = 0,
		EHapticsVolumeSettings__LOW_VOLUME                 = 1,
		EHapticsVolumeSettings__OFF                        = 2,
		EHapticsVolumeSettings__EHapticsVolumeSettings_MAX = 3
	};

	/**
	 * Enum TBL.EProConsoleOption
	 */
	enum class TBL_EProConsoleOption : uint8_t
	{
		EProConsoleOption__Balanced              = 0,
		EProConsoleOption__Framerate             = 1,
		EProConsoleOption__Fidelity              = 2,
		EProConsoleOption__EProConsoleOption_MAX = 3
	};

	/**
	 * Enum TBL.EGamepadLookResponseCurveStyle
	 */
	enum class TBL_EGamepadLookResponseCurveStyle : uint8_t
	{
		EGamepadLookResponseCurveStyle__Standard                           = 0,
		EGamepadLookResponseCurveStyle__Linear                             = 1,
		EGamepadLookResponseCurveStyle__Exponential                        = 2,
		EGamepadLookResponseCurveStyle__SCurve                             = 3,
		EGamepadLookResponseCurveStyle__EGamepadLookResponseCurveStyle_MAX = 4
	};

	/**
	 * Enum TBL.ECameraStyle
	 */
	enum class TBL_ECameraStyle : uint8_t
	{
		ECameraStyle__FirstPerson      = 0,
		ECameraStyle__ThirdPerson      = 1,
		ECameraStyle__ECameraStyle_MAX = 2
	};

	/**
	 * Enum TBL.EKillFeedFilter
	 */
	enum class TBL_EKillFeedFilter : uint8_t
	{
		EKillFeedFilter__AllMessages         = 0,
		EKillFeedFilter__PersonalMessages    = 1,
		EKillFeedFilter__NoMessages          = 2,
		EKillFeedFilter__EKillFeedFilter_MAX = 3
	};

	/**
	 * Enum TBL.EGoreLevel
	 */
	enum class TBL_EGoreLevel : uint8_t
	{
		EGoreLevel__Full            = 0,
		EGoreLevel__NoDismemberment = 1,
		EGoreLevel__None            = 2,
		EGoreLevel__EGoreLevel_MAX  = 3
	};

	/**
	 * Enum TBL.eHudDrawFlags
	 */
	enum class TBL_EeHudDrawFlags : uint8_t
	{
		RadialEmote       = 0,
		eHudDrawFlags_MAX = 1
	};

	/**
	 * Enum TBL.EGameplayEvent
	 */
	enum class TBL_EGameplayEvent : uint8_t
	{
		EGameplayEvent__PlayerRevived      = 0,
		EGameplayEvent__RevivedPlayer      = 1,
		EGameplayEvent__EGameplayEvent_MAX = 2
	};

	/**
	 * Enum TBL.ESlateInputMode
	 */
	enum class TBL_ESlateInputMode : uint8_t
	{
		ESlateInputMode__GameOnly            = 0,
		ESlateInputMode__GameAndUI           = 1,
		ESlateInputMode__UIOnly              = 2,
		ESlateInputMode__Unknown             = 3,
		ESlateInputMode__ESlateInputMode_MAX = 4
	};

	/**
	 * Enum TBL.EButtonAnimationStyle_deprecated
	 */
	enum class TBL_EButtonAnimationStyle_deprecated : uint8_t
	{
		EButtonAnimationStyle_deprecated__Normal                    = 0,
		EButtonAnimationStyle_deprecated__Click                     = 1,
		EButtonAnimationStyle_deprecated__Hovered                   = 2,
		EButtonAnimationStyle_deprecated__Leave                     = 3,
		EButtonAnimationStyle_deprecated__HoveredSelected           = 4,
		EButtonAnimationStyle_deprecated__LeaveSelected             = 5,
		EButtonAnimationStyle_deprecated__EButtonAnimationStyle_MAX = 6
	};

	/**
	 * Enum TBL.ECharacterPieceType
	 */
	enum class TBL_ECharacterPieceType : uint8_t
	{
		ECharacterPieceType__Torso   = 0,
		ECharacterPieceType__Head    = 1,
		ECharacterPieceType__Helm    = 2,
		ECharacterPieceType__Legs    = 3,
		ECharacterPieceType__Gore    = 4,
		ECharacterPieceType__Hair    = 5,
		ECharacterPieceType__Beard   = 6,
		ECharacterPieceType__Max     = 7,
		ECharacterPieceType__Invalid = 8
	};

	/**
	 * Enum TBL.ETextureType
	 */
	enum class TBL_ETextureType : uint8_t
	{
		ETextureType__Color    = 0,
		ETextureType__Mask     = 1,
		ETextureType__Normal   = 2,
		ETextureType__Utility  = 3,
		ETextureType__Heraldry = 4,
		ETextureType__Max      = 5
	};

	/**
	 * Enum TBL.ETBLLinkBehavior
	 */
	enum class TBL_ETBLLinkBehavior : uint8_t
	{
		ETBLLinkBehavior__Walk                 = 0,
		ETBLLinkBehavior__Jump                 = 1,
		ETBLLinkBehavior__ETBLLinkBehavior_MAX = 2
	};

	/**
	 * Enum TBL.EDuplicationFlags
	 */
	enum class TBL_EDuplicationFlags : uint8_t
	{
		EDuplicationFlags__None                  = 0,
		EDuplicationFlags__DeepObjectArrays      = 1,
		EDuplicationFlags__Client                = 2,
		EDuplicationFlags__EDuplicationFlags_MAX = 3
	};

	/**
	 * Enum TBL.ESteamAvatarSize
	 */
	enum class TBL_ESteamAvatarSize : uint8_t
	{
		ESteamAvatarSize__Small                = 0,
		ESteamAvatarSize__Medium               = 1,
		ESteamAvatarSize__Large                = 2,
		ESteamAvatarSize__ESteamAvatarSize_MAX = 3
	};

	/**
	 * Enum TBL.EKeybindCategory
	 */
	enum class TBL_EKeybindCategory : uint8_t
	{
		EKeybindCategory__Combat        = 0,
		EKeybindCategory__Movement      = 1,
		EKeybindCategory__General       = 2,
		EKeybindCategory__Expression    = 3,
		EKeybindCategory__Communication = 4,
		EKeybindCategory__Inventory     = 5,
		EKeybindCategory__Interface     = 6,
		EKeybindCategory__Spectator     = 7,
		EKeybindCategory__Debug         = 8,
		EKeybindCategory__MAX           = 9
	};

	/**
	 * Enum TBL.EPlayerReportCategory
	 */
	enum class TBL_EPlayerReportCategory : uint8_t
	{
		EPlayerReportCategory__Cheating                  = 0,
		EPlayerReportCategory__Greifing                  = 1,
		EPlayerReportCategory__NegativeBehavior          = 2,
		EPlayerReportCategory__Harrassment               = 3,
		EPlayerReportCategory__EPlayerReportCategory_MAX = 4
	};

	/**
	 * Enum TBL.ETBLPS5HapticType
	 */
	enum class TBL_ETBLPS5HapticType : uint8_t
	{
		ETBLPS5HapticType__Pad_Rumble            = 0,
		ETBLPS5HapticType__Trigger_Effect        = 1,
		ETBLPS5HapticType__Pad_And_Trigger       = 2,
		ETBLPS5HapticType__ETBLPS5HapticType_MAX = 3
	};

	/**
	 * Enum TBL.ETBLPS5AttackType
	 */
	enum class TBL_ETBLPS5AttackType : uint8_t
	{
		ETBLPS5AttackType__Character_Damage      = 0,
		ETBLPS5AttackType__Blocked_Attack        = 1,
		ETBLPS5AttackType__Environment_Attack    = 2,
		ETBLPS5AttackType__ETBLPS5AttackType_MAX = 3
	};

	/**
	 * Enum TBL.ETBLPS5DamageDirection
	 */
	enum class TBL_ETBLPS5DamageDirection : uint8_t
	{
		ETBLPS5DamageDirection__INVALID      = 0,
		ETBLPS5DamageDirection__Left_Haptic  = 1,
		ETBLPS5DamageDirection__Right_Haptic = 2,
		ETBLPS5DamageDirection__Forward      = 3,
		ETBLPS5DamageDirection__MAX          = 4
	};

	/**
	 * Enum TBL.ETBLPS5TriggerMode
	 */
	enum class TBL_ETBLPS5TriggerMode : uint8_t
	{
		ETBLPS5TriggerMode__Off                    = 0,
		ETBLPS5TriggerMode__Weapon_Mode            = 1,
		ETBLPS5TriggerMode__Vibration_Mode         = 2,
		ETBLPS5TriggerMode__Feedback_Mode          = 3,
		ETBLPS5TriggerMode__ETBLPS5TriggerMode_MAX = 4
	};

	/**
	 * Enum TBL.ETBLPS5TriggerMask
	 */
	enum class TBL_ETBLPS5TriggerMask : uint8_t
	{
		ETBLPS5TriggerMask__Left_Trigger           = 0,
		ETBLPS5TriggerMask__Right_Trigger          = 1,
		ETBLPS5TriggerMask__ETBLPS5TriggerMask_MAX = 2
	};

	/**
	 * Enum TBL.EClassRepNodeMapping
	 */
	enum class TBL_EClassRepNodeMapping : uint8_t
	{
		EClassRepNodeMapping__Default                                               = 0,
		EClassRepNodeMapping__NotRouted                                             = 1,
		EClassRepNodeMapping__RelevantAllConnections                                = 2,
		EClassRepNodeMapping__RelevantAllConnectionsSlow                            = 3,
		EClassRepNodeMapping__LowFreq_Spatialize_Static                             = 4,
		EClassRepNodeMapping__LowFreq_Spatialize_Dynamic                            = 5,
		EClassRepNodeMapping__LowFreq_Spatialize_Dormancy                           = 6,
		EClassRepNodeMapping__HighFreq_Spatialize_Static                            = 7,
		EClassRepNodeMapping__HighFreq_Spatialize_Dynamic                           = 8,
		EClassRepNodeMapping__HighFreq_Spatialize_Dormancy                          = 9,
		EClassRepNodeMapping__MediumFreq_Spatialize_Static                          = 10,
		EClassRepNodeMapping__MediumFreq_Spatialize_Dynamic                         = 11,
		EClassRepNodeMapping__MediumFreq_Spatialize_Dynamic_NoDynamicSpatialization = 12,
		EClassRepNodeMapping__MediumFreq_Spatialize_Dormancy                        = 13,
		EClassRepNodeMapping__EClassRepNodeMapping_MAX                              = 14
	};

	/**
	 * Enum TBL.EClassSpatialNodeMapping
	 */
	enum class TBL_EClassSpatialNodeMapping : uint8_t
	{
		EClassSpatialNodeMapping__LowFreq                      = 0,
		EClassSpatialNodeMapping__HighFreq                     = 1,
		EClassSpatialNodeMapping__LowFreqWithFastPath          = 2,
		EClassSpatialNodeMapping__HighFreqWithFastPath         = 3,
		EClassSpatialNodeMapping__MediumFreq                   = 4,
		EClassSpatialNodeMapping__MediumFreqNoDynamic          = 5,
		EClassSpatialNodeMapping__EClassSpatialNodeMapping_MAX = 6
	};

	/**
	 * Enum TBL.ESlackMessageColor
	 */
	enum class TBL_ESlackMessageColor : uint8_t
	{
		ESlackMessageColor__None                   = 0,
		ESlackMessageColor__Good                   = 1,
		ESlackMessageColor__Warning                = 2,
		ESlackMessageColor__Danger                 = 3,
		ESlackMessageColor__ESlackMessageColor_MAX = 4
	};

	/**
	 * Enum TBL.EInterpolateOverTimeAction
	 */
	enum class TBL_EInterpolateOverTimeAction : uint8_t
	{
		EInterpolateOverTimeAction__PlayFromStart                  = 0,
		EInterpolateOverTimeAction__Pause                          = 1,
		EInterpolateOverTimeAction__Resume                         = 2,
		EInterpolateOverTimeAction__Reset                          = 3,
		EInterpolateOverTimeAction__Reverse                        = 4,
		EInterpolateOverTimeAction__EInterpolateOverTimeAction_MAX = 5
	};

	/**
	 * Enum TBL.ETeamPlayerStartAction
	 */
	enum class TBL_ETeamPlayerStartAction : uint8_t
	{
		ETeamPlayerStartAction__Add                        = 0,
		ETeamPlayerStartAction__Remove                     = 1,
		ETeamPlayerStartAction__ETeamPlayerStartAction_MAX = 2
	};

	/**
	 * Enum TBL.ETitleScreenMode
	 */
	enum class TBL_ETitleScreenMode : uint8_t
	{
		ETitleScreenMode__Start                 = 0,
		ETitleScreenMode__Welcome               = 1,
		ETitleScreenMode__WelcomeWithOffline    = 2,
		ETitleScreenMode__LoginPlatform         = 3,
		ETitleScreenMode__LoginPlatformAuthCode = 4,
		ETitleScreenMode__PrivilegeCheck        = 5,
		ETitleScreenMode__LoginPlayFab          = 6,
		ETitleScreenMode__TOS                   = 7,
		ETitleScreenMode__End                   = 8,
		ETitleScreenMode__PlayTutorialPrompt    = 9,
		ETitleScreenMode__OwnershipFailed       = 10,
		ETitleScreenMode__ETitleScreenMode_MAX  = 11
	};

	/**
	 * Enum TBL.EWeaponCategoryTypes
	 */
	enum class TBL_EWeaponCategoryTypes : uint8_t
	{
		EWeaponCategoryTypes__None                     = 0,
		EWeaponCategoryTypes__Ranged                   = 1,
		EWeaponCategoryTypes__TwoHanded                = 2,
		EWeaponCategoryTypes__OneHanded                = 3,
		EWeaponCategoryTypes__Thrown                   = 4,
		EWeaponCategoryTypes__Novelty                  = 5,
		EWeaponCategoryTypes__Shield                   = 6,
		EWeaponCategoryTypes__EWeaponCategoryTypes_MAX = 7
	};

	/**
	 * Enum TBL.EFrameThrottleBranch
	 */
	enum class TBL_EFrameThrottleBranch : uint8_t
	{
		EFrameThrottleBranch__Allowed                  = 0,
		EFrameThrottleBranch__NotAllowed               = 1,
		EFrameThrottleBranch__EFrameThrottleBranch_MAX = 2
	};

	/**
	 * Enum TBL.EPerkType
	 */
	enum class TBL_EPerkType : uint8_t
	{
		EPerkType__None             = 0,
		EPerkType__Fighter          = 1,
		EPerkType__Helper           = 2,
		EPerkType__Agile            = 3,
		EPerkType__Elusive          = 4,
		EPerkType__Eager            = 5,
		EPerkType__Tackle           = 6,
		EPerkType__Heavy            = 7,
		EPerkType__Sneaky           = 8,
		EPerkType__Sapper           = 9,
		EPerkType__LeapingStrike    = 10,
		EPerkType__SprintCharge     = 11,
		EPerkType__Headhunter       = 12,
		EPerkType__Charger          = 13,
		EPerkType__Medic            = 14,
		EPerkType__Unbreakable      = 15,
		EPerkType__Murderer         = 16,
		EPerkType__RangedHeadhunter = 17,
		EPerkType__Sniper           = 18,
		EPerkType__Cleaver          = 19,
		EPerkType__EPerkType_MAX    = 20
	};

	/**
	 * Enum TBL.EConsolePresenceStatus
	 */
	enum class TBL_EConsolePresenceStatus : uint8_t
	{
		EConsolePresenceStatus__AT_MENU                    = 0,
		EConsolePresenceStatus__IN_MATCH                   = 1,
		EConsolePresenceStatus__IN_CUSTOMMATCH             = 2,
		EConsolePresenceStatus__EConsolePresenceStatus_MAX = 3
	};

	/**
	 * Enum TBL.EHardwarePlatform
	 */
	enum class TBL_EHardwarePlatform : uint8_t
	{
		EHardwarePlatform__Platform_Windows = 0,
		EHardwarePlatform__Platform_Linux   = 1,
		EHardwarePlatform__Platform_XboxOne = 2,
		EHardwarePlatform__Platform_PS4     = 3,
		EHardwarePlatform__Platform_XSX     = 4,
		EHardwarePlatform__Platform_PS5     = 5,
		EHardwarePlatform__Platform_Unknown = 6,
		EHardwarePlatform__Platform_MAX     = 7
	};

	/**
	 * Enum TBL.ETrapEventResult
	 */
	enum class TBL_ETrapEventResult : uint8_t
	{
		ETrapEventResult__None                 = 0,
		ETrapEventResult__Damage               = 1,
		ETrapEventResult__Stagger              = 2,
		ETrapEventResult__Knockdown            = 3,
		ETrapEventResult__Kill                 = 4,
		ETrapEventResult__ETrapEventResult_MAX = 5
	};

	/**
	 * Enum TBL.EProjectileSweepType
	 */
	enum class TBL_EProjectileSweepType : uint8_t
	{
		EProjectileSweepType__Default                  = 0,
		EProjectileSweepType__SweepForPawns            = 1,
		EProjectileSweepType__SpectatorCamera          = 2,
		EProjectileSweepType__EProjectileSweepType_MAX = 3
	};

	/**
	 * Enum TBL.EProjectileSpawnType
	 */
	enum class TBL_EProjectileSpawnType : uint8_t
	{
		EProjectileSpawnType__None                     = 0,
		EProjectileSpawnType__UseInventoryItem         = 1,
		EProjectileSpawnType__UseQuickThrowItem        = 2,
		EProjectileSpawnType__UseAmmo                  = 3,
		EProjectileSpawnType__EProjectileSpawnType_MAX = 4
	};

	/**
	 * Enum TBL.EInteractCombatState
	 */
	enum class TBL_EInteractCombatState : uint8_t
	{
		EInteractCombatState__Interact                 = 0,
		EInteractCombatState__Loot                     = 1,
		EInteractCombatState__EInteractCombatState_MAX = 2
	};

	/**
	 * Enum TBL.EAimPenaltyType
	 */
	enum class TBL_EAimPenaltyType : uint8_t
	{
		EAimPenaltyType__MovementState = 0,
		EAimPenaltyType__Stamina       = 1,
		EAimPenaltyType__DrawTime      = 2,
		EAimPenaltyType__MAX           = 3
	};

	/**
	 * Enum TBL.EStageActorActions
	 */
	enum class TBL_EStageActorActions : uint8_t
	{
		EStageActorActions__AwardScore             = 0,
		EStageActorActions__ApplyBonusTime         = 1,
		EStageActorActions__EStageActorActions_MAX = 2
	};

	/**
	 * Enum TBL.EScaleDirection
	 */
	enum class TBL_EScaleDirection : uint8_t
	{
		EScaleDirection__CharacterRotation   = 0,
		EScaleDirection__HitDirection        = 1,
		EScaleDirection__EScaleDirection_MAX = 2
	};

	/**
	 * Enum TBL.ECharacterToControl
	 */
	enum class TBL_ECharacterToControl : uint8_t
	{
		ECharacterToControl__Initiator               = 0,
		ECharacterToControl__Target                  = 1,
		ECharacterToControl__Both                    = 2,
		ECharacterToControl__ECharacterToControl_MAX = 3
	};

	/**
	 * Enum TBL.ECharacterControlEvent
	 */
	enum class TBL_ECharacterControlEvent : uint8_t
	{
		ECharacterControlEvent__OnRelease                  = 0,
		ECharacterControlEvent__OnDamage                   = 1,
		ECharacterControlEvent__OnBlocked                  = 2,
		ECharacterControlEvent__OnDamageOrBlocked          = 3,
		ECharacterControlEvent__ECharacterControlEvent_MAX = 4
	};

	/**
	 * Enum TBL.ECharacterControlStat
	 */
	enum class TBL_ECharacterControlStat : uint8_t
	{
		ECharacterControlStat__MovementSpeed             = 0,
		ECharacterControlStat__SprintBaseSpeed           = 1,
		ECharacterControlStat__StrafeSpeedModifier       = 2,
		ECharacterControlStat__ForwardSpeedModifier      = 3,
		ECharacterControlStat__BackSpeedModifier         = 4,
		ECharacterControlStat__HorizontalTurnRatePercent = 5,
		ECharacterControlStat__VerticalTurnRatePercent   = 6,
		ECharacterControlStat__LeftTurnRatePercent       = 7,
		ECharacterControlStat__RightTurnRatePercent      = 8,
		ECharacterControlStat__UpTurnRatePercent         = 9,
		ECharacterControlStat__DownTurnRatePercent       = 10,
		ECharacterControlStat__ReverseTurnRatePercent    = 11,
		ECharacterControlStat__MAX                       = 12
	};

	/**
	 * Enum TBL.ELockMeshAngle
	 */
	enum class TBL_ELockMeshAngle : uint8_t
	{
		ELockMeshAngle__UseCharacterRotation = 0,
		ELockMeshAngle__UseHorseRotation     = 1,
		ELockMeshAngle__ELockMeshAngle_MAX   = 2
	};

	/**
	 * Enum TBL.ETeamBalancePlayerSelect
	 */
	enum class TBL_ETeamBalancePlayerSelect : uint8_t
	{
		ETeamBalancePlayerSelect__Random                       = 0,
		ETeamBalancePlayerSelect__HighScore                    = 1,
		ETeamBalancePlayerSelect__MediumScore                  = 2,
		ETeamBalancePlayerSelect__LowScore                     = 3,
		ETeamBalancePlayerSelect__RecentJoin                   = 4,
		ETeamBalancePlayerSelect__None                         = 5,
		ETeamBalancePlayerSelect__ETeamBalancePlayerSelect_MAX = 6
	};

	/**
	 * Enum TBL.EHintInputType
	 */
	enum class TBL_EHintInputType : uint8_t
	{
		EHintInputType__Any                = 0,
		EHintInputType__PC_Only            = 1,
		EHintInputType__Gamepad_Only       = 2,
		EHintInputType__EHintInputType_MAX = 3
	};

	/**
	 * Enum TBL.EHintType
	 */
	enum class TBL_EHintType : uint8_t
	{
		EHintType__Any           = 0,
		EHintType__General       = 1,
		EHintType__Gameplay      = 2,
		EHintType__Frontend      = 3,
		EHintType__EHintType_MAX = 4
	};

	/**
	 * Enum TBL.EScoreModifyType
	 */
	enum class TBL_EScoreModifyType : uint8_t
	{
		EScoreModifyType__Delta                = 0,
		EScoreModifyType__Absolute             = 1,
		EScoreModifyType__EScoreModifyType_MAX = 2
	};

	/**
	 * Enum TBL.EObjectivePointCategory
	 */
	enum class TBL_EObjectivePointCategory : uint8_t
	{
		EObjectivePointCategory__None                        = 0,
		EObjectivePointCategory__Glyph                       = 1,
		EObjectivePointCategory__Ark                         = 2,
		EObjectivePointCategory__DjinnLamp                   = 3,
		EObjectivePointCategory__DemiGlyph                   = 4,
		EObjectivePointCategory__PlayerKill                  = 5,
		EObjectivePointCategory__EObjectivePointCategory_MAX = 6
	};

	/**
	 * Enum TBL.EAbilityDescriptorCategory
	 */
	enum class TBL_EAbilityDescriptorCategory : uint8_t
	{
		EAbilityDescriptorCategory__None         = 0,
		EAbilityDescriptorCategory__Damage       = 1,
		EAbilityDescriptorCategory__DamageType   = 2,
		EAbilityDescriptorCategory__CastTime     = 3,
		EAbilityDescriptorCategory__CooldownTime = 4,
		EAbilityDescriptorCategory__AmmoCount    = 5,
		EAbilityDescriptorCategory__MAX          = 6
	};

	/**
	 * Enum TBL.EBuildFinality
	 */
	enum class TBL_EBuildFinality : uint8_t
	{
		EBuildFinality__Development        = 0,
		EBuildFinality__PublicTest         = 1,
		EBuildFinality__Final              = 2,
		EBuildFinality__EBuildFinality_MAX = 3
	};

	/**
	 * Enum TBL.EClosedCaptionType
	 */
	enum class TBL_EClosedCaptionType : uint8_t
	{
		EClosedCaptionType__None            = 0,
		EClosedCaptionType__ManualVoiceOver = 1,
		EClosedCaptionType__AutoVoiceOver   = 2,
		EClosedCaptionType__MAX             = 3
	};

	/**
	 * Enum TBL.ECaptureVolumeControlType
	 */
	enum class TBL_ECaptureVolumeControlType : uint8_t
	{
		ECaptureVolumeControlType__TeamWithGreatestNumbers       = 0,
		ECaptureVolumeControlType__OneEnemyCanBlock              = 1,
		ECaptureVolumeControlType__NeverBlock                    = 2,
		ECaptureVolumeControlType__ECaptureVolumeControlType_MAX = 3
	};

	/**
	 * Enum TBL.EOnlineItemUnlockType
	 */
	enum class TBL_EOnlineItemUnlockType : uint8_t
	{
		EOnlineItemUnlockType__GrantedByProgression      = 0,
		EOnlineItemUnlockType__GrantedBySpecialEdition   = 1,
		EOnlineItemUnlockType__GrantedByPreOrder         = 2,
		EOnlineItemUnlockType__GrantedByPlaytimeDrop     = 3,
		EOnlineItemUnlockType__EOnlineItemUnlockType_MAX = 4
	};

	/**
	 * Enum TBL.EAbilitiesMovementSequence
	 */
	enum class TBL_EAbilitiesMovementSequence : uint8_t
	{
		EAbilitiesMovementSequence__WindupLunge                    = 0,
		EAbilitiesMovementSequence__Lunge                          = 1,
		EAbilitiesMovementSequence__LungeLeft                      = 2,
		EAbilitiesMovementSequence__LungeRight                     = 3,
		EAbilitiesMovementSequence__HorseLunge                     = 4,
		EAbilitiesMovementSequence__Knockback                      = 5,
		EAbilitiesMovementSequence__ParrySuccess                   = 6,
		EAbilitiesMovementSequence__Blocked                        = 7,
		EAbilitiesMovementSequence__EAbilitiesMovementSequence_MAX = 8
	};

	/**
	 * Enum TBL.ELobbyDistance
	 */
	enum class TBL_ELobbyDistance : uint8_t
	{
		ELobbyDistance__EDIST_Near      = 0,
		ELobbyDistance__EDIST_Default   = 1,
		ELobbyDistance__EDIST_Far       = 2,
		ELobbyDistance__EDIST_Worldwide = 3,
		ELobbyDistance__EDIST_MAX       = 4
	};

	/**
	 * Enum TBL.EPlaylistCategory
	 */
	enum class TBL_EPlaylistCategory : uint8_t
	{
		EPlaylistCategory__NOT_SHOWN             = 0,
		EPlaylistCategory__OBJECTIVE             = 1,
		EPlaylistCategory__ARENA                 = 2,
		EPlaylistCategory__EVENT                 = 3,
		EPlaylistCategory__CUSTOM_ONLY           = 4,
		EPlaylistCategory__TUTORIAL              = 5,
		EPlaylistCategory__TEAM_DEATHMATCH       = 6,
		EPlaylistCategory__EPlaylistCategory_MAX = 7
	};

	/**
	 * Enum TBL.EServerType
	 */
	enum class TBL_EServerType : uint8_t
	{
		EServerType__None    = 0,
		EServerType__Offline = 1,
		EServerType__Online  = 2,
		EServerType__Listen  = 3,
		EServerType__MAX     = 4
	};

	/**
	 * Enum TBL.EGameModeType
	 */
	enum class TBL_EGameModeType : uint8_t
	{
		EGameModeType__TeamObjective    = 0,
		EGameModeType__TeamDeathMatch   = 1,
		EGameModeType__FreeForAll       = 2,
		EGameModeType__Symmetrical      = 3,
		EGameModeType__LastTeamStanding = 4,
		EGameModeType__CapturePoint     = 5,
		EGameModeType__Pushable         = 6,
		EGameModeType__CaptureTheFlag   = 7,
		EGameModeType__Arena            = 8,
		EGameModeType__Scenario         = 9,
		EGameModeType__Brawl            = 10,
		EGameModeType__MAX              = 11
	};

	/**
	 * Enum TBL.EStopTimerPolicy
	 */
	enum class TBL_EStopTimerPolicy : uint8_t
	{
		EStopTimerPolicy__OnNextAbility        = 0,
		EStopTimerPolicy__OnGameplayComplete   = 1,
		EStopTimerPolicy__OnTimeOut            = 2,
		EStopTimerPolicy__EStopTimerPolicy_MAX = 3
	};

	/**
	 * Enum TBL.EDelegateRemovalPolicy
	 */
	enum class TBL_EDelegateRemovalPolicy : uint8_t
	{
		EDelegateRemovalPolicy__OnNextAbility              = 0,
		EDelegateRemovalPolicy__OnGameplayComplete         = 1,
		EDelegateRemovalPolicy__OnTimeOut                  = 2,
		EDelegateRemovalPolicy__EDelegateRemovalPolicy_MAX = 3
	};

	/**
	 * Enum TBL.EObjectiveHudType
	 */
	enum class TBL_EObjectiveHudType : uint8_t
	{
		EObjectiveHudType__None             = 0,
		EObjectiveHudType__PushBomb         = 1,
		EObjectiveHudType__TeamScoreVictory = 2,
		EObjectiveHudType__ScoreTicks       = 3,
		EObjectiveHudType__MAX              = 4
	};

	/**
	 * Enum TBL.EObjectiveProgressDisplay
	 */
	enum class TBL_EObjectiveProgressDisplay : uint8_t
	{
		EObjectiveProgressDisplay__SingleTeamBar                 = 0,
		EObjectiveProgressDisplay__TwoTeamBars                   = 1,
		EObjectiveProgressDisplay__PushBar                       = 2,
		EObjectiveProgressDisplay__EObjectiveProgressDisplay_MAX = 3
	};

	/**
	 * Enum TBL.EBlueprintOnlinePresenceState
	 */
	enum class TBL_EBlueprintOnlinePresenceState : uint8_t
	{
		EBlueprintOnlinePresenceState__Online                            = 0,
		EBlueprintOnlinePresenceState__Offline                           = 1,
		EBlueprintOnlinePresenceState__Away                              = 2,
		EBlueprintOnlinePresenceState__ExtendedAway                      = 3,
		EBlueprintOnlinePresenceState__DoNotDisturb                      = 4,
		EBlueprintOnlinePresenceState__Chat                              = 5,
		EBlueprintOnlinePresenceState__NotFriend                         = 6,
		EBlueprintOnlinePresenceState__InSameLobby                       = 7,
		EBlueprintOnlinePresenceState__EBlueprintOnlinePresenceState_MAX = 8
	};

	/**
	 * Enum TBL.EScoreEventType
	 */
	enum class TBL_EScoreEventType : uint8_t
	{
		EScoreEventType__Invalid                     = 0,
		EScoreEventType__MatchWinBonus               = 1,
		EScoreEventType__MatchLossBonus              = 2,
		EScoreEventType__MatchTiedBonus              = 3,
		EScoreEventType__ObjStageCompleteBonus       = 4,
		EScoreEventType__ObjCaptureZoneBonus         = 5,
		EScoreEventType__ObjPushableBonus            = 6,
		EScoreEventType__ObjBombPlantBonus           = 7,
		EScoreEventType__StatKillBonus               = 8,
		EScoreEventType__StatAssistBonus             = 9,
		EScoreEventType__StatAssistedSuicide         = 10,
		EScoreEventType__StatSuicideBonus            = 11,
		EScoreEventType__StreakSpreeBonus            = 12,
		EScoreEventType__StreakRampageBonus          = 13,
		EScoreEventType__StreakDominatingBonus       = 14,
		EScoreEventType__StreakUnstoppableBonus      = 15,
		EScoreEventType__StreakGodlikeBonus          = 16,
		EScoreEventType__StreakWickedSickBonus       = 17,
		EScoreEventType__MKDoubleBonus               = 18,
		EScoreEventType__MKTripleBonus               = 19,
		EScoreEventType__MKMegaBonus                 = 20,
		EScoreEventType__MKUltraBonus                = 21,
		EScoreEventType__MKMonsterBonus              = 22,
		EScoreEventType__MKLudicrousBonus            = 23,
		EScoreEventType__MKHolyBonus                 = 24,
		EScoreEventType__KMOffenseBonus              = 25,
		EScoreEventType__KMDefenseBonus              = 26,
		EScoreEventType__KMFirstBloodBonus           = 27,
		EScoreEventType__KMHeadshotBonus             = 28,
		EScoreEventType__KMComebackBonus             = 29,
		EScoreEventType__KMExecutionBonus            = 30,
		EScoreEventType__KMRescueBonus               = 31,
		EScoreEventType__KMShutdownBonus             = 32,
		EScoreEventType__KMAvengerBonus              = 33,
		EScoreEventType__KMRevengeBonus              = 34,
		EScoreEventType__AKTinkerTurretBonus         = 35,
		EScoreEventType__AKVigilistHealingTotemBonus = 36,
		EScoreEventType__AKTinkerMineBonus           = 37,
		EScoreEventType__StatTeamKillBonus           = 38,
		EScoreEventType__MAX                         = 39
	};

	/**
	 * Enum TBL.EKillEventType
	 */
	enum class TBL_EKillEventType : uint8_t
	{
		EKillEventType__Killer = 0,
		EKillEventType__Killed = 1,
		EKillEventType__MAX    = 2
	};

	/**
	 * Enum TBL.EKillerType
	 */
	enum class TBL_EKillerType : uint8_t
	{
		EKillerType__Killer            = 0,
		EKillerType__PrimaryAssister   = 1,
		EKillerType__SecondaryAssister = 2,
		EKillerType__TakeDowner        = 3,
		EKillerType__MAX               = 4
	};

	/**
	 * Enum TBL.EHudMarkerMaterialType
	 */
	enum class TBL_EHudMarkerMaterialType : uint8_t
	{
		EHudMarkerMaterialType__Primary       = 0,
		EHudMarkerMaterialType__Secondary     = 1,
		EHudMarkerMaterialType__FlagPlantZone = 2,
		EHudMarkerMaterialType__MAX           = 3
	};

	/**
	 * Enum TBL.EBlockingCategory
	 */
	enum class TBL_EBlockingCategory : uint8_t
	{
		EBlockingCategory__Light                 = 0,
		EBlockingCategory__Standard              = 1,
		EBlockingCategory__Strong                = 2,
		EBlockingCategory__Shield                = 3,
		EBlockingCategory__EBlockingCategory_MAX = 4
	};

	/**
	 * Enum TBL.EMovementDirection
	 */
	enum class TBL_EMovementDirection : uint8_t
	{
		MOVEDIR_None         = 0,
		MOVEDIR_Forward      = 1,
		MOVEDIR_ForwardLeft  = 2,
		MOVEDIR_Left         = 3,
		MOVEDIR_BackLeft     = 4,
		MOVEDIR_Back         = 5,
		MOVEDIR_BackRight    = 6,
		MOVEDIR_Right        = 7,
		MOVEDIR_ForwardRight = 8,
		MOVEDIR_MAX          = 9
	};

	/**
	 * Enum TBL.EStateBasedEffectEnd
	 */
	enum class TBL_EStateBasedEffectEnd : uint8_t
	{
		EStateBasedEffectEnd__EndOfAttack              = 0,
		EStateBasedEffectEnd__EndOfRelease             = 1,
		EStateBasedEffectEnd__SoftRecovery             = 2,
		EStateBasedEffectEnd__EStateBasedEffectEnd_MAX = 3
	};

	/**
	 * Enum TBL.ECarryableState
	 */
	enum class TBL_ECarryableState : uint8_t
	{
		ECarryableState__Idle                = 0,
		ECarryableState__Locked              = 1,
		ECarryableState__Spawned             = 2,
		ECarryableState__ReadyForPickup      = 3,
		ECarryableState__PickedUp            = 4,
		ECarryableState__Dropped             = 5,
		ECarryableState__Reset               = 6,
		ECarryableState__ECarryableState_MAX = 7
	};

	/**
	 * Enum TBL.EPushableState
	 */
	enum class TBL_EPushableState : uint8_t
	{
		EPushableState__Neutral            = 0,
		EPushableState__Contested          = 1,
		EPushableState__Captured           = 2,
		EPushableState__Stopped            = 3,
		EPushableState__EPushableState_MAX = 4
	};

	/**
	 * Enum TBL.ETargetMethodEvent
	 */
	enum class TBL_ETargetMethodEvent : uint8_t
	{
		ETargetMethodEvent__Hit                    = 0,
		ETargetMethodEvent__Missed                 = 1,
		ETargetMethodEvent__ETargetMethodEvent_MAX = 2
	};

	/**
	 * Enum TBL.EInvocationScope
	 */
	enum class TBL_EInvocationScope : uint8_t
	{
		EInvocationScope__LastInvocation       = 0,
		EInvocationScope__AllInvocations       = 1,
		EInvocationScope__EInvocationScope_MAX = 2
	};

	/**
	 * Enum TBL.ETargetMethodFlags
	 */
	enum class TBL_ETargetMethodFlags : uint8_t
	{
		ETargetMethodFlags__None                   = 0,
		ETargetMethodFlags__Server                 = 1,
		ETargetMethodFlags__StartWithParent        = 2,
		ETargetMethodFlags__ETargetMethodFlags_MAX = 3
	};

	/**
	 * Enum TBL.EAbilityTermination
	 */
	enum class TBL_EAbilityTermination : uint8_t
	{
		EAbilityTermination__Cancelled               = 0,
		EAbilityTermination__Interrupted             = 1,
		EAbilityTermination__EAbilityTermination_MAX = 2
	};

	/**
	 * Enum TBL.EDuration
	 */
	enum class TBL_EDuration : uint8_t
	{
		EDuration__None          = 0,
		EDuration__Instant       = 1,
		EDuration__Lasting       = 2,
		EDuration__Infinite      = 3,
		EDuration__StateBased    = 4,
		EDuration__EDuration_MAX = 5
	};

	/**
	 * Enum TBL.EComparisonType
	 */
	enum class TBL_EComparisonType : uint8_t
	{
		EComparisonType__Equals              = 0,
		EComparisonType__NotEquals           = 1,
		EComparisonType__GreaterThan         = 2,
		EComparisonType__GreaterThanEquals   = 3,
		EComparisonType__LessThan            = 4,
		EComparisonType__LessThanEquals      = 5,
		EComparisonType__EComparisonType_MAX = 6
	};

	/**
	 * Enum TBL.EInventorySlot
	 */
	enum class TBL_EInventorySlot : uint8_t
	{
		EInventorySlot__None               = 0,
		EInventorySlot__EyeColor           = 1,
		EInventorySlot__HairColor          = 2,
		EInventorySlot__Skin               = 3,
		EInventorySlot__Swatch             = 4,
		EInventorySlot__Gradient           = 5,
		EInventorySlot__Trim               = 6,
		EInventorySlot__Emblem             = 7,
		EInventorySlot__Tattoo             = 8,
		EInventorySlot__Helmet             = 9,
		EInventorySlot__Class              = 10,
		EInventorySlot__Generic            = 11,
		EInventorySlot__Hair               = 12,
		EInventorySlot__Weapon             = 13,
		EInventorySlot__AccentColor        = 14,
		EInventorySlot__Emote              = 15,
		EInventorySlot__Personality        = 16,
		EInventorySlot__EInventorySlot_MAX = 17
	};

	/**
	 * Enum TBL.ETBLWorldType
	 */
	enum class TBL_ETBLWorldType : uint8_t
	{
		ETBLWorldType__None              = 0,
		ETBLWorldType__Game              = 1,
		ETBLWorldType__Editor            = 2,
		ETBLWorldType__PIE               = 3,
		ETBLWorldType__Preview           = 4,
		ETBLWorldType__Inactive          = 5,
		ETBLWorldType__Invalid           = 6,
		ETBLWorldType__ETBLWorldType_MAX = 7
	};

	/**
	 * Enum TBL.EWidgetDisableType
	 */
	enum class TBL_EWidgetDisableType : uint8_t
	{
		EWidgetDisableType__Enabled                = 0,
		EWidgetDisableType__ShippingDisabledWIP    = 1,
		EWidgetDisableType__DisabledDemoMode       = 2,
		EWidgetDisableType__EWidgetDisableType_MAX = 3
	};

	/**
	 * Enum TBL.ESonyAppType
	 */
	enum class TBL_ESonyAppType : uint8_t
	{
		ESony_Unknown = 0,
		ESony_SIEE    = 1,
		ESony_SIEA    = 2,
		ESony_SIEJ    = 3,
		ESony_MAX     = 4
	};

	/**
	 * Enum TBL.EPlatformType
	 */
	enum class TBL_EPlatformType : uint8_t
	{
		EPlatform_PC      = 0,
		EPlatform_XboxOne = 1,
		EPlatform_PS4     = 2,
		EPlatform_XSX     = 3,
		EPlatform_PS5     = 4,
		EPlatform_MAX     = 5
	};

	/**
	 * Enum TBL.EXCloudWidgetBehavior
	 */
	enum class TBL_EXCloudWidgetBehavior : uint8_t
	{
		EXCloudWidgetBehavior__Scale_ButtonCallout       = 0,
		EXCloudWidgetBehavior__Toggle_Visible            = 1,
		EXCloudWidgetBehavior__Toggle_NotHitTestable     = 2,
		EXCloudWidgetBehavior__Toggle_Collapsed          = 3,
		EXCloudWidgetBehavior__EXCloudWidgetBehavior_MAX = 4
	};

	/**
	 * Enum TBL.EPointsOnGridTrace
	 */
	enum class TBL_EPointsOnGridTrace : uint8_t
	{
		EPointsOnGridTrace__NoTrace                = 0,
		EPointsOnGridTrace__AllowMissedTraces      = 1,
		EPointsOnGridTrace__DiscardMissedTraces    = 2,
		EPointsOnGridTrace__EPointsOnGridTrace_MAX = 3
	};

	/**
	 * Enum TBL.EUserFeedbackType
	 */
	enum class TBL_EUserFeedbackType : uint8_t
	{
		EUserFeedbackType__Bug                   = 0,
		EUserFeedbackType__Feedback              = 1,
		EUserFeedbackType__EUserFeedbackType_MAX = 2
	};

	/**
	 * Enum TBL.EActionPriorityLevel
	 */
	enum class TBL_EActionPriorityLevel : uint8_t
	{
		EActionPriorityLevel__Standard                 = 0,
		EActionPriorityLevel__Emergency                = 1,
		EActionPriorityLevel__EActionPriorityLevel_MAX = 2
	};

	/**
	 * Enum TBL.EUtilityAI_Curve
	 */
	enum class TBL_EUtilityAI_Curve : uint8_t
	{
		EUtilityAI_Curve__Linear         = 0,
		EUtilityAI_Curve__Polynomial     = 1,
		EUtilityAI_Curve__Logistic       = 2,
		EUtilityAI_Curve__Logit          = 3,
		EUtilityAI_Curve__Normal         = 4,
		EUtilityAI_Curve__Sine           = 5,
		EUtilityAI_Curve__EUtilityAI_MAX = 6
	};

	/**
	 * Enum TBL.EUtilityAI_EnemyOrFriendly
	 */
	enum class TBL_EUtilityAI_EnemyOrFriendly : uint8_t
	{
		EUtilityAI_EnemyOrFriendly__All            = 0,
		EUtilityAI_EnemyOrFriendly__Enemies        = 1,
		EUtilityAI_EnemyOrFriendly__Friendlies     = 2,
		EUtilityAI_EnemyOrFriendly__EUtilityAI_MAX = 3
	};

	/**
	 * Enum TBL.EUtilityAI_TargetType
	 */
	enum class TBL_EUtilityAI_TargetType : uint8_t
	{
		EUtilityAI_TargetType__None           = 0,
		EUtilityAI_TargetType__Actors         = 1,
		EUtilityAI_TargetType__Objects        = 2,
		EUtilityAI_TargetType__Locations      = 3,
		EUtilityAI_TargetType__Hybrid         = 4,
		EUtilityAI_TargetType__EUtilityAI_MAX = 5
	};

	/**
	 * Enum TBL.EVaultType
	 */
	enum class TBL_EVaultType : uint8_t
	{
		EVaultType__ObstacleVault  = 0,
		EVaultType__WindowVault    = 1,
		EVaultType__LedgeVault     = 2,
		EVaultType__EVaultType_MAX = 3
	};

	/**
	 * Enum TBL.EAnnouncementType
	 */
	enum class TBL_EAnnouncementType : uint8_t
	{
		EAnnouncementType__Hotfix                = 0,
		EAnnouncementType__Patch                 = 1,
		EAnnouncementType__ContentUpdate         = 2,
		EAnnouncementType__MajorContentUpdate    = 3,
		EAnnouncementType__DevBlog               = 4,
		EAnnouncementType__EAnnouncementType_MAX = 5
	};

	/**
	 * Enum TBL.EVoteKickType
	 */
	enum class TBL_EVoteKickType : uint8_t
	{
		EVoteKickType__None              = 0,
		EVoteKickType__NoVoting          = 1,
		EVoteKickType__TeamVoting        = 2,
		EVoteKickType__AllVoting         = 3,
		EVoteKickType__EVoteKickType_MAX = 4
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct TBL.Ability
	 * Size -> 0x0048
	 */
	struct FAbility
	{
	public:
		class UAbilitiesComponent*                                 Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        Spec;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AAbilityInvocation*>                          PendingInvocations;                                      // 0x0010(0x0010) ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AAbilityInvocation*>                          ClientInvocations;                                       // 0x0020(0x0010) ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InitiatingInventoryItem;                                 // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilityActivationMethod*                            SharedActivationMethod;                                  // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UAbilityTargetMethod*                                SharedTargetMethod;                                      // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Result
	 * Size -> 0x0010
	 */
	struct FResult
	{
	public:
		TBL_EResultCode                                            Code;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OQV9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCondition*                                          Condition;                                               // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilityErrorInfo
	 * Size -> 0x0018
	 */
	struct FAbilityErrorInfo
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FResult                                             Result;                                                  // 0x0008(0x0010) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LevelUpResult
	 * Size -> 0x0058
	 */
	struct FLevelUpResult
	{
	public:
		TMap<struct FPrimaryAssetId, int>                          Items;                                                   // 0x0000(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int                                                        NewLevel;                                                // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EOnlineStat                                            Stat;                                                    // 0x0054(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IWFD[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLOnlineStats
	 * Size -> 0x00C8
	 */
	struct FTBLOnlineStats
	{
	public:
		TArray<struct FLevelUpResult>                              LevelUpResults;                                          // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, Transient, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSQK[0x88];                                  // 0x0010(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int>                                                StatValues;                                              // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<int>                                                OriginalValues;                                          // 0x00A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_BZW2[0x8];                                   // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATBLPlayerState*                                     PlayerState;                                             // 0x00C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.CustomizationPreset
	 * Size -> 0x0038
	 */
	struct FCustomizationPreset
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAudioClassType                                        PlayerClass;                                             // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               PlayerTeam;                                              // 0x0011(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T5EY[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPrimaryAssetId>                             AssetIds;                                                // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCharacterCustomization*                             OverridedCustomization;                                  // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCharacterCustomization*                             DefaultCustomization;                                    // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplCustomizationPresetMapping
	 * Size -> 0x0038
	 */
	struct FReplCustomizationPresetMapping
	{
	public:
		TArray<struct FCustomizationPreset>                        AgathaPresets;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCustomizationPreset>                        MasonPresets;                                            // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCustomizationPreset>                        FFAPresets;                                              // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5BV[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AnimDebugMontageInfo
	 * Size -> 0x0024
	 */
	struct FAnimDebugMontageInfo
	{
	public:
		class FName                                                Montage;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Section;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Animation;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Percent;                                                 // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AnimDebugMontage
	 * Size -> 0x0038
	 */
	struct FAnimDebugMontage
	{
	public:
		bool                                                       bIsActive;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWOB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnimDebugMontageInfo                               CurrentSection;                                          // 0x0004(0x0024) NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FAnimDebugMontageInfo>                       PreviousSections;                                        // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilityArray
	 * Size -> 0x0018
	 */
	struct FAbilityArray
	{
	public:
		TArray<struct FAbility>                                    Items;                                                   // 0x0000(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitiesComponent*                                 Owner;                                                   // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StatConstraints
	 * Size -> 0x0010
	 */
	struct FStatConstraints
	{
	public:
		TBL_EStat                                                  CappedByStat;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EStat                                                  OverChargeCappedByStat;                                  // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1LAL[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DefaultValue;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bApplyBonusesToBase : 1;                                 // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefaultAtCap : 1;                                       // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPersistent : 1;                                         // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanBeNegative : 1;                                      // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K4OD[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              bReplicated : 1;                                         // 0x000C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TQYV[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StatEntry
	 * Size -> 0x0040
	 */
	struct FStatEntry
	{
	public:
		float                                                      BaseValue;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BonusValue;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BonusPercentValue;                                       // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentValue;                                            // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOverCharging;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BZGP[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStatsComponent*                                     Owner;                                                   // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastReplicatedValue;                                     // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RegenerationTime;                                        // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EStat                                                  StatType;                                                // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NVJ[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FStatConstraints                                    Constraints;                                             // 0x002C(0x0010) RepSkip, NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AT1W[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StatsArray
	 * Size -> 0x0018
	 */
	struct FStatsArray
	{
	public:
		unsigned char                                              UnknownData_YSQH[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FStatEntry>                                  Items;                                                   // 0x0008(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OnlineClassXp
	 * Size -> 0x0010
	 */
	struct FOnlineClassXp
	{
	public:
		class UClass*                                              Class;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Xp;                                                      // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U3IK[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DeathRecapLimits
	 * Size -> 0x0008
	 */
	struct FDeathRecapLimits
	{
	public:
		float                                                      KillConsiderationTime;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        DamageThreshold;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ProjectileHUDConfig
	 * Size -> 0x000C
	 */
	struct FProjectileHUDConfig
	{
	public:
		float                                                      ProjectileControlRadius;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDragTurnRate;                                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDragLookUpRate;                                      // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LocationBasedDamageModifiers
	 * Size -> 0x000C
	 */
	struct FLocationBasedDamageModifiers
	{
	public:
		float                                                      Headshot;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpperBody;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LowerBody;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FocusSettings
	 * Size -> 0x000C
	 */
	struct FFocusSettings
	{
	public:
		float                                                      ZoomedFOV;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeInTime;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeOutTime;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AimPenaltySprinting
	 * Size -> 0x0008
	 */
	struct FAimPenaltySprinting
	{
	public:
		float                                                      MinPenalty;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPenalty;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AimPenaltyEvent
	 * Size -> 0x0010
	 */
	struct FAimPenaltyEvent
	{
	public:
		float                                                      Penalty;                                                 // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         Curve;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AimPenaltySettings
	 * Size -> 0x00E0
	 */
	struct FAimPenaltySettings
	{
	public:
		TMap<TBL_EMovementDirection, float>                        Walking;                                                 // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FAimPenaltySprinting                                Sprinting;                                               // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DrawTime;                                                // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         Stamina;                                                 // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, float>                                   HorseMovement;                                           // 0x0068(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      IsFalling;                                               // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6BE0[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAimPenaltyEvent                                    OnLanded;                                                // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FAimPenaltyEvent                                    OnDamageTaken;                                           // 0x00D0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FeintTime
	 * Size -> 0x0010
	 */
	struct FFeintTime
	{
	public:
		float                                                      Combo;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Riposte;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      COUNTER;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SameAttack;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FeintMinTime
	 * Size -> 0x0010
	 */
	struct FFeintMinTime
	{
	public:
		float                                                      Normal;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Combo;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Riposte;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      COUNTER;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StaminaCosts
	 * Size -> 0x0020
	 */
	struct FStaminaCosts
	{
	public:
		float                                                      InitiatingCombo;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Cancel;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Feint;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Dash;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Crouch;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Jump;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Riposte;                                                 // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      COUNTER;                                                 // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LongbowStaminaBonus
	 * Size -> 0x000C
	 */
	struct FLongbowStaminaBonus
	{
	public:
		float                                                      OnFire;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnCancel;                                                // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnOutOfStamina;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StaminaBonus
	 * Size -> 0x0014
	 */
	struct FStaminaBonus
	{
	public:
		float                                                      OnMeleeSuccess;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnWasParried;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLongbowStaminaBonus                                Longbow;                                                 // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DownedSprintStamina
	 * Size -> 0x0010
	 */
	struct FDownedSprintStamina
	{
	public:
		float                                                      MinStaminaToStart;                                       // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DrainRate;                                               // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DrainRateModifier;                                       // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.BlockingCategoryModifier
	 * Size -> 0x0010
	 */
	struct FBlockingCategoryModifier
	{
	public:
		float                                                      Light;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Standard;                                                // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strong;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Shield;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseGallopStamina
	 * Size -> 0x0010
	 */
	struct FHorseGallopStamina
	{
	public:
		float                                                      MinStaminaToStart;                                       // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DrainRate;                                               // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DrainRateModifier;                                       // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseStaminaCosts
	 * Size -> 0x0020
	 */
	struct FHorseStaminaCosts
	{
	public:
		float                                                      Kick;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Dodge;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Jump;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZU5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHorseGallopStamina                                 Gallop;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpecialItemChargePerks
	 * Size -> 0x0018
	 */
	struct FSpecialItemChargePerks
	{
	public:
		float                                                      HeadHunter;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Charger;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Medic;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Unbreakable;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Murderer;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Cleaver;                                                 // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpecialItemCharge
	 * Size -> 0x0028
	 */
	struct FSpecialItemCharge
	{
	public:
		float                                                      PerSecond;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnKill;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnDeath;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnTeamDamage;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSpecialItemChargePerks                             PerkBonus;                                               // 0x0010(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ActionContext
	 * Size -> 0x00E0
	 */
	struct FActionContext
	{
	public:
		TWeakObjectPtr<class AAbilityInvocation>                   Invocation;                                              // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UAbilityTargetMethod>                 TargetMethod;                                            // 0x0010(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Projectile;                                              // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                          HitResult;                                               // 0x0020(0x0088) IsPlainOldData, RepSkip, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AInventoryItem>                       Weapon;                                                  // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x00B0(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ImpactPointOverride;                                     // 0x00BC(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHeadShotDamageOnly;                                     // 0x00C8(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bParried;                                                // 0x00C9(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInTeamThwackRange;                                    // 0x00CA(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideImpactPoint;                                    // 0x00CB(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               CharacterWhoParried;                                     // 0x00CC(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCosmetic;                                               // 0x00D4(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreAutonomousActions;                                // 0x00D5(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8PKN[0x2];                                   // 0x00D6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UPrimitiveComponent>                  CollisionComponent;                                      // 0x00D8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilityInitiationParams
	 * Size -> 0x0038
	 */
	struct FAbilityInitiationParams
	{
	public:
		TWeakObjectPtr<class AActor>                               Target;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilitiesTableRow;                                       // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9R0[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      InventoryItem;                                           // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              InventoryItemClass;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMU9[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.GameAnalyticsEvent
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FGameAnalyticsEvent : public FAnalyticsEvent
	{
	};

	/**
	 * ScriptStruct TBL.InvocationComplete
	 * Size -> 0x00E0 (FullSize[0x00F8] - InheritedSize[0x0018])
	 */
	struct FInvocationComplete : public FGameAnalyticsEvent
	{
	public:
		class FString                                              InstigatorNetId;                                         // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InstigatorClass;                                         // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InitiatorClass;                                          // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MatchID;                                                 // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InvocationId;                                            // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Ability;                                                 // 0x0068(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     InitiationTime;                                          // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0080(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumHits;                                                 // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalDamage;                                             // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumBlockedHits;                                          // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalBlockedDamage;                                      // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_89QH[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Whatever;                                                // 0x00A0(0x0008) Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_COCU[0x50];                                  // 0x00A8(0x0050) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InvocationActor
	 * Size -> 0x0020
	 */
	struct FInvocationActor
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorName;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDelegateWrapper_ActorDestroyed*                     ActorDestroyed;                                          // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldTimeMarkedForDestroy;                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMarkedForTimedDestroy;                                  // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_993I[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CharacterControlOverTime
	 * Size -> 0x0070
	 */
	struct FCharacterControlOverTime
	{
	public:
		TBL_ECharacterControlEvent                                 Event;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECharacterToControl                                    CharacterToControl;                                      // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E93X[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<TBL_ECharacterControlStat, float>                     Stats;                                                   // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
		bool                                                       bApplyOnFatalBlow;                                       // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEI4[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Time;                                                    // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         ModifierOverTime;                                        // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTime;                                               // 0x0068(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        InstanceId;                                              // 0x006C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.VirtualGoodReward
	 * Size -> 0x0020
	 */
	struct FVirtualGoodReward
	{
	public:
		struct FSoftObjectPath                                     VirtualGood;                                             // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Quantity;                                                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SRT7[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InputRequest
	 * Size -> 0x0058
	 */
	struct FInputRequest
	{
	public:
		TBL_EWeaponAbilitySlotKey                                  Action;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XRTK[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Requesters[0x50];                                        // 0x0001(0x0050) UNKNOWN PROPERTY: SetProperty

	};

	/**
	 * ScriptStruct TBL.AITags
	 * Size -> 0x0040
	 */
	struct FAITags
	{
	public:
		struct FGameplayTagContainer                               AgathaTags;                                              // 0x0000(0x0020) NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               MasonTags;                                               // 0x0020(0x0020) NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AIActorsByTag
	 * Size -> 0x00A0
	 */
	struct FAIActorsByTag
	{
	public:
		unsigned char                                              AgathaActors[0x50];                                      // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              MasonActors[0x50];                                       // 0x0050(0x0050) UNKNOWN PROPERTY: SetProperty

	};

	/**
	 * ScriptStruct TBL.TagBehaviorSetRow
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTagBehaviorSetRow : public FTableRowBase
	{
	public:
		struct FGameplayTag                                        Tag;                                                     // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InventoryItem[0x28];                                     // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Mountable[0x28];                                         // 0x0038(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bOverrideExistingBehaviors;                              // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4Q8[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BehaviorSet[0x28];                                       // 0x0061(0x0028) UNKNOWN PROPERTY: SoftClassProperty

	};

	/**
	 * ScriptStruct TBL.ReplicationPredictionState
	 * Size -> 0x0070
	 */
	struct FReplicationPredictionState
	{
	public:
		int                                                        MoveCheckCount;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NeedsReplicationCount;                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MoveSameLocationCount;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MoveSameVelocityCount;                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaxTimeCount;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ReplicationKeyChangeCount;                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   LastMovementGatheredFrame;                               // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastNeedsReplicationTime;                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LastReplicationKey;                                      // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CurrentSubobjectBucketOffset;                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRepMovement                                        LastReplicatedMovement;                                  // 0x002C(0x0034) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I80U[0x10];                                  // 0x0060(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLButtonAnimation
	 * Size -> 0x02A8
	 */
	struct FTBLButtonAnimation
	{
	public:
		TBL_EButtonAnimationStyle                                  AnimationType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2PU6[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        MaterialParamNames;                                      // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Looping;                                                 // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JTCO[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartingInterpValue;                                     // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndingInterpValue;                                       // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartDelay;                                              // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpTime;                                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_35MW[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         InterpolationCurve;                                      // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTextBlockStyle                                     TextBlockStyle;                                          // 0x0038(0x0270) Edit, BlueprintVisible, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TracerCacheKey
	 * Size -> 0x0018
	 */
	struct FTracerCacheKey
	{
	public:
		class FName                                                Montage;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Section;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Bone;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplVictoryPodium
	 * Size -> 0x0010
	 */
	struct FReplVictoryPodium
	{
	public:
		class ALevelSequenceActor*                                 LevelSequence;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APodiumLocation*                                     PodiumLocation;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplPodiumCharacterInfo
	 * Size -> 0x0010
	 */
	struct FReplPodiumCharacterInfo
	{
	public:
		class ATBLCharacter*                                       Character;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ATBLPlayerState*                                     PlayerState;                                             // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Loadout
	 * Size -> 0x0038
	 */
	struct FLoadout
	{
	public:
		class UClass*                                              Primary;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Secondary;                                               // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Shield;                                                  // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Knife;                                                   // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Item;                                                    // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Bandage;                                                 // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              Special;                                                 // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SavedSubclass
	 * Size -> 0x0050
	 */
	struct FSavedSubclass
	{
	public:
		unsigned char                                              ParentClass[0x28];                                       // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Subclass[0x28];                                          // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty

	};

	/**
	 * ScriptStruct TBL.LoadoutConfig
	 * Size -> 0x0118
	 */
	struct FLoadoutConfig
	{
	public:
		unsigned char                                              Primary[0x28];                                           // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Secondary[0x28];                                         // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Shield[0x28];                                            // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Knife[0x28];                                             // 0x0078(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Item[0x28];                                              // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Bandage[0x28];                                           // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              Special[0x28];                                           // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftClassProperty

	};

	/**
	 * ScriptStruct TBL.SavedLoadout
	 * Size -> 0x0168
	 */
	struct FSavedLoadout
	{
	public:
		unsigned char                                              CharacterClass[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              LoadoutSelection[0x28];                                  // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FLoadoutConfig                                      Loadout;                                                 // 0x0050(0x0118) NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CameraTargetParams
	 * Size -> 0x0010
	 */
	struct FCameraTargetParams
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachSocketName;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SoundSwitchEntry
	 * Size -> 0x0020
	 */
	struct FSoundSwitchEntry
	{
	public:
		class FString                                              Switch;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              State;                                                   // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DebugReliableRPC
	 * Size -> 0x0010
	 */
	struct FDebugReliableRPC
	{
	public:
		int                                                        Sequence;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FunctionName;                                            // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DebugProjectileHit
	 * Size -> 0x0038
	 */
	struct FDebugProjectileHit
	{
	public:
		class FName                                                ProjectileName;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorName;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ActorLocation;                                           // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SpawnLocation;                                           // 0x0028(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ID;                                                      // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDidHit : 1;                                             // 0x0035(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QI3F[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DebugSpectatorCamera
	 * Size -> 0x0018
	 */
	struct FDebugSpectatorCamera
	{
	public:
		struct FVector_NetQuantize                                 Location;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           Direction;                                               // 0x000C(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLQualityLevels
	 * Size -> 0x001C
	 */
	struct FTBLQualityLevels
	{
	public:
		int                                                        ResolutionQuality;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ViewDistanceQuality;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AntiAliasingQuality;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ShadowQuality;                                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        PostProcessQuality;                                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TextureQuality;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        EffectsQuality;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MatchSessionComplete
	 * Size -> 0x0088 (FullSize[0x00A0] - InheritedSize[0x0018])
	 */
	struct FMatchSessionComplete : public FGameAnalyticsEvent
	{
	public:
		class FString                                              NetId;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RSD[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Nickname;                                                // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MachineId;                                               // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MachineName;                                             // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OperatingSystemId;                                       // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CommandLine;                                             // 0x0070(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTBLQualityLevels                                   ScalabilitySettings;                                     // 0x0080(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z3CR[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SelfCameraProperties
	 * Size -> 0x0028
	 */
	struct FSelfCameraProperties
	{
	public:
		struct FVector                                             Offset;                                                  // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ZoomDistance;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomMax;                                                 // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomMin;                                                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoldDelay;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationMap
	 * Size -> 0x00B8
	 */
	struct FCustomizationMap
	{
	public:
		TBL_EFaction                                               Faction;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAudioClassType                                        Class;                                                   // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PR3E[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              CustomizationMap[0x50];                                  // 0x0002(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              WeaponsList[0x50];                                       // 0x0058(0x0050) UNKNOWN PROPERTY: MapProperty
		TArray<class UCTBase*>                                     ReplicatedCustomization;                                 // 0x00A8(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AchievementProgress
	 * Size -> 0x0038
	 */
	struct FAchievementProgress
	{
	public:
		class UAchievement*                                        Achievement;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAchievementInstance*                                TrackedObject;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Group;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_40TF[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Progress;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        InheritedProgress;                                       // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CompleteCount;                                           // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           CompleteDate;                                            // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SHMI[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AnnouncementEntry
	 * Size -> 0x0028
	 */
	struct FAnnouncementEntry
	{
	public:
		bool                                                       bPrimary;                                                // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActive;                                                 // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSeen;                                                   // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S7UE[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVirtualGoodAnnouncement*                            Announcement;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           SeenDate;                                                // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           AvailableDate;                                           // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           LiveDate;                                                // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.VirtualGoodEntry
	 * Size -> 0x0010
	 */
	struct FVirtualGoodEntry
	{
	public:
		class UVirtualGood*                                        Key;                                                     // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Value;                                                   // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ZKD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.RespawnSpecialItem
	 * Size -> 0x0004
	 */
	struct FRespawnSpecialItem
	{
	public:
		int                                                        PreviousStoredCharge;                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DeathRecapAbilityEntry
	 * Size -> 0x0010
	 */
	struct FDeathRecapAbilityEntry
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageCaused;                                            // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XVV[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DeathRecapEntry
	 * Size -> 0x0030
	 */
	struct FDeathRecapEntry
	{
	public:
		class UObject*                                             Killer;                                                  // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EKillerType                                            KillerType;                                              // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9Y4[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDeathRecapAbilityEntry>                     AbilityEntries;                                          // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      KillingBlowItem;                                         // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWasDowned : 1;                                          // 0x0028(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ETJT[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ScoreEventStruct
	 * Size -> 0x0038
	 */
	struct FScoreEventStruct
	{
	public:
		class FText                                                ScoreEventText;                                          // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int                                                        ScoreEventAmount;                                        // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        ScoreEventTypeTag;                                       // 0x001C(0x0008) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H79W[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATBLPlayerState*                                     Killed;                                                  // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EScoreGroup                                            ScoreGroup;                                              // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQJM[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DeathRecap
	 * Size -> 0x0078
	 */
	struct FDeathRecap
	{
	public:
		int8_t                                                     ForceRepByte;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DOZT[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDeathRecapEntry>                            Entries;                                                 // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastDamageTaken;                                         // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QY0P[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FScoreEventStruct>                           ScoreEventsThisLife;                                     // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageDoneThisLife;                                      // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageTakenThisLife;                                     // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ParriesThisLife;                                         // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CountersThisLife;                                        // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SiegeKillsThisLife;                                      // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        BattlecriesThisLife;                                     // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ATBLPlayerState*>                             KilledPlayersThisLife;                                   // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHealth;                                               // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KillerHealthPercent;                                     // 0x005C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageCausedByKilledPlayerPercent;                       // 0x0060(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_40RQ[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAbilitySpec*                                        KillingBlowAbilitySpec;                                  // 0x0068(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                KillingBlowAbilityName;                                  // 0x0070(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DeadCharacter
	 * Size -> 0x0010
	 */
	struct FDeadCharacter
	{
	public:
		TWeakObjectPtr<class ATBLCharacter>                        Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KilledTime;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnedGoreHead;                                        // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CG38[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ScoreEventByName
	 * Size -> 0x000C
	 */
	struct FScoreEventByName
	{
	public:
		class FName                                                ScoreEventName;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ScoreValue;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PostDamageEventInfo
	 * Size -> 0x000C
	 */
	struct FPostDamageEventInfo
	{
	public:
		class FName                                                DamageTakerCombatState;                                  // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlVariant                                   CrowdControlVariant;                                     // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNewCombatState;                                         // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZSTE[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.GoreEvent
	 * Size -> 0x001C
	 */
	struct FTBL_FGoreEvent
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EHeadGoreAction                                        HeadGoreAction;                                          // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ELimbGoreAction                                        LimbGoreAction;                                          // 0x0009(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VGU2[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Impulse;                                                 // 0x000C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawnedItem;                                            // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKillingBlow;                                            // 0x0019(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X49A[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DamageTakenEvent
	 * Size -> 0x0148
	 */
	struct FDamageTakenEvent
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NewStatValue;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageSource*                                       DamageSource;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageCauser;                                            // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageTaker;                                             // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageInstigator;                                        // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKillingBlow;                                            // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuicide;                                                // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBackStab;                                               // 0x002A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnteredKillVolume;                                      // 0x002B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoseLimbCheat;                                          // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSwitchedTeamsInLoadoutVolume;                           // 0x002D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJJR[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          HitResult;                                               // 0x0030(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilitiesTableRow;                                       // 0x00C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           HitDirection;                                            // 0x00C8(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageTakerCombatState;                                  // 0x00D4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EConditionType                                         ApplyCondition;                                          // 0x00DC(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U1SJ[0x3];                                   // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostDamageEventInfo                                PostDamageInfo;                                          // 0x00E0(0x000C) Transient, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NKK[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      InventoryItem;                                           // 0x00F0(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Projectile;                                              // 0x00F8(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ELocationBasedDamage                                   LocationBasedDamage;                                     // 0x0100(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_68ZP[0x7];                                   // 0x0101(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              AttachParent;                                            // 0x0108(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bParried;                                                // 0x0110(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C53F[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              CharacterWhoParried;                                     // 0x0118(0x0008) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInTeamThwackRange;                                    // 0x0120(0x0001) BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MZMP[0x3];                                   // 0x0121(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTBL_FGoreEvent                                     GoreEvent;                                               // 0x0124(0x001C) BlueprintVisible, Transient, NoDestructor, NativeAccessSpecifierPublic
		TBL_EKillReason                                            KillReason;                                              // 0x0140(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JAFR[0x7];                                   // 0x0141(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TimeStampedDamageTakenEvent
	 * Size -> 0x0150
	 */
	struct FTimeStampedDamageTakenEvent
	{
	public:
		struct FDamageTakenEvent                                   DamageTakenEvent;                                        // 0x0000(0x0148) Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      TimeRecorded;                                            // 0x0148(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8SWC[0x4];                                   // 0x014C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InstigatedVote
	 * Size -> 0x0020
	 */
	struct FInstigatedVote
	{
	public:
		class FName                                                VoteResult;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                VotedFor;                                                // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InstigationTime;                                         // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZN2W[0xC];                                   // 0x0014(0x000C) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.WeaponTipMaxAngle
	 * Size -> 0x0008
	 */
	struct FWeaponTipMaxAngle
	{
	public:
		float                                                      Horizontal;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Vertical;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EarlyHitParams
	 * Size -> 0x0003
	 */
	struct FEarlyHitParams
	{
	public:
		TBL_EEarlyHitPolicy                                        Policy;                                                  // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlVariant                                   CrowdControlVariant;                                     // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlDirection                                 CrowdControlDirection;                                   // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StaminaDrain
	 * Size -> 0x0020
	 */
	struct FStaminaDrain
	{
	public:
		float                                                      DrainRate;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q5YL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         DrainRateModifier;                                       // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        CombatStates;                                            // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LockMeshRotationParams
	 * Size -> 0x000C
	 */
	struct FLockMeshRotationParams
	{
	public:
		TBL_ELockMeshAngle                                         LockMeshAngle;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XOZG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Offset;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnLimit;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TurnLockParams
	 * Size -> 0x0024
	 */
	struct FTurnLockParams
	{
	public:
		float                                                      HorizontalLimit;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalLimit;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockMesh;                                               // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1632[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLockMeshRotationParams                             LockMeshParams;                                          // 0x000C(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndCombatStatePercent;                                   // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnlyApplyOnRootMotion;                                  // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableUseControllerRotationYaw;                        // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MOWP[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateSlowdown
	 * Size -> 0x0010
	 */
	struct FCombatStateSlowdown
	{
	public:
		float                                                      Strength;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ABZW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         ModifierCurve;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FullBodyAnimationModifier
	 * Size -> 0x0010
	 */
	struct FFullBodyAnimationModifier
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatState;                                             // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFullBodyCombatState                                   CombatStateType;                                         // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XVFA[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CharacterSignificanceState
	 * Size -> 0x0028
	 */
	struct FCharacterSignificanceState
	{
	public:
		TBL_ECharacterSignificanceLevel                            Significance;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J0CZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             SignificanceScreenCoords;                                // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNearFrustum;                                            // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWantsSignificanceUpdate;                                // 0x0011(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RI1[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      VisualizationRadius;                                     // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             OnSignificanceChanged;                                   // 0x0018(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TurnLimitSound
	 * Size -> 0x0020
	 */
	struct FTurnLimitSound
	{
	public:
		class UAkAudioEvent*                                       AKEvent;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggerTime;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Cooldown;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ResetHeldTime;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastPlayTime;                                            // 0x0014(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastInputTime;                                           // 0x0018(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeldTime;                                                // 0x001C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.BlendParams
	 * Size -> 0x0024
	 */
	struct FBlendParams
	{
	public:
		Engine_EEasingFunc                                         EasingFunc;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XREL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlendTime;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendExp;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U1ZB[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartTime;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FYW3[0x8];                                   // 0x001C(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MountBlendParams
	 * Size -> 0x00AC (FullSize[0x00D0] - InheritedSize[0x0024])
	 */
	struct FMountBlendParams : public FBlendParams
	{
	public:
		unsigned char                                              UnknownData_DN1H[0xC];                                   // 0x0024(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          StartRelative;                                           // 0x0030(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          TargetRelative;                                          // 0x0060(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             StartRelative1P;                                         // 0x0090(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetRelative1P;                                        // 0x009C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bControlRotation;                                        // 0x00A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2LMZ[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            StartControl;                                            // 0x00AC(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            TargetControl;                                           // 0x00B8(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4YFY[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATBLCharacter*                                       Character;                                               // 0x00C8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SiegeEngineDamageSounds
	 * Size -> 0x0020
	 */
	struct FSiegeEngineDamageSounds
	{
	public:
		class UAkAudioEvent*                                       DamagedSound;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       DestroyedSound;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       RepairedSound;                                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       FullyRepairedSound;                                      // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CombatStateModifiers
	 * Size -> 0x0008
	 */
	struct FCombatStateModifiers
	{
	public:
		unsigned char                                              bCanQueueAttack : 1;                                     // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanJump : 1;                                            // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanDash : 1;                                            // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanSprint : 1;                                          // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCannotMove : 1;                                         // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanUseWeaponsAndSiegeActors : 1;                        // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCannotUseInteractables : 1;                             // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDisableSprintTurn : 1;                                  // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCanCrouch : 1;                                          // 0x0001(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TVS6[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CrouchEndWindow;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TurnLimitParams
	 * Size -> 0x0018
	 */
	struct FTurnLimitParams
	{
	public:
		bool                                                       bUseAttackCurve;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0MM0[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         Curve;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strength;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideTime;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ScaleDirectionParams
	 * Size -> 0x0020
	 */
	struct FScaleDirectionParams
	{
	public:
		int                                                        ID;                                                      // 0x0000(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EScaleDirection                                        ScaleDirection;                                          // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LN60[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForwardScale;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BackwardScale;                                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftScale;                                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightScale;                                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         Curve;                                                   // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.NextStateTimer
	 * Size -> 0x000C
	 */
	struct FNextStateTimer
	{
	public:
		class FName                                                NextState;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TimerHandle;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TurnLockState
	 * Size -> 0x0018
	 */
	struct FTurnLockState
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBotEnabled;                                             // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQO3[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            TurnLockRotation;                                        // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int                                                        HorizLockId;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        VertLockId;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.BreakableThreshold
	 * Size -> 0x0010
	 */
	struct FBreakableThreshold
	{
	public:
		class UObject*                                             GenericObject;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealthPercent;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E9EF[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StageActorAction
	 * Size -> 0x0030
	 */
	struct FStageActorAction
	{
	public:
		unsigned char                                              StageActor[0x28];                                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TBL_EStageActorActions                                     StageActorAction;                                        // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MEQM[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DeathCamSettings
	 * Size -> 0x0040
	 */
	struct FDeathCamSettings
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CameraDistance;                                          // 0x0004(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         CameraDistanceScale;                                     // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraTargetZOffset;                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraRotationLagSpeed;                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinPitch;                                                // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPitch;                                                // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FocusLocationInterpSpeed;                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FollowBone;                                              // 0x002C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisableInputTime;                                        // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DampenRotationTime;                                      // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InvertPitchViewRotation;                                 // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InvertYawViewRotation;                                   // 0x003D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XNYZ[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DeathCamContext_1P
	 * Size -> 0x0008
	 */
	struct FDeathCamContext_1P
	{
	public:
		class ATBLCharacter*                                       KilledCharacter;                                         // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FollowAnimationBlend
	 * Size -> 0x0018 (FullSize[0x003C] - InheritedSize[0x0024])
	 */
	struct FFollowAnimationBlend : public FBlendParams
	{
	public:
		struct FRotator                                            StartRotation;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            TargetRotation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_AInventoryItem
	 * Size -> 0x0018
	 */
	struct FReplicated_AInventoryItem
	{
	public:
		unsigned char                                              UnknownData_GG7D[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ProjectileSounds
	 * Size -> 0x0028
	 */
	struct FProjectileSounds
	{
	public:
		class UAkAudioEvent*                                       WorldHit;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       CloseCall;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       CloseCallStop;                                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Start;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Stop;                                                    // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CharacterPerformanceTestSingleSetting
	 * Size -> 0x00A0
	 */
	struct FCharacterPerformanceTestSingleSetting
	{
	public:
		unsigned char                                              CameraLocation[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              AgathaSpawner[0x28];                                     // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              MasonSpawner[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              NavBlocker[0x28];                                        // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty

	};

	/**
	 * ScriptStruct TBL.ChatLine
	 * Size -> 0x0050
	 */
	struct FChatLine
	{
	public:
		class FText                                                OriginString;                                            // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                ChatString;                                              // 0x0018(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TBL_EChatType                                              ChatType;                                                // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EChatType                                              MaxChatType;                                             // 0x0031(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I382[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        OriginColor;                                             // 0x0034(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSenderDev;                                             // 0x0044(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DVL8[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           TimeReceived;                                            // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CinematicAnimationRemapSet
	 * Size -> 0x0060
	 */
	struct FCinematicAnimationRemapSet
	{
	public:
		class FString                                              AutomapString;                                           // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class UAnimSequenceBase*>              WeaponMapping;                                           // 0x0010(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplicatedCombatStateInfo
	 * Size -> 0x000A
	 */
	struct FReplicatedCombatStateInfo
	{
	public:
		unsigned char                                              CombatStateIndex;                                        // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AttackIndex;                                             // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint16_t                                                   AnimationLength;                                         // 0x0002(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     EmoteId;                                                 // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AttackProperties;                                        // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsAltComboState : 1;                                    // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsFeint : 1;                                            // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsFeintCombo : 1;                                       // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsCounter : 1;                                          // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsHeavy : 1;                                            // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bComboFromBlocked : 1;                                   // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bComboFromDoingParryBreak : 1;                           // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bStartAttack : 1;                                        // 0x0006(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bUseWeaponTracers : 1;                                   // 0x0007(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOffHandWeapon : 1;                                      // 0x0007(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DirtyIndex;                                              // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GDR[0x1];                                   // 0x0009(0x0001) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DelayedQueueHeldInputs
	 * Size -> 0x000C
	 */
	struct FDelayedQueueHeldInputs
	{
	public:
		class FName                                                InputName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIgnoreLastAttackInput : 1;                              // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S2PW[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TurnLimitState
	 * Size -> 0x0048
	 */
	struct FTurnLimitState
	{
	public:
		class UCurveFloat*                                         CurveLeft;                                               // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         CurveRight;                                              // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         CurveUp;                                                 // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         CurveDown;                                               // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         ScaleByDegreesTurned;                                    // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrengthLeft;                                            // 0x0028(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrengthRight;                                           // 0x002C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrengthUp;                                              // 0x0030(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrengthDown;                                            // 0x0034(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Section;                                                 // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TurnRateId;                                              // 0x0040(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoldingTime;                                             // 0x0044(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FReplicatedCombatStateInfo
	 * Size -> 0x0020
	 */
	struct FReplicated_FReplicatedCombatStateInfo
	{
	public:
		unsigned char                                              UnknownData_44WH[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FReplicatedCombatStateInfo                          Value;                                                   // 0x0010(0x000A) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_4891[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AttackInfo
	 * Size -> 0x0108
	 */
	struct FAttackInfo
	{
	public:
		class UAttackType*                                         AttackType;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InventoryItem;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              InventoryItemClass;                                      // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackName;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InputActionName;                                         // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ComboState;                                              // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackDirection;                                         // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAttackTransition                                      AttackTransition;                                        // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P2X2[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttackTransitionState;                                   // 0x003C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EComboTimingPolicy                                     ComboTimingPolicy;                                       // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseWeaponTracers;                                       // 0x0045(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsesMouseScrollWheel;                                   // 0x0046(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAltAttack;                                              // 0x0047(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCounter;                                              // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFeint;                                                // 0x0049(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFeintCombo;                                           // 0x004A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsHeavy;                                                // 0x004B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasBlocked;                                             // 0x004C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWasBlockedWithParryForgivenessWindow;                   // 0x004D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDidParryBreak;                                          // 0x004E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bComboFromBlocked;                                       // 0x004F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bComboFromDoingParryBreak;                               // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOffHandWeapon;                                          // 0x0051(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I0NF[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AAbilityInvocation*                                  Invocation;                                              // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumHoldingTime;                                      // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaCost;                                             // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        InvocationId;                                            // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49HR[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        AttackTags;                                              // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitiesComponent*                                 AbilitiesComponent;                                      // 0x0080(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        PrevAttackID;                                            // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastInQueueTime;                                         // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHeldQueue;                                              // 0x0094(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V5JF[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CombatStateOnQueue;                                      // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        EmoteId;                                                 // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset1P;                                                // 0x00A4(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DegreesTurnedLeft;                                       // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DegreesTurnedRight;                                      // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCounterSuccess;                                       // 0x00B8(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HQN3[0x4F];                                  // 0x00B9(0x004F) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateInfo
	 * Size -> 0x0128
	 */
	struct FCombatStateInfo
	{
	public:
		class UCombatState*                                        CombatState;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatStateName;                                         // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttackInfo                                         Attack;                                                  // 0x0010(0x0108) BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      AnimationLength;                                         // 0x0118(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTime;                                               // 0x011C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartAttack;                                            // 0x0120(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlVariant                                   Variant;                                                 // 0x0121(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XS0S[0x6];                                   // 0x0122(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PreviousCombatState
	 * Size -> 0x0138
	 */
	struct FPreviousCombatState
	{
	public:
		struct FCombatStateInfo                                    StateInfo;                                               // 0x0000(0x0128) ContainsInstancedReference, NativeAccessSpecifierPublic
		class FName                                                Transition;                                              // 0x0128(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeInState;                                             // 0x0130(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationTimerOvertime;                                  // 0x0134(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SwingThroughInfo
	 * Size -> 0x0050
	 */
	struct FSwingThroughInfo
	{
	public:
		TBL_ESwingThroughReason                                    SwingThroughReason;                                      // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q6R5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              HitActor;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AttackerLocation;                                        // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DefenderLocation;                                        // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ImpactLocation;                                          // 0x0028(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IsFacingTargetAngle;                                     // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IsFacingTargetMaxAngle;                                  // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y6H1[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              VisibilityBlockingActor;                                 // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IsFacingWeaponTipAngle;                                  // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IsFacingWeaponTipMaxAngle;                               // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.NextStateQueue
	 * Size -> 0x0010
	 */
	struct FNextStateQueue
	{
	public:
		class FName                                                NextStateName;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideStateTime;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartAttack;                                            // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlVariant                                   Variant;                                                 // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VDG0[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InputPressedParams
	 * Size -> 0x0038
	 */
	struct FInputPressedParams
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttackType*                                         AttackType;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilitiesTableRow;                                       // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                InputActionName;                                         // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsesMouseScrollWheel;                                   // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAltAttack;                                              // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UWP[0x16];                                  // 0x0022(0x0016) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AnimationTiming
	 * Size -> 0x0014
	 */
	struct FAnimationTiming
	{
	public:
		class FName                                                CombatState;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationLength;                                         // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackName;                                              // 0x000C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CombatStateStartAttack
	 * Size -> 0x0038
	 */
	struct FCombatStateStartAttack
	{
	public:
		int                                                        AttackID;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        PrevAttackID;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_THZ4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      InventoryItem;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        EmoteId;                                                 // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAttackTransition                                      AttackTransition;                                        // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CombatStateIndex;                                        // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PrevCombatStateIndex;                                    // 0x001E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AttackIndex;                                             // 0x001F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InputActionIndex;                                        // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAltComboState : 1;                                      // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAltAttack : 1;                                          // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEndAnimation : 1;                                       // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsFeint : 1;                                            // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsFeintCombo : 1;                                       // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsCounter : 1;                                          // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsCounterSuccess : 1;                                   // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bComboFromBlocked : 1;                                   // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bComboFromDoingParryBreak : 1;                           // 0x0022(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0022(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4JAV[0x15];                                  // 0x0023(0x0015) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SyncAttackId
	 * Size -> 0x0010
	 */
	struct FSyncAttackId
	{
	public:
		int                                                        AttackID;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatState;                                             // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FailedAttackInfo
	 * Size -> 0x0250
	 */
	struct FFailedAttackInfo
	{
	public:
		class FName                                                FailedReason;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1RM1[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCombatStateInfo                                    CurrentState;                                            // 0x0010(0x0128) ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FAttackInfo                                         Attack;                                                  // 0x0138(0x0108) ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class FString>                                      PreviousStates;                                          // 0x0240(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ConditionEntry
	 * Size -> 0x0020
	 */
	struct FConditionEntry
	{
	public:
		class UConditionsComponent*                                Owner;                                                   // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EConditionType                                         ConditionType;                                           // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q1TI[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartTime;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        StackCount;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaxStackCount;                                           // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZDHM[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_UInt32
	 * Size -> 0x0018
	 */
	struct FReplicated_UInt32
	{
	public:
		unsigned char                                              UnknownData_1VUJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Value;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_PF7H[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_Float
	 * Size -> 0x0018
	 */
	struct FReplicated_Float
	{
	public:
		unsigned char                                              UnknownData_AVUS[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_YSH0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_Int8
	 * Size -> 0x0018
	 */
	struct FReplicated_Int8
	{
	public:
		unsigned char                                              UnknownData_MWVM[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int8_t                                                     Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IGH6[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_Bool
	 * Size -> 0x0018
	 */
	struct FReplicated_Bool
	{
	public:
		unsigned char                                              UnknownData_Z1CA[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EE8A[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DownedScore
	 * Size -> 0x0028
	 */
	struct FDownedScore
	{
	public:
		float                                                      StartScore;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GetUpWindow;                                             // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScorePerDamage;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScorePerDownedPunchDamage;                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScorePerKill;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DrainPauseTime;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DrainInterval;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         DrainCurve;                                              // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TracerCache
	 * Size -> 0x0030
	 */
	struct FTracerCache
	{
	public:
		TArray<struct FTransform>                                  Transforms;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTransform>                                  BaseTransforms;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector>                                     Direction;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RespawnStinger
	 * Size -> 0x0010
	 */
	struct FRespawnStinger
	{
	public:
		float                                                      Delay;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L207[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Sound;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SessionBannedPlayer
	 * Size -> 0x0030
	 */
	struct FSessionBannedPlayer
	{
	public:
		unsigned char                                              UnknownData_BO2W[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.FrameTimeBucket
	 * Size -> 0x0004
	 */
	struct FFrameTimeBucket
	{
	public:
		int                                                        Count;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FrameTimeBuckets
	 * Size -> 0x0028
	 */
	struct FFrameTimeBuckets
	{
	public:
		struct FFrameTimeBucket                                    FrameTime0_17ms;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime17_30ms;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime30_50ms;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime50_75ms;                                        // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime75_100ms;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime100_150ms;                                      // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime150_250ms;                                      // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime250_500ms;                                      // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime500_1000ms;                                     // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBucket                                    FrameTime1000ms;                                         // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PingTimeBucket
	 * Size -> 0x0004
	 */
	struct FPingTimeBucket
	{
	public:
		int                                                        Count;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PingTimeBuckets
	 * Size -> 0x002C
	 */
	struct FPingTimeBuckets
	{
	public:
		struct FPingTimeBucket                                     PingTime0_30ms;                                          // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime30_60ms;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime60_100ms;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime100_150ms;                                       // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime150_200ms;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime200_300ms;                                       // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime300_400ms;                                       // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime400_500ms;                                       // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime500_750ms;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime750_1000ms;                                      // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBucket                                     PingTime1000ms;                                          // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MatchComplete
	 * Size -> 0x0120 (FullSize[0x0138] - InheritedSize[0x0018])
	 */
	struct FMatchComplete : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameModeName;                                            // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ServerName;                                              // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFrameTimeBuckets                                   Buckets;                                                 // 0x005C(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBuckets                                    PingBuckets;                                             // 0x0084(0x002C) Transient, NoDestructor, NativeAccessSpecifierPublic
		int                                                        PingTotalSamples;                                        // 0x00B0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1QTK[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    TotalRetryReliableCount;                                 // 0x00B8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalRetryReliableBytes;                                 // 0x00C0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalRetryUnreliableCount;                               // 0x00C8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalRetryUnreliableBytes;                               // 0x00D0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    SendFailTotalBytes;                                      // 0x00D8(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageServerFrameTime;                                  // 0x00E0(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTime;                                         // 0x00E4(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ComputerName;                                            // 0x00E8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    AvailablePhysicalMemoryStart;                            // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    AvailablePhysicalMemoryEnd;                              // 0x0100(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProcessUptimeAtStart;                                    // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8EOX[0x4];                                   // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    UsedVirtualMemoryStart;                                  // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    UsedVirtualMemoryEnd;                                    // 0x0118(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageOutBytesPerClient;                                // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageNumClients;                                       // 0x0124(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalFrames;                                             // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetSaturatedFrames;                                      // 0x012C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        WinningTeamId;                                           // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MatchEndedInTie;                                         // 0x0134(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VRQ5[0x3];                                   // 0x0135(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AvailableCPUBuckets
	 * Size -> 0x001C
	 */
	struct FAvailableCPUBuckets
	{
	public:
		int                                                        Percent0_11;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Percent10_21;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Percent20_31;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Percent30_41;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Percent40_51;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Percent50_101;                                           // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SampleCount;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PacketLossData
	 * Size -> 0x0018
	 */
	struct FPacketLossData
	{
	public:
		int                                                        NetInPackets;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetInPacketsLost;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetInOutOfOrderPackets;                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetOutPackets;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetOutPacketsLost;                                       // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetOutOutOfOrderPackets;                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ServerPerformanceHistory
	 * Size -> 0x0168 (FullSize[0x0180] - InheritedSize[0x0018])
	 */
	struct FServerPerformanceHistory : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SeriesName;                                              // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameModeName;                                            // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ComputerName;                                            // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFrameTimeBuckets                                   FrameBuckets;                                            // 0x0068(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBuckets                                   StatFrameBuckets;                                        // 0x0090(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBuckets                                    PingBuckets;                                             // 0x00B8(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FAvailableCPUBuckets                                AvailableCpu;                                            // 0x00E4(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		int                                                        PingTotalSamples;                                        // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CC8U[0x4];                                   // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    TotalRetryReliableCount;                                 // 0x0108(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalRetryReliableBytes;                                 // 0x0110(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalRetryUnreliableCount;                               // 0x0118(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalRetryUnreliableBytes;                               // 0x0120(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    SendFailTotalBytes;                                      // 0x0128(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageNumClients;                                       // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageServerFrameTime;                                  // 0x0134(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageClientFrameTime;                                  // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTime;                                         // 0x013C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageRTT;                                              // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalAnalyticsErrors;                                    // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalAnalyticsTasks;                                     // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPacketLossData                                     PacketLossData;                                          // 0x014C(0x0018) NoDestructor, NativeAccessSpecifierPublic
		int                                                        SkippedServerMoves;                                      // 0x0164(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SkippedServerMoveFrames;                                 // 0x0168(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q9VS[0x14];                                  // 0x016C(0x0014) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ClassLimitStruct
	 * Size -> 0x0008
	 */
	struct FClassLimitStruct
	{
	public:
		TBL_ECharacterClass                                        Class;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SBKN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ClassLimitPercent;                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TeamBalanceConfig
	 * Size -> 0x000C
	 */
	struct FTeamBalanceConfig
	{
	public:
		int                                                        MinNumPlayers;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaxNumPlayers;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AllowedNumPlayersDifference;                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AutoBalancePlayerSwappingPriorityConfig
	 * Size -> 0x000C
	 */
	struct FAutoBalancePlayerSwappingPriorityConfig
	{
	public:
		int                                                        MinNumPlayersPerTeam;                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowPlayersAlreadyAutoBalanced;                         // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowPlayersInParties;                                   // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C1HU[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        NumPlayersToSwap;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FloatArray
	 * Size -> 0x0010
	 */
	struct FFloatArray
	{
	public:
		TArray<float>                                              Floats;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PendingSpawn
	 * Size -> 0x0024
	 */
	struct FPendingSpawn
	{
	public:
		TWeakObjectPtr<class USpawnQueuer>                         Queuer;                                                  // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASpawner>                             Spawner;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASpawnWave>                           SpawnWave;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AController>                          Controller;                                              // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ReservationIndex;                                        // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OccupiedPlayerStart
	 * Size -> 0x0010
	 */
	struct FOccupiedPlayerStart
	{
	public:
		unsigned char                                              UnknownData_2LNP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ArenaCommanderVO
	 * Size -> 0x0058
	 */
	struct FArenaCommanderVO
	{
	public:
		class UAkAudioEvent*                                       FiveSecondCountdown;                                     // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       ThreeSecondCountdown;                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       MasonVictory;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AgathaVictory;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       RoundStart;                                              // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       ThirtySecondsRemaining;                                  // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       FifteenSecondsRemaining;                                 // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       RoundFight;                                              // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       MatchPoint;                                              // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AgathaMatchPoint;                                        // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       MasonMatchPoint;                                         // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EpicEndGameState
	 * Size -> 0x0001
	 */
	struct FEpicEndGameState
	{
	public:
		TBL_EEpicEndGameState                                      State;                                                   // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StageActorProgress
	 * Size -> 0x0010
	 */
	struct FStageActorProgress
	{
	public:
		class AActor*                                              StageActor;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeElapsed;                                             // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Progress;                                                // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ObjectivePointEntry
	 * Size -> 0x000C
	 */
	struct FObjectivePointEntry
	{
	public:
		TBL_EFaction                                               Faction;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6PDW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Points;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EObjectivePointCategory                                PointCategory;                                           // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0UFI[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TeamScoreEvent
	 * Size -> 0x0040
	 */
	struct FTeamScoreEvent
	{
	public:
		class AActor*                                              Instigator;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Victim;                                                  // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EObjectivePointCategory                                PointCategory;                                           // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MTA7[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATBLTeam*                                            Team;                                                    // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Score;                                                   // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EScoreModifyType                                       ModifyType;                                              // 0x0024(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_82WU[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LocalFormattedText;                                      // 0x0028(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplSequenceBinding
	 * Size -> 0x0018
	 */
	struct FReplSequenceBinding
	{
	public:
		class ATBLCharacter*                                       Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BindingLookupString;                                     // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ContextVoEntry
	 * Size -> 0x0010
	 */
	struct FContextVoEntry
	{
	public:
		TBL_EFaction                                               Faction;                                                 // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAudioAutoVOType                                       ContextVO;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EContextVoType                                         ContextVoType;                                           // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideFrequencyPerMinute;                             // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrequencyPerMinute;                                      // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideNumberOfPlayers;                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OKAV[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        NumberOfPlayers;                                         // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AKAudioStartStopStruct
	 * Size -> 0x0010
	 */
	struct FAKAudioStartStopStruct
	{
	public:
		class UAkAudioEvent*                                       StartSound;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       StopSound;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ObjectiveContextMessage
	 * Size -> 0x0050
	 */
	struct FObjectiveContextMessage
	{
	public:
		class FText                                                AgathaMessage;                                           // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                MasonMessage;                                            // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                FFAMessage;                                              // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       IsValid;                                                 // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D55D[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ServerTornOffItem
	 * Size -> 0x0020
	 */
	struct FServerTornOffItem
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2FE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              ItemClass;                                               // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemoveTime;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LSKG[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PlayerStateArray
	 * Size -> 0x0010
	 */
	struct FPlayerStateArray
	{
	public:
		TArray<class ATBLPlayerState*>                             PlayerStates;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TeamImbalanceTracker
	 * Size -> 0x00A8
	 */
	struct FTeamImbalanceTracker
	{
	public:
		TMap<TWeakObjectPtr<class ATBLPlayerState>, struct FFloatArray> AgathaKills;                                             // 0x0000(0x0050) NativeAccessSpecifierPrivate
		TMap<TWeakObjectPtr<class ATBLPlayerState>, struct FFloatArray> MasonKills;                                              // 0x0050(0x0050) NativeAccessSpecifierPrivate
		float                                                      KillTimeRelevancySeconds;                                // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_TIJT[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MarkedActorEntry
	 * Size -> 0x0048
	 */
	struct FMarkedActorEntry
	{
	public:
		unsigned char                                              UnknownData_81VS[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               MarkedActor;                                             // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UPrimitiveComponent*>                         CollsionComponents;                                      // 0x0010(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UHudMarkerDisplayComponent>           HUDMarkerComponent;                                      // 0x0020(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UWidgetVisibilityComponent>           VisibilityComponent;                                     // 0x0028(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JB5Z[0x18];                                  // 0x0030(0x0018) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MarkedActorEntryInteractable
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FMarkedActorEntryInteractable : public FMarkedActorEntry
	{
	public:
		TWeakObjectPtr<class UInteractableComponent>               InteractableComponent;                                   // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.GameModeMessage
	 * Size -> 0x0070
	 */
	struct FGameModeMessage
	{
	public:
		class FString                                              EventTag;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Message;                                                 // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TBL_EFaction                                               DisplayGroup;                                            // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               CosmeticFaction;                                         // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CGN6[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        GameModeMessageType;                                     // 0x0030(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EMessagePriority                                       MessagePriority;                                         // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KWDQ[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       Sound;                                                   // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EGameModeMessageDisplayType                            MessageDisplayType;                                      // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StagePersistentMessage;                                  // 0x0049(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CommanderEvent;                                          // 0x004A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NR9I[0x1];                                   // 0x004B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTag                                        KillFeedType;                                            // 0x004C(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YXBO[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          KillFeedIcon;                                            // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FContextVoEntry>                             ContextVos;                                              // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PersonalityEmoteTableRow
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FPersonalityEmoteTableRow : public FTableRowBase
	{
	public:
		class FText                                                EmoteName;                                               // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                EmoteNameId;                                             // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EEmoteType                                             EmoteType;                                               // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAudioVOType                                           AudioEmoteType;                                          // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0T9[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EmoteAnimationName;                                      // 0x002C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EEmoteAnimationSource                                  EmoteAnimationSource;                                    // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInRadialMenu;                                        // 0x0035(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeCancelled;                                          // 0x0036(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ApplySpamLimiter;                                        // 0x0037(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          EmoteIcon;                                               // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsValid;                                                 // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TR6D[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AudioEmoteString;                                        // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomPersonalityEmotesTableRow
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FCustomPersonalityEmotesTableRow : public FTableRowBase
	{
	public:
		TBL_EAudioPersonalityType                                  PersonalityType;                                         // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAudioVOType                                           AudioEmoteType;                                          // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TU2O[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AudioEmoteVOString;                                      // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsValid;                                                 // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1V3P[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPersonalityEmoteTableRow                           PersonalityEmote;                                        // 0x0028(0x0058) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLGameUpdateSettings
	 * Size -> 0x0010
	 */
	struct FTBLGameUpdateSettings
	{
	public:
		TArray<class FString>                                      ViewedGameUpdateVersions;                                // 0x0000(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EffectDrawInfo
	 * Size -> 0x0040
	 */
	struct FEffectDrawInfo
	{
	public:
		float                                                      DurationLeftPercent;                                     // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DurationLeftValue;                                       // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCanvasIcon                                         Icon;                                                    // 0x0008(0x0018) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int                                                        StackCount;                                              // 0x0020(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaxStackCount;                                           // 0x0024(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0028(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShow;                                                   // 0x0038(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L64F[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AbilityDrawInfo
	 * Size -> 0x00A8
	 */
	struct FAbilityDrawInfo
	{
	public:
		struct FResult                                             InitiateResult;                                          // 0x0000(0x0010) BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      InterruptCooldownTime;                                   // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxInterruptCooldownTime;                                // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAftertouchable;                                         // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActiveAbility;                                          // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KU5B[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              InputString;                                             // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCanvasIcon                                         Icon;                                                    // 0x0030(0x0018) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              DebugString;                                             // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0058(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0070(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FEffectDrawInfo>                             Effects;                                                 // 0x0088(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        Spec;                                                    // 0x0098(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAbilityActive;                                        // 0x00A0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WOOR[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ImportantGameMsg
	 * Size -> 0x0028
	 */
	struct FImportantGameMsg
	{
	public:
		class FText                                                Message;                                                 // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      MessageStartTime;                                        // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MessageExpiryTime;                                       // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        UniqueMessageId;                                         // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDoesNotExpire;                                          // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QZBY[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatHudMessage
	 * Size -> 0x0010
	 */
	struct FCombatHudMessage
	{
	public:
		TArray<class FText>                                        Arguments;                                               // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLMenuItemStyle
	 * Size -> 0x0198 (FullSize[0x01A0] - InheritedSize[0x0008])
	 */
	struct FTBLMenuItemStyle : public FSlateWidgetStyle
	{
	public:
		struct FSlateBrush                                         BackgroundBrush;                                         // 0x0008(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         LeftArrowImage;                                          // 0x0090(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         RightArrowImage;                                         // 0x0118(0x0088) Edit, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LastSpectatorPOV
	 * Size -> 0x05E0
	 */
	struct FLastSpectatorPOV
	{
	public:
		struct FMinimalViewInfo                                    POV;                                                     // 0x0000(0x05D0) NativeAccessSpecifierPublic
		uint32_t                                                   Frame;                                                   // 0x05D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5C0G[0xC];                                   // 0x05D4(0x000C) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PropertyModifiers
	 * Size -> 0x0050
	 */
	struct FPropertyModifiers
	{
	public:
		TMap<class FName, class FString>                           Map;                                                     // 0x0000(0x0050) NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OfflineAnalyticsAttribute
	 * Size -> 0x0020
	 */
	struct FOfflineAnalyticsAttribute
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OfflineAnalyticsEvent
	 * Size -> 0x0020
	 */
	struct FOfflineAnalyticsEvent
	{
	public:
		int                                                        EventId;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EventName;                                               // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2IJJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FOfflineAnalyticsAttribute>                  Attributes;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EndLadderMovement
	 * Size -> 0x0008
	 */
	struct FTBL_FEndLadderMovement
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKPO[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StartSpawnBonus
	 * Size -> 0x0008
	 */
	struct FStartSpawnBonus
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OGYP[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ExpLockedAbility
	 * Size -> 0x0010
	 */
	struct FExpLockedAbility
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ExpRequiredForUnlock;                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6MC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HintsDataTable
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FHintsDataTable : public FTableRowBase
	{
	public:
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<TBL_EHintType>                                      HintTypes;                                               // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TBL_EHintInputType>                                 InputType;                                               // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HintCategoryDescription
	 * Size -> 0x0010
	 */
	struct FHintCategoryDescription
	{
	public:
		TArray<TBL_EHintType>                                      Categories;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EmoteItem
	 * Size -> 0x000C
	 */
	struct FEmoteItem
	{
	public:
		TBL_EAudioVOType                                           EmoteType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBDI[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AnimationEmoteName;                                      // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EquippedEmotesByClass
	 * Size -> 0x0058
	 */
	struct FEquippedEmotesByClass
	{
	public:
		TBL_EAudioClassType                                        CharacterType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZ2G[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<TBL_EAudioVOType, struct FEmoteItem>                  EmotesByType;                                            // 0x0008(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EquippedEmotesByTeam
	 * Size -> 0x0018
	 */
	struct FEquippedEmotesByTeam
	{
	public:
		TBL_EFaction                                               Faction;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XOZF[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FEquippedEmotesByClass>                      EquipmentByEnum;                                         // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SwatchSelection
	 * Size -> 0x000C
	 */
	struct FSwatchSelection
	{
	public:
		class FName                                                SwatchCategoryName;                                      // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SelectedIndex;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SwatchPreset
	 * Size -> 0x0010
	 */
	struct FSwatchPreset
	{
	public:
		TArray<struct FSwatchSelection>                            Selections;                                              // 0x0000(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilitiesOverrideAssetDataTable
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FAbilitiesOverrideAssetDataTable : public FTableRowBase
	{
	public:
		class UAttackType*                                         AttackType;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   WindupLunge;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   Lunge;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   LungeLeft;                                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   LungeRight;                                              // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   HorseLunge;                                              // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   Knockback;                                               // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   ParrySuccess;                                            // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMovementSequence*                                   Blocked;                                                 // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponTracersBlueprint*                             TracerType;                                              // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponTracersBlueprint*                             AltTracerType;                                           // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageSource*                                       DamageSource;                                            // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageSource*                                       RangedDamageSource;                                      // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         TurnLimitCurve;                                          // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         VerticalTurnLimitCurve;                                  // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         ReverseTurnLimitCurve;                                   // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilitiesOverrideDataTable
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FAbilitiesOverrideDataTable : public FTableRowBase
	{
	public:
		float                                                      Holding;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Windup;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Release;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Recovery;                                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Combo;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Riposte;                                                 // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Feint;                                                   // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Thwack;                                                  // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitSuccess;                                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Blocked;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaCost;                                             // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DrawStrength;                                            // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldHitStartPercentage;                                 // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldHitStopPercentage;                                  // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnLimitStrength;                                       // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalTurnLimitStrength;                               // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReverseTurnLimitStrength;                                // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ThwackOnHit;                                             // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        HitSuccessOnHit;                                         // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Direction;                                               // 0x005C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AltDirection;                                            // 0x0064(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Cooldown;                                                // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        WeaponTipCheckReverse;                                   // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        WeaponTipCheckDisable;                                   // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ComboFromBlocked;                                        // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2M2K[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AbilitiesDataTable
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FAbilitiesDataTable : public FTableRowBase
	{
	public:
		class FName                                                Animation;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AnimationSection;                                        // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttackType*                                         AttackType;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HeavyAttack;                                             // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StartCombatState;                                        // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HorseStartCombatState;                                   // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseThrownAttackType;                                    // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZVOE[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CharacterControlTable
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FCharacterControlTable : public FTableRowBase
	{
	public:
		float                                                      HorizontalTurnLimit;                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalTurnLimit;                                       // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementSpeed;                                           // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LU5E[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DynamicGameActorTagsStruct
	 * Size -> 0x0018
	 */
	struct FDynamicGameActorTagsStruct
	{
	public:
		class FName                                                ObjectiveActorTag;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        DynamicGameActorTags;                                    // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TeamProgressStruct
	 * Size -> 0x0010
	 */
	struct FTeamProgressStruct
	{
	public:
		class ATBLTeam*                                            Team;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Progress;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZ79[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AbilityDataTableMap
	 * Size -> 0x0014
	 */
	struct FAbilityDataTableMap
	{
	public:
		class FName                                                DataTableColumn;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilityPropertyName;                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0010(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClassDataTableMap
	 * Size -> 0x0010
	 */
	struct FClassDataTableMap
	{
	public:
		class FName                                                DataTableRow;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilityPropertyName;                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilityGrant
	 * Size -> 0x0010
	 */
	struct FAbilityGrant
	{
	public:
		class UAbilitySpec*                                        Ability;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InventoryItem;                                           // 0x0008(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.NoveltyScoreEvent
	 * Size -> 0x0020
	 */
	struct FNoveltyScoreEvent
	{
	public:
		class FText                                                NoveltyScoreText;                                        // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int                                                        NoveltyScoreAmount;                                      // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RowIndex;                                                // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HitResultCompressed
	 * Size -> 0x0040
	 */
	struct FHitResultCompressed
	{
	public:
		class AActor*                                              HitActor;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize10                               Location;                                                // 0x0010(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           ImpactNormal;                                            // 0x001C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           Direction;                                               // 0x0030(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZUG[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PostDamageEventInfoCompressed
	 * Size -> 0x0003
	 */
	struct FPostDamageEventInfoCompressed
	{
	public:
		unsigned char                                              DamageTakerCombatStateIndex;                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlVariant                                   CrowdControlVariant;                                     // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bNewCombatState : 1;                                     // 0x0002(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.GoreEventCompressed
	 * Size -> 0x0014
	 */
	struct FGoreEventCompressed
	{
	public:
		unsigned char                                              BoneNameIndex;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EHeadGoreAction                                        HeadGoreAction;                                          // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ELimbGoreAction                                        LimbGoreAction;                                          // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7IGO[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize10                               Impulse;                                                 // 0x0004(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSpawnedItem : 1;                                        // 0x0010(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bKillingBlow : 1;                                        // 0x0010(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_47PH[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DamageTakenEventCompressed
	 * Size -> 0x00C0
	 */
	struct FDamageTakenEventCompressed
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilitiesTableRow;                                       // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NewStatValue;                                            // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageSource*                                       DamageSource;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageCauser;                                            // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageTaker;                                             // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageInstigator;                                        // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bKillingBlow : 1;                                        // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSuicide : 1;                                            // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBackStab : 1;                                           // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnteredKillVolume : 1;                                  // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bLoseLimbCheat : 1;                                      // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOverrideImpactPoint : 1;                                // 0x0038(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JF9Z[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize10                               Location;                                                // 0x003C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BoneNameIndex;                                           // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIOU[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantizeNormal                           HitDirection;                                            // 0x004C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize10                               ImpactPointOverride;                                     // 0x0058(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           ImpactNormal;                                            // 0x0064(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x0070(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DamageTakerCombatStateIndex;                             // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPostDamageEventInfoCompressed                      PostDamageInfoCompressed;                                // 0x0079(0x0003) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NGO9[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      InventoryItem;                                           // 0x0080(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EConditionType                                         ApplyCondition;                                          // 0x0088(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SCBF[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Projectile;                                              // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ELocationBasedDamage                                   LocationBasedDamage;                                     // 0x0098(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UGEM[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              AttachParent;                                            // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGoreEventCompressed                                GoreEventCompressed;                                     // 0x00A8(0x0014) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OIB0[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.BoneInfo
	 * Size -> 0x0014
	 */
	struct FBoneInfo
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EffectDuration
	 * Size -> 0x0010
	 */
	struct FEffectDuration
	{
	public:
		TBL_EDuration                                              Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UX2I[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Time;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Ticks;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EStateBasedEffectEnd                                   StateBasedEffectEnd;                                     // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TL3A[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLInputBinding
	 * Size -> 0x0020
	 */
	struct FTBLInputBinding
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018) Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bShift : 1;                                              // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCtrl : 1;                                               // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAlt : 1;                                                // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bCmd : 1;                                                // 0x0018(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6H0[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StoreOfferItem
	 * Size -> 0x0078
	 */
	struct FStoreOfferItem
	{
	public:
		class FString                                              OfferId;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayfabOfferId;                                          // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                OfferName;                                               // 0x0020(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                OfferDescription;                                        // 0x0038(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ItemClass;                                               // 0x0050(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		int                                                        CrownsGiven;                                             // 0x0068(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        GoldGiven;                                               // 0x006C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      USDCentsPrice;                                           // 0x0070(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlreadyOwnsSinglePurchase;                              // 0x0074(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SY4A[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StageDescription
	 * Size -> 0x0030
	 */
	struct FStageDescription
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.KeyDisplayInfo
	 * Size -> 0x0140 (FullSize[0x0148] - InheritedSize[0x0008])
	 */
	struct FKeyDisplayInfo : public FTableRowBase
	{
	public:
		class FText                                                ShortString;                                             // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ShortStringXboxOne;                                      // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ShortStringPS4;                                          // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ShortStringXSX;                                          // 0x0050(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ShortStringPS5;                                          // 0x0068(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              Texture[0x28];                                           // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              TextureXboxOne[0x28];                                    // 0x00A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              TexturePS4[0x28];                                        // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              TextureXSX[0x28];                                        // 0x00F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              TexturePS5[0x28];                                        // 0x0120(0x0028) UNKNOWN PROPERTY: SoftObjectProperty

	};

	/**
	 * ScriptStruct TBL.UserFeedback
	 * Size -> 0x0058
	 */
	struct FUserFeedback
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EmailAddress;                                            // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Category;                                                // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Summary;                                                 // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EUserFeedbackType                                      FeedbackType;                                            // 0x0050(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4CTF[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.IncomingAttackInfo
	 * Size -> 0x0038
	 */
	struct FIncomingAttackInfo
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                State;                                                   // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCombatState*                                        CombatState;                                             // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackName;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ComboState;                                              // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackDirection;                                         // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAltAttack;                                              // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCounter;                                              // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsFeint;                                                // 0x0032(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsHeavy;                                                // 0x0033(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCounterSuccess;                                       // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KB8Z[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.UtilityAITargetHybrid
	 * Size -> 0x0018
	 */
	struct FUtilityAITargetHybrid
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YY5D[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             Target;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLOnlineAccount
	 * Size -> 0x00B0
	 */
	struct FTBLOnlineAccount
	{
	public:
		int                                                        Level;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AYPK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Debug;                                                   // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UserId;                                                  // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DisplayName;                                             // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVirtualGoodTitle*                                   Title;                                                   // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAchievementProgress>                        Achievements;                                            // 0x0040(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnnouncementEntry>                          Announcements;                                           // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      AccessGroups;                                            // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVirtualGoodEntry>                           VirtualGoods;                                            // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoaded;                                                 // 0x0080(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BBBJ[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        TotalOutstandingRequests;                                // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int>                                                OwnedAppIds;                                             // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class APlayerState*                                        PlayerState;                                             // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_H57R[0x10];                                  // 0x00A0(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MapBotData
	 * Size -> 0x000C
	 */
	struct FMapBotData
	{
	public:
		int                                                        MaxNumBots;                                              // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MinNumBots;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        DefaultValue;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ModifierPropertyOverride
	 * Size -> 0x0020
	 */
	struct FModifierPropertyOverride
	{
	public:
		class FString                                              CommandlineStr;                                          // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultValue;                                            // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CCRK[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MapModifierPropertiesArray
	 * Size -> 0x0088
	 */
	struct FMapModifierPropertiesArray
	{
	public:
		class FString                                              MapAssetStr;                                             // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EGameModeType                                          GamemodeType;                                            // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_19G9[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<TBL_EHardwarePlatform, struct FMapBotData>            BotCounts;                                               // 0x0018(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class UMapModifierProperty*>                        MapModifierProperties;                                   // 0x0068(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FModifierPropertyOverride>                   MapModifierOverrides;                                    // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MapSummaryData
	 * Size -> 0x0068
	 */
	struct FMapSummaryData
	{
	public:
		class FString                                              MapNameNamespace;                                        // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapNameKey;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapNameSource;                                           // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapDescriptionNamespace;                                 // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapDescriptionKey;                                       // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapDescriptionSource;                                    // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               AttackingFaction;                                        // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EGameModeType                                          GamemodeType;                                            // 0x0061(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HDVE[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PlayerCaptureData
	 * Size -> 0x0010
	 */
	struct FPlayerCaptureData
	{
	public:
		class ATBLCharacter*                                       Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Progress;                                                // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_457C[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_PlayerCaptureData
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_PlayerCaptureData
	{
	public:
		unsigned char                                              UnknownData_E03C[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPlayerCaptureData>                          ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.CharacterTypeToCharacterAsset
	 * Size -> 0x0030
	 */
	struct FCharacterTypeToCharacterAsset
	{
	public:
		TBL_EAudioClassType                                        CharacterType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FBUS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              CharacterAsset[0x28];                                    // 0x0001(0x0028) UNKNOWN PROPERTY: SoftClassProperty

	};

	/**
	 * ScriptStruct TBL.TBLCustomizationSaveSettings
	 * Size -> 0x0058
	 */
	struct FTBLCustomizationSaveSettings
	{
	public:
		unsigned char                                              SavedClassChoice[0x28];                                  // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FSavedSubclass>                              SavedSubclassChoice;                                     // 0x0028(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSavedLoadout>                               LoadoutPerClass;                                         // 0x0038(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FCustomizationMap>                           PlayerSavedCustomization;                                // 0x0048(0x0010) ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TimersArray
	 * Size -> 0x0010
	 */
	struct FTimersArray
	{
	public:
		TArray<struct FTimerHandle>                                Timers;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationTags
	 * Size -> 0x0010
	 */
	struct FCustomizationTags
	{
	public:
		TArray<class FName>                                        Tags;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationCategories
	 * Size -> 0x0050
	 */
	struct FCustomizationCategories
	{
	public:
		TMap<class FName, class FName>                             Categories;                                              // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DataTableRowSelection
	 * Size -> 0x0018
	 */
	struct FDataTableRowSelection
	{
	public:
		class UDataTable*                                          DataTable;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RowName;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAddNoneOption;                                          // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8OZM[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.WeaponAbilitySlot
	 * Size -> 0x0040
	 */
	struct FWeaponAbilitySlot
	{
	public:
		struct FDataTableRowSelection                              Ability;                                                 // 0x0000(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TBL_EInventoryItemCondition                                Condition;                                               // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZLNZ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Priority;                                                // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnableSwingWind : 1;                                    // 0x0020(0x0001) BIT_FIELD Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8V09[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InventoryItem;                                           // 0x0030(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttackType*                                         AttackType;                                              // 0x0038(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.WeaponAbilitySlots
	 * Size -> 0x0230
	 */
	struct FWeaponAbilitySlots
	{
	public:
		TArray<struct FWeaponAbilitySlot>                          Slash;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Stab;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Overhead;                                                // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Parry;                                                   // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Special;                                                 // 0x0040(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Shove;                                                   // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          KickLow;                                                 // 0x0060(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          SprintAttack;                                            // 0x0070(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          SprintCharge;                                            // 0x0080(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          SprintShove;                                             // 0x0090(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          SprintJump;                                              // 0x00A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Jab;                                                     // 0x00B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Headbutt;                                                // 0x00C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Throw;                                                   // 0x00D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          QuickThrow;                                              // 0x00E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Flourish;                                                // 0x00F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Emote;                                                   // 0x0100(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          DashLeft;                                                // 0x0110(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          DashRight;                                               // 0x0120(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          DashBack;                                                // 0x0130(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          Jump;                                                    // 0x0140(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          SwitchInventoryItem;                                     // 0x0150(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          LoadItem;                                                // 0x0160(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          UseItem;                                                 // 0x0170(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseFrontKick;                                          // 0x0180(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseRearKick;                                           // 0x0190(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseEmote;                                              // 0x01A0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseSpecial;                                            // 0x01B0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseJump;                                               // 0x01C0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseDashLeft;                                           // 0x01D0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseDashRight;                                          // 0x01E0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseDashBack;                                           // 0x01F0(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          HorseCharge;                                             // 0x0200(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          EmoteHeld;                                               // 0x0210(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAbilitySlot>                          UseBandage;                                              // 0x0220(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationCategoryTags
	 * Size -> 0x0050
	 */
	struct FCustomizationCategoryTags
	{
	public:
		TMap<class FName, struct FCustomizationTags>               Categories;                                              // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationAttributes
	 * Size -> 0x0110
	 */
	struct FCustomizationAttributes
	{
	public:
		struct FCustomizationTags                                  Exclusivity;                                             // 0x0000(0x0010) Edit, NativeAccessSpecifierPublic
		struct FCustomizationCategories                            Categories;                                              // 0x0010(0x0050) Edit, NativeAccessSpecifierPublic
		struct FCustomizationCategoryTags                          CategoryConstraints;                                     // 0x0060(0x0050) Edit, NativeAccessSpecifierPublic
		int                                                        Alignment;                                               // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GroupId;                                                 // 0x00B4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3SY1[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCustomizationCategories                            SortingAttributes;                                       // 0x00C0(0x0050) Edit, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CumulativePlayerSpawnPair
	 * Size -> 0x0010
	 */
	struct FCumulativePlayerSpawnPair
	{
	public:
		class AController*                                         PlayerController;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentRespawnTime;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RespawnWorldTime;                                        // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FCustomizationPreset
	 * Size -> 0x0018
	 */
	struct FReplicated_FCustomizationPreset
	{
	public:
		unsigned char                                              UnknownData_DLQG[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATBLPlayerState*                                     PlayerState;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TBL_EAudioClassType                                        PlayerClass;                                             // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TBL_EFaction                                               PlayerFaction;                                           // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_6M6S[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CustomizationData
	 * Size -> 0x0040
	 */
	struct FCustomizationData
	{
	public:
		TArray<struct FPrimaryAssetId>                             LoadedAssetIds;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPrimaryAssetId>                             PendingAssetIds;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ABGE[0x20];                                  // 0x0020(0x0020) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MeshCustomizationContext
	 * Size -> 0x00F0
	 */
	struct FMeshCustomizationContext
	{
	public:
		class FName                                                MeshName;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkeletalMesh[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bVisible;                                                // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MBA[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                          OverrideMaterials;                                       // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, float>                                   MorphTargetCurves;                                       // 0x0048(0x0050) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KNGW[0x58];                                  // 0x0098(0x0058) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.RandomCustomizationMeshes
	 * Size -> 0x0020
	 */
	struct FRandomCustomizationMeshes
	{
	public:
		class FString                                              Slot;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMeshCustomizationContext>                   Options;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationContext
	 * Size -> 0x0058
	 */
	struct FCustomizationContext
	{
	public:
		unsigned char                                              UnknownData_WWMS[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bHideHair;                                               // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideBeard;                                              // 0x0019(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideEar;                                                // 0x001A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasShoulderPadLeft;                                      // 0x001B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasShoulderPadRight;                                     // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasElbowPadLeft;                                         // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasElbowPadRight;                                        // 0x001E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasCoifMorph;                                            // 0x001F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasLeftFrontArmorPad;                                    // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasRightFrontArmorPad;                                   // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasBackArmorPad;                                         // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasSkirtBone;                                            // 0x0023(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasKneePadLeft;                                          // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasKneePadRight;                                         // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S2N7[0xA];                                   // 0x0026(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMeshCustomizationContext>                   Meshes;                                                  // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		TArray<struct FRandomCustomizationMeshes>                  RandomCustomizationsBySlot;                              // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UURW[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CustomizationTagDefinitionList
	 * Size -> 0x0010
	 */
	struct FCustomizationTagDefinitionList
	{
	public:
		TArray<class FName>                                        Tags;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationSortingTagDefinitionList
	 * Size -> 0x0020
	 */
	struct FCustomizationSortingTagDefinitionList
	{
	public:
		TArray<class FName>                                        Tags;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefaultTag;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        DefaultValue;                                            // 0x0018(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WA8M[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CustomizationGroupData
	 * Size -> 0x0030
	 */
	struct FCustomizationGroupData
	{
	public:
		class FText                                                Title;                                                   // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ParentArrayProperty
	 * Size -> 0x0020
	 */
	struct FParentArrayProperty
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStruct*                                             ParentStruct;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFunction*                                           Function;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PropertyMenuNextItem
	 * Size -> 0x0060
	 */
	struct FPropertyMenuNextItem
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStruct*                                             ParentStruct;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UFunction*                                           Function;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FParentArrayProperty                                ParentArray;                                             // 0x0020(0x0020) NativeAccessSpecifierPublic
		bool                                                       bArrayInner;                                             // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3R0I[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FunctionCall;                                            // 0x0044(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FunctionParam;                                           // 0x004C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ItemIndex;                                               // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReplicationID;                                          // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXD2[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PropertyMenuItem
	 * Size -> 0x0098
	 */
	struct FPropertyMenuItem
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FPropertyMenuNextItem                               NextProperty;                                            // 0x0010(0x0060) NativeAccessSpecifierPublic
		class UStruct*                                             Struct;                                                  // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BaseObj;                                                 // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bArray;                                                  // 0x0080(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuper;                                                  // 0x0081(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCannotMoveRight;                                        // 0x0082(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3EG0[0x5];                                   // 0x0083(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Description;                                             // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PropertyUndoItem
	 * Size -> 0x00A0
	 */
	struct FPropertyUndoItem
	{
	public:
		struct FPropertyMenuItem                                   MenuItem;                                                // 0x0000(0x0098) NativeAccessSpecifierPublic
		int                                                        SelectedPropertyIndex;                                   // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J3VU[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DebugProperty
	 * Size -> 0x0020
	 */
	struct FDebugProperty
	{
	public:
		TArray<struct FPropertyMenuNextItem>                       PropertyStack;                                           // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BaseObj;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllObjects;                                             // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T0ZR[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PushableEndPoint
	 * Size -> 0x0028
	 */
	struct FPushableEndPoint
	{
	public:
		float                                                      SplinePercent;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedModifier;                                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                EndPointName;                                            // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       CinematicEndPoint;                                       // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A751[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_EPushableMovementType
	 * Size -> 0x0018
	 */
	struct FReplicated_EPushableMovementType
	{
	public:
		unsigned char                                              UnknownData_XD35[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TBL_EPushableMovementType                                  Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_A6AI[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FollowerPushables
	 * Size -> 0x0020
	 */
	struct FReplicated_FollowerPushables
	{
	public:
		unsigned char                                              UnknownData_47S6[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_Float_FullPrecision
	 * Size -> 0x0018
	 */
	struct FReplicated_Float_FullPrecision
	{
	public:
		unsigned char                                              UnknownData_MCZH[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7H74[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_UInt8
	 * Size -> 0x0018
	 */
	struct FReplicated_UInt8
	{
	public:
		unsigned char                                              UnknownData_M6N2[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_5JKT[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PushableComponentProperties
	 * Size -> 0x0024
	 */
	struct FPushableComponentProperties
	{
	public:
		TBL_EFaction                                               PushingFaction;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LQT5[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeToCapture;                                           // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToNeutralize;                                        // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECaptureVolumeControlType                              ControllingRule;                                         // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OFUQ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeToAccelerate;                                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToDecelerate;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoNeutralizeTeamCapturePoint;                          // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoActivatePushableAfterReachingEndPoint;               // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5X46[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PushableScoreAwardingInterval;                           // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowBots;                                               // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowNPCs;                                               // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableFollowerPushablesCollision;                        // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DestroyItemsUponCollision;                               // 0x0023(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FPushableComponentProperties
	 * Size -> 0x0038
	 */
	struct FReplicated_FPushableComponentProperties
	{
	public:
		unsigned char                                              UnknownData_SELK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPushableComponentProperties                        Value;                                                   // 0x0010(0x0024) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_FKV6[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.FollowerPushableComponentProperties
	 * Size -> 0x0008
	 */
	struct FFollowerPushableComponentProperties
	{
	public:
		float                                                      FollowAtDistance;                                        // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LagTimeFromLeader;                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FFollowerPushableComponentProperties
	 * Size -> 0x0018
	 */
	struct FReplicated_FFollowerPushableComponentProperties
	{
	public:
		unsigned char                                              UnknownData_GPR5[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFollowerPushableComponentProperties                Value;                                                   // 0x0010(0x0008) NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_FVector
	 * Size -> 0x0020
	 */
	struct FReplicated_FVector
	{
	public:
		unsigned char                                              UnknownData_0EN6[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Value;                                                   // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_CQ9S[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SeatEntry
	 * Size -> 0x0008
	 */
	struct FSeatEntry
	{
	public:
		class AActor*                                              SeatActor;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RandomCarryableSpawnSpec
	 * Size -> 0x0010
	 */
	struct FRandomCarryableSpawnSpec
	{
	public:
		class UClass*                                              Carryable;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AssignmentPercentage;                                    // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9E4M[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ModEntry
	 * Size -> 0x0001
	 */
	struct FModEntry
	{
	public:
		int8_t                                                     Value;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.BaseStatEntry
	 * Size -> 0x0008
	 */
	struct FBaseStatEntry
	{
	public:
		TBL_EStat                                                  Stat;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_715B[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BaseValue;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StatRegeneration
	 * Size -> 0x0020
	 */
	struct FStatRegeneration
	{
	public:
		TBL_EStat                                                  Stat;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PAF9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Speed;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentToRegen;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HSKJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         RegenerationCurve;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TeamDamageToRegen;                                       // 0x0018(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XYVZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DisableRegenInfo
	 * Size -> 0x0008
	 */
	struct FDisableRegenInfo
	{
	public:
		TBL_EStat                                                  Stat;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TF9V[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        ID;                                                      // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HealOverTime
	 * Size -> 0x0028
	 */
	struct FHealOverTime
	{
	public:
		float                                                      Amount;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         Curve;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTime;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverheal;                                               // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6DOB[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TotalHealed;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ATBLPlayerState>                      InsitgatingPlayer;                                       // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AppliedReceivedScoreEvent;                               // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EHealingSource                                         HealingSource;                                           // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KADB[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DebugHealOverTime
	 * Size -> 0x0008
	 */
	struct FDebugHealOverTime
	{
	public:
		float                                                      Amount;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AIEventLog
	 * Size -> 0x0040
	 */
	struct FAIEventLog
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EventName;                                               // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Target;                                                  // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_74K5[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DebugStr;                                                // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_AActorPtr
	 * Size -> 0x0018
	 */
	struct FReplicated_AActorPtr
	{
	public:
		unsigned char                                              UnknownData_OAF1[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_Int32
	 * Size -> 0x0018
	 */
	struct FReplicated_Int32
	{
	public:
		unsigned char                                              UnknownData_1FOJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Value;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_SZVF[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_EInteractableRechargeRule
	 * Size -> 0x0018
	 */
	struct FReplicated_EInteractableRechargeRule
	{
	public:
		unsigned char                                              UnknownData_67E9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TBL_EInteractableRechargeRule                              Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_UEBT[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_EInteractionType
	 * Size -> 0x0018
	 */
	struct FReplicated_EInteractionType
	{
	public:
		unsigned char                                              UnknownData_T1XD[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TBL_EInteractionType                                       Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IV94[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_EFaction
	 * Size -> 0x0018
	 */
	struct FReplicated_EFaction
	{
	public:
		unsigned char                                              UnknownData_HGRS[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TBL_EFaction                                               Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_05KJ[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ActorDisplayInfo
	 * Size -> 0x0060
	 */
	struct FActorDisplayInfo
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		unsigned char                                              Icon[0x28];                                              // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TBL_EFactionOrAttackerDefender                             RelevantTo;                                              // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RYYS[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_EObjectiveState
	 * Size -> 0x0018
	 */
	struct FReplicated_EObjectiveState
	{
	public:
		unsigned char                                              UnknownData_B3AB[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TBL_EObjectiveState                                        Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_A7UN[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FText
	 * Size -> 0x0028
	 */
	struct FReplicated_FText
	{
	public:
		unsigned char                                              UnknownData_VCXH[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Value;                                                   // 0x0010(0x0018) NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.KillClassAchievementEntry
	 * Size -> 0x0028
	 */
	struct FKillClassAchievementEntry
	{
	public:
		int                                                        RequiredKills;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7T4E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Loadout;                                                 // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKC6[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SavedSpatializationZone
	 * Size -> 0x001C
	 */
	struct FSavedSpatializationZone
	{
	public:
		float                                                      MinDotProduct;                                           // 0x0000(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistPct;                                              // 0x0004(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistPct;                                              // 0x0008(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistHz;                                               // 0x000C(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistHz;                                               // 0x0010(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FastPath_MinDistHz;                                      // 0x0014(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FastPath_MaxDistHz;                                      // 0x0018(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLReplicationGraphSpatialNodeSettings
	 * Size -> 0x0020
	 */
	struct FTBLReplicationGraphSpatialNodeSettings
	{
	public:
		float                                                      CellSize;                                                // 0x0000(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SpatialBias;                                             // 0x0004(0x0008) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableDynamicSpatialFrequency;                          // 0x000C(0x0001) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPHV[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSavedSpatializationZone>                    DynamicSpatialFrequencyZones;                            // 0x0010(0x0010) Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpawnWaveSounds
	 * Size -> 0x0038
	 */
	struct FSpawnWaveSounds
	{
	public:
		class UAkAudioEvent*                                       ActiveSound;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       JoinConfirmationSound;                                   // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       JoinDenySound;                                           // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       UnavailableSound;                                        // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       PreparingToSpawnSound;                                   // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       SpawningHasStartedSound;                                 // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               SpawnStartedFaction;                                     // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H86X[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MaterialOverride
	 * Size -> 0x0018
	 */
	struct FMaterialOverride
	{
	public:
		class UMeshComponent*                                      MeshComponent;                                           // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  Material;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaterialIndex;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Depth;                                                   // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MaterialOverrideState
	 * Size -> 0x0018
	 */
	struct FMaterialOverrideState
	{
	public:
		int                                                        Depth;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6B92[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMaterialOverride>                           MaterialOverrides;                                       // 0x0008(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpawnWaveParamOverrides
	 * Size -> 0x0098
	 */
	struct FSpawnWaveParamOverrides
	{
	public:
		class UClass*                                              SpecialSpawnSpec;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      SpecialCarryableSpawns;                                  // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              SpecialRandomCarryableLoadout;                           // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSecondsBeforeSpawningStarts;                    // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0VO0[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SecondsBeforeSpawningStarts;                             // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSecondsJoinableAfterSpawningStarts;             // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TF1I[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SecondsJoinableAfterSpawningStarts;                      // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideMaxPlayerCount;                                 // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SDKM[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        MaxPlayerCount;                                          // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideFireWhenFilled;                                 // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFireWhenFilled;                                         // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideMinimumWaitTimeSeconds;                         // 0x003A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BX5A[0x1];                                   // 0x003B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimumWaitTimeSeconds;                                  // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideForcedSpawn;                                    // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForcedSpawn;                                            // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideAllowBots;                                      // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowBots;                                              // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverridePrespawn;                                       // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPrespawn;                                               // 0x0045(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverridePrespawnTime;                                   // 0x0046(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3P64[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PrespawnTime;                                            // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPlayFromHere;                                         // 0x004C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideFaction;                                        // 0x004D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               Faction;                                                 // 0x004E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartPlayersInRestrictedState;                          // 0x004F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPrivateWave;                                            // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideSpawnWaveSounds;                                // 0x0051(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JTAK[0x6];                                   // 0x0052(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSpawnWaveSounds                                    SpawnWaveSounds;                                         // 0x0058(0x0038) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bForwardSpawn;                                           // 0x0090(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0NHP[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SpawnerSpawnReservation
	 * Size -> 0x0010
	 */
	struct FSpawnerSpawnReservation
	{
	public:
		class AController*                                         Controller;                                              // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ATBLCharacter*                                       Character;                                               // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpawnScoringConfig
	 * Size -> 0x0018
	 */
	struct FSpawnScoringConfig
	{
	public:
		float                                                      MinimumDistance;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumDistancePenalty;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumDistance;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumDistancePenalty;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaleDuration;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaleDurationPenalty;                                    // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpawnComponentData
	 * Size -> 0x0040
	 */
	struct FSpawnComponentData
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HalfHeight;                                              // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PZBU[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SpawnerChild
	 * Size -> 0x0020
	 */
	struct FSpawnerChild
	{
	public:
		class ASpawner*                                            Spawner;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorTag;                                                // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Priority;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Max;                                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHMM[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ThirdPersonCameraParams
	 * Size -> 0x0060
	 */
	struct FThirdPersonCameraParams
	{
	public:
		struct FVector                                             CameraOffset;                                            // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            CameraRotationOffset;                                    // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             CloseCameraOffset;                                       // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchOffset;                                            // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchSpeed;                                             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KnockdownOffset;                                         // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KnockdownSpeed;                                          // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomInSpeed;                                             // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZoomOutSpeed;                                            // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionDepth;                                          // 0x003C(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentCameraOffset;                                     // 0x0040(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePawnControlRotation;                                 // 0x0044(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDefaultCameraRotation;                               // 0x0045(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ROB6[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRotator                                            Rotation;                                                // 0x0048(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bResetCollision;                                         // 0x0054(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_96AT[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachBone;                                              // 0x0058(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementMetrics
	 * Size -> 0x00C8
	 */
	struct FMovementMetrics
	{
	public:
		unsigned char                                              UnknownData_CY2U[0xC0];                                  // 0x0000(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastSmoothCorrectionTime;                                // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSmoothClientPositionTime;                            // 0x00C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DebugMovementAction
	 * Size -> 0x0018
	 */
	struct FDebugMovementAction
	{
	public:
		class UMovementInstance*                                   MovementInstance;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DebugStr;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementActionInitiationParams
	 * Size -> 0x0028
	 */
	struct FMovementActionInitiationParams
	{
	public:
		class UMovementSequence*                                   Sequence;                                                // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           InitialRotation;                                         // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 InitialVelocity;                                         // 0x0014(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ScalingFactorCompressed;                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bExecuteClientFirst : 1;                                 // 0x0021(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QR8E[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SyncStartMovementParams
	 * Size -> 0x0030
	 */
	struct FSyncStartMovementParams
	{
	public:
		struct FMovementActionInitiationParams                     InitParams;                                              // 0x0000(0x0028) NoDestructor, NativeAccessSpecifierPublic
		class UMovementInstance*                                   NewMovement;                                             // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AutorunParams
	 * Size -> 0x0028
	 */
	struct FAutorunParams
	{
	public:
		class USplineComponent*                                    Spline;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InSecondsUntilAutorunStops;                              // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInitialRunIn;                                           // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoStopLocksCamera;                                      // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAutorunStartSpeed                                     StartSpeed;                                              // 0x000E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAutorunMovementMode                                   MovementMode;                                            // 0x000F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAutorunEndOfSplineAction                              EndOfSplineAction;                                       // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V9JS[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             SplineOffset;                                            // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutorunStartTime;                                        // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7NCU[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SyncSpawnAnimationParams
	 * Size -> 0x000C
	 */
	struct FSyncSpawnAnimationParams
	{
	public:
		class FName                                                Animation;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActorYaw;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ServerInitiateAbilityParams
	 * Size -> 0x0018
	 */
	struct FServerInitiateAbilityParams
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InventoryItem;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AttackIndex;                                             // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bPreMovement : 1;                                        // 0x0015(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1JNQ[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HitWorldParams
	 * Size -> 0x0028
	 */
	struct FHitWorldParams
	{
	public:
		struct FVector_NetQuantize                                 Location;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U4PI[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              HitActor;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   PhysMaterial;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBreakableHit : 1;                                       // 0x0024(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSkipAutonomous : 1;                                     // 0x0024(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ICWZ[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ServerHitWorldParams
	 * Size -> 0x0030
	 */
	struct FServerHitWorldParams
	{
	public:
		struct FHitWorldParams                                     HitWorld;                                                // 0x0000(0x0028) NoDestructor, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_37WS[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ServerTrapEventParams
	 * Size -> 0x0018
	 */
	struct FServerTrapEventParams
	{
	public:
		TBL_ETrapEventResult                                       Result;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WOL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             TrapObject;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W1LU[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateHeavyAttack
	 * Size -> 0x0010
	 */
	struct FCombatStateHeavyAttack
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationTimerOvertime;                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsHeavy : 1;                                            // 0x000C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x000C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GH56[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateFire
	 * Size -> 0x0020
	 */
	struct FCombatStateFire
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Offset1P;                                                // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RangedInaccuracy;                                        // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CamPitchAndYaw;                                          // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x001C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6J53[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateCancelAttack
	 * Size -> 0x000C
	 */
	struct FCombatStateCancelAttack
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ClientCombatStateIndex;                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0009(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L938[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateChargeStab
	 * Size -> 0x000C
	 */
	struct FCombatStateChargeStab
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DQR1[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateReleaseStab
	 * Size -> 0x000C
	 */
	struct FCombatStateReleaseStab
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLA3[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CombatStateGetUp
	 * Size -> 0x0010
	 */
	struct FCombatStateGetUp
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Direction;                                               // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x000C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4N0K[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ManualReload
	 * Size -> 0x0008
	 */
	struct FTBL_FManualReload
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S338[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DisableAttackRootMotion
	 * Size -> 0x0008
	 */
	struct FTBL_FDisableAttackRootMotion
	{
	public:
		float                                                      ClientTimeStamp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x0004(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MD1I[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PlayLadderAnimation
	 * Size -> 0x0010
	 */
	struct FTBL_FPlayLadderAnimation
	{
	public:
		class FName                                                Animation;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x000C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QUAV[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MountLadder
	 * Size -> 0x0020
	 */
	struct FTBL_FMountLadder
	{
	public:
		class ALadder*                                             Ladder;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFromTop;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CBWI[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             MountPoint;                                              // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsPreMovement : 1;                                      // 0x001C(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CH6V[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SyncMovementAction
	 * Size -> 0x0008
	 */
	struct FSyncMovementAction
	{
	public:
		TBL_ESyncMovementType                                      Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              QueuedId;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WD8W[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ClientTimeStamp;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CharacterControlInstance
	 * Size -> 0x0018
	 */
	struct FCharacterControlInstance
	{
	public:
		int                                                        ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XSDU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              Stats;                                                   // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ServerCorrection
	 * Size -> 0x0020
	 */
	struct FServerCorrection
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0T9Q[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               Rotation;                                                // 0x0010(0x0010) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementAnimationEvent
	 * Size -> 0x0018
	 */
	struct FMovementAnimationEvent
	{
	public:
		class FName                                                MovementName;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RelativeRot;                                             // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              bEndMovement : 1;                                        // 0x0014(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q889[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FMovementAnimationEvent
	 * Size -> 0x0028
	 */
	struct FReplicated_FMovementAnimationEvent
	{
	public:
		unsigned char                                              UnknownData_LP9O[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FMovementAnimationEvent                             Value;                                                   // 0x0010(0x0018) NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_FAutorunParams
	 * Size -> 0x0038
	 */
	struct FReplicated_FAutorunParams
	{
	public:
		unsigned char                                              UnknownData_XSNP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAutorunParams                                      Value;                                                   // 0x0010(0x0028) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.DebugVelocityGraphEntry
	 * Size -> 0x000C
	 */
	struct FDebugVelocityGraphEntry
	{
	public:
		float                                                      ForwardVelocity;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightVelocity;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bHasMovementActions : 1;                                 // 0x0008(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FXXB[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ServerMoveParams
	 * Size -> 0x0038
	 */
	struct FServerMoveParams
	{
	public:
		float                                                      Timestamp;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Accel;                                                   // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeClientLoc;                                       // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_014X[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent*                                 ClientMovementBase;                                      // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ClientBaseBoneName;                                      // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ClientMovementMode;                                      // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bServerScopedMoveOptimization : 1;                       // 0x0031(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSME[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementData
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FHorseMovementData : public FTableRowBase
	{
	public:
		float                                                      MinSpeed;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SettleSpeed;                                             // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseAccelerationRate;                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDecelerationRate;                                    // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnRate;                                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeSpeed;                                             // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeAcceleration;                                      // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeDeceleration;                                      // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnRateAcceleration;                                    // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnRateDeceleration;                                    // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_60EF[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementScale
	 * Size -> 0x000C
	 */
	struct FHorseMovementScale
	{
	public:
		float                                                      Current;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Target;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpSpeed;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseToCharacterImpactSettings
	 * Size -> 0x0008
	 */
	struct FHorseToCharacterImpactSettings
	{
	public:
		float                                                      StraightImpactAngle;                                     // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlancingImpactAngle;                                     // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseToHorseImpactSettings
	 * Size -> 0x0008
	 */
	struct FHorseToHorseImpactSettings
	{
	public:
		float                                                      StraightImpactAngle;                                     // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SideImpactAngle;                                         // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseToWorldImpactSettings
	 * Size -> 0x0008
	 */
	struct FHorseToWorldImpactSettings
	{
	public:
		float                                                      StraightImpactAngle;                                     // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlancingImpactAngle;                                     // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseImpactSpeedSettings
	 * Size -> 0x000C
	 */
	struct FHorseImpactSpeedSettings
	{
	public:
		float                                                      LowSpeedPercent;                                         // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MediumSpeedPercent;                                      // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HighSpeedPercent;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ImpactTypeRules
	 * Size -> 0x0003
	 */
	struct FImpactTypeRules
	{
	public:
		TBL_ECollisionInteraction                                  LowSpeedInteraction;                                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECollisionInteraction                                  MediumSpeedInteraction;                                  // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECollisionInteraction                                  HighSpeedInteraction;                                    // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseToObjectRules
	 * Size -> 0x0009
	 */
	struct FHorseToObjectRules
	{
	public:
		struct FImpactTypeRules                                    StraightImpact;                                          // 0x0000(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactTypeRules                                    GlancingImpact;                                          // 0x0003(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactTypeRules                                    BumpImpact;                                              // 0x0006(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseToHorseRules
	 * Size -> 0x0009
	 */
	struct FHorseToHorseRules
	{
	public:
		struct FImpactTypeRules                                    FrontImpact;                                             // 0x0000(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactTypeRules                                    SideImpact;                                              // 0x0003(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FImpactTypeRules                                    BackImpact;                                              // 0x0006(0x0003) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseImpactRules
	 * Size -> 0x002D
	 */
	struct FHorseImpactRules
	{
	public:
		struct FHorseToObjectRules                                 HorseToWorldRules;                                       // 0x0000(0x0009) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FHorseToObjectRules                                 HorseToTeamCharacterRules;                               // 0x0009(0x0009) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FHorseToObjectRules                                 HorseToEnemyCharacterRules;                              // 0x0012(0x0009) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FHorseToHorseRules                                  HorseToTeamHorseRules;                                   // 0x001B(0x0009) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		struct FHorseToHorseRules                                  HorseToEnemyHorseRules;                                  // 0x0024(0x0009) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseMovementBlend
	 * Size -> 0x0078
	 */
	struct FHorseMovementBlend
	{
	public:
		struct FHorseMovementData                                  BlendFrom;                                               // 0x0000(0x0038) NativeAccessSpecifierPublic
		struct FHorseMovementData                                  BlendTo;                                                 // 0x0038(0x0038) NativeAccessSpecifierPublic
		float                                                      CurrentTime;                                             // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendTime;                                               // 0x0074(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseMovementInput
	 * Size -> 0x0020
	 */
	struct FHorseMovementInput
	{
	public:
		float                                                      Forward;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strafe;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Turn;                                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EHorseMovementInput                                    Direction;                                               // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NDXM[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ForwardTime;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeTime;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnTime;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DirectionTime;                                           // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseInputState
	 * Size -> 0x001C
	 */
	struct FHorseInputState
	{
	public:
		bool                                                       bIsDown;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KKYX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AxisValue;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDidTap;                                                 // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDidDoubleTap;                                           // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bControlMode;                                            // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SO02[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PressedTime;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PressedState;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReleasedTime;                                            // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OverrideTurnRate
	 * Size -> 0x0008
	 */
	struct FOverrideTurnRate
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnRate;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OverrideForwardSpeed
	 * Size -> 0x0008
	 */
	struct FOverrideForwardSpeed
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelRate;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OverrideMaxSpeed
	 * Size -> 0x0008
	 */
	struct FOverrideMaxSpeed
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ButtonCallout
	 * Size -> 0x0040
	 */
	struct FButtonCallout
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Action;                                                  // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Instructions;                                            // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HUDContainerPoolInfo
	 * Size -> 0x0010
	 */
	struct FHUDContainerPoolInfo
	{
	public:
		class UClass*                                              WidgetClass;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        PoolCount;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XK8P[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.WrappedStreamableHandle
	 * Size -> 0x0010
	 */
	struct FWrappedStreamableHandle
	{
	public:
		unsigned char                                              UnknownData_B7LN[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HudContainerPoolEntry
	 * Size -> 0x0010
	 */
	struct FHudContainerPoolEntry
	{
	public:
		TArray<class UHUDContainerSubWidget*>                      Widgets;                                                 // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.UtilityAI_Curve
	 * Size -> 0x0014
	 */
	struct FUtilityAI_Curve
	{
	public:
		float                                                      M;                                                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      K;                                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      C;                                                       // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      B;                                                       // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EUtilityAI_Curve                                       Type;                                                    // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJXD[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InfluenceMapType
	 * Size -> 0x0030
	 */
	struct FInfluenceMapType
	{
	public:
		class UClass*                                              ActorClassRestriction;                                   // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorTagRestriction;                                     // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EInfluenceMapTypeWeaponRestriction                     WeaponRestriction;                                       // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5S4X[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistanceMin;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceMax;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FUtilityAI_Curve                                    Curve;                                                   // 0x001C(0x0014) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.InputReplayValues
	 * Size -> 0x0048
	 */
	struct FInputReplayValues
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveForward;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveRight;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Turn;                                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookUp;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bSprint;                                                 // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAltAttack;                                              // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIPB[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<unsigned char>                                      Pressed;                                                 // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      Released;                                                // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_AInventoryItemPtr
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_AInventoryItemPtr
	{
	public:
		unsigned char                                              UnknownData_7ZHR[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AInventoryItem*>                              ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.WeaponAbilityGrant
	 * Size -> 0x0010
	 */
	struct FWeaponAbilityGrant
	{
	public:
		class FName                                                AbilityName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InventoryItem;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.KeyPressedParams
	 * Size -> 0x0014
	 */
	struct FKeyPressedParams
	{
	public:
		class FName                                                AbilityName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                KeyBind;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAltAttack;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BFF6[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AimAssistStateData
	 * Size -> 0x002C
	 */
	struct FAimAssistStateData
	{
	public:
		class FName                                                AllowedAimAssistStateName;                               // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OuterMagnetismYaw;                                       // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OuterMagnetismPitch;                                     // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InnerMagnetismYaw;                                       // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InnerMagnetismPitch;                                     // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMomentaryMagnetism;                                  // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPrioritizeCloserTargets;                                // 0x0019(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRequireLookInput;                                       // 0x001A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableFriction;                                         // 0x001B(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFrictionInnerOnly;                                      // 0x001C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScalingDistanceFrictionEnabled;                         // 0x001D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScalingDistanceFrictionEnabledInnerOnly;                // 0x001E(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableInnerBoxForgiveness;                              // 0x001F(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCompareInputSimilarity;                                 // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CWD[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActivationMinDistance;                                   // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActivationMaxDistance;                                   // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AimAssistFrictionData
	 * Size -> 0x0010
	 */
	struct FAimAssistFrictionData
	{
	public:
		float                                                      AssistFrictionPercentageMin;                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AssistFrictionPercentageMax;                             // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AssistFrictionFocusPercentageMin;                        // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AssistFrictionFocusPercentageMax;                        // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AimAssistTargetBoxData
	 * Size -> 0x0020
	 */
	struct FAimAssistTargetBoxData
	{
	public:
		float                                                      TargetOuterBoxScaleXMin;                                 // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetOuterBoxScaleXMax;                                 // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetOuterBoxScaleYMin;                                 // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetOuterBoxScaleYMax;                                 // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetInnerBoxScaleXMin;                                 // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetInnerBoxScaleXMax;                                 // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetInnerBoxScaleYMin;                                 // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetInnerBoxScaleYMax;                                 // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.InventoryAttachPointInfo
	 * Size -> 0x0024
	 */
	struct FInventoryAttachPointInfo
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDoNotAttach1P;                                          // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2IB[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InventoryItemAnimation
	 * Size -> 0x0020
	 */
	struct FInventoryItemAnimation
	{
	public:
		struct FDataTableRowSelection                              AnimationSet;                                            // 0x0000(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TBL_EInventoryItemCondition                                Condition;                                               // 0x0018(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V20Q[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Priority;                                                // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ShieldSettings
	 * Size -> 0x0001
	 */
	struct FShieldSettings
	{
	public:
		bool                                                       bCanStickProjectilesToShield;                            // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PickupItemSettings
	 * Size -> 0x000C
	 */
	struct FPickupItemSettings
	{
	public:
		class FName                                                PickupAnimation;                                         // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickupTime;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.UseItemSettings
	 * Size -> 0x0018
	 */
	struct FUseItemSettings
	{
	public:
		class FName                                                UseAnimation;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseTime;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S9O2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.WeaponGoreSlot
	 * Size -> 0x0020
	 */
	struct FWeaponGoreSlot
	{
	public:
		struct FDataTableRowSelection                              Ability;                                                 // 0x0000(0x0018) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TBL_EHeadGoreAction                                        HeadGoreAction;                                          // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ELimbGoreAction                                        LimbGoreAction;                                          // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EHelmetRemovalPolicy                                   HelmetRemovalPolicy;                                     // 0x001A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V3NL[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ArrowCamOnCollision
	 * Size -> 0x0014
	 */
	struct FArrowCamOnCollision
	{
	public:
		struct FVector                                             CameraOffset;                                            // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpSpeed;                                             // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Timeout;                                                 // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ArrowCamSettings
	 * Size -> 0x0024
	 */
	struct FArrowCamSettings
	{
	public:
		bool                                                       bEnableArrowCam;                                         // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QV1W[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CameraOffset;                                            // 0x0004(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FArrowCamOnCollision                                OnCollision;                                             // 0x0010(0x0014) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.WorldHitAngleRange
	 * Size -> 0x0010
	 */
	struct FWorldHitAngleRange
	{
	public:
		float                                                      Up;                                                      // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Down;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Left;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Right;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AIRanges
	 * Size -> 0x000C
	 */
	struct FAIRanges
	{
	public:
		float                                                      Stab;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Jab;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Other;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.InventoryItemState
	 * Size -> 0x0003
	 */
	struct FInventoryItemState
	{
	public:
		TBL_EEquippedState                                         EquippedState;                                           // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EEquippedHand                                          EquippedHand;                                            // 0x0001(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAttachedState                                         AttachedState;                                           // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FName
	 * Size -> 0x0018
	 */
	struct FReplicated_FName
	{
	public:
		unsigned char                                              UnknownData_0B7F[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.InventoryItemDisplayInfo
	 * Size -> 0x0040
	 */
	struct FInventoryItemDisplayInfo
	{
	public:
		class FText                                                ItemName;                                                // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ItemDescription;                                         // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UTexture2D*                                          WeaponIcon;                                              // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EOnlineStat                                            WeaponStat;                                              // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBXY[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.WeaponMaterialSoundConfig
	 * Size -> 0x0058
	 */
	struct FWeaponMaterialSoundConfig
	{
	public:
		TBL_EWeaponMaterial                                        DefaultBlockMaterial;                                    // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EWeaponMaterial                                        DefaultAttackMaterial;                                   // 0x0001(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Y5N[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, TBL_EWeaponMaterial>                     OverrideMaterialByAttack;                                // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ParryHitLocation
	 * Size -> 0x000C
	 */
	struct FParryHitLocation
	{
	public:
		TBL_EParryHitLocationAdjust                                AdjustLocation;                                          // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FZ8F[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ComponentName;                                           // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FakeClientBlendParams
	 * Size -> 0x004C (FullSize[0x0070] - InheritedSize[0x0024])
	 */
	struct FFakeClientBlendParams : public FBlendParams
	{
	public:
		unsigned char                                              UnknownData_5GRB[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      FakeClient;                                              // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStaticMeshComponent*                                StaticMesh;                                              // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0038(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x0044(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bBlendToStickPoint;                                      // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ECJE[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             StickLocation;                                           // 0x0054(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            StickRotation;                                           // 0x0060(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0XHW[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ResetToTransform
	 * Size -> 0x0018
	 */
	struct FResetToTransform
	{
	public:
		struct FVector_NetQuantize                                 Location;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Rotation;                                                // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FResetToTransform
	 * Size -> 0x0028
	 */
	struct FReplicated_FResetToTransform
	{
	public:
		unsigned char                                              UnknownData_OAH2[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FResetToTransform                                   Value;                                                   // 0x0010(0x0018) NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicateDrop
	 * Size -> 0x0028
	 */
	struct FReplicateDrop
	{
	public:
		struct FVector_NetQuantize                                 Location;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Velocity;                                                // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Impulse;                                                 // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDrop : 1;                                               // 0x0024(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBounceProjectile : 1;                                   // 0x0024(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_77RF[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FReplicateDrop
	 * Size -> 0x0038
	 */
	struct FReplicated_FReplicateDrop
	{
	public:
		unsigned char                                              UnknownData_C9ND[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FReplicateDrop                                      Value;                                                   // 0x0010(0x0028) NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ProjectileHitParams
	 * Size -> 0x0030
	 */
	struct FProjectileHitParams
	{
	public:
		TWeakObjectPtr<class AActor>                               HitActor;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 HitLocation;                                             // 0x0008(0x000C) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           HitNormal;                                               // 0x0014(0x000C) Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UPhysicalMaterial>                    PhysMaterial;                                            // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceTravelled;                                       // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerTime;                                              // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FProjectileHitParams
	 * Size -> 0x0040
	 */
	struct FReplicated_FProjectileHitParams
	{
	public:
		unsigned char                                              UnknownData_IK60[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProjectileHitParams                                Value;                                                   // 0x0010(0x0030) NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.SimulatedProjectile
	 * Size -> 0x0018
	 */
	struct FSimulatedProjectile
	{
	public:
		bool                                                       bWaitingForReplication;                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInventoryItemState                                 PreviousState;                                           // 0x0001(0x0003) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VOCD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              PreviousOwner;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P669[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InvocationInfo
	 * Size -> 0x0020
	 */
	struct FInvocationInfo
	{
	public:
		class AActor*                                              InvocationOwner;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        InvocationAbilitySpec;                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        InvocationId;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ActorName;                                               // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H5Z6[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FInvocationInfo
	 * Size -> 0x0030
	 */
	struct FReplicated_FInvocationInfo
	{
	public:
		unsigned char                                              UnknownData_S6YV[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FInvocationInfo                                     Value;                                                   // 0x0010(0x0020) NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ItemReference
	 * Size -> 0x0004
	 */
	struct FItemReference
	{
	public:
		int                                                        DefId;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.KillHealthAchievementEntry
	 * Size -> 0x0018
	 */
	struct FKillHealthAchievementEntry
	{
	public:
		int                                                        RequiredKills;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RequiredMaxHealth;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2R1Z[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AbilityDescriptionInfo
	 * Size -> 0x0078
	 */
	struct FAbilityDescriptionInfo
	{
	public:
		struct FCanvasIcon                                         Icon;                                                    // 0x0000(0x0018) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                Name;                                                    // 0x0018(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0030(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		class FString                                              InputString;                                             // 0x0048(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FText>                                        AbilityInfoTexts;                                        // 0x0058(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowSelection>                      DescriptorTags;                                          // 0x0068(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LevelStats
	 * Size -> 0x0020
	 */
	struct FLevelStats
	{
	public:
		int                                                        XpStart;                                                 // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        XpEnd;                                                   // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        XpDelta;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5GIH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVirtualGoodReward>                          VirtualGoodRewards;                                      // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PlayerStateSnapshot
	 * Size -> 0x000C
	 */
	struct FPlayerStateSnapshot
	{
	public:
		int                                                        Xp;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Level;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NextLevelXp;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseMovementCorrection
	 * Size -> 0x0008
	 */
	struct FHorseMovementCorrection
	{
	public:
		float                                                      CurrentForwardSpeed;                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentForwardAccel;                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseMovementAction
	 * Size -> 0x0028
	 */
	struct FHorseMovementAction
	{
	public:
		unsigned char                                              UnknownData_C2Z1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CurrentTime;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentStrafe;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentTurnAngle;                                        // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EHorseMovementEndCondition                             EndCondition;                                            // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLXV[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EndValue;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Category;                                                // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnStateChange;                                    // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SITG[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementAction_Boost
	 * Size -> 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
	 */
	struct FHorseMovementAction_Boost : public FHorseMovementAction
	{
	};

	/**
	 * ScriptStruct TBL.HorseMovementAction_StrafeTurn
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FHorseMovementAction_StrafeTurn : public FHorseMovementAction
	{
	public:
		float                                                      Scale;                                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C60N[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementAction_Strafe
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FHorseMovementAction_Strafe : public FHorseMovementAction
	{
	public:
		float                                                      Scale;                                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I739[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementAction_Turn
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FHorseMovementAction_Turn : public FHorseMovementAction
	{
	public:
		float                                                      Scale;                                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GPTG[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementAction_QuickTurn
	 * Size -> 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
	 */
	struct FHorseMovementAction_QuickTurn : public FHorseMovementAction_Turn
	{
	public:
		float                                                      TurnRate;                                                // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ORLO[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementAction_Accelerate
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FHorseMovementAction_Accelerate : public FHorseMovementAction
	{
	public:
		float                                                      Scale;                                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4H7V[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseMovementAction_IncreaseGear
	 * Size -> 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
	 */
	struct FHorseMovementAction_IncreaseGear : public FHorseMovementAction_Accelerate
	{
	};

	/**
	 * ScriptStruct TBL.HorseMovementActionInput
	 * Size -> 0x0020
	 */
	struct FHorseMovementActionInput
	{
	public:
		float                                                      Forward;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strafe;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Turn;                                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeTurn;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForwardBonus;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeBonus;                                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnBonus;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Boost;                                                   // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2QRT[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CharacterInputReplay
	 * Size -> 0x0010
	 */
	struct FCharacterInputReplay
	{
	public:
		TArray<struct FInputReplayValues>                          FrameData;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplaySortKey
	 * Size -> 0x0008
	 */
	struct FReplaySortKey
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Index;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplayObjectiveState
	 * Size -> 0x0020
	 */
	struct FReplayObjectiveState
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ObjectiveType;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FacingAngle;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Actor;                                                   // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplayCharacterState
	 * Size -> 0x0030
	 */
	struct FReplayCharacterState
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FacingAngle;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   AttackType;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeInState;                                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CombatState;                                             // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AttackComboState;                                        // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CharacterClass;                                          // 0x001E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanMoveLeft;                                            // 0x001F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanMoveRight;                                           // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanMoveForward;                                         // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanMoveBackward;                                        // 0x0022(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQEP[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              Actor;                                                   // 0x0028(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AimAssistAttackData
	 * Size -> 0x0018
	 */
	struct FAimAssistAttackData
	{
	public:
		class FName                                                AllowedAimAssistAttackName;                              // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAimAssistStateData>                         AllowedAimAssistStates;                                  // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.KillWithWeaponEntry
	 * Size -> 0x0020
	 */
	struct FKillWithWeaponEntry
	{
	public:
		int                                                        RequiredKills;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M1MD[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      WeaponClasses;                                           // 0x0010(0x0010) Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.KillFromDistAchievementEntry
	 * Size -> 0x0020
	 */
	struct FKillFromDistAchievementEntry
	{
	public:
		int                                                        RequiredKills;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistance;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              ProjectileClass;                                         // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T5Q3[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.KillWithDamageAchievementEntry
	 * Size -> 0x0020
	 */
	struct FKillWithDamageAchievementEntry
	{
	public:
		int                                                        RequiredKills;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9DNY[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DamageTypeName;                                          // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementDebugCapsule
	 * Size -> 0x0040
	 */
	struct FMovementDebugCapsule
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      HalfHeight;                                              // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultColor;                                           // 0x003C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YYKD[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MovementDebugSphere
	 * Size -> 0x0018
	 */
	struct FMovementDebugSphere
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultColor;                                           // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J10T[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MovementDebugBox
	 * Size -> 0x0050
	 */
	struct FMovementDebugBox
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Extents;                                                 // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultColor;                                           // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WKYE[0xF];                                   // 0x0041(0x000F) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MovementDebugLine
	 * Size -> 0x0020
	 */
	struct FMovementDebugLine
	{
	public:
		struct FVector                                             StartPoint;                                              // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndPoint;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultColor;                                           // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HS9K[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DebugDrawShapes
	 * Size -> 0x0040
	 */
	struct FDebugDrawShapes
	{
	public:
		TArray<struct FMovementDebugCapsule>                       DrawCapsules;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMovementDebugSphere>                        DrawSpheres;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMovementDebugBox>                           DrawBoxes;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMovementDebugLine>                          DrawLines;                                               // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.BotSpawnOverridesRow
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FBotSpawnOverridesRow : public FTableRowBase
	{
	public:
		unsigned char                                              OverrideClass[0x28];                                     // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              OriginalClasses[0x10];                                   // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TArray<struct FPrimaryAssetId>                             AgathaCustomizationAssetIds;                             // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPrimaryAssetId>                             MasonCustomizationAssetIds;                              // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AIPersonality
	 * Size -> 0x0258 (FullSize[0x0260] - InheritedSize[0x0008])
	 */
	struct FAIPersonality : public FTableRowBase
	{
	public:
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               Faction;                                                 // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKV7[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FText>                                        AllowedNames;                                            // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDevNamesTextFile;                                    // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowNameReuse;                                         // 0x0021(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WHFR[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              BehaviorSets[0x10];                                      // 0x0022(0x0010) UNKNOWN PROPERTY: ArrayProperty
		bool                                                       bOverrideCombatBehaviorSets;                             // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_093U[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              CombatBehaviorSets[0x10];                                // 0x0039(0x0010) UNKNOWN PROPERTY: ArrayProperty
		unsigned char                                              BlockedBehaviorSet[0x28];                                // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              ThwackedBehaviorSet[0x28];                               // 0x0078(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              ParrySuccessBehaviorSet[0x28];                           // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              RecoveryBehaviorSet[0x28];                               // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              DamageCausedBehaviorSet[0x28];                           // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              IncomingAttackBehaviorSet[0x28];                         // 0x0118(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              EnemyBlockedMyHitBehaviorSet[0x28];                      // 0x0140(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              EnemyEnteredCCBehaviorSet[0x28];                         // 0x0168(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              TookDamageBehaviorSet[0x28];                             // 0x0190(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bOverrideClassAndCustomization;                          // 0x01B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UD7N[0x7];                                   // 0x01B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBotSpawnOverridesRow                               ClassAndCustomizationOverride;                           // 0x01C0(0x0060) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UClass*                                              LoadoutOverride;                                         // 0x0220(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideVariancePattern;                                // 0x0228(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0XZO[0x3];                                   // 0x0229(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ReactionTimeEvents;                                      // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FrameDelayEnemyLocationMovement;                         // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FrameDelayEnemyLocationAttacks;                          // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnLimit;                                               // 0x0238(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlockReactionTurnLimit;                                  // 0x023C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DragTurnLimit;                                           // 0x0240(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracySprintAttack;                                    // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracyHandleIncomingAttack;                            // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracyHandleParrySuccess;                              // 0x024C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracyHandleBlockBreak;                                // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracyCombos;                                          // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccuracyAdvantageJudgement;                              // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TOBS[0x4];                                   // 0x025C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ControllerArray
	 * Size -> 0x0050
	 */
	struct FControllerArray
	{
	public:
		unsigned char                                              Controllers[0x50];                                       // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty

	};

	/**
	 * ScriptStruct TBL.AnimDebugStateMachine
	 * Size -> 0x0030
	 */
	struct FAnimDebugStateMachine
	{
	public:
		class FName                                                CurrentState;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentTime;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6M94[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        PreviousStates;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              PreviousTimes;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.KillAchievementEntry
	 * Size -> 0x0010
	 */
	struct FKillAchievementEntry
	{
	public:
		int                                                        RequiredKills;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZA9[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TracerSocketInfo
	 * Size -> 0x0060
	 */
	struct FTracerSocketInfo
	{
	public:
		TWeakObjectPtr<class UMeshComponent>                       Mesh;                                                    // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VIPD[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          LocalWeaponTransform;                                    // 0x0010(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTransform>                                  CharacterTransforms;                                     // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsValid;                                                // 0x0058(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsWeaponSocket;                                         // 0x0059(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H9O0[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MatchWinEntry
	 * Size -> 0x0028
	 */
	struct FMatchWinEntry
	{
	public:
		class FString                                              Requirement;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EMatchWinType                                          MatchWinType;                                            // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AN4X[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        RequiredWins;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TXIX[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.GameNetworkSettings
	 * Size -> 0x0028
	 */
	struct FGameNetworkSettings
	{
	public:
		int                                                        ClientAuthorativePosition;                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxErrorSquared;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bMovementTimeDiscrepancyDetection;                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bMovementTimeDiscrepancyResolution;                      // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyResolutionThreshold;              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyMaxTimeMargin;                    // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyMinTimeMargin;                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyResolutionRate;                   // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementTimeDiscrepancyDriftAllowance;                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DebugMovementReplication
	 * Size -> 0x001C
	 */
	struct FDebugMovementReplication
	{
	public:
		int                                                        FastSharedCount;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FastSharedFrame;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FastSharedServerFrame;                                   // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQ44[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        FastSharedOutOfOrder;                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FastSharedOutOfOrderFrame;                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ReplicatedMovementFrame;                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ReplicatedMovementCount;                                 // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HorseMovementDebugFrame
	 * Size -> 0x004C
	 */
	struct FHorseMovementDebugFrame
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2G2B[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InputForward;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InputStrafe;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InputTurn;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        InputDirection;                                          // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MovementState;                                           // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForwardSpeed;                                            // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForwardAccel;                                            // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeSpeed;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeAccel;                                             // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnRate;                                                // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnRateAccel;                                           // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementModifier;                                        // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ControlMode;                                             // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        BoostMode;                                               // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetSpeed;                                             // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelerationScale;                                       // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnRateScale;                                           // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AnimDebugMontageInstance
	 * Size -> 0x002C
	 */
	struct FAnimDebugMontageInstance
	{
	public:
		class FName                                                MontageName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SectionPosition;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MontagePosition;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendTime;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsActive;                                               // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLC1[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Section;                                                 // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SectionLength;                                           // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementDebugSyncEvent
	 * Size -> 0x0010
	 */
	struct FMovementDebugSyncEvent
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Category;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementDebugSimualated
	 * Size -> 0x0138
	 */
	struct FMovementDebugSimualated
	{
	public:
		uint32_t                                                   ActorNetGUID;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RootMotion;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             AnimRootMotionVelocity;                                  // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		Engine_EMovementMode                                       MovementMode;                                            // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HK7E[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        CustomMovementMode;                                      // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatState;                                             // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackName;                                              // 0x0048(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementSpeed;                                           // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CannotMove;                                              // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bIsSprinting;                                            // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bIsSprintDecelerating;                                   // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bWantsToSprint;                                          // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            AutorunRotation;                                         // 0x006C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int                                                        bIsAutorunSprinting;                                     // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bIsForcedAutorun;                                        // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bCinematicRestrictedControl;                             // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AutorunMovementMode;                                     // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SplineLocation;                                          // 0x0088(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintSpeed;                                             // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bLockMesh;                                               // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockMeshYaw;                                             // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockMeshTurnLimit;                                       // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSyncMovementTime;                                    // 0x00A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ReplicationGraphFrame;                                   // 0x00A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NextReplicationFrameNum;                                 // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LastRepFrameNum;                                         // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ReplicationPeriodFrame;                                  // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FastPath_NextReplicationFrameNum;                        // 0x00B8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FastPath_LastRepFrameNum;                                // 0x00BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FastPath_ReplicationPeriodFrame;                         // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CullDistance;                                            // 0x00C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDebugMovementReplication                           DebugMovementReplication;                                // 0x00C8(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJ53[0x4];                                   // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAnimDebugMontageInstance>                   MontageInstances;                                        // 0x00E8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDebugDrawShapes                                    DebugDraw;                                               // 0x00F8(0x0040) NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MarkedActorEntryBurnable
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FMarkedActorEntryBurnable : public FMarkedActorEntry
	{
	public:
		TWeakObjectPtr<class UBurnableComponent>                   BurnableComponent;                                       // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementDebugFrame
	 * Size -> 0x0318
	 */
	struct FMovementDebugFrame
	{
	public:
		int                                                        Version;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeltaTime;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FrameCounter;                                            // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldTime;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CharacterLocation;                                       // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PreCorrectionLocation;                                   // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CapsuleRadius;                                           // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CapsuleHalfHeight;                                       // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RootMotion;                                              // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0044(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             PreMoveVelocity;                                         // 0x0050(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AnimRootMotionVelocity;                                  // 0x005C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x0068(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Acceleration;                                            // 0x0074(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bMoveForwardHeld;                                        // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bMoveBackwardHeld;                                       // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bMoveRightHeld;                                          // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bMoveLeftHeld;                                           // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		Engine_EMovementMode                                       MovementMode;                                            // 0x0090(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O6A5[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        CustomMovementMode;                                      // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementSpeed;                                           // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CannotMove;                                              // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatState;                                             // 0x00A4(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeInCombatState;                                       // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CombatStateLength;                                       // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackName;                                              // 0x00B4(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bIsSprinting;                                            // 0x00BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bIsSprintDecelerating;                                   // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bWantsToSprint;                                          // 0x00C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            AutorunRotation;                                         // 0x00C8(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int                                                        bIsAutorunSprinting;                                     // 0x00D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bIsForcedAutorun;                                        // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bCinematicRestrictedControl;                             // 0x00DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AutorunMovementMode;                                     // 0x00E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             SplineLocation;                                          // 0x00E4(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintSpeed;                                             // 0x00F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bLockMesh;                                               // 0x00F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockMeshYaw;                                             // 0x00F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockMeshTurnLimit;                                       // 0x00FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        IsOnLadder;                                              // 0x0100(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastSyncMovementTime;                                    // 0x0104(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ClientAuthorativePosition;                               // 0x0108(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxErrorSquared;                                         // 0x010C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bDidMovementCorrection;                                  // 0x0110(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bIsFirstDualMove;                                        // 0x0114(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bSkipUpdate;                                             // 0x0118(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        bSkipEvaluation;                                         // 0x011C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdditionalTime;                                          // 0x0120(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameNetworkSettings                                GameNetworkSettings;                                     // 0x0124(0x0028) NoDestructor, NativeAccessSpecifierPublic
		struct FDebugTimeDiscrepancyDetection                      DebugTimeDiscrepancyDetection;                           // 0x014C(0x0034) NoDestructor, NativeAccessSpecifierPublic
		float                                                      LastTimeDiscrepancyDetectedTime;                         // 0x0180(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeBetweenDiscrepancyDetected;                          // 0x0184(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StatFPS;                                                 // 0x0188(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StatMS;                                                  // 0x018C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Ping;                                                    // 0x0190(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetSaturatedCount;                                       // 0x0194(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetConnections;                                          // 0x0198(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastFrameTime;                                           // 0x019C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastNetFlushTime;                                        // 0x01A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalRetryReliableCount;                                 // 0x01A4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalRetryReliableBytes;                                 // 0x01A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalRetryUnreliableCount;                               // 0x01AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalRetryUnreliableBytes;                               // 0x01B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalSendFailBytes;                                      // 0x01B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTime;                                         // 0x01B8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageFrameTime;                                        // 0x01BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTimePerMinute;                                // 0x01C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageFrameTimePerMinute;                               // 0x01C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AvailableCpuTimer;                                       // 0x01C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AvailableCpuRatio;                                       // 0x01CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetInPackets;                                            // 0x01D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetInPacketsLost;                                        // 0x01D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetInOutOfOrderPackets;                                  // 0x01D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetOutPackets;                                           // 0x01DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetOutPacketsLost;                                       // 0x01E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetOutOutOfOrderPackets;                                 // 0x01E4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetAutonomousMovementCorrections;                        // 0x01E8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetAutonomousMovementCorrectionBunches;                  // 0x01EC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastAutonomousMovementCorrectionTime;                    // 0x01F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SkippedServerMoves;                                      // 0x01F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SkippedServerMoveFrames;                                 // 0x01F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LastSkippedServerMoveFrame;                              // 0x01FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDebugMovementReplication                           DebugMovementReplication;                                // 0x0200(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      TotalServerTime;                                         // 0x021C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHorseMovementDebugFrame                            HorseMovement;                                           // 0x0220(0x004C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UM2H[0x4];                                   // 0x026C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMovementSequence*                                   MovementSequence;                                        // 0x0270(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnimDebugMontageInstance>                   MontageInstances;                                        // 0x0278(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FAnimDebugMontageInstance>                   MontageInstances1p;                                      // 0x0288(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      PropertyDebuggerNames;                                   // 0x0298(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      PropertyDebuggerValues;                                  // 0x02A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDebugDrawShapes                                    DebugDraw;                                               // 0x02B8(0x0040) NativeAccessSpecifierPublic
		TArray<struct FMovementDebugSyncEvent>                     SyncEvents;                                              // 0x02F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMovementDebugSimualated>                    OtherCharacters;                                         // 0x0308(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementModifier
	 * Size -> 0x0010
	 */
	struct FMovementModifier
	{
	public:
		int                                                        Count;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentModifier;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DGAL[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DisabledRegenArray
	 * Size -> 0x0010
	 */
	struct FDisabledRegenArray
	{
	public:
		TArray<struct FDisableRegenInfo>                           Items;                                                   // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MarkedActorEntryStatsComponent
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FMarkedActorEntryStatsComponent : public FMarkedActorEntry
	{
	public:
		TWeakObjectPtr<class UStatsComponent>                      StatsComponent;                                          // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MarkedActorEntryAmmoRefill
	 * Size -> 0x0058 (FullSize[0x00A0] - InheritedSize[0x0048])
	 */
	struct FMarkedActorEntryAmmoRefill : public FMarkedActorEntry
	{
	public:
		TWeakObjectPtr<class UWeaponRackComponent>                 WeaponRackComponent;                                     // 0x0048(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RefillItems[0x50];                                       // 0x0050(0x0050) UNKNOWN PROPERTY: SetProperty

	};

	/**
	 * ScriptStruct TBL.LevelSet
	 * Size -> 0x0030
	 */
	struct FLevelSet
	{
	public:
		class FText                                                DisplayName;                                             // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                InternalName;                                            // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Levels[0x10];                                            // 0x0020(0x0010) UNKNOWN PROPERTY: ArrayProperty

	};

	/**
	 * ScriptStruct TBL.VolumeSet
	 * Size -> 0x0050
	 */
	struct FVolumeSet
	{
	public:
		unsigned char                                              VolumeSet[0x50];                                         // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty

	};

	/**
	 * ScriptStruct TBL.CombatZoneVolumeSizeParam
	 * Size -> 0x000C
	 */
	struct FCombatZoneVolumeSizeParam
	{
	public:
		float                                                      SizeMultiplier;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayersThreshold;                                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeThreshold;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PlayerCapturePointComponentProperties
	 * Size -> 0x0008
	 */
	struct FPlayerCapturePointComponentProperties
	{
	public:
		float                                                      TimeToCapture;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               AllowedFaction;                                          // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanBeBlockedByOtherFaction;                              // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2WQ[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FPlayerCapturePointComponentProperties
	 * Size -> 0x0018
	 */
	struct FReplicated_FPlayerCapturePointComponentProperties
	{
	public:
		unsigned char                                              UnknownData_7KFI[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerCapturePointComponentProperties              Value;                                                   // 0x0010(0x0008) NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_ATBLCharacterPtr
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_ATBLCharacterPtr
	{
	public:
		unsigned char                                              UnknownData_E9HX[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ATBLCharacter*>                               ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_PushableEndPoints
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_PushableEndPoints
	{
	public:
		unsigned char                                              UnknownData_DR97[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPushableEndPoint>                           ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.PodiumLocationData
	 * Size -> 0x0030
	 */
	struct FPodiumLocationData
	{
	public:
		struct FTransform                                          Transform;                                               // 0x0000(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_FModEntry
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_FModEntry
	{
	public:
		unsigned char                                              UnknownData_TNIJ[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FModEntry>                                   ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.CharacterDisplayInfo
	 * Size -> 0x0078
	 */
	struct FCharacterDisplayInfo
	{
	public:
		class UTexture2D*                                          Icon;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          CharacterImageLarge;                                     // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          TeamRedCharacterImageSmall;                              // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          TeamBlueCharacterImageSmall;                             // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ClassName;                                               // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                ClassDescription;                                        // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                ClassRole;                                               // 0x0050(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int                                                        ClassHealth;                                             // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ClassSpeed;                                              // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ClassSpecial;                                            // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDisabledInGame;                                       // 0x0074(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EOnlineStat                                            CharacterStat;                                           // 0x0075(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1IHD[0x2];                                   // 0x0076(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.LockMeshRotationState
	 * Size -> 0x0018
	 */
	struct FLockMeshRotationState
	{
	public:
		unsigned char                                              Count;                                                   // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KLNF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Yaw;                                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnLimit;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdating;                                               // 0x000D(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8HSK[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EndTime;                                                 // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentYaw;                                              // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpecialItemReplicated
	 * Size -> 0x0002
	 */
	struct FSpecialItemReplicated
	{
	public:
		unsigned char                                              Charge;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ESpecialItemChargeType                                 ChargeType;                                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Camera1PBlendParams
	 * Size -> 0x0018 (FullSize[0x003C] - InheritedSize[0x0024])
	 */
	struct FCamera1PBlendParams : public FBlendParams
	{
	public:
		struct FVector                                             StartLocation;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PhysMatFallingDamageMultiplier
	 * Size -> 0x0010
	 */
	struct FPhysMatFallingDamageMultiplier
	{
	public:
		class UPhysicalMaterial*                                   PhysMaterial;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        DamageMultiplier;                                        // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EWUQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ArmHitInfo
	 * Size -> 0x0014
	 */
	struct FArmHitInfo
	{
	public:
		class FName                                                HitBone;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LastSightCheckInfo
	 * Size -> 0x0028
	 */
	struct FLastSightCheckInfo
	{
	public:
		TWeakObjectPtr<class AActor>                               Target;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Timestamp;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TestedLocation;                                          // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ObserverLocation;                                        // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bResult;                                                 // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6FS[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.LockMeshBlendOutParams
	 * Size -> 0x0030 (FullSize[0x0054] - InheritedSize[0x0024])
	 */
	struct FLockMeshBlendOutParams : public FBlendParams
	{
	public:
		struct FRotator                                            StartRotation;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            TargetRotation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            StartRotation1P;                                         // 0x003C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            TargetRotation1P;                                        // 0x0048(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MountRootBlendParams
	 * Size -> 0x0044 (FullSize[0x0068] - InheritedSize[0x0024])
	 */
	struct FMountRootBlendParams : public FBlendParams
	{
	public:
		struct FVector                                             StartMeshLoc;                                            // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetMeshLoc;                                           // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartMesh1PLoc;                                          // 0x003C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetMesh1PLoc;                                         // 0x0048(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PSZS[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AHorse*                                              Horse;                                                   // 0x0058(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEventTriggered;                                         // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SetOnHorse;                                              // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2ZZ[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TutorialLocationBlendParams
	 * Size -> 0x0018 (FullSize[0x003C] - InheritedSize[0x0024])
	 */
	struct FTutorialLocationBlendParams : public FBlendParams
	{
	public:
		struct FVector                                             StartLocation;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TutorialLookAtParams
	 * Size -> 0x0020
	 */
	struct FTutorialLookAtParams
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpSpeed;                                             // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsActive : 1;                                           // 0x0018(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3MQR[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HorseLookAtParams
	 * Size -> 0x0018
	 */
	struct FHorseLookAtParams
	{
	public:
		float                                                      HorseOrientationTime;                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorseOrientationDelay;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         CameraSpeedScale;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpSpeed;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsActive : 1;                                           // 0x0014(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TTN8[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AttachedRagdoll
	 * Size -> 0x0030
	 */
	struct FAttachedRagdoll
	{
	public:
		class AActor*                                              AttachToActor;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     AttachToComponent;                                       // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AttachLocation;                                          // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachBone;                                              // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAbsoluteLocation;                                       // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J5D8[0xB];                                   // 0x0025(0x000B) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AttachRagdollBlendParams
	 * Size -> 0x0018 (FullSize[0x003C] - InheritedSize[0x0024])
	 */
	struct FAttachRagdollBlendParams : public FBlendParams
	{
	public:
		struct FVector                                             StartLocation;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ParryEventState
	 * Size -> 0x0070
	 */
	struct FParryEventState
	{
	public:
		class FName                                                AttackerAttackName;                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AttackerInventoryItemClass;                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      AttackerInventoryItem;                                   // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackerPostCombatState;                                 // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefenderAttackName;                                      // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefenderInventoryItemClass;                              // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      DefenderInventoryItem;                                   // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefenderPostCombatState;                                 // 0x0038(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlVariant                                   DefenderCrowdControlVariant;                             // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XUYX[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ImpactPoint;                                             // 0x0044(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0050(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x005C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ParryAttackID;                                           // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAttackerBlockedPolicy                                 AttackerBlockedPolicy;                                   // 0x006C(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EDefenderBlockedPolicy                                 DefenderBlockedPolicy;                                   // 0x006D(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsAltAttack : 1;                                        // 0x006E(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefenderDisarmed : 1;                                   // 0x006E(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bProjectileAttack : 1;                                   // 0x006E(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsCounterSuccess : 1;                                   // 0x006E(0x0001) BIT_FIELD BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTakeDamage : 1;                                         // 0x006E(0x0001) BIT_FIELD RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSameAttackClash : 1;                                    // 0x006E(0x0001) BIT_FIELD RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bWasBlockedWithParryForgivenessWindow : 1;               // 0x006E(0x0001) BIT_FIELD RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0S1X[0x1];                                   // 0x006F(0x0001) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InteractableSettings
	 * Size -> 0x0020
	 */
	struct FInteractableSettings
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ThirdPersonDistance;                                     // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DoLargeTrace;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1TJ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LargeTraceRadius;                                        // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SweepDistance;                                           // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ThirdPersonSweepDistance;                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseableActorDistance;                                    // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ThirdPersonUesableActorDistance;                         // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AttachedSmoothing
	 * Size -> 0x000C
	 */
	struct FAttachedSmoothing
	{
	public:
		bool                                                       bNeedsSmoothing;                                         // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ALP7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RotationTargetYaw;                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationInterpSpeed;                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.VOTracker
	 * Size -> 0x0030
	 */
	struct FVOTracker
	{
	public:
		unsigned char                                              UnknownData_CMDQ[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ComboMontageRule
	 * Size -> 0x0020
	 */
	struct FComboMontageRule
	{
	public:
		class FName                                                PreviousAttack;                                          // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PreviousComboState;                                      // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextAttack;                                              // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NextComboState;                                          // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FootStepSounds
	 * Size -> 0x0050
	 */
	struct FFootStepSounds
	{
	public:
		class UCurveFloat*                                         LeftFootCurve;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         RightFootCurve;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LeftFootCurveName;                                       // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RightFootCurveName;                                      // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FootStepTrigger;                                         // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchTriggerScale;                                      // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSpeed;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimerSpeed_Default;                                      // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimerSpeed_Sprint;                                       // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimerSpeed_Crouch;                                       // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeftCurveValue;                                          // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RightCurveValue;                                         // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Timer;                                                   // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimerSpeed;                                              // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LeftFootStepTriggered;                                   // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RightFootStepTriggered;                                  // 0x0049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M388[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HeavyAttackParams
	 * Size -> 0x0028
	 */
	struct FHeavyAttackParams
	{
	public:
		class FName                                                LightAttack;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HeavyAttack;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LightWindupSection;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HeavyWindupSection;                                      // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CombinedWindupTime;                                      // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverrideLength;                                          // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AttackMontage
	 * Size -> 0x01D8
	 */
	struct FAttackMontage
	{
	public:
		class UAnimationSet*                                       AnimSet;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationSet*                                       AnimSet3p;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MontageName;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        Montage;                                                 // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage*                                        Montage3p;                                               // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackName;                                              // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatState;                                             // 0x0034(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ComboState;                                              // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WC0U[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAttackInfo                                         CurrentAttack;                                           // 0x0048(0x0108) ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bIsHeavy;                                                // 0x0150(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6OL0[0x3];                                   // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                StartingSection;                                         // 0x0154(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StartingCombatState;                                     // 0x015C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CurrentSection;                                          // 0x0164(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentSectionLength;                                    // 0x016C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SectionStartTime;                                        // 0x0170(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TracerStartTime;                                         // 0x0174(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TracerEndTime;                                           // 0x0178(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UGGU[0x4];                                   // 0x017C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         PlayRateCurve;                                           // 0x0180(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHeavyAttackParams                                  HeavyParams;                                             // 0x0188(0x0028) NoDestructor, NativeAccessSpecifierPublic
		class FName                                                PrevAttackName;                                          // 0x01B0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PrevCombatState;                                         // 0x01B8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PrevComboState;                                          // 0x01C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseWindupMontage;                                       // 0x01C8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasRootMotion;                                          // 0x01C9(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_687G[0x6];                                   // 0x01CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage*                                        FeintBlendOutMontage;                                    // 0x01D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PeasantMontage
	 * Size -> 0x0010
	 */
	struct FPeasantMontage
	{
	public:
		class FName                                                MontageName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SectionName;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AnimDamageParams
	 * Size -> 0x0038
	 */
	struct FAnimDamageParams
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitDirectionName;                                        // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitBone;                                                 // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EConditionType                                         ApplyCondition;                                          // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W2VT[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      InventoryItem;                                           // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilityName;                                             // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CombatStateMontage
	 * Size -> 0x0010
	 */
	struct FCombatStateMontage
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatState;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ChaseMechanicParams
	 * Size -> 0x0020
	 */
	struct FChaseMechanicParams
	{
	public:
		float                                                      MaxDistance;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookingAtEnemyYaw;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookingAtEnemyPitch;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnemyLookingAwayYaw;                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChaseAcceleration;                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChaseDeceleration;                                       // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxChaseBonus;                                           // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChaseDelay;                                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LandingSlowDownParams
	 * Size -> 0x0020
	 */
	struct FLandingSlowDownParams
	{
	public:
		float                                                      SlowDownTime;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PercentDecrease;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         CurveAsset;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      bIsActive;                                               // 0x0010(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentTime;                                             // 0x0014(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        StatInstanceId;                                          // 0x0018(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1UA0[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SprintTurnParams
	 * Size -> 0x0028
	 */
	struct FSprintTurnParams
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9A27[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         TurnRateCurve;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxAngle;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deceleration;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DecelerationTurnLimit;                                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5FYM[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         SprintTurnCooldown;                                      // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpawnState
	 * Size -> 0x0040
	 */
	struct FSpawnState
	{
	public:
		struct FTransform                                          StartTransform;                                          // 0x0000(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                Animation;                                               // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTimeStamp;                                          // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StateTime;                                               // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SprintState
	 * Size -> 0x0054
	 */
	struct FSprintState
	{
	public:
		struct FRotator                                            SprintDirection;                                         // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                StateName;                                               // 0x000C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StateStartTime;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintSpeed;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TurnRateId;                                              // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TurnRateId_SprintTurn;                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnLimit;                                               // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintStopSpeed;                                         // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintStopTime;                                          // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SprintStopCombatState;                                   // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkipAcceleration;                                       // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UNMF[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SprintAttackTime;                                        // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintTurnTime;                                          // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSprintTurnToSprint;                                     // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SCTO[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TimeBelowMinSpeed;                                       // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintTurnWeight;                                        // 0x004C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintTurnDirection;                                     // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpawnBoost
	 * Size -> 0x0028
	 */
	struct FSpawnBoost
	{
	public:
		float                                                      Bonus;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentBonus;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnTime;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintTime;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deceleration;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimerInterval;                                           // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnemyDistance;                                           // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnemyTime;                                               // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FarFromEnemyTime;                                        // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bEnabled : 1;                                            // 0x0024(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4G1C[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ReplicatedSprintTurn
	 * Size -> 0x0002
	 */
	struct FReplicatedSprintTurn
	{
	public:
		unsigned char                                              TurnWeight;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TurnDirection;                                           // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FReplicatedSprintTurn
	 * Size -> 0x0018
	 */
	struct FReplicated_FReplicatedSprintTurn
	{
	public:
		unsigned char                                              UnknownData_HPGL[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FReplicatedSprintTurn                               Value;                                                   // 0x0010(0x0002) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_37DJ[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.LadderState
	 * Size -> 0x0070
	 */
	struct FLadderState
	{
	public:
		class ALadder*                                             Ladder;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        HorizLockId;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PlayingAnimation;                                        // 0x000C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientTimeStamp;                                         // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFromTop;                                                // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRightHand;                                              // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDirectionUp;                                            // 0x001A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceUpNextAnimation;                                   // 0x001B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreviousRightHand;                                      // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMounting;                                               // 0x001D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDismounting;                                            // 0x001E(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLadderAnimationEnded;                                   // 0x001F(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          StartTransform;                                          // 0x0020(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             PrevRootMotionLoc;                                       // 0x0050(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            PrevRootMotionRot;                                       // 0x005C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class ALadder*                                             DebugLadder;                                             // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LadderRootMotionBlend
	 * Size -> 0x006C (FullSize[0x0090] - InheritedSize[0x0024])
	 */
	struct FLadderRootMotionBlend : public FBlendParams
	{
	public:
		unsigned char                                              UnknownData_6ZJY[0xC];                                   // 0x0024(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          StartTransform;                                          // 0x0030(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          TargetTransform;                                         // 0x0060(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LadderRotationBlend
	 * Size -> 0x0018 (FullSize[0x003C] - InheritedSize[0x0024])
	 */
	struct FLadderRotationBlend : public FBlendParams
	{
	public:
		struct FRotator                                            StartRotation;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            TargetRotation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_EMovementDirection
	 * Size -> 0x0018
	 */
	struct FReplicated_EMovementDirection
	{
	public:
		unsigned char                                              UnknownData_T08H[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TBL_EMovementDirection                                     Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_ZMV3[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AimPenalty
	 * Size -> 0x0020
	 */
	struct FAimPenalty
	{
	public:
		class FName                                                DebugName;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Penalty;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentTime;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BasePenalty;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTime;                                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         Curve;                                                   // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DismountBlendParams
	 * Size -> 0x0030 (FullSize[0x0054] - InheritedSize[0x0024])
	 */
	struct FDismountBlendParams : public FBlendParams
	{
	public:
		struct FVector                                             StartLocation;                                           // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartRelative1P;                                         // 0x003C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetRelative1P;                                        // 0x0048(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLChatStyle
	 * Size -> 0x0908 (FullSize[0x0910] - InheritedSize[0x0008])
	 */
	struct FTBLChatStyle : public FSlateWidgetStyle
	{
	public:
		struct FEditableTextBoxStyle                               TextEntryStyle;                                          // 0x0008(0x07F8) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         BackingBrush;                                            // 0x0800(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateColor                                         BoxBorderColor;                                          // 0x0888(0x0028) Edit, NativeAccessSpecifierPublic
		struct FSlateColor                                         TextColor;                                               // 0x08B0(0x0028) Edit, NativeAccessSpecifierPublic
		struct FSlateSound                                         RxMessgeSound;                                           // 0x08D8(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSlateSound                                         TxMessgeSound;                                           // 0x08F0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ItemHeight;                                              // 0x0908(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GBAB[0x4];                                   // 0x090C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ScreenStack
	 * Size -> 0x0018
	 */
	struct FScreenStack
	{
	public:
		class UOverlay*                                            MenuOverlay;                                             // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UTBLScreenWidget*>                            Screens;                                                 // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DialogHandle
	 * Size -> 0x0004
	 */
	struct FDialogHandle
	{
	public:
		unsigned char                                              UnknownData_EIWH[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PerMinuteBucket
	 * Size -> 0x0028
	 */
	struct FPerMinuteBucket
	{
	public:
		int                                                        TimeMinutes;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageFrameTime;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTime;                                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZNE6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    AvailablePhysicalMemory;                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    UsedVirtualMemory;                                       // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProcessUptime;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMMM[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLHardwareInfo
	 * Size -> 0x0068
	 */
	struct FTBLHardwareInfo
	{
	public:
		int                                                        TotalPhysicalGBRam;                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumberOfCoresPhysical;                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumberOfCoresLogical;                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HN7N[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RHIAdapterName;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RHIVendorId;                                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OMF6[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    DedicatedVideoMemory;                                    // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    DedicatedSystemMemory;                                   // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    SharedSystemMemory;                                      // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CPUVendor;                                               // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CPUBrand;                                                // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CPUInfo;                                                 // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_38D0[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CheckedProcess
	 * Size -> 0x0008
	 */
	struct FCheckedProcess
	{
	public:
		int                                                        Attempted;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Succeeded;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Checkpoints
	 * Size -> 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
	 */
	struct FCheckpoints : public FAnalyticsEvent_Client
	{
	public:
		struct FCheckedProcess                                     PreLoadGameMap;                                          // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCheckedProcess                                     PlayGame;                                                // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCheckedProcess                                     NormalExit;                                              // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int                                                        LoginAttempt;                                            // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LoginSucceeded;                                          // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LoginError;                                              // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IMVX[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AsyncGlobals
	 * Size -> 0x0050
	 */
	struct FAsyncGlobals
	{
	public:
		unsigned char                                              UnknownData_KUMQ[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PremergedMesh
	 * Size -> 0x0008
	 */
	struct FPremergedMesh
	{
	public:
		class USkeletalMesh*                                       Mesh;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.WwiseQuery
	 * Size -> 0x0030
	 */
	struct FWwiseQuery
	{
	public:
		class FName                                                RTPC;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PVX8[0xC];                                   // 0x0008(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        PlayingID;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OutValue;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UMMI[0x14];                                  // 0x001C(0x0014) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AbilityInvocationDebugInfo
	 * Size -> 0x0020
	 */
	struct FAbilityInvocationDebugInfo
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      Annotations;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActivationMethodFinished;                               // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTargetMethodFinished;                                   // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BXZ6[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PropertyDebugInfo
	 * Size -> 0x0020
	 */
	struct FPropertyDebugInfo
	{
	public:
		class FString                                              PropertyName;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PropertyValue;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PhysicsDebugShape
	 * Size -> 0x0024
	 */
	struct FPhysicsDebugShape
	{
	public:
		struct FVector_NetQuantize                                 Location;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Rotation;                                                // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Size;                                                    // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.BonesDebugInfo
	 * Size -> 0x0010
	 */
	struct FBonesDebugInfo
	{
	public:
		struct FVector_NetQuantize                                 Location;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ParentBone;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplicationDebugInfo
	 * Size -> 0x0020
	 */
	struct FReplicationDebugInfo
	{
	public:
		float                                                      NetDriverTime;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastNeedsReplicationTime;                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NeedsReplicationCount;                                   // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MoveSameLocationCount;                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MoveSameVelocityCount;                                   // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaxTimeCount;                                            // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ReplicationKeyChangeCount;                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MoveCheckCount;                                          // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RPCDebugClientRPC
	 * Size -> 0x0010
	 */
	struct FRPCDebugClientRPC
	{
	public:
		int                                                        Sequence;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FunctionName;                                            // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RPCDebugInfo
	 * Size -> 0x0040
	 */
	struct FRPCDebugInfo
	{
	public:
		TArray<struct FRPCDebugClientRPC>                          ClientRPCs;                                              // 0x0000(0x0010) ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int>                                                QueuedRPCs;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LastReliableRPCError;                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Channel;                                                 // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        InReliable;                                              // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        OutReliable;                                             // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3TKX[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DesyncDebugInfo
	 * Size -> 0x0378
	 */
	struct FDesyncDebugInfo
	{
	public:
		TArray<class FString>                                      CombatStateDebugInfo;                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      InventoryDebugInfo;                                      // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMovementDebugFrame                                 MovementDebugFrame;                                      // 0x0020(0x0318) NativeAccessSpecifierPublic
		struct FRPCDebugInfo                                       RPCDebugInfo;                                            // 0x0338(0x0040) NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PhysicsDebugInfo
	 * Size -> 0x0038
	 */
	struct FPhysicsDebugInfo
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPhysicsDebugShape>                          Boxes;                                                   // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPhysicsDebugShape>                          Capsules;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FPhysicsDebugShape>                          Spheres;                                                 // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ReplayPath
	 * Size -> 0x0010
	 */
	struct FReplayPath
	{
	public:
		TArray<struct FVector>                                     Points;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ContainerRef
	 * Size -> 0x0008
	 */
	struct FContainerRef
	{
	public:
		TBL_EInstanceContainerType                                 Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MF0W[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        ID;                                                      // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.GoreHeadParams
	 * Size -> 0x0010
	 */
	struct FGoreHeadParams
	{
	public:
		class ATBLPlayerState*                                     PlayerState;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DeadCharacterId;                                         // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ILY[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.InventoryItemSoundPair
	 * Size -> 0x0018
	 */
	struct FInventoryItemSoundPair
	{
	public:
		class FName                                                SwitchKey;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AKSwitchState;                                           // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DropItemParams
	 * Size -> 0x001C
	 */
	struct FDropItemParams
	{
	public:
		struct FVector                                             Velocity;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Impulse;                                                 // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bBounceProjectile : 1;                                   // 0x0018(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bOnKilled : 1;                                           // 0x0018(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VK82[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ItemTickState
	 * Size -> 0x0002
	 */
	struct FItemTickState
	{
	public:
		bool                                                       bIsAnimating;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsProjectile;                                           // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.InventorySpeedPenalty
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FInventorySpeedPenalty : public FTableRowBase
	{
	public:
		float                                                      Light;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Medium;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Heavy;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SuperHeavy;                                              // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LightCarryable;                                          // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MediumCarryable;                                         // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HeavyCarryable;                                          // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XZ2[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_ALadder
	 * Size -> 0x0018
	 */
	struct FReplicated_ALadder
	{
	public:
		unsigned char                                              UnknownData_AQX1[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ALadder*                                             Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.TracerPoint
	 * Size -> 0x0018
	 */
	struct FTracerPoint
	{
	public:
		struct FVector                                             StartPoint;                                              // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndPoint;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MovementModifierData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FMovementModifierData : public FTableRowBase
	{
	public:
		class UCurveFloat*                                         ModifierCurve;                                           // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinValue;                                                // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Acceleration;                                            // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deceleration;                                            // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableSprint;                                          // 0x0024(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I4G2[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_AActor
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_AActor
	{
	public:
		unsigned char                                              UnknownData_7SRK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ObjectByClass
	 * Size -> 0x0008
	 */
	struct FObjectByClass
	{
	public:
		TWeakObjectPtr<class UObject>                              Object;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.VirtualGoodPrice
	 * Size -> 0x0004
	 */
	struct FVirtualGoodPrice
	{
	public:
		int                                                        Amount;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TitleProgressionRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTitleProgressionRow : public FTableRowBase
	{
	public:
		int                                                        MinLevel;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ERankTitleFormat                                       RankFormat;                                              // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BNSZ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DelegateHandleCombatZoneWrapper
	 * Size -> 0x0008
	 */
	struct FDelegateHandleCombatZoneWrapper
	{
	public:
		unsigned char                                              UnknownData_ES96[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PerksDataTable
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FPerksDataTable : public FTableRowBase
	{
	public:
		class FText                                                DisplayName;                                             // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TBL_EDisplayPerk                                           DisplayLocation;                                         // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L1KP[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UTexture2D*                                          Icon;                                                    // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D9BO[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      Subclasses;                                              // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EquippedPersonality
	 * Size -> 0x0003
	 */
	struct FEquippedPersonality
	{
	public:
		TBL_EAudioClassType                                        ClassType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               Faction;                                                 // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAudioPersonalityType                                  PersonalityType;                                         // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FoundValue
	 * Size -> 0x0010
	 */
	struct FFoundValue
	{
	public:
		unsigned char                                              UnknownData_ETD1[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.QueuedMovementState
	 * Size -> 0x0008
	 */
	struct FQueuedMovementState
	{
	public:
		TBL_EPushableComponentMovementState                        MovementState;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GI6Q[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExpiryTime;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomFastArraySerializer
	 * Size -> 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
	 */
	struct FCustomFastArraySerializer : public FFastArraySerializer
	{
	};

	/**
	 * ScriptStruct TBL.NormalizedReward
	 * Size -> 0x0010
	 */
	struct FNormalizedReward
	{
	public:
		float                                                      MinRoll;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRoll;                                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RowName;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RewardTableRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FRewardTableRow : public FTableRowBase
	{
	public:
		float                                                      Weight;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FItemReference                                      Item;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class UDataTable*                                          Table;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SingleTargetTrace
	 * Size -> 0x0020
	 */
	struct FSingleTargetTrace
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GSTF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<Engine_ECollisionChannel>                           TargetObjectTypes;                                       // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreTeammates;                                        // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5RQM[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CharacterInfo
	 * Size -> 0x0010
	 */
	struct FCharacterInfo
	{
	public:
		TBL_EFaction                                               Faction;                                                 // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DW60[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpawnSequenceProperties
	 * Size -> 0x00C8
	 */
	struct FSpawnSequenceProperties
	{
	public:
		TArray<class ASpawner*>                                    Spawners;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               Faction;                                                 // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F00M[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        SimultaneousWaves;                                       // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SecondsBetweenWaves;                                     // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideWaveTimingToHalfOfSecondsBetweenWaves;          // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysKeepOneWaveActive;                                // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoop;                                                   // 0x001E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFastFirstSpawn;                                         // 0x001F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSpawnWaveParamOverrides                            SpawnWaveParams;                                         // 0x0020(0x0098) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UCurveFloat*                                         SecondsBetweenWavesPlayerCountBonus;                     // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         MaxPlayersPlayerCountBonus;                              // 0x00C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.BroadcastKilledParams
	 * Size -> 0x0014
	 */
	struct FBroadcastKilledParams
	{
	public:
		struct FVector_NetQuantize                                 ImpactPoint;                                             // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RandomSeed;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EKillReason                                            KillReason;                                              // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DeadCharacterId;                                         // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAttachToProjectile : 1;                                 // 0x0012(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3G5L[0x1];                                   // 0x0013(0x0001) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.BroadcastDamageParams
	 * Size -> 0x0118
	 */
	struct FBroadcastDamageParams
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4EFP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageSource*                                       DamageSource;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageCauser;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageInstigator;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FActionContext                                      Context;                                                 // 0x0020(0x00E0) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bKillingBlow;                                            // 0x0100(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EKillReason                                            KillReason;                                              // 0x0101(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuicide;                                                // 0x0102(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBackStab;                                               // 0x0103(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnteredKillVolume;                                      // 0x0104(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSwitchedTeamsInLoadoutVolume;                           // 0x0105(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoseLimbCheat;                                          // 0x0106(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I859[0x1];                                   // 0x0107(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      InventoryItemOverride;                                   // 0x0108(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ELocationBasedDamage                                   LocationBasedDamage;                                     // 0x0110(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQJY[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StatsComponentDataTable
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FStatsComponentDataTable : public FTableRowBase
	{
	public:
		float                                                      MovementSpeed;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintBaseSpeed;                                         // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintMaxSpeed;                                          // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintStartTime;                                         // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintStartMinTime;                                      // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintTime;                                              // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SprintDeceleration;                                      // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnSpeedBoost;                                         // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnBoostTime;                                          // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnBoostSprintTime;                                    // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnBoostDeceleration;                                  // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnBoostEnemyDistance;                                 // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnBoostEnemyTime;                                     // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DownedMovementSpeed;                                     // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DownedSprintSpeed;                                       // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Health;                                                  // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealthRegen;                                             // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Overheal;                                                // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealingModifier;                                         // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stamina;                                                 // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StaminaRegen;                                            // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashTime;                                                // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeAccelerationModifier;                              // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArmourRating;                                            // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpecialItemMaxCharge;                                    // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FNOV[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AchievementUpdateEntry
	 * Size -> 0x0018
	 */
	struct FAchievementUpdateEntry
	{
	public:
		unsigned char                                              UnknownData_BF1K[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLAchievementEntry
	 * Size -> 0x0030
	 */
	struct FTBLAchievementEntry
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     Progress;                                                // 0x0020(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     IncrementBy;                                             // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLAchievementLibrary
	 * Size -> 0x0010
	 */
	struct FTBLAchievementLibrary
	{
	public:
		TArray<struct FTBLAchievementEntry>                        Entries;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CombatAiAttackParams
	 * Size -> 0x0018
	 */
	struct FCombatAiAttackParams
	{
	public:
		TArray<class FName>                                        AllowedAttacks;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAiAttackMoveMode                                      AttackMoveMode;                                          // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAiComboMode                                           ComboMode;                                               // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P4ND[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.VarianceEngageParams
	 * Size -> 0x0020
	 */
	struct FVarianceEngageParams
	{
	public:
		bool                                                       bInitialized;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EVariancePattern                                       StrafePattern;                                           // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S7D8[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StrafeTimeOffset;                                        // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeRateModifier;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StrafeStrength;                                          // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EVariancePattern                                       EngageDistancePattern;                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FA52[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      EngageDistanceTimeOffset;                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EngageDistanceRateModifier;                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EngageDistanceVariance;                                  // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EngageParams
	 * Size -> 0x0010
	 */
	struct FEngageParams
	{
	public:
		class AActor*                                              Target;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowSprint;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowSprintAttack;                                      // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowSprintTackle;                                      // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CT0D[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ProfileGameSummary
	 * Size -> 0x0020
	 */
	struct FProfileGameSummary
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LogSpamCount;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CharacterCount;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CharacterRenderedCount;                                  // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BugItLocation;                                           // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ProfileRenderSummary
	 * Size -> 0x0004
	 */
	struct FProfileRenderSummary
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ProfileGpuNode
	 * Size -> 0x0010
	 */
	struct FProfileGpuNode
	{
	public:
		float                                                      Percent;                                                 // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeInMs;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        DrawCalls;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        PrimCount;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ProfileGpuSummary
	 * Size -> 0x00C8
	 */
	struct FProfileGpuSummary
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     Frame;                                                   // 0x0004(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     Scene;                                                   // 0x0014(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     PrePass;                                                 // 0x0024(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     BasePass;                                                // 0x0034(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     HZB;                                                     // 0x0044(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     ShadowDepths;                                            // 0x0054(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     LightCompositionTasks_PreLighting;                       // 0x0064(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     Lights;                                                  // 0x0074(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     ReflectionEnvironment;                                   // 0x0084(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     Atmosphere;                                              // 0x0094(0x0010) NoDestructor, NativeAccessSpecifierPublic
		struct FProfileGpuNode                                     PostProcessing;                                          // 0x00A4(0x0010) NoDestructor, NativeAccessSpecifierPublic
		int                                                        TotalNodeCount;                                          // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Text;                                                    // 0x00B8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClientPerformanceSnapshot
	 * Size -> 0x0180 (FullSize[0x01A8] - InheritedSize[0x0028])
	 */
	struct FClientPerformanceSnapshot : public FAnalyticsEvent_Client
	{
	public:
		class FString                                              SeriesName;                                              // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ViewpointName;                                           // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ComputerName;                                            // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DeviceProfile;                                           // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlatformName;                                            // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PhysicalMemUsed;                                         // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VirtualMemUsed;                                          // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsProConsole;                                           // 0x0090(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZC3Q[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTBLQualityLevels                                   Settings;                                                // 0x0094(0x001C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      FrameTime;                                               // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XSW[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProfileGameSummary                                 Game;                                                    // 0x00B8(0x0020) NativeAccessSpecifierPublic
		struct FProfileRenderSummary                               Render;                                                  // 0x00D8(0x0004) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LI9B[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProfileGpuSummary                                  Gpu;                                                     // 0x00E0(0x00C8) NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CharacterPerformanceSnapshot
	 * Size -> 0x00A0 (FullSize[0x0248] - InheritedSize[0x01A8])
	 */
	struct FCharacterPerformanceSnapshot : public FClientPerformanceSnapshot
	{
	public:
		float                                                      AvailableCpu;                                            // 0x01A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NDO9[0x4];                                   // 0x01AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              AvailableCpuSamples;                                     // 0x01B0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              BaseGameTimeInMsSamples;                                 // 0x01C0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              BaseRenderTimeInMsSamples;                               // 0x01D0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              BaseGpuTimeInMsSamples;                                  // 0x01E0(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseGameTimeInMs;                                        // 0x01F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseRenderTimeInMs;                                      // 0x01F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseGpuTimeInMs;                                         // 0x01F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AKXZ[0x4];                                   // 0x01FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              LoadedGameTimeInMsSamples;                               // 0x0200(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              LoadedRenderTimeInMsSamples;                             // 0x0210(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              LoadedGpuTimeInMsSamples;                                // 0x0220(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoadedGameTimeInMs;                                      // 0x0230(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoadedRenderTimeInMs;                                    // 0x0234(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoadedGpuTimeInMs;                                       // 0x0238(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerCharacterGameTimeInMs;                                // 0x023C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerCharacterRenderTimeInMs;                              // 0x0240(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PerCharacterGpuTimeInMs;                                 // 0x0244(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PostMatchFeedback
	 * Size -> 0x0028 (FullSize[0x0040] - InheritedSize[0x0018])
	 */
	struct FPostMatchFeedback : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerNetId;                                             // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MatchRating;                                             // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EQGB[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MatchSample
	 * Size -> 0x0028 (FullSize[0x0040] - InheritedSize[0x0018])
	 */
	struct FMatchSample : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NewFieldToAdd;                                           // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TeamBlueSize;                                            // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TeamRedSize;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PlayerPosition;                                          // 0x0034(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ObjectiveScore
	 * Size -> 0x0028 (FullSize[0x0040] - InheritedSize[0x0018])
	 */
	struct FObjectiveScore : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Points;                                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5UWP[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Category;                                                // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StressTest
	 * Size -> 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
	 */
	struct FStressTest : public FInvocationComplete
	{
	};

	/**
	 * ScriptStruct TBL.FrameHitch
	 * Size -> 0x0060 (FullSize[0x0078] - InheritedSize[0x0018])
	 */
	struct FFrameHitch : public FGameAnalyticsEvent
	{
	public:
		float                                                      Duration;                                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DumpThreshold;                                           // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SampleThreshold;                                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SampleInterval;                                          // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SampleCount;                                             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameOverheadTime;                                        // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RenderOverheadTime;                                      // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I9U7[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapName;                                                 // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MatchState;                                              // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameThread;                                              // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RenderThread;                                            // 0x0068(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AdminFailure
	 * Size -> 0x0020 (FullSize[0x0038] - InheritedSize[0x0018])
	 */
	struct FAdminFailure : public FGameAnalyticsEvent
	{
	public:
		class FString                                              Function;                                                // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NetId;                                                   // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Kill
	 * Size -> 0x0080 (FullSize[0x0098] - InheritedSize[0x0018])
	 */
	struct FTBL_FKill : public FGameAnalyticsEvent
	{
	public:
		class FString                                              InvocationId;                                            // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MatchID;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       KillerIsPlayer;                                          // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MXKC[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KillerNetId;                                             // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillerClass;                                             // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       KilledIsPlayer;                                          // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MDJH[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KilledNetId;                                             // 0x0068(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KilledClass;                                             // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Lifetime;                                                // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XCJS[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    SomeFieldId;                                             // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ObjectiveComplete
	 * Size -> 0x0040 (FullSize[0x0058] - InheritedSize[0x0018])
	 */
	struct FObjectiveComplete : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameModeName;                                            // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        WinningTeamId;                                           // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ObjectiveTimedOut;                                       // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BFME[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ServerPerMinuteBucket
	 * Size -> 0x0068 (FullSize[0x0080] - InheritedSize[0x0018])
	 */
	struct FServerPerMinuteBucket : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameModeName;                                            // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ComputerName;                                            // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TimeMinutes;                                             // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumClients;                                              // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageFrameTime;                                        // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTime;                                         // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    AvailablePhysicalMemory;                                 // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    UsedVirtualMemory;                                       // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProcessUptime;                                           // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D089[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ClientPerMinuteBucket
	 * Size -> 0x0068 (FullSize[0x0080] - InheritedSize[0x0018])
	 */
	struct FClientPerMinuteBucket : public FGameAnalyticsEvent
	{
	public:
		class FString                                              MatchID;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameModeName;                                            // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NetId;                                                   // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TimeMinutes;                                             // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageFrameTime;                                        // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTime;                                         // 0x0060(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4UJ7[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    AvailablePhysicalMemory;                                 // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    UsedVirtualMemory;                                       // 0x0070(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProcessUptime;                                           // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XCHU[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MovementCorrectionData
	 * Size -> 0x000C
	 */
	struct FMovementCorrectionData
	{
	public:
		int                                                        NetAutonomousMovementCorrections;                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetAutonomousMovementCorrectionBunches;                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NetSimulatedMovementCorrections;                         // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClientPostMatchInfo
	 * Size -> 0x0188
	 */
	struct FClientPostMatchInfo
	{
	public:
		struct FFrameTimeBuckets                                   FrameTimeBuckets;                                        // 0x0000(0x0028) NoDestructor, NativeAccessSpecifierPublic
		struct FFrameTimeBuckets                                   StatFrameTimeBuckets;                                    // 0x0028(0x0028) NoDestructor, NativeAccessSpecifierPublic
		struct FPingTimeBuckets                                    PingTimeBuckets;                                         // 0x0050(0x002C) NoDestructor, NativeAccessSpecifierPublic
		float                                                      LoadIntoMainMenuTime;                                    // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalPingSamples;                                        // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TotalFrames;                                             // 0x0084(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalReliableRetryCount;                                 // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalReliableRetryBytes;                                 // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalUnreliableRetryCount;                               // 0x0098(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    TotalUnrealiableRetryBytes;                              // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    SendFailTotalBytes;                                      // 0x00A8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageFrameTime;                                        // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AveragePingTime;                                         // 0x00B4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAvailableCPUBuckets                                AvailableCpu;                                            // 0x00B8(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FPacketLossData                                     PacketLossData;                                          // 0x00D4(0x0018) NoDestructor, NativeAccessSpecifierPublic
		struct FMovementCorrectionData                             MovementCorrectionData;                                  // 0x00EC(0x000C) NoDestructor, NativeAccessSpecifierPublic
		struct FTBLHardwareInfo                                    HardwareInfo;                                            // 0x00F8(0x0068) NativeAccessSpecifierPublic
		float                                                      CPUPerfIndex;                                            // 0x0160(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GPUPerfIndex;                                            // 0x0164(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTBLQualityLevels                                   QualityLevels;                                           // 0x0168(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKGM[0x4];                                   // 0x0184(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ClientPerformanceHistory
	 * Size -> 0x01D8 (FullSize[0x01F0] - InheritedSize[0x0018])
	 */
	struct FClientPerformanceHistory : public FGameAnalyticsEvent
	{
	public:
		class FString                                              SeriesName;                                              // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MatchID;                                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GameModeName;                                            // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NetId;                                                   // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FClientPostMatchInfo                                Client;                                                  // 0x0068(0x0188) Edit, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AnimDeathParams
	 * Size -> 0x0068
	 */
	struct FAnimDeathParams
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0MDO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageSource*                                       DamageType;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x0010(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitDirectionName;                                        // 0x001C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitBone;                                                 // 0x0024(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MovementState;                                           // 0x002C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CombatState;                                             // 0x0034(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DamageTakersAttackName;                                  // 0x003C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RWNF[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      InventoryItem;                                           // 0x0048(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilityName;                                             // 0x0050(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAttackType*                                         AttackType;                                              // 0x0058(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RandomSeed;                                              // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EKillReason                                            KillReason;                                              // 0x0064(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOnHorse;                                              // 0x0065(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAltAttack;                                              // 0x0066(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4PL[0x1];                                   // 0x0067(0x0001) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AnimDebugNodeCategory
	 * Size -> 0x0078
	 */
	struct FAnimDebugNodeCategory
	{
	public:
		TArray<int>                                                DebugAnimNodes;                                          // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int>                                                ActiveNodes;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int, float>                                           ActiveWeights;                                           // 0x0020(0x0050) NativeAccessSpecifierPublic
		float                                                      RootWeight;                                              // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CWW0[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLAnimInstanceProxy
	 * Size -> 0x0010 (FullSize[0x0700] - InheritedSize[0x06F0])
	 */
	struct FTBLAnimInstanceProxy : public FAnimInstanceProxy
	{
	public:
		unsigned char                                              UnknownData_7I4Z[0x10];                                  // 0x06F0(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TutorialPlayerControlParams
	 * Size -> 0x0030
	 */
	struct FTutorialPlayerControlParams
	{
	public:
		bool                                                       bLockMovement;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableCrouch;                                           // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableDash;                                             // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockView;                                               // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableInput;                                           // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDoInterpLocation;                                       // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SV8[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             InterpLocation;                                          // 0x0008(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDoLookAt;                                               // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0RZ6[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              LookAtActor;                                             // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LookAtLocation;                                          // 0x0020(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IW8V[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.FacingTargetParams
	 * Size -> 0x0028
	 */
	struct FFacingTargetParams
	{
	public:
		float                                                      FacingEnemyMaxAngle;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FacingTeammateMaxAngle;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FacingOtherMaxAngle;                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsProjectile;                                           // 0x000C(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideLocRot;                                         // 0x000D(0x0001) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9QFS[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             OverrideLocation;                                        // 0x0010(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            OverrideRotation;                                        // 0x001C(0x000C) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ComboBlendTime
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FComboBlendTime : public FTableRowBase
	{
	public:
		float                                                      Slash;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AltSlash;                                                // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Overhead;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AltOverhead;                                             // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stab;                                                    // 0x0018(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AltStab;                                                 // 0x001C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Shove;                                                   // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Jab;                                                     // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Headbutt;                                                // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Special;                                                 // 0x002C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Flourish;                                                // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IFBI[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TeamImbalanceDataObject
	 * Size -> 0x00B0
	 */
	struct FTeamImbalanceDataObject
	{
	public:
		unsigned char                                              UnknownData_TJ94[0xB0];                                  // 0x0000(0x00B0) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PersonalityPool
	 * Size -> 0x0020
	 */
	struct FPersonalityPool
	{
	public:
		TArray<TBL_EAudioPersonalityType>                          AllPersonalities;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TBL_EAudioPersonalityType>                          AvailablePersonalities;                                  // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.NoveltyScoringBonus
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FNoveltyScoringBonus : public FTableRowBase
	{
	public:
		class FText                                                LocalizedText;                                           // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int                                                        BonusScore;                                              // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1WDT[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TeamScoringFormatDataTable
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTeamScoringFormatDataTable : public FTableRowBase
	{
	public:
		TBL_EObjectivePointCategory                                ScoringType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U0J1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LocalizedText;                                           // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.GameScoringDataTable
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FGameScoringDataTable : public FTableRowBase
	{
	public:
		int                                                        TeamObjective;                                           // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TeamDeathMatch;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        FreeForAll;                                              // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Symmetrical;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Arena;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LastTeamStanding;                                        // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                LocalizedText;                                           // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       AudioEvent;                                              // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        GameScoringType;                                         // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EScoreGroup                                            ScoreGroup;                                              // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BS6D[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.MatchmakingQueue
	 * Size -> 0x0090
	 */
	struct FMatchmakingQueue
	{
	public:
		class FText                                                Name;                                                    // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0018(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                UniqueId;                                                // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayFabId;                                               // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EMatchmakingQueueType                                  Type;                                                    // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EMatchmakingQueueCategory                              Category;                                                // 0x0049(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DFAY[0x2];                                   // 0x004A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        MaxPlayers;                                              // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTeams;                                                  // 0x0050(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LO59[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        NumPlayers;                                              // 0x0054(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ETA_Mean;                                                // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ETA_Percentile50;                                        // 0x005C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ETA_Percentile90;                                        // 0x0060(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ETA_Percentile99;                                        // 0x0064(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LocTitle;                                                // 0x0068(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Image;                                                   // 0x0078(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      Maps;                                                    // 0x0080(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.InventoryItemPool
	 * Size -> 0x0108
	 */
	struct FInventoryItemPool
	{
	public:
		unsigned char                                              UnknownData_TFLL[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              InventoryItemPool[0x50];                                 // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_GXG7[0x68];                                  // 0x00A0(0x0068) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.RagdollTickFunction
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FRagdollTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_WSX2[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.OutOfCombatZoneVolumeTickFunction
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FOutOfCombatZoneVolumeTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_YHM4[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLGameSingletonPerWorld
	 * Size -> 0x02B8
	 */
	struct FTBLGameSingletonPerWorld
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2YG2[0x50];                                  // 0x0008(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCustomizationConfig*>                        CustomizationConfigs;                                    // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextureAtlasManager*                                TextureAtlasManager;                                     // 0x0068(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInventoryItemPool                                  InventoryItemPool;                                       // 0x0070(0x0108) NativeAccessSpecifierPublic
		unsigned char                                              LoadedCinematicSublevels[0x50];                          // 0x0178(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_G388[0x20];                                  // 0x01C8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRagdollTickFunction                                RagdollTickFunction;                                     // 0x01E8(0x0038) NativeAccessSpecifierPublic
		struct FOutOfCombatZoneVolumeTickFunction                  OutOfCombatZoneTickFunction;                             // 0x0220(0x0030) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJ9Q[0x68];                                  // 0x0250(0x0068) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.GameUpdateScheduleEntry
	 * Size -> 0x0010
	 */
	struct FGameUpdateScheduleEntry
	{
	public:
		struct FDateTime                                           StartDate;                                               // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndDate;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.GameUpdateData
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FGameUpdateData : public FTableRowBase
	{
	public:
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              VersionNumber;                                           // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           ReleaseDate;                                             // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EGameUpdateType                                        UpdateType;                                              // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5NO0[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Thumbnail[0x28];                                         // 0x0039(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              ContentWidgetClass[0x28];                                // 0x0068(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FGameUpdateScheduleEntry>                    ShowSchedule;                                            // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RecentPlayerEntry
	 * Size -> 0x0028
	 */
	struct FRecentPlayerEntry
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Age;                                                     // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GQTM[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.BlockPlayerEntry
	 * Size -> 0x0020
	 */
	struct FBlockPlayerEntry
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TBLButtonAnimation_deprecated
	 * Size -> 0x0038
	 */
	struct FTBLButtonAnimation_deprecated
	{
	public:
		TBL_EButtonAnimationStyle_deprecated                       AnimationType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CNCM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        MaterialParamNames;                                      // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Looping;                                                 // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_352B[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartingInterpValue;                                     // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndingInterpValue;                                       // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartDelay;                                              // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpTime;                                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BO6H[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         InterpolationCurve;                                      // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HitActorInfo
	 * Size -> 0x0010
	 */
	struct FHitActorInfo
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastHitTime;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AIM1[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TBLConsoleSaveSettings
	 * Size -> 0x00A4
	 */
	struct FTBLConsoleSaveSettings
	{
	public:
		uint32_t                                                   SettingsVersion;                                         // 0x0000(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   UserChangelist;                                          // 0x0004(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FOV;                                                     // 0x0008(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECameraStyle                                           CameraStyle;                                             // 0x000C(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoSprintEnabled;                                      // 0x000D(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAltAttackWithMovementEnabled;                           // 0x000E(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShiftToWalkEnabled;                                     // 0x000F(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bToggleSprintEnabled;                                    // 0x0010(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBeginnerHintsEnabled;                                   // 0x0011(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdvancedHintsEnabled;                                   // 0x0012(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSuicideAfterNewClassEnabled;                            // 0x0013(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bToggleCrouchEnabled;                                    // 0x0014(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChatEnabled;                                            // 0x0015(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowPlayerVOInChat;                                     // 0x0016(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableCombatNumbers;                                    // 0x0017(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableHeadBob;                                          // 0x0018(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KTVM[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GamepadXSensitivty;                                      // 0x001C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadYSensitivty;                                      // 0x0020(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadXFocusSensitivity;                                // 0x0024(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadYFocusSensitivity;                                // 0x0028(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMouseYInverted;                                         // 0x002C(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGamepadYInverted;                                       // 0x002D(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EGamepadLookResponseCurveStyle                         GamepadResponseCurveStyle;                               // 0x002E(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UFUE[0x1];                                   // 0x002F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      GamepadLeftStickDeadzone;                                // 0x0030(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadRightStickDeadzone;                               // 0x0034(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadLeftTriggerDeadzone;                              // 0x0038(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadRightTriggerDeadzone;                             // 0x003C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMeleeAimAssistEnabled;                                  // 0x0040(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRangedAimAssistEnabled;                                 // 0x0041(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ANSK[0x2];                                   // 0x0042(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AimAssistFrictionPercentage;                             // 0x0044(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EGoreLevel                                             GoreLevel;                                               // 0x0048(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDynamicCrosshairEnabled;                                // 0x0049(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EAllyMarkerLevel                                       AllyMarkerLevel;                                         // 0x004A(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHintsEnabled;                                           // 0x004B(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EKillFeedFilter                                        KillFeedFilter;                                          // 0x004C(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I2LB[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MasterVolume;                                            // 0x0050(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameVolume;                                              // 0x0054(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VOVolume;                                                // 0x0058(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnnouncerVolume;                                         // 0x005C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmbientVolume;                                           // 0x0060(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MusicMasterVolume;                                       // 0x0064(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MusicDynamicVolume;                                      // 0x0068(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MusicOutOfGameVolume;                                    // 0x006C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlwaysOnMusicGameVolume;                                 // 0x0070(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReflectionVolume;                                        // 0x0074(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayAudioInBackground;                                  // 0x0078(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoiceChatEnabled;                                       // 0x0079(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVoiceWithFriendsAndPartyOnly;                           // 0x007A(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              VoiceChatActivation;                                     // 0x007B(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VoiceTransmitVolume;                                     // 0x007C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VoiceReceiveVolume;                                      // 0x0080(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MotionBlurAmount;                                        // 0x0084(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TAASharpen;                                              // 0x0088(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisableCrossPlayMatchmaking;                            // 0x008C(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EProConsoleOption                                      ProConsoleSetting;                                       // 0x008D(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EHapticsVolumeSettings                                 HapticsVolumeSetting;                                    // 0x008E(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAdaptiveTriggers;                                    // 0x008F(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoadoutDisplayOnFirstDeath;                             // 0x0090(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bServerBrowserHideFullServers : 1;                       // 0x0091(0x0001) BIT_FIELD SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_12JO[0x2];                                   // 0x0092(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   bServerBrowserFreeSlotLimit;                             // 0x0094(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bServerBrowserHideEmptyServers : 1;                      // 0x0098(0x0001) BIT_FIELD SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bServerBrowserHideHighPingServers : 1;                   // 0x0098(0x0001) BIT_FIELD SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PreferMotionBlur;                                        // 0x0099(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		SlateCore_EColorVisionDeficiency                           ColorVisionDeficiency;                                   // 0x009A(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEK5[0x1];                                   // 0x009B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        ColorVisionDeficiencyCorrectionStrength;                 // 0x009C(0x0004) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShuffleLoadout;                                         // 0x00A0(0x0001) ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_80O9[0x3];                                   // 0x00A1(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SpectatorCameraConfig
	 * Size -> 0x0020
	 */
	struct FSpectatorCameraConfig
	{
	public:
		float                                                      MaxSpeed;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Acceleration;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deceleration;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChangeDirBoost;                                          // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnMaxSpeed;                                            // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnAcceleration;                                        // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnDeceleration;                                        // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnChangeDirBoost;                                      // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpectatorCamInfo
	 * Size -> 0x0030
	 */
	struct FSpectatorCamInfo
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        CameraNum;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CamLocation;                                             // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            CamRotation;                                             // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RVLB[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SmoothSpectatorTurn
	 * Size -> 0x0008
	 */
	struct FSmoothSpectatorTurn
	{
	public:
		float                                                      Speed;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAccelerating;                                         // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChangeDir;                                              // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NDDJ[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TeamChatColor
	 * Size -> 0x0014
	 */
	struct FTeamChatColor
	{
	public:
		struct FLinearColor                                        ChatColor;                                               // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BNFX[0x4];                                   // 0x0010(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.TeamDisplayInfo
	 * Size -> 0x0048
	 */
	struct FTeamDisplayInfo
	{
	public:
		struct FColor                                              GuiColor;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              GameColor;                                               // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        IconIndex;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BVIB[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TeamName;                                                // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FTeamChatColor>                              ChatColors;                                              // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ChatColorSeed;                                           // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RoundResult
	 * Size -> 0x000C
	 */
	struct FRoundResult
	{
	public:
		bool                                                       bWon;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7S63[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RoundScore;                                              // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoundTiebreakScore;                                      // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SwatchSelectionsByClass
	 * Size -> 0x0020
	 */
	struct FSwatchSelectionsByClass
	{
	public:
		class FString                                              CustomizationClassName;                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSwatchSelection>                            SwatchSelections;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.LastStageScoreMusicConfig
	 * Size -> 0x0008
	 */
	struct FLastStageScoreMusicConfig
	{
	public:
		int                                                        LastStageIdNum;                                          // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScoreRemaining;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.StageEndingConfig
	 * Size -> 0x0020
	 */
	struct FStageEndingConfig
	{
	public:
		TArray<struct FAKAudioStartStopStruct>                     Music;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TimeRemaining;                                           // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLastStageScoreMusicConfig                          LastStageScoreMusicConfig;                               // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RZZ7[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SpecialEventLevelEntry
	 * Size -> 0x0010
	 */
	struct FSpecialEventLevelEntry
	{
	public:
		class FName                                                SpecialEvent;                                            // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StreamingLevel;                                          // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TDMRout
	 * Size -> 0x0008
	 */
	struct FTDMRout
	{
	public:
		float                                                      Delay;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TeamCapturePointComponentProperties
	 * Size -> 0x0068
	 */
	struct FTeamCapturePointComponentProperties
	{
	public:
		int                                                        PlayersNeededToCapture;                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToNeutralize;                                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeToCapture;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImmunityTimeAfterCapture;                                // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ImmunityTimeAfterActivation;                             // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6571[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<TBL_EFaction>                                       AllowedFactions;                                         // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeBetweenTickEvents;                                   // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECaptureVolumeControlType                              CapturePointRule;                                        // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoNeutralizeTeamCapturePoint;                          // 0x002D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowBots;                                               // 0x002E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowNPCs;                                               // 0x002F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AllowKillBonusInsideCaptureVolume;                       // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_50DT[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDataTableRowSelection                              AttackerKillScoringRow;                                  // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FDataTableRowSelection                              DefenderKillScoringRow;                                  // 0x0050(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.Replicated_FTeamCapturePointComponentProperties
	 * Size -> 0x0078
	 */
	struct FReplicated_FTeamCapturePointComponentProperties
	{
	public:
		unsigned char                                              UnknownData_4D9D[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTeamCapturePointComponentProperties                Value;                                                   // 0x0010(0x0068) NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_ECapturePointState
	 * Size -> 0x0018
	 */
	struct FReplicated_ECapturePointState
	{
	public:
		unsigned char                                              UnknownData_L0S8[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TBL_ETeamCapturePointComponentState                        Value;                                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_T9EE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_ATBLTeamPtr
	 * Size -> 0x0018
	 */
	struct FReplicated_ATBLTeamPtr
	{
	public:
		unsigned char                                              UnknownData_CPXH[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATBLTeam*                                            Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.DisplayComponentControls
	 * Size -> 0x0005
	 */
	struct FDisplayComponentControls
	{
	public:
		bool                                                       bControlPlayerInsideZone;                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bControlProgress;                                        // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bControlObjectiveState;                                  // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bControlObjectiveText;                                   // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bControlOwningTeam;                                      // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ObjectiveStatusDisplayComponentStruct
	 * Size -> 0x0030
	 */
	struct FObjectiveStatusDisplayComponentStruct
	{
	public:
		unsigned char                                              DisplayComponent[0x28];                                  // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FDisplayComponentControls                           DisplayComponentControls;                                // 0x0028(0x0005) NoDestructor, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_VOJ8[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.UtilityAI_Consideration
	 * Size -> 0x0030
	 */
	struct FUtilityAI_Consideration
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UUtilityAI_InputAxis*                                Input;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FUtilityAI_Curve                                    Curve;                                                   // 0x0018(0x0014) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L2HC[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.DisengageParams
	 * Size -> 0x000C
	 */
	struct FDisengageParams
	{
	public:
		bool                                                       bImmedateDisengage;                                      // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V7X2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               PendingTarget;                                           // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.UtilityAI_Context
	 * Size -> 0x0030
	 */
	struct FUtilityAI_Context
	{
	public:
		class AAIController*                                       Controller;                                              // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EUtilityAI_TargetType                                  TargetType;                                              // 0x0008(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9MVH[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject*                                             TargetObject;                                            // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NNP5[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UUtilityAI_Behavior*                                 Behavior;                                                // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.UtilityAI_Decision
	 * Size -> 0x0038
	 */
	struct FUtilityAI_Decision
	{
	public:
		float                                                      Score;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T9PI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FUtilityAI_Context                                  Context;                                                 // 0x0008(0x0030) NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.BehaviorSetOverride
	 * Size -> 0x0040
	 */
	struct FBehaviorSetOverride
	{
	public:
		unsigned char                                              BehaviorSet[0x28];                                       // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bOverrideExistingBehaviors;                              // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GMLT[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UUtilityAI_Behavior*>                         Behaviors;                                               // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CombatEventBehaviors
	 * Size -> 0x0018
	 */
	struct FCombatEventBehaviors
	{
	public:
		class UClass*                                              BehaviorSet;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UUtilityAI_Behavior*>                         Behaviors;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PercentOfInitialVelocityToKeep
	 * Size -> 0x000C
	 */
	struct FPercentOfInitialVelocityToKeep
	{
	public:
		float                                                      Forward;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Backward;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Strafe;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.VotingOption
	 * Size -> 0x0018
	 */
	struct FVotingOption
	{
	public:
		class FName                                                Option;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ATBLPlayerState*>                             Voters;                                                  // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.PlayerSpawnPair
	 * Size -> 0x0010
	 */
	struct FPlayerSpawnPair
	{
	public:
		class AController*                                         PlayerController;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RespawnRequestTime;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AssignedMinimumRespawnTime;                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.TracerCacheParams
	 * Size -> 0x00F0
	 */
	struct FTracerCacheParams
	{
	public:
		class FName                                                MontageName;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SectionName;                                             // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6PPV[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          CurrentComponentTrs;                                     // 0x0020(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          PreviousComponentTrs;                                    // 0x0050(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          CurrentArmBase;                                          // 0x0080(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          PreviousArmBase;                                         // 0x00B0(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      CurrentAimPitch;                                         // 0x00E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreviousAimPitch;                                        // 0x00E4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentAnimPercent;                                      // 0x00E8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PrevAnimPercent;                                         // 0x00EC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AnimationSetDataTable
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FAnimationSetDataTable : public FTableRowBase
	{
	public:
		class UClass*                                              AnimationSet1P;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AnimationSet3P;                                          // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AnimationSetWeapon1P;                                    // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AnimationSetWeapon3P;                                    // 0x0020(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DeathDamageTakenEvent
	 * Size -> 0x0160
	 */
	struct FDeathDamageTakenEvent
	{
	public:
		struct FDamageTakenEvent                                   DamageTaken;                                             // 0x0000(0x0148) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      Killers;                                                 // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RandomSeed;                                              // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EKillReason                                            KillReason;                                              // 0x015C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DeadCharacterId;                                         // 0x015D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachToProjectile;                                     // 0x015E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L36G[0x1];                                   // 0x015F(0x0001) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CrowdControlParams
	 * Size -> 0x0018
	 */
	struct FCrowdControlParams
	{
	public:
		TBL_ECrowdControlVariant                                   Variant;                                                 // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlDirection                                 Direction;                                               // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJD3[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass*                                              InventoryItemClass;                                      // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AbilityName;                                             // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.InventoryItemDamagedParams
	 * Size -> 0x0020
	 */
	struct FInventoryItemDamagedParams
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LHUD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDamageSource*                                       DamageType;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              DamageCauser;                                            // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NewHealthValue;                                          // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LWN1[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.LandedResult
	 * Size -> 0x00A0
	 */
	struct FLandedResult
	{
	public:
		class ACharacter*                                          Character;                                               // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 LandingVelocity;                                         // 0x0090(0x000C) BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x009C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FallDamageTakenEvent
	 * Size -> 0x0020
	 */
	struct FFallDamageTakenEvent
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 DamageTakerVelocity;                                     // 0x0004(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UPhysicalMaterial*                                   PhysMaterial;                                            // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageSource*                                       DamageSource;                                            // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EarlyHitResult
	 * Size -> 0x0014
	 */
	struct FEarlyHitResult
	{
	public:
		struct FVector_NetQuantizeNormal                           HitDirection;                                            // 0x0000(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClashEventState
	 * Size -> 0x0048
	 */
	struct FClashEventState
	{
	public:
		class FName                                                InitiatorAttackName;                                     // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              InitiatorInventoryItemClass;                             // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InitiatorInventoryItem;                                  // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TargetAttackName;                                        // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              TargetInventoryItemClass;                                // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      TargetInventoryItem;                                     // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0030(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitDirection;                                            // 0x003C(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DeathEvent
	 * Size -> 0x0040
	 */
	struct FDeathEvent
	{
	public:
		TArray<class UObject*>                                     Killers;                                                 // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ATBLPlayerState*                                     Killed;                                                  // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        DamagingAbilitySpec;                                     // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDamageSource*                                       DamageSource;                                            // 0x0020(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      KillingBlowItem;                                         // 0x0028(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                KillingBlowAbilityTableRow;                              // 0x0030(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsKillerOnKillingSpree : 1;                             // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsKilledKillingSpreeEnded : 1;                          // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsHeadShotKill : 1;                                     // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSuicideAndSwictchedTeamsInLoadout : 1;                  // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsProjectile : 1;                                       // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bTappedOut : 1;                                          // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSwitchToSpectate : 1;                                   // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bFellOutOfWorld : 1;                                     // 0x0038(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ORAK[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.FLammableHitEvent
	 * Size -> 0x0030
	 */
	struct FFLammableHitEvent
	{
	public:
		class UFlammableStaticMeshComponent*                       HitFlammableComponent;                                   // 0x0000(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RelativeHitLocation;                                     // 0x0008(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1XG5[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AInventoryItem*                                      InventoryItem;                                           // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              Projectile;                                              // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ObjectiveMessage
	 * Size -> 0x0038
	 */
	struct FObjectiveMessage
	{
	public:
		class FText                                                HeaderMessage;                                           // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ChatMessage;                                             // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSuccess;                                               // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFailure;                                               // 0x0035(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GXW3[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CrosshairMsg
	 * Size -> 0x0020
	 */
	struct FCrosshairMsg
	{
	public:
		class FText                                                Message;                                                 // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TeamId;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.HUDMarkerDisplayInfo
	 * Size -> 0x0001
	 */
	struct FHUDMarkerDisplayInfo
	{
	public:
		unsigned char                                              UnknownData_GUJT[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.HudMarkerTicketStruct
	 * Size -> 0x0014
	 */
	struct FHudMarkerTicketStruct
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TicketsModified;                                         // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        TeamId;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHUDMarkerDisplayInfo                               DisplayInfo;                                             // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P4X4[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.VotingResults
	 * Size -> 0x0008
	 */
	struct FVotingResults
	{
	public:
		class FName                                                WinningOption;                                           // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ServerFilterSetting
	 * Size -> 0x0080
	 */
	struct FServerFilterSetting
	{
	public:
		unsigned char                                              GameModePrefixes[0x50];                                  // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty
		bool                                                       bUsePingLimit;                                           // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1MN5[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        PingLimit;                                               // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseServerNameFilter;                                    // 0x0058(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5FG1[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ServerNameFilter;                                        // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseFreeSlotLimit;                                       // 0x0070(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M0MH[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        FreeSlotLimit;                                           // 0x0074(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideEmpty;                                              // 0x0078(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideFull;                                               // 0x0079(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideLocked;                                             // 0x007A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideUnjoinableOfficials;                                // 0x007B(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideCommunityServers;                                   // 0x007C(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OHMS[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.StreamEntry
	 * Size -> 0x0048
	 */
	struct FStreamEntry
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FriendlyName;                                            // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Timestamp;                                               // 0x0020(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        SizeInBytes;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        LengthInMS;                                              // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumViewers;                                              // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsLive;                                                 // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MP9F[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Changelist;                                              // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G8A0[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.BlueprintOnlineUser
	 * Size -> 0x0068
	 */
	struct FBlueprintOnlineUser
	{
	public:
		unsigned char                                              UnknownData_EUBC[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ID;                                                      // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DisplayName;                                             // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JKDZ[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsFriend;                                               // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsOnline;                                               // 0x0039(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAway;                                                 // 0x003A(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsExtendedAway;                                         // 0x003B(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDoNotDisturb;                                         // 0x003C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPlaying;                                              // 0x003D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPlayingThisGame;                                      // 0x003E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsJoinable;                                             // 0x003F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasVoiceSupport;                                        // 0x0040(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBlocked;                                              // 0x0041(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRecent;                                               // 0x0042(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInAParty;                                             // 0x0043(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInSameParty;                                          // 0x0044(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPartyLeader;                                          // 0x0045(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasOutgoingPartyInvite;                                 // 0x0046(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasIncomingPartyInvite;                                 // 0x0047(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsNative;                                               // 0x0048(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInMatch;                                              // 0x0049(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_54O2[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StatusStr;                                               // 0x0050(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCrossplayServer;                                        // 0x0060(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWrongPlatformServer;                                    // 0x0061(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IJYK[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AIDismountData
	 * Size -> 0x0010
	 */
	struct FAIDismountData
	{
	public:
		TWeakObjectPtr<class AAIController>                        AIController;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ATBLCharacter>                        Character;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClientAbilityInitiationParams
	 * Size -> 0x0010
	 */
	struct FClientAbilityInitiationParams
	{
	public:
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        InvocationId;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AltWeightsState
	 * Size -> 0x0090
	 */
	struct FAltWeightsState
	{
	public:
		TArray<struct FBlendedLODSkelMeshSkinWeights>              LODWeights;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, int>                                     WeightSetCache;                                          // 0x0010(0x0050) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q68G[0x30];                                  // 0x0060(0x0030) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AnimNode_BlendListByOrder
	 * Size -> 0x0020 (FullSize[0x00B8] - InheritedSize[0x0098])
	 */
	struct FAnimNode_BlendListByOrder : public FAnimNode_BlendListBase
	{
	public:
		unsigned char                                              UnknownData_MEL6[0x4];                                   // 0x0098(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bLooping;                                                // 0x009C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BJVO[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<bool>                                               NodeActiveState;                                         // 0x00A0(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O5WK[0x8];                                   // 0x00B0(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AnimNode_BlendListByRandom
	 * Size -> 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
	 */
	struct FAnimNode_BlendListByRandom : public FAnimNode_BlendListByOrder
	{
	public:
		TArray<float>                                              Weight;                                                  // 0x00B8(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int>                                                LoopCountMin;                                            // 0x00C8(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int>                                                LoopCountMax;                                            // 0x00D8(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<bool>                                               StillFrame;                                              // 0x00E8(0x0010) Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int>                                                LoopCount;                                               // 0x00F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRandomStream                                       RandomStream;                                            // 0x0108(0x0008) ZeroConstructor, Transient, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AnimNode_SaveBone
	 * Size -> 0x0058 (FullSize[0x0120] - InheritedSize[0x00C8])
	 */
	struct FAnimNode_SaveBone : public FAnimNode_SkeletalControlBase
	{
	public:
		struct FBoneReference                                      SourceBone;                                              // 0x00C8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                TransformVariableName;                                   // 0x00D8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UStructProperty*                                     TransformProperty;                                       // 0x00E0(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_3ETG[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          PreviousSourceBoneTM;                                    // 0x00F0(0x0030) Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.AutomationSequenceEvent
	 * Size -> 0x0010
	 */
	struct FAutomationSequenceEvent
	{
	public:
		class FString                                              Something;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.InputReleasedParams
	 * Size -> 0x0008
	 */
	struct FInputReleasedParams
	{
	public:
		class FName                                                InputActionName;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.QueuedHitResult
	 * Size -> 0x00A0
	 */
	struct FQueuedHitResult
	{
	public:
		bool                                                       bHasHitResult;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitResultParried;                                       // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsInTeamThwackRange;                                    // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GTGR[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          HitResult;                                               // 0x0004(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		float                                                      HitResultTime;                                           // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              LastAttacker;                                            // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationTimerOvertime;                                  // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        AttackID;                                                // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MapOption
	 * Size -> 0x0020
	 */
	struct FMapOption
	{
	public:
		TArray<class FString>                                      IgnoredOptionList;                                       // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMapModifierPropertiesArray>                 MapEntry;                                                // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClassCap
	 * Size -> 0x0008
	 */
	struct FClassCap
	{
	public:
		TBL_EAudioClassType                                        Class;                                                   // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4TEE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        MaxNum;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.GlobalMapModifiers
	 * Size -> 0x0020
	 */
	struct FGlobalMapModifiers
	{
	public:
		TArray<struct FClassCap>                                   ClassCaps;                                               // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TBL_EAudioClassType>                                ClassesAllowed;                                          // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MapModifiers
	 * Size -> 0x0098
	 */
	struct FMapModifiers
	{
	public:
		TBL_EGameModeType                                          GamemodeType;                                            // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DLNO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        MaxPlayers;                                              // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MinPlayers;                                              // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaxScoreLimit;                                           // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MinScoreLimit;                                           // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W41C[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FClassCap>                                   ClassCaps;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<TBL_EAudioClassType>                                ClassesAllowed;                                          // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MaxNumBots;                                              // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MinNumBots;                                              // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<TBL_EHardwarePlatform, struct FMapBotData>            BotCounts;                                               // 0x0040(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int                                                        MaxTime;                                                 // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        MinTime;                                                 // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CreditsSection
	 * Size -> 0x0030
	 */
	struct FCreditsSection
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FString>                                      MultiColumnStrings;                                      // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECreditsSectionType                                    Type;                                                    // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJHJ[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CustomizationCompatibilityQuery
	 * Size -> 0x0008
	 */
	struct FCustomizationCompatibilityQuery
	{
	public:
		unsigned char                                              UnknownData_UAYO[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CustomizationConstraintsQuery
	 * Size -> 0x0010
	 */
	struct FCustomizationConstraintsQuery
	{
	public:
		unsigned char                                              UnknownData_6HPX[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CustomizationAttributesFilter
	 * Size -> 0x0030
	 */
	struct FCustomizationAttributesFilter
	{
	public:
		unsigned char                                              UnknownData_PS4J[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CustomizationEntry
	 * Size -> 0x0080
	 */
	struct FCustomizationEntry
	{
	public:
		class FText                                                ItemTitle;                                               // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                ItemDescription;                                         // 0x0018(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TBL_EAudioClassType                                        PlayerClass;                                             // 0x0030(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               PlayerTeam;                                              // 0x0031(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLLT[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPrimaryAssetId                                     AssetId;                                                 // 0x0034(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBePurchased;                                         // 0x0044(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeListed;                                            // 0x0045(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ETBLRarity                                             Rarity;                                                  // 0x0046(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EOnlineStat                                            LevelStat;                                               // 0x0047(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Level;                                                   // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BQFS[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCustomizationAttributesFilter                      Attributes;                                              // 0x0050(0x0030) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.CustomizationEntriesGroup
	 * Size -> 0x0058
	 */
	struct FCustomizationEntriesGroup
	{
	public:
		class FName                                                GroupId;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Title;                                                   // 0x0008(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FCustomizationEntry>                         Entries;                                                 // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumberOfItems;                                           // 0x0048(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumberOfOwnedItems;                                      // 0x004C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumberOfViewedItems;                                     // 0x0050(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XS9E[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.AchievementCategoryTuple
	 * Size -> 0x0038
	 */
	struct FAchievementCategoryTuple
	{
	public:
		class FText                                                CategoryName;                                            // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                SubcategoryName;                                         // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int                                                        DisplayPriority;                                         // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PORT[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.GameSparksMapping
	 * Size -> 0x0018
	 */
	struct FGameSparksMapping
	{
	public:
		TBL_EGameSparksDataType                                    DataType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4N0A[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ShortCode;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.XpProgressionRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FXpProgressionRow : public FTableRowBase
	{
	public:
		int                                                        Xp;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IHEY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVirtualGoodReward>                          VirtualGoodRewards;                                      // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AxisKeybindDataTable
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FAxisKeybindDataTable : public FTableRowBase
	{
	public:
		TBL_EKeybindCategory                                       Category;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UWOM[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                AxisName;                                                // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsWIPFeature;                                            // 0x0044(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0045(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P3J0[0x2];                                   // 0x0046(0x0002) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.KeybindDataTable
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FKeybindDataTable : public FTableRowBase
	{
	public:
		TBL_EKeybindCategory                                       Category;                                                // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5UX5[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ActionName;                                              // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       IsWIPFeature;                                            // 0x0040(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnabled;                                                // 0x0041(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HYUA[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.CameraLockParams
	 * Size -> 0x0028
	 */
	struct FCameraLockParams
	{
	public:
		class ATBLCharacter*                                       Character;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor*                                              UseActorRotation;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     UseComponentRotation;                                    // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            StartingRotation;                                        // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MaxAngle;                                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SpectatorPawnCache
	 * Size -> 0x0008
	 */
	struct FSpectatorPawnCache
	{
	public:
		TWeakObjectPtr<class ATBLCharacter>                        FollowCharacter;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.MutedPlayerEntry
	 * Size -> 0x0020
	 */
	struct FMutedPlayerEntry
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.OwnershipResponse
	 * Size -> 0x0018
	 */
	struct FOwnershipResponse
	{
	public:
		bool                                                       Owned;                                                   // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_15YB[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Crowns;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Gold;                                                    // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        USDCents;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EOnlineStat                                            LevelType;                                               // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HEGO[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        Level;                                                   // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ProfaneWordData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FProfaneWordData : public FTableRowBase
	{
	public:
		class FString                                              Word;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExactMatch;                                             // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CDLR[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.FrequencyBucketThresholds
	 * Size -> 0x0008
	 */
	struct FFrequencyBucketThresholds
	{
	public:
		int                                                        MaxActors;                                               // 0x0000(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        NumBuckets;                                              // 0x0004(0x0004) Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClassReplicationGraphSettings
	 * Size -> 0x0018
	 */
	struct FClassReplicationGraphSettings
	{
	public:
		float                                                      StarvationPriorityScale;                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistancePriorityScale;                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetCullDistance;                                         // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetUpdateFrequency;                                      // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EClassRepNodeMapping                                   NodeMapping;                                             // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25W8[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int                                                        ActorChannelFrameTimeout;                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FastSharedProperties_InventoryItem
	 * Size -> 0x0034
	 */
	struct FFastSharedProperties_InventoryItem
	{
	public:
		struct FRepMovement                                        ReplicatedMovement;                                      // 0x0000(0x0034) NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FastSharedProperties_TBLCharacterMovement
	 * Size -> 0x0018
	 */
	struct FFastSharedProperties_TBLCharacterMovement
	{
	public:
		unsigned char                                              UnknownData_EIUJ[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.FastSharedProperties_CombatStateComponent
	 * Size -> 0x000C
	 */
	struct FFastSharedProperties_CombatStateComponent
	{
	public:
		struct FReplicatedCombatStateInfo                          ReplicatedCombatState;                                   // 0x0000(0x000A) NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bHasValidAttack;                                         // 0x000A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LoadoutItemIndex;                                        // 0x000B(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.FastSharedProperties_TBLCharacter
	 * Size -> 0x0078
	 */
	struct FFastSharedProperties_TBLCharacter
	{
	public:
		struct FRepMovement                                        ReplicatedMovement;                                      // 0x0000(0x0034) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              ServerFrame;                                             // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VX0H[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLockMeshRotationState                              LockMeshRotationState;                                   // 0x0038(0x0018) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              ReplicatedMovementMode;                                  // 0x0050(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseRemoteViewYaw;                                       // 0x0051(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RemoteViewYaw;                                           // 0x0052(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O7CG[0x1];                                   // 0x0053(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFastSharedProperties_TBLCharacterMovement          TBLCharacterMovementProperties;                          // 0x0054(0x0018) NoDestructor, NativeAccessSpecifierPublic
		struct FFastSharedProperties_CombatStateComponent          CombatStateComponentProperties;                          // 0x006C(0x000C) NoDestructor, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.RichTextEmbedInfo
	 * Size -> 0x0080
	 */
	struct FRichTextEmbedInfo
	{
	public:
		class FText                                                Content;                                                 // 0x0000(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FString                                              RunName;                                                 // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTBLTextBlock*                                       ParentTextBlock;                                         // 0x0028(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         MetaData;                                                // 0x0030(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.EmbeddedWidgetRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FEmbeddedWidgetRow : public FTableRowBase
	{
	public:
		class UClass*                                              WidgetClass;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SlackMessageField
	 * Size -> 0x0028
	 */
	struct FSlackMessageField
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value;                                                   // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsShort;                                                // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_69FC[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.SlackMessage
	 * Size -> 0x0078
	 */
	struct FSlackMessage
	{
	public:
		TArray<struct FSlackMessageField>                          Fields;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PreText;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Text;                                                    // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Title;                                                   // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Channel;                                                 // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconEmoji;                                               // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Username;                                                // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ESlackMessageColor                                     ColorLevel;                                              // 0x0070(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LUUY[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.PropertyValuePtr
	 * Size -> 0x0018
	 */
	struct FPropertyValuePtr
	{
	public:
		unsigned char                                              UnknownData_ROME[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ProfilerStat
	 * Size -> 0x0010
	 */
	struct FProfilerStat
	{
	public:
		class FString                                              StatName;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.actionNumbers
	 * Size -> 0x000C
	 */
	struct FactionNumbers
	{
	public:
		int                                                        Players;                                                 // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Bots;                                                    // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        Totals;                                                  // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AimAssistBounds
	 * Size -> 0x0024
	 */
	struct FAimAssistBounds
	{
	public:
		unsigned char                                              UnknownData_9SVK[0x24];                                  // 0x0000(0x0024) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_ATBLCharacterBasePtr
	 * Size -> 0x0018
	 */
	struct FReplicated_ATBLCharacterBasePtr
	{
	public:
		unsigned char                                              UnknownData_K3S2[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ATBLCharacterBase*                                   Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_FVector_NetQuantize100
	 * Size -> 0x0020
	 */
	struct FReplicated_FVector_NetQuantize100
	{
	public:
		unsigned char                                              UnknownData_24OP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize100                              Value;                                                   // 0x0010(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_1794[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FVector_NetQuantize10
	 * Size -> 0x0020
	 */
	struct FReplicated_FVector_NetQuantize10
	{
	public:
		unsigned char                                              UnknownData_VI5S[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize10                               Value;                                                   // 0x0010(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XCRV[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FVector_NetQuantize
	 * Size -> 0x0020
	 */
	struct FReplicated_FVector_NetQuantize
	{
	public:
		unsigned char                                              UnknownData_XU1V[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize                                 Value;                                                   // 0x0010(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8I0E[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FVector_NetQuantizeNormal
	 * Size -> 0x0020
	 */
	struct FReplicated_FVector_NetQuantizeNormal
	{
	public:
		unsigned char                                              UnknownData_S3CH[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantizeNormal                           Value;                                                   // 0x0010(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_XWE7[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FTransform
	 * Size -> 0x0040
	 */
	struct FReplicated_FTransform
	{
	public:
		unsigned char                                              UnknownData_E0GY[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Value;                                                   // 0x0010(0x0030) IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_Double
	 * Size -> 0x0018
	 */
	struct FReplicated_Double
	{
	public:
		unsigned char                                              UnknownData_8G4U[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_Int64
	 * Size -> 0x0018
	 */
	struct FReplicated_Int64
	{
	public:
		unsigned char                                              UnknownData_O7KP[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_UInt64
	 * Size -> 0x0018
	 */
	struct FReplicated_UInt64
	{
	public:
		unsigned char                                              UnknownData_FC9C[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   Value;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.Replicated_Int16
	 * Size -> 0x0018
	 */
	struct FReplicated_Int16
	{
	public:
		unsigned char                                              UnknownData_BZW3[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int16_t                                                    Value;                                                   // 0x0010(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_8QQ9[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_UInt16
	 * Size -> 0x0018
	 */
	struct FReplicated_UInt16
	{
	public:
		unsigned char                                              UnknownData_8IT4[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint16_t                                                   Value;                                                   // 0x0010(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IXFC[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FString
	 * Size -> 0x0020
	 */
	struct FReplicated_FString
	{
	public:
		unsigned char                                              UnknownData_BK1U[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_FName
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_FName
	{
	public:
		unsigned char                                              UnknownData_PL49[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_Double
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_Double
	{
	public:
		unsigned char                                              UnknownData_IAV0[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<double>                                             ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_Float
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_Float
	{
	public:
		unsigned char                                              UnknownData_D1C5[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_UInt64
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_UInt64
	{
	public:
		unsigned char                                              UnknownData_YSY5[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint64_t>                                           ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_Int64
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_Int64
	{
	public:
		unsigned char                                              UnknownData_B2PM[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int64_t>                                            ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_UInt32
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_UInt32
	{
	public:
		unsigned char                                              UnknownData_YD2O[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint32_t>                                           ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_Int32
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_Int32
	{
	public:
		unsigned char                                              UnknownData_YIB0[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int>                                                ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_UInt16
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_UInt16
	{
	public:
		unsigned char                                              UnknownData_JKQD[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint16_t>                                           ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_Int16
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_Int16
	{
	public:
		unsigned char                                              UnknownData_Y7C9[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int16_t>                                            ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_UInt8
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_UInt8
	{
	public:
		unsigned char                                              UnknownData_FX05[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<unsigned char>                                      ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.ReplicatedArray_Int8
	 * Size -> 0x0020
	 */
	struct FReplicatedArray_Int8
	{
	public:
		unsigned char                                              UnknownData_NKEE[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int8_t>                                             ReplicatedArray;                                         // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.AttachRagdollParams
	 * Size -> 0x0070
	 */
	struct FAttachRagdollParams
	{
	public:
		class FName                                                AttachBone;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USceneComponent*                                     AttachParent;                                            // 0x0008(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDoInterpolate : 1;                                      // 0x0010(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bAbsoluteLocation : 1;                                   // 0x0010(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D538[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             InterpToLocation;                                        // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAttachRagdollBlendParams                           InterpParams;                                            // 0x0020(0x003C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XH10[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        OtherKinematicBones;                                     // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ProjectileAimContext
	 * Size -> 0x0028
	 */
	struct FProjectileAimContext
	{
	public:
		class AActor*                                              Initiator;                                               // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              InventoryItemClass;                                      // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAbilitySpec*                                        AbilitySpec;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttackName;                                              // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        RandomSeed;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FNV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ChargingActivationDelegates
	 * Size -> 0x0030
	 */
	struct FChargingActivationDelegates
	{
	public:
		unsigned char                                              UnknownData_PPLN[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ReplicatedDateTime
	 * Size -> 0x0008
	 */
	struct FTBL_FReplicatedDateTime
	{
	public:
		int64_t                                                    Ticks;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate

	};

	/**
	 * ScriptStruct TBL.SoundRTPCEntry
	 * Size -> 0x0018
	 */
	struct FSoundRTPCEntry
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InterpTime;                                              // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.SoundStateEntry
	 * Size -> 0x0020
	 */
	struct FSoundStateEntry
	{
	public:
		class FString                                              StateGroup;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              State;                                                   // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.DefaultWeaponDataTable
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FDefaultWeaponDataTable : public FTableRowBase
	{
	public:
		TBL_EAudioClassType                                        Class;                                                   // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UYIN[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int>                                                WeaponDefIds;                                            // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.GameModeMessageTable
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FGameModeMessageTable : public FTableRowBase
	{
	public:
		class FString                                              EventTag;                                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               DisplayGroup;                                            // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EFaction                                               CosmeticFaction;                                         // 0x0019(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_68J8[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Message;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UAkAudioEvent*                                       Sound;                                                   // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        GameModeMessageType;                                     // 0x0048(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EMessagePriority                                       MessagePriority;                                         // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_EGameModeMessageDisplayType                            MessageDisplayType;                                      // 0x0051(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StagePersistentMessage;                                  // 0x0052(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XGH5[0x1];                                   // 0x0053(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTag                                        KillFeedType;                                            // 0x0054(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I50F[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          KillFeedIcon;                                            // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CommanderEvent;                                          // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DBA6[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FContextVoEntry>                             ContextVos;                                              // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilityDescription
	 * Size -> 0x0038
	 */
	struct FAbilityDescription
	{
	public:
		struct FDataTableRowSelection                              AbilityDescriptionType;                                  // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FDataTableRowSelection>                      DescriptorTags;                                          // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FText>                                        AbilityDescriptionTexts;                                 // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilityCategoryDescription
	 * Size -> 0x0010
	 */
	struct FAbilityCategoryDescription
	{
	public:
		TArray<TBL_EAbilityDescriptorCategory>                     Categories;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.AbilityDescTableRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FAbilityDescTableRow : public FTableRowBase
	{
	public:
		struct FAbilityCategoryDescription                         AbilityDescription;                                      // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic

	};

	/**
	 * ScriptStruct TBL.ClashEventReplicated
	 * Size -> 0x0030
	 */
	struct FClashEventReplicated
	{
	public:
		struct FVector_NetQuantize                                 HitLocation;                                             // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           HitDirection;                                            // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              InitiatorInventoryItemClass;                             // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              TargetInventoryItemClass;                                // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InitiatorAttackIndex;                                    // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TargetAttackIndex;                                       // 0x0029(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLI7[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.ParryEventReplicated
	 * Size -> 0x0050
	 */
	struct FParryEventReplicated
	{
	public:
		struct FVector_NetQuantize                                 ImpactPoint;                                             // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 HitLocation;                                             // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           HitDirection;                                            // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O3GE[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AInventoryItem*                                      AttackerInventoryItem;                                   // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              AttackerInventoryItemClass;                              // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass*                                              DefenderInventoryItemClass;                              // 0x0038(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int                                                        ParryAttackID;                                           // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AttackerAttackIndex;                                     // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefenderAttackIndex;                                     // 0x0045(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              AttackerPostCombatStateIndex;                            // 0x0046(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DefenderPostCombatStateIndex;                            // 0x0047(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TBL_ECrowdControlVariant                                   DefenderCrowdControlVariant;                             // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsAltAttack : 1;                                        // 0x0049(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bDefenderDisarmed : 1;                                   // 0x0049(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bProjectileAttack : 1;                                   // 0x0049(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bIsCounterSuccess : 1;                                   // 0x0049(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              bSameAttackClash : 1;                                    // 0x0049(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TMO4[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (PADDING)

	};

	/**
	 * ScriptStruct TBL.Replicated_FAKAudioStartStopStruct
	 * Size -> 0x0020
	 */
	struct FReplicated_FAKAudioStartStopStruct
	{
	public:
		unsigned char                                              UnknownData_CY5W[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAKAudioStartStopStruct                             Value;                                                   // 0x0010(0x0010) NoDestructor, NativeAccessSpecifierPrivate

	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
