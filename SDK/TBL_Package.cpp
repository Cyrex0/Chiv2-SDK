/**
 * Name: chiv2
 * Version: 123456
 */

#include "../pch.h"

namespace CG
{
	// --------------------------------------------------
	// # Structs Functions
	// --------------------------------------------------
	/**
	 * Function:
	 * 		Offset -> 0x017089C0
	 * 		Name   -> Function TBL.UtilityAI_Action.TickAction
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUtilityAI_Context                          C                                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUtilityAI_Action::TickAction(float DeltaTime, const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.TickAction");
		
		UUtilityAI_Action_TickAction_Params params {};
		params.DeltaTime = DeltaTime;
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708810
	 * 		Name   -> Function TBL.UtilityAI_Action.ShouldRestartIfRedecidedUpon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UUtilityAI_Action::ShouldRestartIfRedecidedUpon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.ShouldRestartIfRedecidedUpon");
		
		UUtilityAI_Action_ShouldRestartIfRedecidedUpon_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708580
	 * 		Name   -> Function TBL.UtilityAI_Action.SetCanInterrupt
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bInCanInterrupt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUtilityAI_Action::SetCanInterrupt(bool bInCanInterrupt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.SetCanInterrupt");
		
		UUtilityAI_Action_SetCanInterrupt_Params params {};
		params.bInCanInterrupt = bInCanInterrupt;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707880
	 * 		Name   -> Function TBL.UtilityAI_Action.PerformAction
	 * 		Flags  -> (Native, Event, Protected, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUtilityAI_Action::PerformAction(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.PerformAction");
		
		UUtilityAI_Action_PerformAction_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017077A0
	 * 		Name   -> Function TBL.UtilityAI_Action.MarkReadyToFinish
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UUtilityAI_Action::MarkReadyToFinish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.MarkReadyToFinish");
		
		UUtilityAI_Action_MarkReadyToFinish_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017077A0
	 * 		Name   -> Function TBL.UtilityAI_Action.MarkFinished
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UUtilityAI_Action::MarkFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.MarkFinished");
		
		UUtilityAI_Action_MarkFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707450
	 * 		Name   -> Function TBL.UtilityAI_Action.IsInProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UUtilityAI_Action::IsInProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.IsInProgress");
		
		UUtilityAI_Action_IsInProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707340
	 * 		Name   -> Function TBL.UtilityAI_Action.IsDoneOrCanInterrupt
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UUtilityAI_Action::IsDoneOrCanInterrupt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.IsDoneOrCanInterrupt");
		
		UUtilityAI_Action_IsDoneOrCanInterrupt_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017058C0
	 * 		Name   -> Function TBL.UtilityAI_Action.CompleteAction
	 * 		Flags  -> (Native, Event, Protected, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UUtilityAI_Action::CompleteAction(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_Action.CompleteAction");
		
		UUtilityAI_Action_CompleteAction_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_Action.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_Action::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_Action");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BED90
	 * 		Name   -> Function TBL.A_DismountSiegeEngine.Dismount
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		struct FAIDismountData                             AIDismountData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UA_DismountSiegeEngine::Dismount(const struct FAIDismountData& AIDismountData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_DismountSiegeEngine.Dismount");
		
		UA_DismountSiegeEngine_Dismount_Params params {};
		params.AIDismountData = AIDismountData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UA_DismountSiegeEngine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UA_DismountSiegeEngine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.A_DismountSiegeEngine");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UA_EnterCombatWith.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UA_EnterCombatWith::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.A_EnterCombatWith");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UA_MaintainDistanceFromActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UA_MaintainDistanceFromActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.A_MaintainDistanceFromActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UA_SetBlackboardValueToContextTarget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UA_SetBlackboardValueToContextTarget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.A_SetBlackboardValueToContextTarget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF9B0
	 * 		Name   -> Function TBL.A_UseBatteringRam.StopCharging
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UA_UseBatteringRam::StopCharging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseBatteringRam.StopCharging");
		
		UA_UseBatteringRam_StopCharging_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF970
	 * 		Name   -> Function TBL.A_UseBatteringRam.StartCharging
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UA_UseBatteringRam::StartCharging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseBatteringRam.StartCharging");
		
		UA_UseBatteringRam_StartCharging_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF3F0
	 * 		Name   -> Function TBL.A_UseBatteringRam.OnDismount
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Driver                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UA_UseBatteringRam::OnDismount(class ATBLCharacter* Driver, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseBatteringRam.OnDismount");
		
		UA_UseBatteringRam_OnDismount_Params params {};
		params.Driver = Driver;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF250
	 * 		Name   -> Function TBL.A_UseBatteringRam.OnChargeUpdated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ABatteringRam*                               InBatteringRam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Charge                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UA_UseBatteringRam::OnChargeUpdated(class ABatteringRam* InBatteringRam, float Charge)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseBatteringRam.OnChargeUpdated");
		
		UA_UseBatteringRam_OnChargeUpdated_Params params {};
		params.InBatteringRam = InBatteringRam;
		params.Charge = Charge;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UA_UseBatteringRam.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UA_UseBatteringRam::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.A_UseBatteringRam");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF9B0
	 * 		Name   -> Function TBL.A_UseCharacterMountableActor.StopCharging
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UA_UseCharacterMountableActor::StopCharging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseCharacterMountableActor.StopCharging");
		
		UA_UseCharacterMountableActor_StopCharging_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF990
	 * 		Name   -> Function TBL.A_UseCharacterMountableActor.StartCharging
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UA_UseCharacterMountableActor::StartCharging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseCharacterMountableActor.StartCharging");
		
		UA_UseCharacterMountableActor_StartCharging_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF3F0
	 * 		Name   -> Function TBL.A_UseCharacterMountableActor.OnDismount
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Driver                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UA_UseCharacterMountableActor::OnDismount(class ATBLCharacter* Driver, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseCharacterMountableActor.OnDismount");
		
		UA_UseCharacterMountableActor_OnDismount_Params params {};
		params.Driver = Driver;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF320
	 * 		Name   -> Function TBL.A_UseCharacterMountableActor.OnChargeUpdated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ACharacterMountableActor*                    InCharacterMountableActor                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Charge                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UA_UseCharacterMountableActor::OnChargeUpdated(class ACharacterMountableActor* InCharacterMountableActor, float Charge)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.A_UseCharacterMountableActor.OnChargeUpdated");
		
		UA_UseCharacterMountableActor_OnChargeUpdated_Params params {};
		params.InCharacterMountableActor = InCharacterMountableActor;
		params.Charge = Charge;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UA_UseCharacterMountableActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UA_UseCharacterMountableActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.A_UseCharacterMountableActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BFA80
	 * 		Name   -> Function TBL.AbilitiesComponent.TerminateAbility
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAbilitySpec*                                Spec                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FResult UAbilitiesComponent::TerminateAbility(class UAbilitySpec* Spec)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.TerminateAbility");
		
		UAbilitiesComponent_TerminateAbility_Params params {};
		params.Spec = Spec;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF9D0
	 * 		Name   -> Function TBL.AbilitiesComponent.SyncServerInitiateAbility
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FServerInitiateAbilityParams                Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::SyncServerInitiateAbility(const struct FServerInitiateAbilityParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.SyncServerInitiateAbility");
		
		UAbilitiesComponent_SyncServerInitiateAbility_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF8B0
	 * 		Name   -> Function TBL.AbilitiesComponent.ServerTerminateAbility
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class UAbilitySpec*                                AbilitySpec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::ServerTerminateAbility(class UAbilitySpec* AbilitySpec)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.ServerTerminateAbility");
		
		UAbilitiesComponent_ServerTerminateAbility_Params params {};
		params.AbilitySpec = AbilitySpec;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF7E0
	 * 		Name   -> Function TBL.AbilitiesComponent.ServerInitiateAbility
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FServerInitiateAbilityParams                Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::ServerInitiateAbility(const struct FServerInitiateAbilityParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.ServerInitiateAbility");
		
		UAbilitiesComponent_ServerInitiateAbility_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF670
	 * 		Name   -> Function TBL.AbilitiesComponent.ServerCombatStateStartAttack
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class UAbilitySpec*                                AbilitySpec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCombatStateStartAttack                     Params                                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::ServerCombatStateStartAttack(class UAbilitySpec* AbilitySpec, const struct FCombatStateStartAttack& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.ServerCombatStateStartAttack");
		
		UAbilitiesComponent_ServerCombatStateStartAttack_Params params {};
		params.AbilitySpec = AbilitySpec;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF570
	 * 		Name   -> Function TBL.AbilitiesComponent.RemoveInvocationActor
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAbilitySpec*                                AbilitySpec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EInvocationScope                               Scope                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::RemoveInvocationActor(class UAbilitySpec* AbilitySpec, TBL_EInvocationScope Scope, class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.RemoveInvocationActor");
		
		UAbilitiesComponent_RemoveInvocationActor_Params params {};
		params.AbilitySpec = AbilitySpec;
		params.Scope = Scope;
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF4B0
	 * 		Name   -> Function TBL.AbilitiesComponent.OnInvocationComplete
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AAbilityInvocation*                          Invocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAbilitySpec*                                AbilitySpec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::OnInvocationComplete(class AAbilityInvocation* Invocation, class UAbilitySpec* AbilitySpec)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.OnInvocationComplete");
		
		UAbilitiesComponent_OnInvocationComplete_Params params {};
		params.Invocation = Invocation;
		params.AbilitySpec = AbilitySpec;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF130
	 * 		Name   -> Function TBL.AbilitiesComponent.InitiateAbility
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAbilitySpec*                                Spec                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAbilityInitiationParams                    InitiationParams                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	struct FResult UAbilitiesComponent::InitiateAbility(class UAbilitySpec* Spec, const struct FAbilityInitiationParams& InitiationParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.InitiateAbility");
		
		UAbilitiesComponent_InitiateAbility_Params params {};
		params.Spec = Spec;
		params.InitiationParams = InitiationParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BEE30
	 * 		Name   -> Function TBL.AbilitiesComponent.GetAbility
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAbilitySpec*                                Spec                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FAbility UAbilitiesComponent::GetAbility(class UAbilitySpec* Spec)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.GetAbility");
		
		UAbilitiesComponent_GetAbility_Params params {};
		params.Spec = Spec;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BEC20
	 * 		Name   -> Function TBL.AbilitiesComponent.ClientStartTargetMethodCosmetic
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class UAbilitySpec*                                AbilitySpec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                InvocationId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAbilityInitiationParams                    InitiationParams                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UAbilityTargetMethod*                        TargetMethod                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::ClientStartTargetMethodCosmetic(class UAbilitySpec* AbilitySpec, int InvocationId, const struct FAbilityInitiationParams& InitiationParams, class UAbilityTargetMethod* TargetMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.ClientStartTargetMethodCosmetic");
		
		UAbilitiesComponent_ClientStartTargetMethodCosmetic_Params params {};
		params.AbilitySpec = AbilitySpec;
		params.InvocationId = InvocationId;
		params.InitiationParams = InitiationParams;
		params.TargetMethod = TargetMethod;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BEB80
	 * 		Name   -> Function TBL.AbilitiesComponent.ClientSpamTest
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		class FString                                      Payload                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::ClientSpamTest(const class FString& Payload)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.ClientSpamTest");
		
		UAbilitiesComponent_ClientSpamTest_Params params {};
		params.Payload = Payload;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BEAF0
	 * 		Name   -> Function TBL.AbilitiesComponent.ClientAbilityInvocationComplete
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		int                                                InvocationId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::ClientAbilityInvocationComplete(int InvocationId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.ClientAbilityInvocationComplete");
		
		UAbilitiesComponent_ClientAbilityInvocationComplete_Params params {};
		params.InvocationId = InvocationId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BEA70
	 * 		Name   -> Function TBL.AbilitiesComponent.ClientAbilityInitiated
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		struct FClientAbilityInitiationParams              Params                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UAbilitiesComponent::ClientAbilityInitiated(const struct FClientAbilityInitiationParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.ClientAbilityInitiated");
		
		UAbilitiesComponent_ClientAbilityInitiated_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BE9D0
	 * 		Name   -> Function TBL.AbilitiesComponent.CanInitiate
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAbilitySpec*                                Spec                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FResult UAbilitiesComponent::CanInitiate(class UAbilitySpec* Spec)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitiesComponent.CanInitiate");
		
		UAbilitiesComponent_CanInitiate_Params params {};
		params.Spec = Spec;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAbilitiesComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAbilitiesComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilitiesComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAbilityActivationMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAbilityActivationMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilityActivationMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF0A0
	 * 		Name   -> Function TBL.AbilityConfig.GetAnimationMontageSection
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AbilityName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAbilityConfig::GetAnimationMontageSection(const class FName& AbilityName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityConfig.GetAnimationMontageSection");
		
		UAbilityConfig_GetAnimationMontageSection_Params params {};
		params.AbilityName = AbilityName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BF010
	 * 		Name   -> Function TBL.AbilityConfig.GetAnimationMontage
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AbilityName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UAbilityConfig::GetAnimationMontage(const class FName& AbilityName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityConfig.GetAnimationMontage");
		
		UAbilityConfig_GetAnimationMontage_Params params {};
		params.AbilityName = AbilityName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015BEF80
	 * 		Name   -> Function TBL.AbilityConfig.GetAbilitySpec
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AbilityName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAbilitySpec* UAbilityConfig::GetAbilitySpec(const class FName& AbilityName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityConfig.GetAbilitySpec");
		
		UAbilityConfig_GetAbilitySpec_Params params {};
		params.AbilityName = AbilityName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAbilityConfig.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAbilityConfig::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilityConfig");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Action");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAbilityCost.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAbilityCost::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilityCost");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3930
	 * 		Name   -> Function TBL.AbilityInvocation.Terminate
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AAbilityInvocation::Terminate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocation.Terminate");
		
		AAbilityInvocation_Terminate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C33B0
	 * 		Name   -> Function TBL.AbilityInvocation.RemoveInvocationActor
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAbilityInvocation::RemoveInvocationActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocation.RemoveInvocationActor");
		
		AAbilityInvocation_RemoveInvocationActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C32B0
	 * 		Name   -> Function TBL.AbilityInvocation.OnActorDestroyed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAbilityInvocation::OnActorDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocation.OnActorDestroyed");
		
		AAbilityInvocation_OnActorDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2C70
	 * 		Name   -> Function TBL.AbilityInvocation.FindInvocationActors
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FName                                        ActorName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              OutActors                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAbilityInvocation::FindInvocationActors(const class FName& ActorName, TArray<class AActor*>* OutActors)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocation.FindInvocationActors");
		
		AAbilityInvocation_FindInvocationActors_Params params {};
		params.ActorName = ActorName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutActors != nullptr)
			*OutActors = params.OutActors;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2BE0
	 * 		Name   -> Function TBL.AbilityInvocation.FindInvocationActor
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int AAbilityInvocation::FindInvocationActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocation.FindInvocationActor");
		
		AAbilityInvocation_FindInvocationActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2600
	 * 		Name   -> Function TBL.AbilityInvocation.AddInvocationActor
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        ActorName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAbilityInvocation::AddInvocationActor(const class FName& ActorName, class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocation.AddInvocationActor");
		
		AAbilityInvocation_AddInvocationActor_Params params {};
		params.ActorName = ActorName;
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AAbilityInvocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAbilityInvocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilityInvocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2A40
	 * 		Name   -> Function TBL.AbilityInvocationRegistryComponent.ClientTargetMethodEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
	 * Parameters:
	 * 		int                                                InvocationId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TargetMethodName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ETargetMethodEvent                             Event                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              HitTargets                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilityInvocationRegistryComponent::ClientTargetMethodEvent(int InvocationId, const class FName& TargetMethodName, TBL_ETargetMethodEvent Event, const struct FVector& Location, TArray<class AActor*> HitTargets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocationRegistryComponent.ClientTargetMethodEvent");
		
		UAbilityInvocationRegistryComponent_ClientTargetMethodEvent_Params params {};
		params.InvocationId = InvocationId;
		params.TargetMethodName = TargetMethodName;
		params.Event = Event;
		params.Location = Location;
		params.HitTargets = HitTargets;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2960
	 * 		Name   -> Function TBL.AbilityInvocationRegistryComponent.ClientAbilityError
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		int                                                InvocationId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FResult                                     Error                                                      (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UAbilityInvocationRegistryComponent::ClientAbilityError(int InvocationId, const struct FResult& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityInvocationRegistryComponent.ClientAbilityError");
		
		UAbilityInvocationRegistryComponent_ClientAbilityError_Params params {};
		params.InvocationId = InvocationId;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAbilityInvocationRegistryComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAbilityInvocationRegistryComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilityInvocationRegistryComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2D80
	 * 		Name   -> Function TBL.AbilitySpec.GetAllChildActions
	 * 		Flags  -> (Final, Native, Public, HasOutParms, Const)
	 * Parameters:
	 * 		TArray<class UAction*>                             outActions                                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAbilitySpec::GetAllChildActions(TArray<class UAction*>* outActions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilitySpec.GetAllChildActions");
		
		UAbilitySpec_GetAllChildActions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (outActions != nullptr)
			*outActions = params.outActions;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAbilitySpec.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAbilitySpec::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilitySpec");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3880
	 * 		Name   -> Function TBL.AbilityTargetMethod.StartCosmetic
	 * 		Flags  -> (Native, Public)
	 */
	void UAbilityTargetMethod::StartCosmetic()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.StartCosmetic");
		
		UAbilityTargetMethod_StartCosmetic_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3860
	 * 		Name   -> Function TBL.AbilityTargetMethod.StartAutonomous
	 * 		Flags  -> (Native, Public)
	 */
	void UAbilityTargetMethod::StartAutonomous()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.StartAutonomous");
		
		UAbilityTargetMethod_StartAutonomous_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EAB080
	 * 		Name   -> Function TBL.AbilityTargetMethod.Start
	 * 		Flags  -> (Native, Public)
	 */
	void UAbilityTargetMethod::Start()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.Start");
		
		UAbilityTargetMethod_Start_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2EF0
	 * 		Name   -> Function TBL.AbilityTargetMethod.GetInvocation
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	class AAbilityInvocation* UAbilityTargetMethod::GetInvocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.GetInvocation");
		
		UAbilityTargetMethod_GetInvocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2E70
	 * 		Name   -> Function TBL.AbilityTargetMethod.GetContextString
	 * 		Flags  -> (Final, Native, Protected, Const)
	 */
	class FString UAbilityTargetMethod::GetContextString()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.GetContextString");
		
		UAbilityTargetMethod_GetContextString_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2D60
	 * 		Name   -> Function TBL.AbilityTargetMethod.Finish
	 * 		Flags  -> (Native, Public)
	 */
	void UAbilityTargetMethod::Finish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.Finish");
		
		UAbilityTargetMethod_Finish_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2720
	 * 		Name   -> Function TBL.AbilityTargetMethod.ClampTargetLocationToGround
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      InInitiator                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     TargetLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxRange                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHitGround                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTraceComplex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxGroundTraceZAllowance                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UAbilityTargetMethod::ClampTargetLocationToGround(class AActor* InInitiator, const struct FVector& TargetLocation, float MaxRange, bool* bHitGround, bool bTraceComplex, float MaxGroundTraceZAllowance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.ClampTargetLocationToGround");
		
		UAbilityTargetMethod_ClampTargetLocationToGround_Params params {};
		params.InInitiator = InInitiator;
		params.TargetLocation = TargetLocation;
		params.MaxRange = MaxRange;
		params.bTraceComplex = bTraceComplex;
		params.MaxGroundTraceZAllowance = MaxGroundTraceZAllowance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bHitGround != nullptr)
			*bHitGround = params.bHitGround;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C26C0
	 * 		Name   -> Function TBL.AbilityTargetMethod.CanInitiate
	 * 		Flags  -> (Native, Public, Const)
	 */
	struct FResult UAbilityTargetMethod::CanInitiate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.CanInitiate");
		
		UAbilityTargetMethod_CanInitiate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2700
	 * 		Name   -> Function TBL.AbilityTargetMethod.Cancel
	 * 		Flags  -> (Native, Public)
	 */
	void UAbilityTargetMethod::Cancel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AbilityTargetMethod.Cancel");
		
		UAbilityTargetMethod_Cancel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAbilityTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAbilityTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AbilityTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGameSparksAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameSparksAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GameSparksAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3000
	 * 		Name   -> Function TBL.Achievement.GetTrackedObjectName
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class APlayerState*                                InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAchievementProgress                        InAchievement                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class FText UAchievement::GetTrackedObjectName(class APlayerState* InPlayerState, const struct FAchievementProgress& InAchievement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Achievement.GetTrackedObjectName");
		
		UAchievement_GetTrackedObjectName_Params params {};
		params.InPlayerState = InPlayerState;
		params.InAchievement = InAchievement;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Achievement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementGameModeInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementGameModeInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementGameModeInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementGameModeWin.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementGameModeWin::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementGameModeWin");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementKill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementKill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementKill");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementLevelWinInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementLevelWinInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementLevelWinInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementLevelWin.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementLevelWin::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementLevelWin");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3970
	 * 		Name   -> Function TBL.AchievementsList.UpdateProcessedItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UAchievementsList::UpdateProcessedItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AchievementsList.UpdateProcessedItems");
		
		UAchievementsList_UpdateProcessedItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.AchievementsList.OnSortAchievement__DelegateSignature
	 * 		Flags  -> (Public, Delegate, HasOutParms)
	 * Parameters:
	 * 		struct FAchievementProgress                        A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FAchievementProgress                        B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UAchievementsList::OnSortAchievement__DelegateSignature(const struct FAchievementProgress& A, const struct FAchievementProgress& B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.AchievementsList.OnSortAchievement__DelegateSignature");
		
		UAchievementsList_OnSortAchievement__DelegateSignature_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.AchievementsList.OnGenerateAchievement__DelegateSignature
	 * 		Flags  -> (Public, Delegate, HasOutParms)
	 * Parameters:
	 * 		struct FAchievementProgress                        Achievement                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UWidget* UAchievementsList::OnGenerateAchievement__DelegateSignature(const struct FAchievementProgress& Achievement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.AchievementsList.OnGenerateAchievement__DelegateSignature");
		
		UAchievementsList_OnGenerateAchievement__DelegateSignature_Params params {};
		params.Achievement = Achievement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.AchievementsList.OnFilterAchievement__DelegateSignature
	 * 		Flags  -> (Public, Delegate, HasOutParms)
	 * Parameters:
	 * 		struct FAchievementProgress                        Achievement                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UAchievementsList::OnFilterAchievement__DelegateSignature(const struct FAchievementProgress& Achievement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.AchievementsList.OnFilterAchievement__DelegateSignature");
		
		UAchievementsList_OnFilterAchievement__DelegateSignature_Params params {};
		params.Achievement = Achievement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3230
	 * 		Name   -> Function TBL.AchievementsList.Initialize
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAchievementsList::Initialize(class ATBLPlayerState* InPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AchievementsList.Initialize");
		
		UAchievementsList_Initialize_Params params {};
		params.InPlayerState = InPlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2FD0
	 * 		Name   -> Function TBL.AchievementsList.GetProcessedItemsCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int UAchievementsList::GetProcessedItemsCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AchievementsList.GetProcessedItemsCount");
		
		UAchievementsList_GetProcessedItemsCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2F20
	 * 		Name   -> Function TBL.AchievementsList.GetProcessedItemAt
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FAchievementProgress UAchievementsList::GetProcessedItemAt(int Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AchievementsList.GetProcessedItemAt");
		
		UAchievementsList_GetProcessedItemAt_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementsList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementsList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementsList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementWeaponKillInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementWeaponKillInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementWeaponKillInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAchievementWeaponKill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAchievementWeaponKill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AchievementWeaponKill");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAddMovementModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAddMovementModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AddMovementModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UProgressionReward.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProgressionReward::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ProgressionReward");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAddRandomItemDrop.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAddRandomItemDrop::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AddRandomItemDrop");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3990
	 * 		Name   -> Function TBL.AIControlHandler.UpdateSprint
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UAIControlHandler::UpdateSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.UpdateSprint");
		
		UAIControlHandler_UpdateSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3950
	 * 		Name   -> Function TBL.AIControlHandler.UpdateAction
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UAIControlHandler::UpdateAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.UpdateAction");
		
		UAIControlHandler_UpdateAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C38A0
	 * 		Name   -> Function TBL.AIControlHandler.StopAction
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		TBL_EWeaponAbilitySlotKey                          Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAIControlHandler::StopAction(TBL_EWeaponAbilitySlotKey Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.StopAction");
		
		UAIControlHandler_StopAction_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C37D0
	 * 		Name   -> Function TBL.AIControlHandler.StartAction
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		TBL_EWeaponAbilitySlotKey                          Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAIControlHandler::StartAction(TBL_EWeaponAbilitySlotKey Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.StartAction");
		
		UAIControlHandler_StartAction_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3740
	 * 		Name   -> Function TBL.AIControlHandler.RevokeSprint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     RequestedBy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAIControlHandler::RevokeSprint(class UObject* RequestedBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.RevokeSprint");
		
		UAIControlHandler_RevokeSprint_Params params {};
		params.RequestedBy = RequestedBy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C36C0
	 * 		Name   -> Function TBL.AIControlHandler.RevokeAllActionsFromObject
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     RequestedBy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAIControlHandler::RevokeAllActionsFromObject(class UObject* RequestedBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.RevokeAllActionsFromObject");
		
		UAIControlHandler_RevokeAllActionsFromObject_Params params {};
		params.RequestedBy = RequestedBy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C35C0
	 * 		Name   -> Function TBL.AIControlHandler.RevokeAction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EWeaponAbilitySlotKey                          Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     RequestedBy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EInputPriority                                 Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAIControlHandler::RevokeAction(TBL_EWeaponAbilitySlotKey Action, class UObject* RequestedBy, TBL_EInputPriority Priority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.RevokeAction");
		
		UAIControlHandler_RevokeAction_Params params {};
		params.Action = Action;
		params.RequestedBy = RequestedBy;
		params.Priority = Priority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3530
	 * 		Name   -> Function TBL.AIControlHandler.RequestSprint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     RequestedBy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAIControlHandler::RequestSprint(class UObject* RequestedBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.RequestSprint");
		
		UAIControlHandler_RequestSprint_Params params {};
		params.RequestedBy = RequestedBy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3430
	 * 		Name   -> Function TBL.AIControlHandler.RequestAction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EWeaponAbilitySlotKey                          Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     RequestedBy                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EInputPriority                                 Priority                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAIControlHandler::RequestAction(TBL_EWeaponAbilitySlotKey Action, class UObject* RequestedBy, TBL_EInputPriority Priority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.RequestAction");
		
		UAIControlHandler_RequestAction_Params params {};
		params.Action = Action;
		params.RequestedBy = RequestedBy;
		params.Priority = Priority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3330
	 * 		Name   -> Function TBL.AIControlHandler.OnPossess
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAIControlHandler::OnPossess(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.OnPossess");
		
		UAIControlHandler_OnPossess_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3210
	 * 		Name   -> Function TBL.AIControlHandler.Initialize
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UAIControlHandler::Initialize()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.Initialize");
		
		UAIControlHandler_Initialize_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C3170
	 * 		Name   -> Function TBL.AIControlHandler.GetWeaponAbilitySlotKey
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class FName                                        Name                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EWeaponAbilitySlotKey UAIControlHandler::GetWeaponAbilitySlotKey(const class FName& Name)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.GetWeaponAbilitySlotKey");
		
		UAIControlHandler_GetWeaponAbilitySlotKey_Params params {};
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2940
	 * 		Name   -> Function TBL.AIControlHandler.ClearSprint
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UAIControlHandler::ClearSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.ClearSprint");
		
		UAIControlHandler_ClearSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C2920
	 * 		Name   -> Function TBL.AIControlHandler.ClearActions
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UAIControlHandler::ClearActions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AIControlHandler.ClearActions");
		
		UAIControlHandler_ClearActions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAIControlHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAIControlHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AIControlHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6E30
	 * 		Name   -> Function TBL.AINavPoint.K2_GetGoodSprite
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UBillboardComponent* AAINavPoint::K2_GetGoodSprite()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AINavPoint.K2_GetGoodSprite");
		
		AAINavPoint_K2_GetGoodSprite_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6E10
	 * 		Name   -> Function TBL.AINavPoint.K2_GetBadSprite
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UBillboardComponent* AAINavPoint::K2_GetBadSprite()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AINavPoint.K2_GetBadSprite");
		
		AAINavPoint_K2_GetBadSprite_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6AF0
	 * 		Name   -> Function TBL.AINavPoint.Deactivate
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void AAINavPoint::Deactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AINavPoint.Deactivate");
		
		AAINavPoint_Deactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C68A0
	 * 		Name   -> Function TBL.AINavPoint.Activate
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void AAINavPoint::Activate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AINavPoint.Activate");
		
		AAINavPoint_Activate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AAINavPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAINavPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AINavPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF2B0
	 * 		Name   -> Function TBL.TBLPlayerStart.IsValidSpawnFor
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerStart::IsValidSpawnFor(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerStart.IsValidSpawnFor");
		
		ATBLPlayerStart_IsValidSpawnFor_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLPlayerStart.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLPlayerStart::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerStart");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AAIPlayerStart.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAIPlayerStart::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AIPlayerStart");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6EF0
	 * 		Name   -> Function TBL.AITagSystem.OnActorKilled
	 * 		Flags  -> (Final, Native, Private, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UAITagSystem::OnActorKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AITagSystem.OnActorKilled");
		
		UAITagSystem_OnActorKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6E70
	 * 		Name   -> Function TBL.AITagSystem.OnActorDestroyed
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAITagSystem::OnActorDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AITagSystem.OnActorDestroyed");
		
		UAITagSystem_OnActorDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAITagSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAITagSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AITagSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7950
	 * 		Name   -> Function TBL.AltWeightsLibrary.UpdateSkinWeightsOverride
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class USkinnedMeshComponent*                       InComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InBoneName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAltWeightsState                            InOutState                                                 (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UAltWeightsLibrary::STATIC_UpdateSkinWeightsOverride(class USkinnedMeshComponent* InComp, const class FName& InBoneName, struct FAltWeightsState* InOutState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AltWeightsLibrary.UpdateSkinWeightsOverride");
		
		UAltWeightsLibrary_UpdateSkinWeightsOverride_Params params {};
		params.InComp = InComp;
		params.InBoneName = InBoneName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InOutState != nullptr)
			*InOutState = params.InOutState;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7410
	 * 		Name   -> Function TBL.AltWeightsLibrary.SetSkinWeightsOverride
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class USkinnedMeshComponent*                       InComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAltWeightsState                            InState                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UAltWeightsLibrary::STATIC_SetSkinWeightsOverride(class USkinnedMeshComponent* InComp, const struct FAltWeightsState& InState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AltWeightsLibrary.SetSkinWeightsOverride");
		
		UAltWeightsLibrary_SetSkinWeightsOverride_Params params {};
		params.InComp = InComp;
		params.InState = InState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6BD0
	 * 		Name   -> Function TBL.AltWeightsLibrary.InitSkinWeightsState
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class USkinnedMeshComponent*                       InComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAltWeightsState                            InState                                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UAltWeightsLibrary::STATIC_InitSkinWeightsState(class USkinnedMeshComponent* InComp, struct FAltWeightsState* InState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AltWeightsLibrary.InitSkinWeightsState");
		
		UAltWeightsLibrary_InitSkinWeightsState_Params params {};
		params.InComp = InComp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InState != nullptr)
			*InState = params.InState;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6B60
	 * 		Name   -> Function TBL.AltWeightsLibrary.InitPawnAltWeightsState
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ACharacter*                                  Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAltWeightsLibrary::STATIC_InitPawnAltWeightsState(class ACharacter* Char)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AltWeightsLibrary.InitPawnAltWeightsState");
		
		UAltWeightsLibrary_InitPawnAltWeightsState_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6A80
	 * 		Name   -> Function TBL.AltWeightsLibrary.ClearAllSkinWeightsOverride
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class USkinnedMeshComponent*                       InComp                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAltWeightsLibrary::STATIC_ClearAllSkinWeightsOverride(class USkinnedMeshComponent* InComp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AltWeightsLibrary.ClearAllSkinWeightsOverride");
		
		UAltWeightsLibrary_ClearAllSkinWeightsOverride_Params params {};
		params.InComp = InComp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAltWeightsLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAltWeightsLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AltWeightsLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CF60
	 * 		Name   -> Function TBL.TBLActor.WakeUpNetDormancyForSeconds
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Seconds                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLActor::WakeUpNetDormancyForSeconds(float Seconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLActor.WakeUpNetDormancyForSeconds");
		
		ATBLActor_WakeUpNetDormancyForSeconds_Params params {};
		params.Seconds = Seconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BBF0
	 * 		Name   -> Function TBL.TBLActor.FallBackToSleep
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATBLActor::FallBackToSleep()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLActor.FallBackToSleep");
		
		ATBLActor_FallBackToSleep_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B4F0
	 * 		Name   -> Function TBL.TBLActor.CanBeBaseForCharacterTBL
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLActor::CanBeBaseForCharacterTBL(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLActor.CanBeBaseForCharacterTBL");
		
		ATBLActor_CanBeBaseForCharacterTBL_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7090
	 * 		Name   -> Function TBL.AlwaysOnMusicManager.SetCurrentMusicState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAlwaysOnMusicState                            NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AAlwaysOnMusicManager::SetCurrentMusicState(TBL_EAlwaysOnMusicState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AlwaysOnMusicManager.SetCurrentMusicState");
		
		AAlwaysOnMusicManager_SetCurrentMusicState_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6FD0
	 * 		Name   -> Function TBL.AlwaysOnMusicManager.OnRep_AlwaysOnMusicState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AAlwaysOnMusicManager::OnRep_AlwaysOnMusicState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AlwaysOnMusicManager.OnRep_AlwaysOnMusicState");
		
		AAlwaysOnMusicManager_OnRep_AlwaysOnMusicState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6B10
	 * 		Name   -> Function TBL.AlwaysOnMusicManager.GetCurrentMusicState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EAlwaysOnMusicState AAlwaysOnMusicManager::GetCurrentMusicState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AlwaysOnMusicManager.GetCurrentMusicState");
		
		AAlwaysOnMusicManager_GetCurrentMusicState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AAlwaysOnMusicManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAlwaysOnMusicManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AlwaysOnMusicManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6E50
	 * 		Name   -> Function TBL.AnalyticsUtilitiesLibrary.NotifySocialScreenOpened
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	void UAnalyticsUtilitiesLibrary::STATIC_NotifySocialScreenOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnalyticsUtilitiesLibrary.NotifySocialScreenOpened");
		
		UAnalyticsUtilitiesLibrary_NotifySocialScreenOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6A10
	 * 		Name   -> Function TBL.AnalyticsUtilitiesLibrary.AnalyticsEventOpenedMenuScreen
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAnalyticsMenuScreen                           Screen                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnalyticsUtilitiesLibrary::STATIC_AnalyticsEventOpenedMenuScreen(TBL_EAnalyticsMenuScreen Screen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnalyticsUtilitiesLibrary.AnalyticsEventOpenedMenuScreen");
		
		UAnalyticsUtilitiesLibrary_AnalyticsEventOpenedMenuScreen_Params params {};
		params.Screen = Screen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6930
	 * 		Name   -> Function TBL.AnalyticsUtilitiesLibrary.AnalyticsEventDeveloperMessageClickedUrl
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      AccountId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      URL                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnalyticsUtilitiesLibrary::STATIC_AnalyticsEventDeveloperMessageClickedUrl(const class FString& AccountId, const class FString& URL)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnalyticsUtilitiesLibrary.AnalyticsEventDeveloperMessageClickedUrl");
		
		UAnalyticsUtilitiesLibrary_AnalyticsEventDeveloperMessageClickedUrl_Params params {};
		params.AccountId = AccountId;
		params.URL = URL;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C68C0
	 * 		Name   -> Function TBL.AnalyticsUtilitiesLibrary.AnalyticsEventClosedMenuScreen
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAnalyticsMenuScreen                           Screen                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnalyticsUtilitiesLibrary::STATIC_AnalyticsEventClosedMenuScreen(TBL_EAnalyticsMenuScreen Screen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnalyticsUtilitiesLibrary.AnalyticsEventClosedMenuScreen");
		
		UAnalyticsUtilitiesLibrary_AnalyticsEventClosedMenuScreen_Params params {};
		params.Screen = Screen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnalyticsUtilitiesLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnalyticsUtilitiesLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnalyticsUtilitiesLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C78D0
	 * 		Name   -> Function TBL.AnimatableImage.SetVectorF
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InVectorF                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetVectorF(const struct FLinearColor& InVectorF)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetVectorF");
		
		UAnimatableImage_SetVectorF_Params params {};
		params.InVectorF = InVectorF;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7850
	 * 		Name   -> Function TBL.AnimatableImage.SetVectorE
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InVectorE                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetVectorE(const struct FLinearColor& InVectorE)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetVectorE");
		
		UAnimatableImage_SetVectorE_Params params {};
		params.InVectorE = InVectorE;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C77D0
	 * 		Name   -> Function TBL.AnimatableImage.SetVectorD
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InVectorD                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetVectorD(const struct FLinearColor& InVectorD)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetVectorD");
		
		UAnimatableImage_SetVectorD_Params params {};
		params.InVectorD = InVectorD;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7750
	 * 		Name   -> Function TBL.AnimatableImage.SetVectorC
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InVectorC                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetVectorC(const struct FLinearColor& InVectorC)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetVectorC");
		
		UAnimatableImage_SetVectorC_Params params {};
		params.InVectorC = InVectorC;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C76D0
	 * 		Name   -> Function TBL.AnimatableImage.SetVectorB
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InVectorA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetVectorB(const struct FLinearColor& InVectorA)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetVectorB");
		
		UAnimatableImage_SetVectorB_Params params {};
		params.InVectorA = InVectorA;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7650
	 * 		Name   -> Function TBL.AnimatableImage.SetVectorA
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InVectorA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetVectorA(const struct FLinearColor& InVectorA)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetVectorA");
		
		UAnimatableImage_SetVectorA_Params params {};
		params.InVectorA = InVectorA;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7390
	 * 		Name   -> Function TBL.AnimatableImage.SetFloatF
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InFloatF                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetFloatF(float InFloatF)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetFloatF");
		
		UAnimatableImage_SetFloatF_Params params {};
		params.InFloatF = InFloatF;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7310
	 * 		Name   -> Function TBL.AnimatableImage.SetFloatE
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InFloatE                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetFloatE(float InFloatE)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetFloatE");
		
		UAnimatableImage_SetFloatE_Params params {};
		params.InFloatE = InFloatE;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7290
	 * 		Name   -> Function TBL.AnimatableImage.SetFloatD
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InFloatD                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetFloatD(float InFloatD)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetFloatD");
		
		UAnimatableImage_SetFloatD_Params params {};
		params.InFloatD = InFloatD;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7210
	 * 		Name   -> Function TBL.AnimatableImage.SetFloatC
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InFloatC                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetFloatC(float InFloatC)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetFloatC");
		
		UAnimatableImage_SetFloatC_Params params {};
		params.InFloatC = InFloatC;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7190
	 * 		Name   -> Function TBL.AnimatableImage.SetFloatB
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InFloatB                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetFloatB(float InFloatB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetFloatB");
		
		UAnimatableImage_SetFloatB_Params params {};
		params.InFloatB = InFloatB;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7110
	 * 		Name   -> Function TBL.AnimatableImage.SetFloatA
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InFloatA                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatableImage::SetFloatA(float InFloatA)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatableImage.SetFloatA");
		
		UAnimatableImage_SetFloatA_Params params {};
		params.InFloatA = InFloatA;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.AnimatableImage.OverrideMaterial__DelegateSignature
	 * 		Flags  -> (Public, Delegate)
	 */
	class UMaterialInterface* UAnimatableImage::OverrideMaterial__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.AnimatableImage.OverrideMaterial__DelegateSignature");
		
		UAnimatableImage_OverrideMaterial__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimatableImage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimatableImage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimatableImage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C7010
	 * 		Name   -> Function TBL.AnimatingButton.SetColorAndOpacity
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InColorAndOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAnimatingButton::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatingButton.SetColorAndOpacity");
		
		UAnimatingButton_SetColorAndOpacity_Params params {};
		params.InColorAndOpacity = InColorAndOpacity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6FF0
	 * 		Name   -> Function TBL.AnimatingButton.PlayNormalAnimation
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UAnimatingButton::PlayNormalAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatingButton.PlayNormalAnimation");
		
		UAnimatingButton_PlayNormalAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6B30
	 * 		Name   -> Function TBL.AnimatingButton.GetDynamicMaterial
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UMaterialInstanceDynamic* UAnimatingButton::GetDynamicMaterial()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AnimatingButton.GetDynamicMaterial");
		
		UAnimatingButton_GetDynamicMaterial_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimatingButton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimatingButton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimatingButton");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169CAA0
	 * 		Name   -> Function TBL.TBLGameState.ShouldShowLoadoutOnPreparingMatch
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLGameState::ShouldShowLoadoutOnPreparingMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.ShouldShowLoadoutOnPreparingMatch");
		
		ATBLGameState_ShouldShowLoadoutOnPreparingMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169CA70
	 * 		Name   -> Function TBL.TBLGameState.ShouldShowLoadoutOnFirstDeath
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLGameState::ShouldShowLoadoutOnFirstDeath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.ShouldShowLoadoutOnFirstDeath");
		
		ATBLGameState_ShouldShowLoadoutOnFirstDeath_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C940
	 * 		Name   -> Function TBL.TBLGameState.SetStageTimeRemaining
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              TimeInSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::SetStageTimeRemaining(float TimeInSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.SetStageTimeRemaining");
		
		ATBLGameState_SetStageTimeRemaining_Params params {};
		params.TimeInSeconds = TimeInSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C8B0
	 * 		Name   -> Function TBL.TBLGameState.SetStageEndingMusic
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FAKAudioStartStopStruct                     Music                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::SetStageEndingMusic(const struct FAKAudioStartStopStruct& Music)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.SetStageEndingMusic");
		
		ATBLGameState_SetStageEndingMusic_Params params {};
		params.Music = Music;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C790
	 * 		Name   -> Function TBL.TBLGameState.SetObjectiveContextText
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FObjectiveContextMessage                    ContextObjectiveMessage                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::SetObjectiveContextText(const struct FObjectiveContextMessage& ContextObjectiveMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.SetObjectiveContextText");
		
		ATBLGameState_SetObjectiveContextText_Params params {};
		params.ContextObjectiveMessage = ContextObjectiveMessage;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C5B0
	 * 		Name   -> Function TBL.TBLGameState.SetGameModeType
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EGameModeType                                  InGameModeType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::SetGameModeType(TBL_EGameModeType InGameModeType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.SetGameModeType");
		
		ATBLGameState_SetGameModeType_Params params {};
		params.InGameModeType = InGameModeType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C4B0
	 * 		Name   -> Function TBL.TBLGameState.SetCinematicMode
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECinematicGameState                            State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ALevelSequenceActor*                         AgathaSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ALevelSequenceActor*                         MasonSequence                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::SetCinematicMode(TBL_ECinematicGameState State, class ALevelSequenceActor* AgathaSequence, class ALevelSequenceActor* MasonSequence)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.SetCinematicMode");
		
		ATBLGameState_SetCinematicMode_Params params {};
		params.State = State;
		params.AgathaSequence = AgathaSequence;
		params.MasonSequence = MasonSequence;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C3D0
	 * 		Name   -> Function TBL.TBLGameState.ResetStagePersistentGameModeMessages
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLGameState::ResetStagePersistentGameModeMessages()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.ResetStagePersistentGameModeMessages");
		
		ATBLGameState_ResetStagePersistentGameModeMessages_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C3A0
	 * 		Name   -> Function TBL.TBLGameState.RemoteStageEndingMusic
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLGameState::RemoteStageEndingMusic()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.RemoteStageEndingMusic");
		
		ATBLGameState_RemoteStageEndingMusic_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C110
	 * 		Name   -> Function TBL.TBLGameState.PlayerKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AController*                                 Killer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Killed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDeathEvent                                 DeathEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::PlayerKilled(class AController* Killer, class AController* Killed, class UDamageSource* DamageSource, const struct FDeathEvent& DeathEvent, const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.PlayerKilled");
		
		ATBLGameState_PlayerKilled_Params params {};
		params.Killer = Killer;
		params.Killed = Killed;
		params.DamageSource = DamageSource;
		params.DeathEvent = DeathEvent;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BF50
	 * 		Name   -> Function TBL.TBLGameState.PlayCinematicsWithBinding
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ALevelSequenceActor*                         AgathaSequence                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ALevelSequenceActor*                         MasonSequence                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TMap<class ASpawner*, class FString>               InSpawnerPrefixes                                          (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::PlayCinematicsWithBinding(class ALevelSequenceActor* AgathaSequence, class ALevelSequenceActor* MasonSequence, TMap<class ASpawner*, class FString> InSpawnerPrefixes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.PlayCinematicsWithBinding");
		
		ATBLGameState_PlayCinematicsWithBinding_Params params {};
		params.AgathaSequence = AgathaSequence;
		params.MasonSequence = MasonSequence;
		params.InSpawnerPrefixes = InSpawnerPrefixes;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BF30
	 * 		Name   -> Function TBL.TBLGameState.OnRep_Victor
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_Victor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_Victor");
		
		ATBLGameState_OnRep_Victor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BF10
	 * 		Name   -> Function TBL.TBLGameState.OnRep_StageEndingMusic
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_StageEndingMusic()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_StageEndingMusic");
		
		ATBLGameState_OnRep_StageEndingMusic_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BEF0
	 * 		Name   -> Function TBL.TBLGameState.OnRep_SequenceBindings
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_SequenceBindings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_SequenceBindings");
		
		ATBLGameState_OnRep_SequenceBindings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BED0
	 * 		Name   -> Function TBL.TBLGameState.OnRep_PS5MatchResponsiblePlayer
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_PS5MatchResponsiblePlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_PS5MatchResponsiblePlayer");
		
		ATBLGameState_OnRep_PS5MatchResponsiblePlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BEB0
	 * 		Name   -> Function TBL.TBLGameState.OnRep_PS5MatchId
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_PS5MatchId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_PS5MatchId");
		
		ATBLGameState_OnRep_PS5MatchId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E921B0
	 * 		Name   -> Function TBL.TBLGameState.OnRep_PostMatchEndTime
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATBLGameState::OnRep_PostMatchEndTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_PostMatchEndTime");
		
		ATBLGameState_OnRep_PostMatchEndTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BE90
	 * 		Name   -> Function TBL.TBLGameState.OnRep_GameModeType
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_GameModeType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_GameModeType");
		
		ATBLGameState_OnRep_GameModeType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BE70
	 * 		Name   -> Function TBL.TBLGameState.OnRep_FactionContextObjectiveMessage
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_FactionContextObjectiveMessage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_FactionContextObjectiveMessage");
		
		ATBLGameState_OnRep_FactionContextObjectiveMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BE50
	 * 		Name   -> Function TBL.TBLGameState.OnRep_ClassLimits
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_ClassLimits()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_ClassLimits");
		
		ATBLGameState_OnRep_ClassLimits_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BE30
	 * 		Name   -> Function TBL.TBLGameState.OnRep_CinematicState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameState::OnRep_CinematicState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.OnRep_CinematicState");
		
		ATBLGameState_OnRep_CinematicState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BE10
	 * 		Name   -> Function TBL.TBLGameState.NotifyCinematicStartedPlayingTryBinding
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 */
	void ATBLGameState::NotifyCinematicStartedPlayingTryBinding()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.NotifyCinematicStartedPlayingTryBinding");
		
		ATBLGameState_NotifyCinematicStartedPlayingTryBinding_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BDE0
	 * 		Name   -> Function TBL.TBLGameState.IsWaitingForMinPlayersToStart
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLGameState::IsWaitingForMinPlayersToStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.IsWaitingForMinPlayersToStart");
		
		ATBLGameState_IsWaitingForMinPlayersToStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BDB0
	 * 		Name   -> Function TBL.TBLGameState.IsWaitingForAdminToStart
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLGameState::IsWaitingForAdminToStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.IsWaitingForAdminToStart");
		
		ATBLGameState_IsWaitingForAdminToStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BD80
	 * 		Name   -> Function TBL.TBLGameState.IsServerBadFrameTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLGameState::IsServerBadFrameTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.IsServerBadFrameTime");
		
		ATBLGameState_IsServerBadFrameTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BD50
	 * 		Name   -> Function TBL.TBLGameState.IsPostMatch
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLGameState::IsPostMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.IsPostMatch");
		
		ATBLGameState_IsPostMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BD20
	 * 		Name   -> Function TBL.TBLGameState.IsMatchWaitingToStart
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLGameState::IsMatchWaitingToStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.IsMatchWaitingToStart");
		
		ATBLGameState_IsMatchWaitingToStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BC90
	 * 		Name   -> Function TBL.TBLGameState.IsCurrentStage
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class AActor*                                      Stage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLGameState::IsCurrentStage(class AActor* Stage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.IsCurrentStage");
		
		ATBLGameState_IsCurrentStage_Params params {};
		params.Stage = Stage;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BC60
	 * 		Name   -> Function TBL.TBLGameState.GetWarmupTimeRemaining
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float ATBLGameState::GetWarmupTimeRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetWarmupTimeRemaining");
		
		ATBLGameState_GetWarmupTimeRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BB50
	 * 		Name   -> Function TBL.TBLGameState.GetTeamWithFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLTeam* ATBLGameState::GetTeamWithFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetTeamWithFaction");
		
		ATBLGameState_GetTeamWithFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BA50
	 * 		Name   -> Function TBL.TBLGameState.GetSubClassMaxCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLGameState::GetSubClassMaxCount(class UObject* WorldContextObject, class UClass* CharacterClass, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetSubClassMaxCount");
		
		ATBLGameState_GetSubClassMaxCount_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.CharacterClass = CharacterClass;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B9C0
	 * 		Name   -> Function TBL.TBLGameState.GetSubClassCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLGameState::GetSubClassCount(class UClass* CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetSubClassCount");
		
		ATBLGameState_GetSubClassCount_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B980
	 * 		Name   -> Function TBL.TBLGameState.GetStageTimeRemaining
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	float ATBLGameState::GetStageTimeRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetStageTimeRemaining");
		
		ATBLGameState_GetStageTimeRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B8A0
	 * 		Name   -> Function TBL.TBLGameState.GetSpawnableTeams
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             LocalPlayerState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<TBL_EFaction> ATBLGameState::GetSpawnableTeams(class ATBLPlayerState* LocalPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetSpawnableTeams");
		
		ATBLGameState_GetSpawnableTeams_Params params {};
		params.LocalPlayerState = LocalPlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B790
	 * 		Name   -> Function TBL.TBLGameState.GetSpawnableClasses
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             LocalPlayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class UClass*> ATBLGameState::GetSpawnableClasses(class ATBLPlayerState* LocalPlayer, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetSpawnableClasses");
		
		ATBLGameState_GetSpawnableClasses_Params params {};
		params.LocalPlayer = LocalPlayer;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B770
	 * 		Name   -> Function TBL.TBLGameState.GetServerTimeDifference
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float ATBLGameState::GetServerTimeDifference()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetServerTimeDifference");
		
		ATBLGameState_GetServerTimeDifference_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B740
	 * 		Name   -> Function TBL.TBLGameState.GetPreparingMatchTimeRemaining
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float ATBLGameState::GetPreparingMatchTimeRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetPreparingMatchTimeRemaining");
		
		ATBLGameState_GetPreparingMatchTimeRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B710
	 * 		Name   -> Function TBL.TBLGameState.GetPostMatchTimeRemaining
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	float ATBLGameState::GetPostMatchTimeRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetPostMatchTimeRemaining");
		
		ATBLGameState_GetPostMatchTimeRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B640
	 * 		Name   -> Function TBL.TBLGameState.GetNumObjectivePointsByCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EObjectivePointCategory                        Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLGameState::GetNumObjectivePointsByCategory(TBL_EFaction Faction, TBL_EObjectivePointCategory Category)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetNumObjectivePointsByCategory");
		
		ATBLGameState_GetNumObjectivePointsByCategory_Params params {};
		params.Faction = Faction;
		params.Category = Category;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B4D0
	 * 		Name   -> Function TBL.TBLGameState.GetLocalPostMatchMatchmakingStartTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float ATBLGameState::GetLocalPostMatchMatchmakingStartTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetLocalPostMatchMatchmakingStartTime");
		
		ATBLGameState_GetLocalPostMatchMatchmakingStartTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169ADB0
	 * 		Name   -> Function TBL.TBLGameState.GetGameModeWidgetClass
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	void ATBLGameState::GetGameModeWidgetClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetGameModeWidgetClass");
		
		ATBLGameState_GetGameModeWidgetClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169AD80
	 * 		Name   -> Function TBL.TBLGameState.GetGameModeEpilogueDuration
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
	 */
	float ATBLGameState::GetGameModeEpilogueDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetGameModeEpilogueDuration");
		
		ATBLGameState_GetGameModeEpilogueDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameState.GetCurrentStage
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	void ATBLGameState::GetCurrentStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetCurrentStage");
		
		ATBLGameState_GetCurrentStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169AD50
	 * 		Name   -> Function TBL.TBLGameState.GetCinematicPlaybackTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float ATBLGameState::GetCinematicPlaybackTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetCinematicPlaybackTime");
		
		ATBLGameState_GetCinematicPlaybackTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169AC50
	 * 		Name   -> Function TBL.TBLGameState.GetArchetypeMaxCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLGameState::GetArchetypeMaxCount(class UObject* WorldContextObject, class UClass* CharacterClass, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetArchetypeMaxCount");
		
		ATBLGameState_GetArchetypeMaxCount_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.CharacterClass = CharacterClass;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169ABC0
	 * 		Name   -> Function TBL.TBLGameState.GetArchetypeCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLGameState::GetArchetypeCount(class UClass* CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.GetArchetypeCount");
		
		ATBLGameState_GetArchetypeCount_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169AB30
	 * 		Name   -> Function TBL.TBLGameState.ConvertServerTimeToLocalTime
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              ServerTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ATBLGameState::ConvertServerTimeToLocalTime(float ServerTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.ConvertServerTimeToLocalTime");
		
		ATBLGameState_ConvertServerTimeToLocalTime_Params params {};
		params.ServerTime = ServerTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169AA00
	 * 		Name   -> Function TBL.TBLGameState.CalculateEndOfMatchCommodity
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLGameState::CalculateEndOfMatchCommodity(class ATBLPlayerController* Player, const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.CalculateEndOfMatchCommodity");
		
		ATBLGameState_CalculateEndOfMatchCommodity_Params params {};
		params.Player = Player;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169A980
	 * 		Name   -> Function TBL.TBLGameState.BroadcastSetEpicEndGameState
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public, NetClient)
	 * Parameters:
	 * 		struct FEpicEndGameState                           InEpicEndGameState                                         (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::BroadcastSetEpicEndGameState(const struct FEpicEndGameState& InEpicEndGameState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.BroadcastSetEpicEndGameState");
		
		ATBLGameState_BroadcastSetEpicEndGameState_Params params {};
		params.InEpicEndGameState = InEpicEndGameState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169A850
	 * 		Name   -> Function TBL.TBLGameState.BroadcastPlayerKilled
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		struct FDeathEvent                                 DeathEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::BroadcastPlayerKilled(const struct FDeathEvent& DeathEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.BroadcastPlayerKilled");
		
		ATBLGameState_BroadcastPlayerKilled_Params params {};
		params.DeathEvent = DeathEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169A710
	 * 		Name   -> Function TBL.TBLGameState.BroadcastLastTeamScoreEvent
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
	 * Parameters:
	 * 		struct FTeamScoreEvent                             TeamScoreEvent                                             (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::BroadcastLastTeamScoreEvent(const struct FTeamScoreEvent& TeamScoreEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.BroadcastLastTeamScoreEvent");
		
		ATBLGameState_BroadcastLastTeamScoreEvent_Params params {};
		params.TeamScoreEvent = TeamScoreEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169A680
	 * 		Name   -> Function TBL.TBLGameState.BroadcastDestroyTornOffItem
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		class FName                                        TornOffName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::BroadcastDestroyTornOffItem(const class FName& TornOffName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.BroadcastDestroyTornOffItem");
		
		ATBLGameState_BroadcastDestroyTornOffItem_Params params {};
		params.TornOffName = TornOffName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169A550
	 * 		Name   -> Function TBL.TBLGameState.AddStagePersistentGameModeMessages
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FGameModeMessage>                    NewMessages                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::AddStagePersistentGameModeMessages(TArray<struct FGameModeMessage> NewMessages)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.AddStagePersistentGameModeMessages");
		
		ATBLGameState_AddStagePersistentGameModeMessages_Params params {};
		params.NewMessages = NewMessages;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169A450
	 * 		Name   -> Function TBL.TBLGameState.AddObjectivePointEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                PointValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EObjectivePointCategory                        Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameState::AddObjectivePointEvent(TBL_EFaction Faction, int PointValue, TBL_EObjectivePointCategory Category)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameState.AddObjectivePointEvent");
		
		ATBLGameState_AddObjectivePointEvent_Params params {};
		params.Faction = Faction;
		params.PointValue = PointValue;
		params.Category = Category;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLGameState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLGameState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCFC0
	 * 		Name   -> Function TBL.ArenaGameState.SetRemainingLives
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                InRemainingLives                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AArenaGameState::SetRemainingLives(TBL_EFaction Faction, int InRemainingLives)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.SetRemainingLives");
		
		AArenaGameState_SetRemainingLives_Params params {};
		params.Faction = Faction;
		params.InRemainingLives = InRemainingLives;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCF80
	 * 		Name   -> Function TBL.ArenaGameState.OnRep_VictoryPodiumBindings
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaGameState::OnRep_VictoryPodiumBindings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.OnRep_VictoryPodiumBindings");
		
		AArenaGameState_OnRep_VictoryPodiumBindings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCF60
	 * 		Name   -> Function TBL.ArenaGameState.OnRep_VictoryPodium
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaGameState::OnRep_VictoryPodium()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.OnRep_VictoryPodium");
		
		AArenaGameState_OnRep_VictoryPodium_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCF40
	 * 		Name   -> Function TBL.ArenaGameState.OnRep_RoundVictories
	 * 		Flags  -> (Native, Protected)
	 */
	void AArenaGameState::OnRep_RoundVictories()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.OnRep_RoundVictories");
		
		AArenaGameState_OnRep_RoundVictories_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCF20
	 * 		Name   -> Function TBL.ArenaGameState.OnRep_RemainingLives
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AArenaGameState::OnRep_RemainingLives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.OnRep_RemainingLives");
		
		AArenaGameState_OnRep_RemainingLives_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCF00
	 * 		Name   -> Function TBL.ArenaGameState.OnRep_MasonPlayersAtStartOfRound
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaGameState::OnRep_MasonPlayersAtStartOfRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.OnRep_MasonPlayersAtStartOfRound");
		
		AArenaGameState_OnRep_MasonPlayersAtStartOfRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCEE0
	 * 		Name   -> Function TBL.ArenaGameState.OnRep_LivingPlayers
	 * 		Flags  -> (Native, Protected)
	 */
	void AArenaGameState::OnRep_LivingPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.OnRep_LivingPlayers");
		
		AArenaGameState_OnRep_LivingPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCE60
	 * 		Name   -> Function TBL.ArenaGameState.OnRep_AgathaPlayersAtStartOfRound
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaGameState::OnRep_AgathaPlayersAtStartOfRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.OnRep_AgathaPlayersAtStartOfRound");
		
		AArenaGameState_OnRep_AgathaPlayersAtStartOfRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCC30
	 * 		Name   -> Function TBL.ArenaGameState.IsMatchPointForFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AArenaGameState::IsMatchPointForFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.IsMatchPointForFaction");
		
		AArenaGameState_IsMatchPointForFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCAD0
	 * 		Name   -> Function TBL.ArenaGameState.GetRoundVictories
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int AArenaGameState::GetRoundVictories(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.GetRoundVictories");
		
		AArenaGameState_GetRoundVictories_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCA40
	 * 		Name   -> Function TBL.ArenaGameState.GetRemainingLives
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int AArenaGameState::GetRemainingLives(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.GetRemainingLives");
		
		AArenaGameState_GetRemainingLives_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCA10
	 * 		Name   -> Function TBL.ArenaGameState.GetPreCountdownTimeRemaining
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float AArenaGameState::GetPreCountdownTimeRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.GetPreCountdownTimeRemaining");
		
		AArenaGameState_GetPreCountdownTimeRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC940
	 * 		Name   -> Function TBL.ArenaGameState.GetPlayersAtStartOfRound
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AArenaPlayerState*> AArenaGameState::GetPlayersAtStartOfRound(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.GetPlayersAtStartOfRound");
		
		AArenaGameState_GetPlayersAtStartOfRound_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC8B0
	 * 		Name   -> Function TBL.ArenaGameState.GetNumberOfLivingPlayers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int AArenaGameState::GetNumberOfLivingPlayers(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.GetNumberOfLivingPlayers");
		
		AArenaGameState_GetNumberOfLivingPlayers_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC880
	 * 		Name   -> Function TBL.ArenaGameState.GetMatchPointFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EFaction AArenaGameState::GetMatchPointFaction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.GetMatchPointFaction");
		
		AArenaGameState_GetMatchPointFaction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC750
	 * 		Name   -> Function TBL.ArenaGameState.ClientPlayPodiumSequence
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public, NetClient)
	 */
	void AArenaGameState::ClientPlayPodiumSequence()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.ClientPlayPodiumSequence");
		
		AArenaGameState_ClientPlayPodiumSequence_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC6D0
	 * 		Name   -> Function TBL.ArenaGameState.BroadcastRoundWonBy
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		TBL_EFaction                                       Winners                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AArenaGameState::BroadcastRoundWonBy(TBL_EFaction Winners)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameState.BroadcastRoundWonBy");
		
		AArenaGameState_BroadcastRoundWonBy_Params params {};
		params.Winners = Winners;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AArenaGameState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AArenaGameState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ArenaGameState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA730
	 * 		Name   -> Function TBL.TBLPlayerController.VoteStarted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UVotingInstance*                             VotingInstance                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::VoteStarted(class UVotingInstance* VotingInstance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.VoteStarted");
		
		ATBLPlayerController_VoteStarted_Params params {};
		params.VotingInstance = VotingInstance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA620
	 * 		Name   -> Function TBL.TBLPlayerController.VOIPSetRemoteVolumeExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::VOIPSetRemoteVolumeExec(float Volume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.VOIPSetRemoteVolumeExec");
		
		ATBLPlayerController_VOIPSetRemoteVolumeExec_Params params {};
		params.Volume = Volume;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA590
	 * 		Name   -> Function TBL.TBLPlayerController.VOIPMuteLocalExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               Mute                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::VOIPMuteLocalExec(bool Mute)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.VOIPMuteLocalExec");
		
		ATBLPlayerController_VOIPMuteLocalExec_Params params {};
		params.Mute = Mute;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA510
	 * 		Name   -> Function TBL.TBLPlayerController.VOIPGetTalkingNames
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable, BlueprintPure)
	 */
	TArray<class FString> ATBLPlayerController::VOIPGetTalkingNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.VOIPGetTalkingNames");
		
		ATBLPlayerController_VOIPGetTalkingNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA490
	 * 		Name   -> Function TBL.TBLPlayerController.VOIPGetTalkingIds
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable, BlueprintPure)
	 */
	TArray<class FString> ATBLPlayerController::VOIPGetTalkingIds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.VOIPGetTalkingIds");
		
		ATBLPlayerController_VOIPGetTalkingIds_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA470
	 * 		Name   -> Function TBL.TBLPlayerController.VOIPGetTalkingExec
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void ATBLPlayerController::VOIPGetTalkingExec()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.VOIPGetTalkingExec");
		
		ATBLPlayerController_VOIPGetTalkingExec_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA6A0
	 * 		Name   -> Function TBL.TBLPlayerController.VerifyCustomizationOnlineOwnership
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bOnOnlineStatsLoaded                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::VerifyCustomizationOnlineOwnership(bool bOnOnlineStatsLoaded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.VerifyCustomizationOnlineOwnership");
		
		ATBLPlayerController_VerifyCustomizationOnlineOwnership_Params params {};
		params.bOnOnlineStatsLoaded = bOnOnlineStatsLoaded;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA450
	 * 		Name   -> Function TBL.TBLPlayerController.UpdateVoiceStateForAllPlayers
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::UpdateVoiceStateForAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.UpdateVoiceStateForAllPlayers");
		
		ATBLPlayerController_UpdateVoiceStateForAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA430
	 * 		Name   -> Function TBL.TBLPlayerController.UpdateUncheckedItems
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::UpdateUncheckedItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.UpdateUncheckedItems");
		
		ATBLPlayerController_UpdateUncheckedItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.UpdateSelfCamera
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::UpdateSelfCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.UpdateSelfCamera");
		
		ATBLPlayerController_UpdateSelfCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA330
	 * 		Name   -> Function TBL.TBLPlayerController.UnPrepareAllVOEVents
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::UnPrepareAllVOEVents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.UnPrepareAllVOEVents");
		
		ATBLPlayerController_UnPrepareAllVOEVents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA350
	 * 		Name   -> Function TBL.TBLPlayerController.UnloadBank
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      BankName                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::UnloadBank(const class FString& BankName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.UnloadBank");
		
		ATBLPlayerController_UnloadBank_Params params {};
		params.BankName = BankName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA310
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleIgnoreAI
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::ToggleIgnoreAI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleIgnoreAI");
		
		ATBLPlayerController_ToggleIgnoreAI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA2F0
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleHud
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ToggleHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleHud");
		
		ATBLPlayerController_ToggleHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA2D0
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleGhostCameraMode
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ToggleGhostCameraMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleGhostCameraMode");
		
		ATBLPlayerController_ToggleGhostCameraMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA2B0
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleGhost
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::ToggleGhost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleGhost");
		
		ATBLPlayerController_ToggleGhost_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA290
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleFriendlyMarkers
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ToggleFriendlyMarkers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleFriendlyMarkers");
		
		ATBLPlayerController_ToggleFriendlyMarkers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA270
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleCameraKeyReleased
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::ToggleCameraKeyReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleCameraKeyReleased");
		
		ATBLPlayerController_ToggleCameraKeyReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA250
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleCameraKeyPressed
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::ToggleCameraKeyPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleCameraKeyPressed");
		
		ATBLPlayerController_ToggleCameraKeyPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA230
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleCamera
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::ToggleCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleCamera");
		
		ATBLPlayerController_ToggleCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA160
	 * 		Name   -> Function TBL.TBLPlayerController.ToggleAutospawn
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLeaveCurrentWave                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ToggleAutospawn(bool bEnabled, bool bLeaveCurrentWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ToggleAutospawn");
		
		ATBLPlayerController_ToggleAutospawn_Params params {};
		params.bEnabled = bEnabled;
		params.bLeaveCurrentWave = bLeaveCurrentWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA140
	 * 		Name   -> Function TBL.TBLPlayerController.TestBadTravel
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void ATBLPlayerController::TestBadTravel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.TestBadTravel");
		
		ATBLPlayerController_TestBadTravel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA120
	 * 		Name   -> Function TBL.TBLPlayerController.TeleportToMe
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void ATBLPlayerController::TeleportToMe()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.TeleportToMe");
		
		ATBLPlayerController_TeleportToMe_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CA070
	 * 		Name   -> Function TBL.TBLPlayerController.TeamSay
	 * 		Flags  -> (Exec, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::TeamSay(class FString* Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.TeamSay");
		
		ATBLPlayerController_TeamSay_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Msg != nullptr)
			*Msg = params.Msg;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9FF0
	 * 		Name   -> Function TBL.TBLPlayerController.TeamAppliedToPlayer
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLTeam*                                    Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::TeamAppliedToPlayer(class ATBLTeam* Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.TeamAppliedToPlayer");
		
		ATBLPlayerController_TeamAppliedToPlayer_Params params {};
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9F20
	 * 		Name   -> Function TBL.TBLPlayerController.TBLClientSetControlRotation
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		struct FRotator                                    ClientRotation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::TBLClientSetControlRotation(const struct FRotator& ClientRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.TBLClientSetControlRotation");
		
		ATBLPlayerController_TBLClientSetControlRotation_Params params {};
		params.ClientRotation = ClientRotation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9E90
	 * 		Name   -> Function TBL.TBLPlayerController.SyntheticInput_Movement
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SyntheticInput_Movement(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SyntheticInput_Movement");
		
		ATBLPlayerController_SyntheticInput_Movement_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9D70
	 * 		Name   -> Function TBL.TBLPlayerController.SyntheticInput_AI
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SyntheticInput_AI(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SyntheticInput_AI");
		
		ATBLPlayerController_SyntheticInput_AI_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9E00
	 * 		Name   -> Function TBL.TBLPlayerController.SyntheticInput_Actions
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SyntheticInput_Actions(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SyntheticInput_Actions");
		
		ATBLPlayerController_SyntheticInput_Actions_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9D50
	 * 		Name   -> Function TBL.TBLPlayerController.SwitchToSpectator
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::SwitchToSpectator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SwitchToSpectator");
		
		ATBLPlayerController_SwitchToSpectator_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.SwitchToSelfCamera
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::SwitchToSelfCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SwitchToSelfCamera");
		
		ATBLPlayerController_SwitchToSelfCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9CD0
	 * 		Name   -> Function TBL.TBLPlayerController.SwitchTeam
	 * 		Flags  -> (Final, Exec, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		int                                                RequestedTeamIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SwitchTeam(int RequestedTeamIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SwitchTeam");
		
		ATBLPlayerController_SwitchTeam_Params params {};
		params.RequestedTeamIndex = RequestedTeamIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9C10
	 * 		Name   -> Function TBL.TBLPlayerController.SwitchClass
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		int                                                RequestedClassIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                RequestedSubclassIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SwitchClass(int RequestedClassIndex, int RequestedSubclassIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SwitchClass");
		
		ATBLPlayerController_SwitchClass_Params params {};
		params.RequestedClassIndex = RequestedClassIndex;
		params.RequestedSubclassIndex = RequestedSubclassIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9BF0
	 * 		Name   -> Function TBL.TBLPlayerController.Suicide
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::Suicide()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.Suicide");
		
		ATBLPlayerController_Suicide_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9B70
	 * 		Name   -> Function TBL.TBLPlayerController.StopSoundAllSounds
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::StopSoundAllSounds(class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.StopSoundAllSounds");
		
		ATBLPlayerController_StopSoundAllSounds_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9AF0
	 * 		Name   -> Function TBL.TBLPlayerController.StopCameraShake
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        CameraShakeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::StopCameraShake(const class FName& CameraShakeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.StopCameraShake");
		
		ATBLPlayerController_StopCameraShake_Params params {};
		params.CameraShakeName = CameraShakeName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9AD0
	 * 		Name   -> Function TBL.TBLPlayerController.StopAnalytics
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 */
	void ATBLPlayerController::StopAnalytics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.StopAnalytics");
		
		ATBLPlayerController_StopAnalytics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9AB0
	 * 		Name   -> Function TBL.TBLPlayerController.StartTeamSayChat
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::StartTeamSayChat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.StartTeamSayChat");
		
		ATBLPlayerController_StartTeamSayChat_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C99A0
	 * 		Name   -> Function TBL.TBLPlayerController.StartRangedWeaponWarning
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              DrawStrength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              DrawnWeapon                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::StartRangedWeaponWarning(float DrawStrength, class AInventoryItem* DrawnWeapon, const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.StartRangedWeaponWarning");
		
		ATBLPlayerController_StartRangedWeaponWarning_Params params {};
		params.DrawStrength = DrawStrength;
		params.DrawnWeapon = DrawnWeapon;
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9980
	 * 		Name   -> Function TBL.TBLPlayerController.StartLastChannelChat
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::StartLastChannelChat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.StartLastChannelChat");
		
		ATBLPlayerController_StartLastChannelChat_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9960
	 * 		Name   -> Function TBL.TBLPlayerController.StartAllSayChat
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::StartAllSayChat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.StartAllSayChat");
		
		ATBLPlayerController_StartAllSayChat_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C98E0
	 * 		Name   -> Function TBL.TBLPlayerController.SpawnWaveNoLongerJoinable
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ASpawnWave*                                  Wave                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SpawnWaveNoLongerJoinable(class ASpawnWave* Wave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SpawnWaveNoLongerJoinable");
		
		ATBLPlayerController_SpawnWaveNoLongerJoinable_Params params {};
		params.Wave = Wave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C98B0
	 * 		Name   -> Function TBL.TBLPlayerController.SpawnMovementDebugger
	 * 		Flags  -> (Final, Native, Public)
	 */
	class UMovementDebugger* ATBLPlayerController::SpawnMovementDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SpawnMovementDebugger");
		
		ATBLPlayerController_SpawnMovementDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9820
	 * 		Name   -> Function TBL.TBLPlayerController.ShuffleLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bShouldShuffle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ShuffleLoadout(bool bShouldShuffle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShuffleLoadout");
		
		ATBLPlayerController_ShuffleLoadout_Params params {};
		params.bShouldShuffle = bShouldShuffle;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9800
	 * 		Name   -> Function TBL.TBLPlayerController.ShowOtherParryBoxes
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ShowOtherParryBoxes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShowOtherParryBoxes");
		
		ATBLPlayerController_ShowOtherParryBoxes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C97E0
	 * 		Name   -> Function TBL.TBLPlayerController.ShowMyParryBox
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ShowMyParryBox()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShowMyParryBox");
		
		ATBLPlayerController_ShowMyParryBox_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9700
	 * 		Name   -> Function TBL.TBLPlayerController.ShowMessageDialog
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FText                                        Message                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ShowMessageDialog(const class FText& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShowMessageDialog");
		
		ATBLPlayerController_ShowMessageDialog_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C96E0
	 * 		Name   -> Function TBL.TBLPlayerController.ShowIngameMenu
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ShowIngameMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShowIngameMenu");
		
		ATBLPlayerController_ShowIngameMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C96B0
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawVisibilityCheck
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawVisibilityCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawVisibilityCheck");
		
		ATBLPlayerController_ShouldDrawVisibilityCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9680
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawFacingCheck
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawFacingCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawFacingCheck");
		
		ATBLPlayerController_ShouldDrawFacingCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9650
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugWeaponTip
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugWeaponTip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugWeaponTip");
		
		ATBLPlayerController_ShouldDrawDebugWeaponTip_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9620
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugTracers
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugTracers");
		
		ATBLPlayerController_ShouldDrawDebugTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C95F0
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugTracerDirection
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugTracerDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugTracerDirection");
		
		ATBLPlayerController_ShouldDrawDebugTracerDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C95C0
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugTracerCache
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugTracerCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugTracerCache");
		
		ATBLPlayerController_ShouldDrawDebugTracerCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9590
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugShield
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugShield()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugShield");
		
		ATBLPlayerController_ShouldDrawDebugShield_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9560
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugRangedInaccuracy
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugRangedInaccuracy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugRangedInaccuracy");
		
		ATBLPlayerController_ShouldDrawDebugRangedInaccuracy_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9530
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugProjectile
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugProjectile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugProjectile");
		
		ATBLPlayerController_ShouldDrawDebugProjectile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9500
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugParryHit
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugParryHit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugParryHit");
		
		ATBLPlayerController_ShouldDrawDebugParryHit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C94D0
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugMeleeHit
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugMeleeHit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugMeleeHit");
		
		ATBLPlayerController_ShouldDrawDebugMeleeHit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C94A0
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawDebugHorseImpact
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawDebugHorseImpact()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawDebugHorseImpact");
		
		ATBLPlayerController_ShouldDrawDebugHorseImpact_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9470
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawClientDebugTracers
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawClientDebugTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawClientDebugTracers");
		
		ATBLPlayerController_ShouldDrawClientDebugTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9440
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawCamera
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawCamera");
		
		ATBLPlayerController_ShouldDrawCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9410
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDrawBackSwingCheck
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDrawBackSwingCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDrawBackSwingCheck");
		
		ATBLPlayerController_ShouldDrawBackSwingCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C93E0
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDisplaySwingThroughInfo
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldDisplaySwingThroughInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDisplaySwingThroughInfo");
		
		ATBLPlayerController_ShouldDisplaySwingThroughInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C93B0
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldDisplayNDA
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerController::ShouldDisplayNDA()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldDisplayNDA");
		
		ATBLPlayerController_ShouldDisplayNDA_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9380
	 * 		Name   -> Function TBL.TBLPlayerController.ShouldClearDebugTracers
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::ShouldClearDebugTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ShouldClearDebugTracers");
		
		ATBLPlayerController_ShouldClearDebugTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C92C0
	 * 		Name   -> Function TBL.TBLPlayerController.SetupCameraTargetOnDeath
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       P                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttachSocketName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetupCameraTargetOnDeath(class APawn* P, const class FName& AttachSocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetupCameraTargetOnDeath");
		
		ATBLPlayerController_SetupCameraTargetOnDeath_Params params {};
		params.P = P;
		params.AttachSocketName = AttachSocketName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1540
	 * 		Name   -> Function TBL.TBLPlayerController.SetStatOriginal
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      StatType                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                StatValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetStatOriginal(const class FString& StatType, int StatValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetStatOriginal");
		
		ATBLPlayerController_SetStatOriginal_Params params {};
		params.StatType = StatType;
		params.StatValue = StatValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C91E0
	 * 		Name   -> Function TBL.TBLPlayerController.SetStatFloat
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      StatName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StatValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetStatFloat(const class FString& StatName, float StatValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetStatFloat");
		
		ATBLPlayerController_SetStatFloat_Params params {};
		params.StatName = StatName;
		params.StatValue = StatValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1540
	 * 		Name   -> Function TBL.TBLPlayerController.SetStat
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      StatName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                StatValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetStat(const class FString& StatName, int StatValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetStat");
		
		ATBLPlayerController_SetStat_Params params {};
		params.StatName = StatName;
		params.StatValue = StatValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C91C0
	 * 		Name   -> Function TBL.TBLPlayerController.SetSpectatorCamera
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::SetSpectatorCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetSpectatorCamera");
		
		ATBLPlayerController_SetSpectatorCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9120
	 * 		Name   -> Function TBL.TBLPlayerController.SetShowPlayerListOnStartupInOverview
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bShow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetShowPlayerListOnStartupInOverview(bool bShow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetShowPlayerListOnStartupInOverview");
		
		ATBLPlayerController_SetShowPlayerListOnStartupInOverview_Params params {};
		params.bShow = bShow;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C9040
	 * 		Name   -> Function TBL.TBLPlayerController.SetRegionPingExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Region                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Ping                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetRegionPingExec(const class FString& Region, int Ping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetRegionPingExec");
		
		ATBLPlayerController_SetRegionPingExec_Params params {};
		params.Region = Region;
		params.Ping = Ping;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8F90
	 * 		Name   -> Function TBL.TBLPlayerController.SetRandomLoadout
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FLoadout                                    Loadout                                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetRandomLoadout(struct FLoadout* Loadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetRandomLoadout");
		
		ATBLPlayerController_SetRandomLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Loadout != nullptr)
			*Loadout = params.Loadout;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8F00
	 * 		Name   -> Function TBL.TBLPlayerController.SetPlayingPrologue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bInPlayingPrologue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetPlayingPrologue(bool bInPlayingPrologue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetPlayingPrologue");
		
		ATBLPlayerController_SetPlayingPrologue_Params params {};
		params.bInPlayingPrologue = bInPlayingPrologue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8EE0
	 * 		Name   -> Function TBL.TBLPlayerController.SetPlayerHasPlayedTutorial
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::SetPlayerHasPlayedTutorial()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetPlayerHasPlayedTutorial");
		
		ATBLPlayerController_SetPlayerHasPlayedTutorial_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8EC0
	 * 		Name   -> Function TBL.TBLPlayerController.SetPlayerHasAcceptedPurchaseDisclaimer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::SetPlayerHasAcceptedPurchaseDisclaimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetPlayerHasAcceptedPurchaseDisclaimer");
		
		ATBLPlayerController_SetPlayerHasAcceptedPurchaseDisclaimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8EA0
	 * 		Name   -> Function TBL.TBLPlayerController.SetPlayerHasAcceptedNDA
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::SetPlayerHasAcceptedNDA()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetPlayerHasAcceptedNDA");
		
		ATBLPlayerController_SetPlayerHasAcceptedNDA_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8D80
	 * 		Name   -> Function TBL.TBLPlayerController.SetNewCustomizationForPawn
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FSwatchSelection>                    Swatches                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetNewCustomizationForPawn(TArray<struct FSwatchSelection> Swatches, class APawn* Char, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetNewCustomizationForPawn");
		
		ATBLPlayerController_SetNewCustomizationForPawn_Params params {};
		params.Swatches = Swatches;
		params.Char = Char;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8CD0
	 * 		Name   -> Function TBL.TBLPlayerController.SetNewCustomizationForCurrentPawn
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FSwatchSelection>                    Swatches                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetNewCustomizationForCurrentPawn(TArray<struct FSwatchSelection> Swatches)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetNewCustomizationForCurrentPawn");
		
		ATBLPlayerController_SetNewCustomizationForCurrentPawn_Params params {};
		params.Swatches = Swatches;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8C50
	 * 		Name   -> Function TBL.TBLPlayerController.SetMinimumSpawnDelayOverride
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InMinimumSpawnDelayOverride                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetMinimumSpawnDelayOverride(float InMinimumSpawnDelayOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetMinimumSpawnDelayOverride");
		
		ATBLPlayerController_SetMinimumSpawnDelayOverride_Params params {};
		params.InMinimumSpawnDelayOverride = InMinimumSpawnDelayOverride;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8B30
	 * 		Name   -> Function TBL.TBLPlayerController.SetLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      RequestedSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLoadout                                    RequestedLoadout                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetLoadout(class UClass* RequestedSubclass, const struct FLoadout& RequestedLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetLoadout");
		
		ATBLPlayerController_SetLoadout_Params params {};
		params.RequestedSubclass = RequestedSubclass;
		params.RequestedLoadout = RequestedLoadout;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8AA0
	 * 		Name   -> Function TBL.TBLPlayerController.SetListenerEnabled
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               Enabled                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetListenerEnabled(bool Enabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetListenerEnabled");
		
		ATBLPlayerController_SetListenerEnabled_Params params {};
		params.Enabled = Enabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8A10
	 * 		Name   -> Function TBL.TBLPlayerController.SetHudVisibility
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bVisible                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetHudVisibility(bool bVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetHudVisibility");
		
		ATBLPlayerController_SetHudVisibility_Params params {};
		params.bVisible = bVisible;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C88C0
	 * 		Name   -> Function TBL.TBLPlayerController.SetCameraShakeProperty
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        CameraShakeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PropertyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetCameraShakeProperty(const class FName& CameraShakeName, const class FName& PropertyName, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetCameraShakeProperty");
		
		ATBLPlayerController_SetCameraShakeProperty_Params params {};
		params.CameraShakeName = CameraShakeName;
		params.PropertyName = PropertyName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C87B0
	 * 		Name   -> Function TBL.TBLPlayerController.SetCameraRotation
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Pitch                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Yaw                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Roll                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetCameraRotation(float Pitch, float Yaw, float Roll)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetCameraRotation");
		
		ATBLPlayerController_SetCameraRotation_Params params {};
		params.Pitch = Pitch;
		params.Yaw = Yaw;
		params.Roll = Roll;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8690
	 * 		Name   -> Function TBL.TBLPlayerController.SetCameraProperty
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        PropertyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetCameraProperty(const class FName& PropertyName, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetCameraProperty");
		
		ATBLPlayerController_SetCameraProperty_Params params {};
		params.PropertyName = PropertyName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8580
	 * 		Name   -> Function TBL.TBLPlayerController.SetCameraOffset
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              X                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Y                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Z                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetCameraOffset(float X, float Y, float Z)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetCameraOffset");
		
		ATBLPlayerController_SetCameraOffset_Params params {};
		params.X = X;
		params.Y = Y;
		params.Z = Z;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C84F0
	 * 		Name   -> Function TBL.TBLPlayerController.SetAutoSprint
	 * 		Flags  -> (Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetAutoSprint(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetAutoSprint");
		
		ATBLPlayerController_SetAutoSprint_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8460
	 * 		Name   -> Function TBL.TBLPlayerController.SetAltAttackWithMovement
	 * 		Flags  -> (Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetAltAttackWithMovement(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetAltAttackWithMovement");
		
		ATBLPlayerController_SetAltAttackWithMovement_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C83E0
	 * 		Name   -> Function TBL.TBLPlayerController.SetAllRegionPingExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                Ping                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetAllRegionPingExec(int Ping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetAllRegionPingExec");
		
		ATBLPlayerController_SetAllRegionPingExec_Params params {};
		params.Ping = Ping;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8350
	 * 		Name   -> Function TBL.TBLPlayerController.SetAimedAtSoundEnabled
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		bool                                               Enable                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetAimedAtSoundEnabled(bool Enable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetAimedAtSoundEnabled");
		
		ATBLPlayerController_SetAimedAtSoundEnabled_Params params {};
		params.Enable = Enable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C82D0
	 * 		Name   -> Function TBL.TBLPlayerController.SetAimedAtMaxDistance
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		float                                              Distance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SetAimedAtMaxDistance(float Distance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SetAimedAtMaxDistance");
		
		ATBLPlayerController_SetAimedAtMaxDistance_Params params {};
		params.Distance = Distance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8210
	 * 		Name   -> Function TBL.TBLPlayerController.ServerUpdateAimedAtCharacters
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		TArray<TWeakObjectPtr<class ATBLCharacter>>        Characters                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerUpdateAimedAtCharacters(TArray<TWeakObjectPtr<class ATBLCharacter>> Characters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerUpdateAimedAtCharacters");
		
		ATBLPlayerController_ServerUpdateAimedAtCharacters_Params params {};
		params.Characters = Characters;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8110
	 * 		Name   -> Function TBL.TBLPlayerController.ServerToggleAutospawn
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLeaveCurrentWave                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerToggleAutospawn(bool bEnabled, bool bLeaveCurrentWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerToggleAutospawn");
		
		ATBLPlayerController_ServerToggleAutospawn_Params params {};
		params.bEnabled = bEnabled;
		params.bLeaveCurrentWave = bLeaveCurrentWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C8050
	 * 		Name   -> Function TBL.TBLPlayerController.ServerTeleportPawnsToMe
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		class ATBLCharacter*                               pTargetCharacter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerTeleportPawnsToMe(class ATBLCharacter* pTargetCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerTeleportPawnsToMe");
		
		ATBLPlayerController_ServerTeleportPawnsToMe_Params params {};
		params.pTargetCharacter = pTargetCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7F90
	 * 		Name   -> Function TBL.TBLPlayerController.ServerTBSActivateDevMode
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bActivate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerTBSActivateDevMode(bool bActivate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerTBSActivateDevMode");
		
		ATBLPlayerController_ServerTBSActivateDevMode_Params params {};
		params.bActivate = bActivate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7F40
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSwitchToSpectator
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerSwitchToSpectator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSwitchToSpectator");
		
		ATBLPlayerController_ServerSwitchToSpectator_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7EF0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSuicide
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerSuicide()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSuicide");
		
		ATBLPlayerController_ServerSuicide_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7DF0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSubmitVote
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class UVotingInstance*                             VotingInstance                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Vote                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSubmitVote(class UVotingInstance* VotingInstance, const class FName& Vote)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSubmitVote");
		
		ATBLPlayerController_ServerSubmitVote_Params params {};
		params.VotingInstance = VotingInstance;
		params.Vote = Vote;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7D30
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSubmitPlayerPostGameFeedback
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		int                                                StarRating                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSubmitPlayerPostGameFeedback(int StarRating)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSubmitPlayerPostGameFeedback");
		
		ATBLPlayerController_ServerSubmitPlayerPostGameFeedback_Params params {};
		params.StarRating = StarRating;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7CE0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerStopAnalytics
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerStopAnalytics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerStopAnalytics");
		
		ATBLPlayerController_ServerStopAnalytics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7B10
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSpawnGoreHead
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class ATBLPlayerState*                             InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      DeadCharacterId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector_NetQuantize                         Location                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector_NetQuantize                         Rotation                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector_NetQuantize                         Impulse                                                    (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSpawnGoreHead(class ATBLPlayerState* InPlayerState, unsigned char DeadCharacterId, const struct FVector_NetQuantize& Location, const struct FVector_NetQuantize& Rotation, const struct FVector_NetQuantize& Impulse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSpawnGoreHead");
		
		ATBLPlayerController_ServerSpawnGoreHead_Params params {};
		params.InPlayerState = InPlayerState;
		params.DeadCharacterId = DeadCharacterId;
		params.Location = Location;
		params.Rotation = Rotation;
		params.Impulse = Impulse;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7A10
	 * 		Name   -> Function TBL.TBLPlayerController.ServerShowDebugCapture
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bActive                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerShowDebugCapture(bool bActive, const class FName& Category)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerShowDebugCapture");
		
		ATBLPlayerController_ServerShowDebugCapture_Params params {};
		params.bActive = bActive;
		params.Category = Category;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7950
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetSyntheticInputMovement
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetSyntheticInputMovement(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetSyntheticInputMovement");
		
		ATBLPlayerController_ServerSetSyntheticInputMovement_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C77D0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetSyntheticInputAI
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetSyntheticInputAI(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetSyntheticInputAI");
		
		ATBLPlayerController_ServerSetSyntheticInputAI_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7890
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetSyntheticInputActions
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetSyntheticInputActions(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetSyntheticInputActions");
		
		ATBLPlayerController_ServerSetSyntheticInputActions_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7780
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetSpectatorCamera
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
	 */
	void ATBLPlayerController::ServerSetSpectatorCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetSpectatorCamera");
		
		ATBLPlayerController_ServerSetSpectatorCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7370
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetPS5MatchId
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
	 * Parameters:
	 * 		class FString                                      NewPS5MatchId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetPS5MatchId(const class FString& NewPS5MatchId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetPS5MatchId");
		
		ATBLPlayerController_ServerSetPS5MatchId_Params params {};
		params.NewPS5MatchId = NewPS5MatchId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C75C0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetPlayerCustomization
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		TArray<struct FCustomizationMap>                   PlayerCustomization                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             PS                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetPlayerCustomization(TArray<struct FCustomizationMap> PlayerCustomization, class ATBLPlayerState* PS)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetPlayerCustomization");
		
		ATBLPlayerController_ServerSetPlayerCustomization_Params params {};
		params.PlayerCustomization = PlayerCustomization;
		params.PS = PS;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C74D0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetPlatformUniqueId
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
	 * Parameters:
	 * 		struct FUniqueNetIdRepl                            UniqueIdRepl                                               (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetPlatformUniqueId(const struct FUniqueNetIdRepl& UniqueIdRepl)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetPlatformUniqueId");
		
		ATBLPlayerController_ServerSetPlatformUniqueId_Params params {};
		params.UniqueIdRepl = UniqueIdRepl;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7410
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetPartyId
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FString                                      PartyId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetPartyId(const class FString& PartyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetPartyId");
		
		ATBLPlayerController_ServerSetPartyId_Params params {};
		params.PartyId = PartyId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7220
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetLoadout
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UClass*                                      RequestedSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLoadout                                    RequestedLoadout                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetLoadout(class UClass* RequestedSubclass, const struct FLoadout& RequestedLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetLoadout");
		
		ATBLPlayerController_ServerSetLoadout_Params params {};
		params.RequestedSubclass = RequestedSubclass;
		params.RequestedLoadout = RequestedLoadout;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7120
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetInitialLoadouts
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		TArray<struct FSavedLoadout>                       Loadouts                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetInitialLoadouts(TArray<struct FSavedLoadout> Loadouts)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetInitialLoadouts");
		
		ATBLPlayerController_ServerSetInitialLoadouts_Params params {};
		params.Loadouts = Loadouts;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7070
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetHardwarePlatform
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		TBL_EHardwarePlatform                              Platform                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetHardwarePlatform(TBL_EHardwarePlatform Platform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetHardwarePlatform");
		
		ATBLPlayerController_ServerSetHardwarePlatform_Params params {};
		params.Platform = Platform;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C7020
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetForFFAPlayer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerSetForFFAPlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetForFFAPlayer");
		
		ATBLPlayerController_ServerSetForFFAPlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6F20
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetAimAssistTarget
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		class AActor*                                      NewAimAssistTarget                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NewAimAssistTargetBoneIndex                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetAimAssistTarget(class AActor* NewAimAssistTarget, int NewAimAssistTargetBoneIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetAimAssistTarget");
		
		ATBLPlayerController_ServerSetAimAssistTarget_Params params {};
		params.NewAimAssistTarget = NewAimAssistTarget;
		params.NewAimAssistTargetBoneIndex = NewAimAssistTargetBoneIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6DF0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSetAimAssistCorrectionParams
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		int                                                NewAimAssistCorrectionMaxPredictionOffset                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NewAimAssistCorrectionMaxAngle                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NewAimAssistCorrectionMaxOffset                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSetAimAssistCorrectionParams(int NewAimAssistCorrectionMaxPredictionOffset, int NewAimAssistCorrectionMaxAngle, int NewAimAssistCorrectionMaxOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSetAimAssistCorrectionParams");
		
		ATBLPlayerController_ServerSetAimAssistCorrectionParams_Params params {};
		params.NewAimAssistCorrectionMaxPredictionOffset = NewAimAssistCorrectionMaxPredictionOffset;
		params.NewAimAssistCorrectionMaxAngle = NewAimAssistCorrectionMaxAngle;
		params.NewAimAssistCorrectionMaxOffset = NewAimAssistCorrectionMaxOffset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6C10
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSendPostMatchInfo
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FClientPostMatchInfo                        PostMatchInfo                                              (Parm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPerMinuteBucket>                    PerMinuteBuckets                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSendPostMatchInfo(const struct FClientPostMatchInfo& PostMatchInfo, TArray<struct FPerMinuteBucket> PerMinuteBuckets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSendPostMatchInfo");
		
		ATBLPlayerController_ServerSendPostMatchInfo_Params params {};
		params.PostMatchInfo = PostMatchInfo;
		params.PerMinuteBuckets = PerMinuteBuckets;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6920
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSendOfflineAnalyticsEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FOfflineAnalyticsEvent                      LocalAnalyticsEvent                                        (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSendOfflineAnalyticsEvent(const struct FOfflineAnalyticsEvent& LocalAnalyticsEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSendOfflineAnalyticsEvent");
		
		ATBLPlayerController_ServerSendOfflineAnalyticsEvent_Params params {};
		params.LocalAnalyticsEvent = LocalAnalyticsEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6670
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSendMatchProfile
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class FString                                      Nickname                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MachineId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MachineName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OperatingSystemId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CommandLine                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTBLQualityLevels                           ScalabilitySettings                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSendMatchProfile(const class FString& Nickname, const class FString& MachineId, const class FString& MachineName, const class FString& OperatingSystemId, const class FString& CommandLine, const struct FTBLQualityLevels& ScalabilitySettings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSendMatchProfile");
		
		ATBLPlayerController_ServerSendMatchProfile_Params params {};
		params.Nickname = Nickname;
		params.MachineId = MachineId;
		params.MachineName = MachineName;
		params.OperatingSystemId = OperatingSystemId;
		params.CommandLine = CommandLine;
		params.ScalabilitySettings = ScalabilitySettings;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C65C0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSendEquippedPersonality
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		TBL_EAudioPersonalityType                          PersonalityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSendEquippedPersonality(TBL_EAudioPersonalityType PersonalityType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSendEquippedPersonality");
		
		ATBLPlayerController_ServerSendEquippedPersonality_Params params {};
		params.PersonalityType = PersonalityType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6510
	 * 		Name   -> Function TBL.TBLPlayerController.ServerSay
	 * 		Flags  -> (Exec, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerSay(class FString* Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerSay");
		
		ATBLPlayerController_ServerSay_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Msg != nullptr)
			*Msg = params.Msg;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C64C0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerResetPartyId
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerResetPartyId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerResetPartyId");
		
		ATBLPlayerController_ServerResetPartyId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6470
	 * 		Name   -> Function TBL.TBLPlayerController.ServerResetIdleTime
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerResetIdleTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerResetIdleTime");
		
		ATBLPlayerController_ServerResetIdleTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6370
	 * 		Name   -> Function TBL.TBLPlayerController.ServerRequestNextSpawnTeam
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		TBL_EFaction                                       RequestedFaction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bImmediatelySwitch                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerRequestNextSpawnTeam(TBL_EFaction RequestedFaction, bool bImmediatelySwitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerRequestNextSpawnTeam");
		
		ATBLPlayerController_ServerRequestNextSpawnTeam_Params params {};
		params.RequestedFaction = RequestedFaction;
		params.bImmediatelySwitch = bImmediatelySwitch;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6320
	 * 		Name   -> Function TBL.TBLPlayerController.ServerRequestExit
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerRequestExit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerRequestExit");
		
		ATBLPlayerController_ServerRequestExit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C62D0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerRequestAnalyticsStop
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerRequestAnalyticsStop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerRequestAnalyticsStop");
		
		ATBLPlayerController_ServerRequestAnalyticsStop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6210
	 * 		Name   -> Function TBL.TBLPlayerController.ServerRequestAnalyticsStart
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FString                                      DataName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerRequestAnalyticsStart(const class FString& DataName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerRequestAnalyticsStart");
		
		ATBLPlayerController_ServerRequestAnalyticsStart_Params params {};
		params.DataName = DataName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C60C0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerReportPlayer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class APlayerState*                                ReportedPlayer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EPlayerReportCategory                          ReportCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportDescription                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerReportPlayer(class APlayerState* ReportedPlayer, TBL_EPlayerReportCategory ReportCategory, const class FString& ReportDescription)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerReportPlayer");
		
		ATBLPlayerController_ServerReportPlayer_Params params {};
		params.ReportedPlayer = ReportedPlayer;
		params.ReportCategory = ReportCategory;
		params.ReportDescription = ReportDescription;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C6000
	 * 		Name   -> Function TBL.TBLPlayerController.ServerReliableSetPlayingPrologue
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bInPlayingPrologue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerReliableSetPlayingPrologue(bool bInPlayingPrologue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerReliableSetPlayingPrologue");
		
		ATBLPlayerController_ServerReliableSetPlayingPrologue_Params params {};
		params.bInPlayingPrologue = bInPlayingPrologue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5FB0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerRegisterAsHeadlessClient
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerRegisterAsHeadlessClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerRegisterAsHeadlessClient");
		
		ATBLPlayerController_ServerRegisterAsHeadlessClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5F60
	 * 		Name   -> Function TBL.TBLPlayerController.ServerPropertyDebugger
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerPropertyDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerPropertyDebugger");
		
		ATBLPlayerController_ServerPropertyDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5E60
	 * 		Name   -> Function TBL.TBLPlayerController.ServerPromptPlayerMessageReply
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		int                                                MessageId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Response                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerPromptPlayerMessageReply(int MessageId, bool Response)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerPromptPlayerMessageReply");
		
		ATBLPlayerController_ServerPromptPlayerMessageReply_Params params {};
		params.MessageId = MessageId;
		params.Response = Response;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5D60
	 * 		Name   -> Function TBL.TBLPlayerController.ServerOverrideSwatchIndex
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		TBL_EInventorySlot                                 Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                SwatchOverrideIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerOverrideSwatchIndex(TBL_EInventorySlot Slot, int SwatchOverrideIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerOverrideSwatchIndex");
		
		ATBLPlayerController_ServerOverrideSwatchIndex_Params params {};
		params.Slot = Slot;
		params.SwatchOverrideIndex = SwatchOverrideIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5CA0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerOnLoadoutScreenState
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               DidOpen                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerOnLoadoutScreenState(bool DidOpen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerOnLoadoutScreenState");
		
		ATBLPlayerController_ServerOnLoadoutScreenState_Params params {};
		params.DidOpen = DidOpen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5C50
	 * 		Name   -> Function TBL.TBLPlayerController.ServerNotifyDoneTravelling
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerNotifyDoneTravelling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerNotifyDoneTravelling");
		
		ATBLPlayerController_ServerNotifyDoneTravelling_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5B90
	 * 		Name   -> Function TBL.TBLPlayerController.ServerMovementDebuggerLoadFile
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        Filename                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerMovementDebuggerLoadFile(const class FName& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerMovementDebuggerLoadFile");
		
		ATBLPlayerController_ServerMovementDebuggerLoadFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5B40
	 * 		Name   -> Function TBL.TBLPlayerController.ServerMovementDebugger
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerMovementDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerMovementDebugger");
		
		ATBLPlayerController_ServerMovementDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5A80
	 * 		Name   -> Function TBL.TBLPlayerController.ServerLeaveSpawnWave
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		class ASpawnWave*                                  Wave                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerLeaveSpawnWave(class ASpawnWave* Wave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerLeaveSpawnWave");
		
		ATBLPlayerController_ServerLeaveSpawnWave_Params params {};
		params.Wave = Wave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5980
	 * 		Name   -> Function TBL.TBLPlayerController.ServerJoinSpawnWave
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		class ASpawnWave*                                  Wave                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromAutoSpawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerJoinSpawnWave(class ASpawnWave* Wave, bool bFromAutoSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerJoinSpawnWave");
		
		ATBLPlayerController_ServerJoinSpawnWave_Params params {};
		params.Wave = Wave;
		params.bFromAutoSpawn = bFromAutoSpawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C58C0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerForgivePlayer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		class ATBLPlayerState*                             Killer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerForgivePlayer(class ATBLPlayerState* Killer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerForgivePlayer");
		
		ATBLPlayerController_ServerForgivePlayer_Params params {};
		params.Killer = Killer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5870
	 * 		Name   -> Function TBL.TBLPlayerController.ServerForceSelfAutobalance
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerForceSelfAutobalance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerForceSelfAutobalance");
		
		ATBLPlayerController_ServerForceSelfAutobalance_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5820
	 * 		Name   -> Function TBL.TBLPlayerController.ServerForceImmediateSpawn
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerForceImmediateSpawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerForceImmediateSpawn");
		
		ATBLPlayerController_ServerForceImmediateSpawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5760
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawWeaponTip
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawWeaponTip(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawWeaponTip");
		
		ATBLPlayerController_ServerDrawWeaponTip_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C56A0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawVisibilityCheck
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawVisibilityCheck(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawVisibilityCheck");
		
		ATBLPlayerController_ServerDrawVisibilityCheck_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C55E0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawTracers
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawTracers(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawTracers");
		
		ATBLPlayerController_ServerDrawTracers_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5520
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawTracerDirection
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawTracerDirection(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawTracerDirection");
		
		ATBLPlayerController_ServerDrawTracerDirection_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5460
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawSpectatorCamera
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawSpectatorCamera(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawSpectatorCamera");
		
		ATBLPlayerController_ServerDrawSpectatorCamera_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C53A0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawShield
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawShield(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawShield");
		
		ATBLPlayerController_ServerDrawShield_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C52E0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawProjectile
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawProjectile(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawProjectile");
		
		ATBLPlayerController_ServerDrawProjectile_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5220
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawParryHit
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawParryHit(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawParryHit");
		
		ATBLPlayerController_ServerDrawParryHit_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C5160
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawHorseImpact
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawHorseImpact(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawHorseImpact");
		
		ATBLPlayerController_ServerDrawHorseImpact_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C50A0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawFacingCheck
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawFacingCheck(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawFacingCheck");
		
		ATBLPlayerController_ServerDrawFacingCheck_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4FE0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawBackSwingCheck
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawBackSwingCheck(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawBackSwingCheck");
		
		ATBLPlayerController_ServerDrawBackSwingCheck_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4F20
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDrawAllTracers
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDrawAllTracers(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDrawAllTracers");
		
		ATBLPlayerController_ServerDrawAllTracers_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4E60
	 * 		Name   -> Function TBL.TBLPlayerController.ServerDisplaySwingThroughInfo
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerDisplaySwingThroughInfo(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerDisplaySwingThroughInfo");
		
		ATBLPlayerController_ServerDisplaySwingThroughInfo_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4DA0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerCommendPlayer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		class ATBLPlayerState*                             Killer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerCommendPlayer(class ATBLPlayerState* Killer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerCommendPlayer");
		
		ATBLPlayerController_ServerCommendPlayer_Params params {};
		params.Killer = Killer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4D50
	 * 		Name   -> Function TBL.TBLPlayerController.ServerClosePropertyDebugger
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerClosePropertyDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerClosePropertyDebugger");
		
		ATBLPlayerController_ServerClosePropertyDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4D00
	 * 		Name   -> Function TBL.TBLPlayerController.ServerCloseMovementDebugger
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLPlayerController::ServerCloseMovementDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerCloseMovementDebugger");
		
		ATBLPlayerController_ServerCloseMovementDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E92190
	 * 		Name   -> Function TBL.TBLPlayerController.ServerClearPS5MatchId
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer)
	 */
	void ATBLPlayerController::ServerClearPS5MatchId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerClearPS5MatchId");
		
		ATBLPlayerController_ServerClearPS5MatchId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4C00
	 * 		Name   -> Function TBL.TBLPlayerController.ServerCheatObj
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        CheatCommand                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Param                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerCheatObj(const class FName& CheatCommand, class UObject* Param)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerCheatObj");
		
		ATBLPlayerController_ServerCheatObj_Params params {};
		params.CheatCommand = CheatCommand;
		params.Param = Param;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4B00
	 * 		Name   -> Function TBL.TBLPlayerController.ServerCheat
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        CheatCommand                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Param                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerCheat(const class FName& CheatCommand, const class FName& Param)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerCheat");
		
		ATBLPlayerController_ServerCheat_Params params {};
		params.CheatCommand = CheatCommand;
		params.Param = Param;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4930
	 * 		Name   -> Function TBL.TBLPlayerController.ServerBroadcastDebugMessage
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      TextColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bToAll                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTeamOnly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerBroadcastDebugMessage(const class FString& Message, const struct FColor& TextColor, float Duration, bool bToAll, bool bTeamOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerBroadcastDebugMessage");
		
		ATBLPlayerController_ServerBroadcastDebugMessage_Params params {};
		params.Message = Message;
		params.TextColor = TextColor;
		params.Duration = Duration;
		params.bToAll = bToAll;
		params.bTeamOnly = bTeamOnly;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C47F0
	 * 		Name   -> Function TBL.TBLPlayerController.ServerBroadcast
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      ChatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      OverrideColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerBroadcast(const class FString& Msg, TBL_EChatType ChatType, const struct FColor& OverrideColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerBroadcast");
		
		ATBLPlayerController_ServerBroadcast_Params params {};
		params.Msg = Msg;
		params.ChatType = ChatType;
		params.OverrideColor = OverrideColor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4730
	 * 		Name   -> Function TBL.TBLPlayerController.ServerBPCheat
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FString                                      CheatAndParams                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerBPCheat(const class FString& CheatAndParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerBPCheat");
		
		ATBLPlayerController_ServerBPCheat_Params params {};
		params.CheatAndParams = CheatAndParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4670
	 * 		Name   -> Function TBL.TBLPlayerController.ServerAdminCmd
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class FString                                      Cmd                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ServerAdminCmd(const class FString& Cmd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ServerAdminCmd");
		
		ATBLPlayerController_ServerAdminCmd_Params params {};
		params.Cmd = Cmd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C45A0
	 * 		Name   -> Function TBL.TBLPlayerController.SendPromptPlayerMessageRequest
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FGameplayTag                                MessageTag                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                SentMessageId                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SendPromptPlayerMessageRequest(const struct FGameplayTag& MessageTag, int* SentMessageId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SendPromptPlayerMessageRequest");
		
		ATBLPlayerController_SendPromptPlayerMessageRequest_Params params {};
		params.MessageTag = MessageTag;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SentMessageId != nullptr)
			*SentMessageId = params.SentMessageId;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C44E0
	 * 		Name   -> Function TBL.TBLPlayerController.SendPromptPlayerMessageReply
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                MessageId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Response                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SendPromptPlayerMessageReply(int MessageId, bool Response)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SendPromptPlayerMessageReply");
		
		ATBLPlayerController_SendPromptPlayerMessageReply_Params params {};
		params.MessageId = MessageId;
		params.Response = Response;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4460
	 * 		Name   -> Function TBL.TBLPlayerController.SendCancelPlayerMessageRequest
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                MessageId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SendCancelPlayerMessageRequest(int MessageId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SendCancelPlayerMessageRequest");
		
		ATBLPlayerController_SendCancelPlayerMessageRequest_Params params {};
		params.MessageId = MessageId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C43D0
	 * 		Name   -> Function TBL.TBLPlayerController.SelfSyntheticInput
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SelfSyntheticInput(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SelfSyntheticInput");
		
		ATBLPlayerController_SelfSyntheticInput_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4260
	 * 		Name   -> Function TBL.TBLPlayerController.SayChatType
	 * 		Flags  -> (Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      ChatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      OverrideColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SayChatType(const class FString& Msg, TBL_EChatType ChatType, const struct FColor& OverrideColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SayChatType");
		
		ATBLPlayerController_SayChatType_Params params {};
		params.Msg = Msg;
		params.ChatType = ChatType;
		params.OverrideColor = OverrideColor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C41B0
	 * 		Name   -> Function TBL.TBLPlayerController.Say
	 * 		Flags  -> (Exec, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::Say(class FString* Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.Say");
		
		ATBLPlayerController_Say_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Msg != nullptr)
			*Msg = params.Msg;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4050
	 * 		Name   -> Function TBL.TBLPlayerController.SaveLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      RequestedSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      LoadoutSelection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLoadout                                    RequestedLoadout                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::SaveLoadout(class UClass* RequestedSubclass, class UClass* LoadoutSelection, const struct FLoadout& RequestedLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SaveLoadout");
		
		ATBLPlayerController_SaveLoadout_Params params {};
		params.RequestedSubclass = RequestedSubclass;
		params.LoadoutSelection = LoadoutSelection;
		params.RequestedLoadout = RequestedLoadout;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C4030
	 * 		Name   -> Function TBL.TBLPlayerController.SaveCloudFilesIfDirty
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::SaveCloudFilesIfDirty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SaveCloudFilesIfDirty");
		
		ATBLPlayerController_SaveCloudFilesIfDirty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.SaveAutoInputRecord
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::SaveAutoInputRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.SaveAutoInputRecord");
		
		ATBLPlayerController_SaveAutoInputRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.ResetSelfCamera
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::ResetSelfCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ResetSelfCamera");
		
		ATBLPlayerController_ResetSelfCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3FB0
	 * 		Name   -> Function TBL.TBLPlayerController.RequestSwitchTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       RequestedFaction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::RequestSwitchTeam(TBL_EFaction RequestedFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RequestSwitchTeam");
		
		ATBLPlayerController_RequestSwitchTeam_Params params {};
		params.RequestedFaction = RequestedFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3F30
	 * 		Name   -> Function TBL.TBLPlayerController.RequestLeaveSpawnWave
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ASpawnWave*                                  Wave                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::RequestLeaveSpawnWave(class ASpawnWave* Wave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RequestLeaveSpawnWave");
		
		ATBLPlayerController_RequestLeaveSpawnWave_Params params {};
		params.Wave = Wave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3E60
	 * 		Name   -> Function TBL.TBLPlayerController.RequestJoinSpawnWave
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ASpawnWave*                                  Wave                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromAutoSpawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::RequestJoinSpawnWave(class ASpawnWave* Wave, bool bFromAutoSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RequestJoinSpawnWave");
		
		ATBLPlayerController_RequestJoinSpawnWave_Params params {};
		params.Wave = Wave;
		params.bFromAutoSpawn = bFromAutoSpawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3D40
	 * 		Name   -> Function TBL.TBLPlayerController.ReportPlayer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerState*                                ReportedPlayer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EPlayerReportCategory                          ReportCategory                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReportDescription                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ReportPlayer(class APlayerState* ReportedPlayer, TBL_EPlayerReportCategory ReportCategory, const class FString& ReportDescription)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ReportPlayer");
		
		ATBLPlayerController_ReportPlayer_Params params {};
		params.ReportedPlayer = ReportedPlayer;
		params.ReportCategory = ReportCategory;
		params.ReportDescription = ReportDescription;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3CA0
	 * 		Name   -> Function TBL.TBLPlayerController.RemoveViewedItem
	 * 		Flags  -> (Final, Exec, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             ItemId                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::RemoveViewedItem(const struct FPrimaryAssetId& ItemId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RemoveViewedItem");
		
		ATBLPlayerController_RemoveViewedItem_Params params {};
		params.ItemId = ItemId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3C80
	 * 		Name   -> Function TBL.TBLPlayerController.RemoveLoadingScreenPanel
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::RemoveLoadingScreenPanel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RemoveLoadingScreenPanel");
		
		ATBLPlayerController_RemoveLoadingScreenPanel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3BE0
	 * 		Name   -> Function TBL.TBLPlayerController.RemoveFriendById
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      UniqueId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::RemoveFriendById(const class FString& UniqueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RemoveFriendById");
		
		ATBLPlayerController_RemoveFriendById_Params params {};
		params.UniqueId = UniqueId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1540
	 * 		Name   -> Function TBL.TBLPlayerController.RemoveCurrencyExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::RemoveCurrencyExec(const class FString& Currency, int Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RemoveCurrencyExec");
		
		ATBLPlayerController_RemoveCurrencyExec_Params params {};
		params.Currency = Currency;
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3BC0
	 * 		Name   -> Function TBL.TBLPlayerController.RemoveAllViewedItems
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::RemoveAllViewedItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RemoveAllViewedItems");
		
		ATBLPlayerController_RemoveAllViewedItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3BA0
	 * 		Name   -> Function TBL.TBLPlayerController.ReleasedMenuButton
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::ReleasedMenuButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ReleasedMenuButton");
		
		ATBLPlayerController_ReleasedMenuButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3B80
	 * 		Name   -> Function TBL.TBLPlayerController.RefreshRegionPingExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::RefreshRegionPingExec()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.RefreshRegionPingExec");
		
		ATBLPlayerController_RefreshRegionPingExec_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3B60
	 * 		Name   -> Function TBL.TBLPlayerController.ReadFriendList
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ReadFriendList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ReadFriendList");
		
		ATBLPlayerController_ReadFriendList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3A70
	 * 		Name   -> Function TBL.TBLPlayerController.PurchaseItemExec
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ItemId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PurchaseItemExec(const class FString& ItemId, const class FString& Currency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PurchaseItemExec");
		
		ATBLPlayerController_PurchaseItemExec_Params params {};
		params.ItemId = ItemId;
		params.Currency = Currency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3980
	 * 		Name   -> Function TBL.TBLPlayerController.PurchaseItemByString
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ItemId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PurchaseItemByString(const class FString& ItemId, const class FString& Currency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PurchaseItemByString");
		
		ATBLPlayerController_PurchaseItemByString_Params params {};
		params.ItemId = ItemId;
		params.Currency = Currency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3880
	 * 		Name   -> Function TBL.TBLPlayerController.PurchaseItem
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             ItemId                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PurchaseItem(const struct FPrimaryAssetId& ItemId, const class FString& Currency)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PurchaseItem");
		
		ATBLPlayerController_PurchaseItem_Params params {};
		params.ItemId = ItemId;
		params.Currency = Currency;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2B20
	 * 		Name   -> Function TBL.TBLPlayerController.PS4TouchpadPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::PS4TouchpadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PS4TouchpadPressed");
		
		ATBLPlayerController_PS4TouchpadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C37A0
	 * 		Name   -> Function TBL.TBLPlayerController.PropertyDebuggerAdd
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PropertyName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PropertyDebuggerAdd(const class FString& PropertyName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PropertyDebuggerAdd");
		
		ATBLPlayerController_PropertyDebuggerAdd_Params params {};
		params.PropertyName = PropertyName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3780
	 * 		Name   -> Function TBL.TBLPlayerController.PropertyDebugger
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::PropertyDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PropertyDebugger");
		
		ATBLPlayerController_PropertyDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C36E0
	 * 		Name   -> Function TBL.TBLPlayerController.PromoteToLeader
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PromoteToLeader(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PromoteToLeader");
		
		ATBLPlayerController_PromoteToLeader_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C36C0
	 * 		Name   -> Function TBL.TBLPlayerController.PrintWeaponActionEvents
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::PrintWeaponActionEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PrintWeaponActionEvents");
		
		ATBLPlayerController_PrintWeaponActionEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C35A0
	 * 		Name   -> Function TBL.TBLPlayerController.PrintDebugMessage
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      TextColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PrintDebugMessage(const class FString& Message, const struct FColor& TextColor, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PrintDebugMessage");
		
		ATBLPlayerController_PrintDebugMessage_Params params {};
		params.Message = Message;
		params.TextColor = TextColor;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3520
	 * 		Name   -> Function TBL.TBLPlayerController.PrintCameraShakeProperties
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        CameraShakeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PrintCameraShakeProperties(const class FName& CameraShakeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PrintCameraShakeProperties");
		
		ATBLPlayerController_PrintCameraShakeProperties_Params params {};
		params.CameraShakeName = CameraShakeName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3500
	 * 		Name   -> Function TBL.TBLPlayerController.PrintCameraProperties
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::PrintCameraProperties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PrintCameraProperties");
		
		ATBLPlayerController_PrintCameraProperties_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C34E0
	 * 		Name   -> Function TBL.TBLPlayerController.PressedMenuButton
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::PressedMenuButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PressedMenuButton");
		
		ATBLPlayerController_PressedMenuButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641DC0
	 * 		Name   -> Function TBL.TBLPlayerController.PrepareEvent
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      EventName                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PrepareEvent(const class FString& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PrepareEvent");
		
		ATBLPlayerController_PrepareEvent_Params params {};
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641DC0
	 * 		Name   -> Function TBL.TBLPlayerController.PrepareBank
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      BankName                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PrepareBank(const class FString& BankName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PrepareBank");
		
		ATBLPlayerController_PrepareBank_Params params {};
		params.BankName = BankName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2EF0
	 * 		Name   -> Function TBL.TBLPlayerController.PlaySound
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlaySound(class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlaySound");
		
		ATBLPlayerController_PlaySound_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2D60
	 * 		Name   -> Function TBL.TBLPlayerController.PlayGlobalVOEmote
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UCTBase*                                     CTPersonality                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EmoteName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EVOType                                        VoType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLPlayerController::PlayGlobalVOEmote(class UCTBase* CTPersonality, const class FName& EmoteName, TBL_EFaction Faction, TBL_EAudioClassType Class, TBL_EVOType VoType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayGlobalVOEmote");
		
		ATBLPlayerController_PlayGlobalVOEmote_Params params {};
		params.CTPersonality = CTPersonality;
		params.EmoteName = EmoteName;
		params.Faction = Faction;
		params.Class = Class;
		params.VoType = VoType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3350
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerViewUnlockedLoadoutItem
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      CharacterSubclass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Item                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::PlayerViewUnlockedLoadoutItem(class UClass* CharacterSubclass, class UClass* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerViewUnlockedLoadoutItem");
		
		ATBLPlayerController_PlayerViewUnlockedLoadoutItem_Params params {};
		params.CharacterSubclass = CharacterSubclass;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3440
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerViewedUnlockedSubclass
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      CharacterSubclass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::PlayerViewedUnlockedSubclass(class UClass* CharacterSubclass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerViewedUnlockedSubclass");
		
		ATBLPlayerController_PlayerViewedUnlockedSubclass_Params params {};
		params.CharacterSubclass = CharacterSubclass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3290
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerSubmitVote
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UVotingInstance*                             VotingInstance                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Vote                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlayerSubmitVote(class UVotingInstance* VotingInstance, const class FName& Vote)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerSubmitVote");
		
		ATBLPlayerController_PlayerSubmitVote_Params params {};
		params.VotingInstance = VotingInstance;
		params.Vote = Vote;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3210
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerStateUniqueIdReplicated
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PS                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlayerStateUniqueIdReplicated(class ATBLPlayerState* PS)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerStateUniqueIdReplicated");
		
		ATBLPlayerController_PlayerStateUniqueIdReplicated_Params params {};
		params.PS = PS;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3190
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerStateMissingOnClientStart
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APlayerState*                                NewPlayerState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlayerStateMissingOnClientStart(class APlayerState* NewPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerStateMissingOnClientStart");
		
		ATBLPlayerController_PlayerStateMissingOnClientStart_Params params {};
		params.NewPlayerState = NewPlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C3110
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerPostGameFeedback
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                StarRating                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlayerPostGameFeedback(int StarRating)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerPostGameFeedback");
		
		ATBLPlayerController_PlayerPostGameFeedback_Params params {};
		params.StarRating = StarRating;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2FF0
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerKilled
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		struct FDeathEvent                                 DeathEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlayerKilled(const struct FDeathEvent& DeathEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerKilled");
		
		ATBLPlayerController_PlayerKilled_Params params {};
		params.DeathEvent = DeathEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B780
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerIsBeingKicked
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::PlayerIsBeingKicked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerIsBeingKicked");
		
		ATBLPlayerController_PlayerIsBeingKicked_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2F70
	 * 		Name   -> Function TBL.TBLPlayerController.PlayerCallKickVote
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerState*                                KickTarget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlayerCallKickVote(class APlayerState* KickTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayerCallKickVote");
		
		ATBLPlayerController_PlayerCallKickVote_Params params {};
		params.KickTarget = KickTarget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2D40
	 * 		Name   -> Function TBL.TBLPlayerController.PlayDelayedCrossbowHapticsForPS5
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::PlayDelayedCrossbowHapticsForPS5()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayDelayedCrossbowHapticsForPS5");
		
		ATBLPlayerController_PlayDelayedCrossbowHapticsForPS5_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2C70
	 * 		Name   -> Function TBL.TBLPlayerController.PlayCameraShake
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        CameraShakeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLoop                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PlayCameraShake(const class FName& CameraShakeName, bool bLoop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PlayCameraShake");
		
		ATBLPlayerController_PlayCameraShake_Params params {};
		params.CameraShakeName = CameraShakeName;
		params.bLoop = bLoop;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2BF0
	 * 		Name   -> Function TBL.TBLPlayerController.PendingSpawnExpired
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ASpawner*                                    PendingSpawner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PendingSpawnExpired(class ASpawner* PendingSpawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PendingSpawnExpired");
		
		ATBLPlayerController_PendingSpawnExpired_Params params {};
		params.PendingSpawner = PendingSpawner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2B40
	 * 		Name   -> Function TBL.TBLPlayerController.PartySay
	 * 		Flags  -> (Exec, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::PartySay(class FString* Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.PartySay");
		
		ATBLPlayerController_PartySay_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Msg != nullptr)
			*Msg = params.Msg;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2AA0
	 * 		Name   -> Function TBL.TBLPlayerController.OwningTeamChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLTeam*                                    NewOwningTeam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OwningTeamChanged(class ATBLTeam* NewOwningTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OwningTeamChanged");
		
		ATBLPlayerController_OwningTeamChanged_Params params {};
		params.NewOwningTeam = NewOwningTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2A80
	 * 		Name   -> Function TBL.TBLPlayerController.OpenBlueprintDebugMenu
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATBLPlayerController::OpenBlueprintDebugMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OpenBlueprintDebugMenu");
		
		ATBLPlayerController_OpenBlueprintDebugMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2910
	 * 		Name   -> Function TBL.TBLPlayerController.OnRep_NextSpawnWave
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ASpawnWave*                                  PreviousSpawnWave                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnRep_NextSpawnWave(class ASpawnWave* PreviousSpawnWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnRep_NextSpawnWave");
		
		ATBLPlayerController_OnRep_NextSpawnWave_Params params {};
		params.PreviousSpawnWave = PreviousSpawnWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C28F0
	 * 		Name   -> Function TBL.TBLPlayerController.OnRep_CheatsEnabled
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::OnRep_CheatsEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnRep_CheatsEnabled");
		
		ATBLPlayerController_OnRep_CheatsEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2990
	 * 		Name   -> Function TBL.TBLPlayerController.OnRep_bAutomaticallyChooseSpawnWave
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::OnRep_bAutomaticallyChooseSpawnWave()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnRep_bAutomaticallyChooseSpawnWave");
		
		ATBLPlayerController_OnRep_bAutomaticallyChooseSpawnWave_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C28D0
	 * 		Name   -> Function TBL.TBLPlayerController.OnReceivedFocus
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATBLPlayerController::OnReceivedFocus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnReceivedFocus");
		
		ATBLPlayerController_OnReceivedFocus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2810
	 * 		Name   -> Function TBL.TBLPlayerController.OnReadUserFileComplete
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FPlatformInterfaceDelegateResult            Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnReadUserFileComplete(const struct FPlatformInterfaceDelegateResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnReadUserFileComplete");
		
		ATBLPlayerController_OnReadUserFileComplete_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2740
	 * 		Name   -> Function TBL.TBLPlayerController.OnPostGameMatchFound
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class FName                                        MatchmadeSessionName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnPostGameMatchFound(const class FName& MatchmadeSessionName, bool bSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnPostGameMatchFound");
		
		ATBLPlayerController_OnPostGameMatchFound_Params params {};
		params.MatchmadeSessionName = MatchmadeSessionName;
		params.bSuccess = bSuccess;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2670
	 * 		Name   -> Function TBL.TBLPlayerController.OnPostGameMatchCancelled
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class FName                                        MatchmadeSessionName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnPostGameMatchCancelled(const class FName& MatchmadeSessionName, bool bSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnPostGameMatchCancelled");
		
		ATBLPlayerController_OnPostGameMatchCancelled_Params params {};
		params.MatchmadeSessionName = MatchmadeSessionName;
		params.bSuccess = bSuccess;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C25C0
	 * 		Name   -> Function TBL.TBLPlayerController.OnMatchMakingChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bIsMatchmaking                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnMatchMakingChanged(bool bIsMatchmaking)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnMatchMakingChanged");
		
		ATBLPlayerController_OnMatchMakingChanged_Params params {};
		params.bIsMatchmaking = bIsMatchmaking;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C25A0
	 * 		Name   -> Function TBL.TBLPlayerController.OnLostFocus
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATBLPlayerController::OnLostFocus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnLostFocus");
		
		ATBLPlayerController_OnLostFocus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2510
	 * 		Name   -> Function TBL.TBLPlayerController.OnLoadoutScreenState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               DidOpen                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnLoadoutScreenState(bool DidOpen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnLoadoutScreenState");
		
		ATBLPlayerController_OnLoadoutScreenState_Params params {};
		params.DidOpen = DidOpen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C29B0
	 * 		Name   -> Function TBL.TBLPlayerController.OnlineStatsReplicated
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		struct FTBLOnlineStats                             OnlineStats                                                (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnlineStatsReplicated(const struct FTBLOnlineStats& OnlineStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnlineStatsReplicated");
		
		ATBLPlayerController_OnlineStatsReplicated_Params params {};
		params.OnlineStats = OnlineStats;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C24F0
	 * 		Name   -> Function TBL.TBLPlayerController.OnInputExitDeathCam
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::OnInputExitDeathCam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnInputExitDeathCam");
		
		ATBLPlayerController_OnInputExitDeathCam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2410
	 * 		Name   -> Function TBL.TBLPlayerController.OnEnumerateCloudFilesComplete
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FPlatformInterfaceDelegateResult            Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnEnumerateCloudFilesComplete(const struct FPlatformInterfaceDelegateResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnEnumerateCloudFilesComplete");
		
		ATBLPlayerController_OnEnumerateCloudFilesComplete_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2370
	 * 		Name   -> Function TBL.TBLPlayerController.OnAbilityInitiated
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AAbilityInvocation*                          Invocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::OnAbilityInitiated(class AAbilityInvocation* Invocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.OnAbilityInitiated");
		
		ATBLPlayerController_OnAbilityInitiated_Params params {};
		params.Invocation = Invocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C22A0
	 * 		Name   -> Function TBL.TBLPlayerController.NotifyEnteredLeftLoadoutVolume
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UObject*                                     LoadoutVolume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInLoadoutVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::NotifyEnteredLeftLoadoutVolume(class UObject* LoadoutVolume, bool bInLoadoutVolume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.NotifyEnteredLeftLoadoutVolume");
		
		ATBLPlayerController_NotifyEnteredLeftLoadoutVolume_Params params {};
		params.LoadoutVolume = LoadoutVolume;
		params.bInLoadoutVolume = bInLoadoutVolume;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C21F0
	 * 		Name   -> Function TBL.TBLPlayerController.NotifyCausedDamage
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::NotifyCausedDamage(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.NotifyCausedDamage");
		
		ATBLPlayerController_NotifyCausedDamage_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2160
	 * 		Name   -> Function TBL.TBLPlayerController.MuteClient
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               Enabled                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::MuteClient(bool Enabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.MuteClient");
		
		ATBLPlayerController_MuteClient_Params params {};
		params.Enabled = Enabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C20E0
	 * 		Name   -> Function TBL.TBLPlayerController.MovementDebuggerLoadFile
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        Filename                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::MovementDebuggerLoadFile(const class FName& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.MovementDebuggerLoadFile");
		
		ATBLPlayerController_MovementDebuggerLoadFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C20C0
	 * 		Name   -> Function TBL.TBLPlayerController.MovementDebugger
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::MovementDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.MovementDebugger");
		
		ATBLPlayerController_MovementDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2040
	 * 		Name   -> Function TBL.TBLPlayerController.LoadVOASync
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioPersonalityType                          PersonalityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::LoadVOASync(TBL_EAudioPersonalityType PersonalityType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.LoadVOASync");
		
		ATBLPlayerController_LoadVOASync_Params params {};
		params.PersonalityType = PersonalityType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1F60
	 * 		Name   -> Function TBL.TBLPlayerController.LoadBank
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      BankName                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::LoadBank(const class FString& BankName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.LoadBank");
		
		ATBLPlayerController_LoadBank_Params params {};
		params.BankName = BankName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.ListViewedItems
	 * 		Flags  -> (Final, Exec, Native, Public, Const)
	 */
	void ATBLPlayerController::ListViewedItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ListViewedItems");
		
		ATBLPlayerController_ListViewedItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1F40
	 * 		Name   -> Function TBL.TBLPlayerController.ListPlayers
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ListPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ListPlayers");
		
		ATBLPlayerController_ListPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1EA0
	 * 		Name   -> Function TBL.TBLPlayerController.JoinFriendGameExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::JoinFriendGameExec(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.JoinFriendGameExec");
		
		ATBLPlayerController_JoinFriendGameExec_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1D30
	 * 		Name   -> Function TBL.TBLPlayerController.IsVOBankLoaded
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioPersonalityType                          PersonalityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::IsVOBankLoaded(TBL_EAudioPersonalityType PersonalityType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsVOBankLoaded");
		
		ATBLPlayerController_IsVOBankLoaded_Params params {};
		params.PersonalityType = PersonalityType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1E70
	 * 		Name   -> Function TBL.TBLPlayerController.IsViewportFocused
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerController::IsViewportFocused()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsViewportFocused");
		
		ATBLPlayerController_IsViewportFocused_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1DC0
	 * 		Name   -> Function TBL.TBLPlayerController.IsViewedItem
	 * 		Flags  -> (Final, Exec, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             ItemId                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::IsViewedItem(const struct FPrimaryAssetId& ItemId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsViewedItem");
		
		ATBLPlayerController_IsViewedItem_Params params {};
		params.ItemId = ItemId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1D00
	 * 		Name   -> Function TBL.TBLPlayerController.IsUsingGamepad
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerController::IsUsingGamepad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsUsingGamepad");
		
		ATBLPlayerController_IsUsingGamepad_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1CD0
	 * 		Name   -> Function TBL.TBLPlayerController.IsStatsLoaded
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerController::IsStatsLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsStatsLoaded");
		
		ATBLPlayerController_IsStatsLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4CC0
	 * 		Name   -> Function TBL.TBLPlayerController.IsSelfCamera
	 * 		Flags  -> (Final, Native, Protected, Const)
	 */
	bool ATBLPlayerController::IsSelfCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsSelfCamera");
		
		ATBLPlayerController_IsSelfCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1C70
	 * 		Name   -> Function TBL.TBLPlayerController.IsPlayingCinematics
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerController::IsPlayingCinematics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsPlayingCinematics");
		
		ATBLPlayerController_IsPlayingCinematics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1BA0
	 * 		Name   -> Function TBL.TBLPlayerController.IsPlayerStateMuted
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutIsMuted                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::IsPlayerStateMuted(class ATBLPlayerState* InPlayerState, bool* OutIsMuted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsPlayerStateMuted");
		
		ATBLPlayerController_IsPlayerStateMuted_Params params {};
		params.InPlayerState = InPlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutIsMuted != nullptr)
			*OutIsMuted = params.OutIsMuted;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1B10
	 * 		Name   -> Function TBL.TBLPlayerController.IsPlayerChatMuted
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerState*                                MutedPlayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::IsPlayerChatMuted(class APlayerState* MutedPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsPlayerChatMuted");
		
		ATBLPlayerController_IsPlayerChatMuted_Params params {};
		params.MutedPlayer = MutedPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1A10
	 * 		Name   -> Function TBL.TBLPlayerController.IsLoadoutItemRecentlyUnlocked
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterSubclass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Item                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId ATBLPlayerController::IsLoadoutItemRecentlyUnlocked(class UClass* CharacterSubclass, class UClass* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsLoadoutItemRecentlyUnlocked");
		
		ATBLPlayerController_IsLoadoutItemRecentlyUnlocked_Params params {};
		params.CharacterSubclass = CharacterSubclass;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C18E0
	 * 		Name   -> Function TBL.TBLPlayerController.IsLoadoutEqualToSavedLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      RequestedSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLoadout                                    Loadout                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::IsLoadoutEqualToSavedLoadout(class UClass* RequestedSubclass, const struct FLoadout& Loadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsLoadoutEqualToSavedLoadout");
		
		ATBLPlayerController_IsLoadoutEqualToSavedLoadout_Params params {};
		params.RequestedSubclass = RequestedSubclass;
		params.Loadout = Loadout;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C18B0
	 * 		Name   -> Function TBL.TBLPlayerController.IsHeadlessClient
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerController::IsHeadlessClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsHeadlessClient");
		
		ATBLPlayerController_IsHeadlessClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1880
	 * 		Name   -> Function TBL.TBLPlayerController.IsGhostCameraMode
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLPlayerController::IsGhostCameraMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsGhostCameraMode");
		
		ATBLPlayerController_IsGhostCameraMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C17D0
	 * 		Name   -> Function TBL.TBLPlayerController.IsCharacterRecentlyUnlocked
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterSubclass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId ATBLPlayerController::IsCharacterRecentlyUnlocked(class UClass* CharacterSubclass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsCharacterRecentlyUnlocked");
		
		ATBLPlayerController_IsCharacterRecentlyUnlocked_Params params {};
		params.CharacterSubclass = CharacterSubclass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1740
	 * 		Name   -> Function TBL.TBLPlayerController.IsActionKeyDown
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::IsActionKeyDown(const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.IsActionKeyDown");
		
		ATBLPlayerController_IsActionKeyDown_Params params {};
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1720
	 * 		Name   -> Function TBL.TBLPlayerController.InputStop
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::InputStop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.InputStop");
		
		ATBLPlayerController_InputStop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C16A0
	 * 		Name   -> Function TBL.TBLPlayerController.InputRec
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ReplayName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::InputRec(const class FName& ReplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.InputRec");
		
		ATBLPlayerController_InputRec_Params params {};
		params.ReplayName = ReplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1620
	 * 		Name   -> Function TBL.TBLPlayerController.InputPlay
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ReplayName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::InputPlay(const class FName& ReplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.InputPlay");
		
		ATBLPlayerController_InputPlay_Params params {};
		params.ReplayName = ReplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.InpStop
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void ATBLPlayerController::InpStop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.InpStop");
		
		ATBLPlayerController_InpStop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641DC0
	 * 		Name   -> Function TBL.TBLPlayerController.InpRec
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		class FString                                      RecName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::InpRec(const class FString& RecName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.InpRec");
		
		ATBLPlayerController_InpRec_Params params {};
		params.RecName = RecName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641DC0
	 * 		Name   -> Function TBL.TBLPlayerController.InpPlay
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		class FString                                      RecName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::InpPlay(const class FString& RecName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.InpPlay");
		
		ATBLPlayerController_InpPlay_Params params {};
		params.RecName = RecName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF7F0
	 * 		Name   -> Function TBL.TBLPlayerController.GrantFlavorEntitlementExec
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Entitlement                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GrantFlavorEntitlementExec(const class FString& Entitlement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GrantFlavorEntitlementExec");
		
		ATBLPlayerController_GrantFlavorEntitlementExec_Params params {};
		params.Entitlement = Entitlement;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1540
	 * 		Name   -> Function TBL.TBLPlayerController.GrantCurrencyExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Currency                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GrantCurrencyExec(const class FString& Currency, int Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GrantCurrencyExec");
		
		ATBLPlayerController_GrantCurrencyExec_Params params {};
		params.Currency = Currency;
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C14C0
	 * 		Name   -> Function TBL.TBLPlayerController.GiveWeapon
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        WeaponName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GiveWeapon(const class FName& WeaponName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GiveWeapon");
		
		ATBLPlayerController_GiveWeapon_Params params {};
		params.WeaponName = WeaponName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1330
	 * 		Name   -> Function TBL.TBLPlayerController.GetUnlocksAtLevel
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                Level                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TMap<struct FPrimaryAssetId, bool> ATBLPlayerController::GetUnlocksAtLevel(int Level, TBL_EOnlineStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetUnlocksAtLevel");
		
		ATBLPlayerController_GetUnlocksAtLevel_Params params {};
		params.Level = Level;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1250
	 * 		Name   -> Function TBL.TBLPlayerController.GetUnlockedItemsBySubclass
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterSubclass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FPrimaryAssetId> ATBLPlayerController::GetUnlockedItemsBySubclass(class UClass* CharacterSubclass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetUnlockedItemsBySubclass");
		
		ATBLPlayerController_GetUnlockedItemsBySubclass_Params params {};
		params.CharacterSubclass = CharacterSubclass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1220
	 * 		Name   -> Function TBL.TBLPlayerController.GetTotalTimesKilled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	int ATBLPlayerController::GetTotalTimesKilled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetTotalTimesKilled");
		
		ATBLPlayerController_GetTotalTimesKilled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C11F0
	 * 		Name   -> Function TBL.TBLPlayerController.GetToggleCameraGamepadInputHoldTimeThreshold
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float ATBLPlayerController::GetToggleCameraGamepadInputHoldTimeThreshold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetToggleCameraGamepadInputHoldTimeThreshold");
		
		ATBLPlayerController_GetToggleCameraGamepadInputHoldTimeThreshold_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C10A0
	 * 		Name   -> Function TBL.TBLPlayerController.GetTimeUntilRespawn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float ATBLPlayerController::GetTimeUntilRespawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetTimeUntilRespawn");
		
		ATBLPlayerController_GetTimeUntilRespawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C10D0
	 * 		Name   -> Function TBL.TBLPlayerController.GetTimesKilledKilledByPlayer
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerState*                             OtherPlayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OutTimesKilled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OutTimesKilledBy                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GetTimesKilledKilledByPlayer(class ATBLPlayerState* OtherPlayer, int* OutTimesKilled, int* OutTimesKilledBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetTimesKilledKilledByPlayer");
		
		ATBLPlayerController_GetTimesKilledKilledByPlayer_Params params {};
		params.OtherPlayer = OtherPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTimesKilled != nullptr)
			*OutTimesKilled = params.OutTimesKilled;
		if (OutTimesKilledBy != nullptr)
			*OutTimesKilledBy = params.OutTimesKilledBy;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1070
	 * 		Name   -> Function TBL.TBLPlayerController.GetTeamDamage
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float ATBLPlayerController::GetTeamDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetTeamDamage");
		
		ATBLPlayerController_GetTeamDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1040
	 * 		Name   -> Function TBL.TBLPlayerController.GetTBLPlayerInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UTBLPlayerInput* ATBLPlayerController::GetTBLPlayerInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetTBLPlayerInput");
		
		ATBLPlayerController_GetTBLPlayerInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0F90
	 * 		Name   -> Function TBL.TBLPlayerController.GetStatFloatExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      StatName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ATBLPlayerController::GetStatFloatExec(const class FString& StatName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetStatFloatExec");
		
		ATBLPlayerController_GetStatFloatExec_Params params {};
		params.StatName = StatName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0EE0
	 * 		Name   -> Function TBL.TBLPlayerController.GetStatFloat
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      StatName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ATBLPlayerController::GetStatFloat(const class FString& StatName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetStatFloat");
		
		ATBLPlayerController_GetStatFloat_Params params {};
		params.StatName = StatName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0E30
	 * 		Name   -> Function TBL.TBLPlayerController.GetStatExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      StatName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLPlayerController::GetStatExec(const class FString& StatName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetStatExec");
		
		ATBLPlayerController_GetStatExec_Params params {};
		params.StatName = StatName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0DA0
	 * 		Name   -> Function TBL.TBLPlayerController.GetStat
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLPlayerController::GetStat(TBL_EOnlineStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetStat");
		
		ATBLPlayerController_GetStat_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0D30
	 * 		Name   -> Function TBL.TBLPlayerController.GetSpectatorPawnSpawnTransform
	 * 		Flags  -> (Native, Event, Public, HasDefaults, BlueprintEvent)
	 */
	struct FTransform ATBLPlayerController::GetSpectatorPawnSpawnTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetSpectatorPawnSpawnTransform");
		
		ATBLPlayerController_GetSpectatorPawnSpawnTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0C40
	 * 		Name   -> Function TBL.TBLPlayerController.GetSavedLoadout
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      RequestedSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLoadout                                    Loadout                                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GetSavedLoadout(class UClass* RequestedSubclass, struct FLoadout* Loadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetSavedLoadout");
		
		ATBLPlayerController_GetSavedLoadout_Params params {};
		params.RequestedSubclass = RequestedSubclass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Loadout != nullptr)
			*Loadout = params.Loadout;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0BB0
	 * 		Name   -> Function TBL.TBLPlayerController.GetSavedCharacterSubclass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      ParentClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ATBLPlayerController::GetSavedCharacterSubclass(class UClass* ParentClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetSavedCharacterSubclass");
		
		ATBLPlayerController_GetSavedCharacterSubclass_Params params {};
		params.ParentClass = ParentClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0B00
	 * 		Name   -> Function TBL.TBLPlayerController.GetRespawnTime
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		float                                              TimeRemaining                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::GetRespawnTime(float* TimeRemaining)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetRespawnTime");
		
		ATBLPlayerController_GetRespawnTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (TimeRemaining != nullptr)
			*TimeRemaining = params.TimeRemaining;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0A30
	 * 		Name   -> Function TBL.TBLPlayerController.GetRandomUnlockedLoadoutItemForSlot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ULoadoutSelection*                           LoadoutSelection                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ATBLPlayerController::GetRandomUnlockedLoadoutItemForSlot(class ULoadoutSelection* LoadoutSelection, TBL_EInventoryItemSlot Slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetRandomUnlockedLoadoutItemForSlot");
		
		ATBLPlayerController_GetRandomUnlockedLoadoutItemForSlot_Params params {};
		params.LoadoutSelection = LoadoutSelection;
		params.Slot = Slot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0930
	 * 		Name   -> Function TBL.TBLPlayerController.GetOwnership
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             AssetIdToCheck                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               BaseOnly                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FOwnershipResponse ATBLPlayerController::GetOwnership(const struct FPrimaryAssetId& AssetIdToCheck, bool BaseOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetOwnership");
		
		ATBLPlayerController_GetOwnership_Params params {};
		params.AssetIdToCheck = AssetIdToCheck;
		params.BaseOnly = BaseOnly;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0850
	 * 		Name   -> Function TBL.TBLPlayerController.GetOwnerCustomizationWeaponItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EWeaponTag                                     WeaponTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FCustomizationEntry> ATBLPlayerController::GetOwnerCustomizationWeaponItems(TBL_EWeaponTag WeaponTag, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetOwnerCustomizationWeaponItems");
		
		ATBLPlayerController_GetOwnerCustomizationWeaponItems_Params params {};
		params.WeaponTag = WeaponTag;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0680
	 * 		Name   -> Function TBL.TBLPlayerController.GetOwnerCustomizationItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioClassType                                CharacterType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AssetsTypeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPresetCompatible                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSort                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FCustomizationEntry> ATBLPlayerController::GetOwnerCustomizationItems(TBL_EAudioClassType CharacterType, TBL_EFaction Faction, const class FName& AssetsTypeName, bool bPresetCompatible, bool bSort)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetOwnerCustomizationItems");
		
		ATBLPlayerController_GetOwnerCustomizationItems_Params params {};
		params.CharacterType = CharacterType;
		params.Faction = Faction;
		params.AssetsTypeName = AssetsTypeName;
		params.bPresetCompatible = bPresetCompatible;
		params.bSort = bSort;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0590
	 * 		Name   -> Function TBL.TBLPlayerController.GetOnlineCommodity
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLPlayerController::GetOnlineCommodity(const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetOnlineCommodity");
		
		ATBLPlayerController_GetOnlineCommodity_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0560
	 * 		Name   -> Function TBL.TBLPlayerController.GetNextSpawnWave
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class ASpawnWave* ATBLPlayerController::GetNextSpawnWave()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetNextSpawnWave");
		
		ATBLPlayerController_GetNextSpawnWave_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C04B0
	 * 		Name   -> Function TBL.TBLPlayerController.GetLevelExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Stat                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLPlayerController::GetLevelExec(const class FString& Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetLevelExec");
		
		ATBLPlayerController_GetLevelExec_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0420
	 * 		Name   -> Function TBL.TBLPlayerController.GetLevel
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLPlayerController::GetLevel(TBL_EOnlineStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetLevel");
		
		ATBLPlayerController_GetLevel_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C03F0
	 * 		Name   -> Function TBL.TBLPlayerController.GetIsProfileDataLoaded
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerController::GetIsProfileDataLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetIsProfileDataLoaded");
		
		ATBLPlayerController_GetIsProfileDataLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C02D0
	 * 		Name   -> Function TBL.TBLPlayerController.GetInputAnalogStickStateRaw
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		Engine_EControllerAnalogStick                      WhichStick                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StickX                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StickY                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GetInputAnalogStickStateRaw(Engine_EControllerAnalogStick WhichStick, float* StickX, float* StickY)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetInputAnalogStickStateRaw");
		
		ATBLPlayerController_GetInputAnalogStickStateRaw_Params params {};
		params.WhichStick = WhichStick;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (StickX != nullptr)
			*StickX = params.StickX;
		if (StickY != nullptr)
			*StickY = params.StickY;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C01C0
	 * 		Name   -> Function TBL.TBLPlayerController.GetEquippedCustomizationWeaponAsset
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EWeaponTag                                     WeaponTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                CharacterType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId ATBLPlayerController::GetEquippedCustomizationWeaponAsset(TBL_EWeaponTag WeaponTag, TBL_EFaction Faction, TBL_EAudioClassType CharacterType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetEquippedCustomizationWeaponAsset");
		
		ATBLPlayerController_GetEquippedCustomizationWeaponAsset_Params params {};
		params.WeaponTag = WeaponTag;
		params.Faction = Faction;
		params.CharacterType = CharacterType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C0040
	 * 		Name   -> Function TBL.TBLPlayerController.GetCatalogInLevelRange
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               LevelAccessible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                MinLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                MaxLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FOnlineStoreOffer> ATBLPlayerController::GetCatalogInLevelRange(bool LevelAccessible, int MinLevel, int MaxLevel, TBL_EOnlineStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetCatalogInLevelRange");
		
		ATBLPlayerController_GetCatalogInLevelRange_Params params {};
		params.LevelAccessible = LevelAccessible;
		params.MinLevel = MinLevel;
		params.MaxLevel = MaxLevel;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFF80
	 * 		Name   -> Function TBL.TBLPlayerController.GetCatalogExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               LevelAccessible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                LevelsAbove                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GetCatalogExec(bool LevelAccessible, int LevelsAbove)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetCatalogExec");
		
		ATBLPlayerController_GetCatalogExec_Params params {};
		params.LevelAccessible = LevelAccessible;
		params.LevelsAbove = LevelsAbove;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFE40
	 * 		Name   -> Function TBL.TBLPlayerController.GetCatalog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               LevelAccessible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                LevelsAbove                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FOnlineStoreOffer> ATBLPlayerController::GetCatalog(bool LevelAccessible, int LevelsAbove, TBL_EOnlineStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetCatalog");
		
		ATBLPlayerController_GetCatalog_Params params {};
		params.LevelAccessible = LevelAccessible;
		params.LevelsAbove = LevelsAbove;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFE20
	 * 		Name   -> Function TBL.TBLPlayerController.GetAudioComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UAkComponent* ATBLPlayerController::GetAudioComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetAudioComponent");
		
		ATBLPlayerController_GetAudioComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFD90
	 * 		Name   -> Function TBL.TBLPlayerController.GetAllowedLoadoutSelection
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      RequestedSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ATBLPlayerController::GetAllowedLoadoutSelection(class UClass* RequestedSubclass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetAllowedLoadoutSelection");
		
		ATBLPlayerController_GetAllowedLoadoutSelection_Params params {};
		params.RequestedSubclass = RequestedSubclass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFD10
	 * 		Name   -> Function TBL.TBLPlayerController.GetAllowedCharacterClasses
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<class UClass*> ATBLPlayerController::GetAllowedCharacterClasses()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetAllowedCharacterClasses");
		
		ATBLPlayerController_GetAllowedCharacterClasses_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFCB0
	 * 		Name   -> Function TBL.TBLPlayerController.GetActiveScreenManager
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UTBLScreenManager* ATBLPlayerController::GetActiveScreenManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GetActiveScreenManager");
		
		ATBLPlayerController_GetActiveScreenManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFBF0
	 * 		Name   -> Function TBL.TBLPlayerController.GenerateStoreJSON
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bGenerateAllItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::GenerateStoreJSON(bool bGenerateAllItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.GenerateStoreJSON");
		
		ATBLPlayerController_GenerateStoreJSON_Params params {};
		params.bGenerateAllItem = bGenerateAllItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.ForceSelfAutobalance
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ForceSelfAutobalance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ForceSelfAutobalance");
		
		ATBLPlayerController_ForceSelfAutobalance_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFBD0
	 * 		Name   -> Function TBL.TBLPlayerController.ForceImmediateRespawn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerController::ForceImmediateRespawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ForceImmediateRespawn");
		
		ATBLPlayerController_ForceImmediateRespawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF910
	 * 		Name   -> Function TBL.TBLPlayerController.DumpStatsExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                Threshold                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DumpStatsExec(int Threshold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DumpStatsExec");
		
		ATBLPlayerController_DumpStatsExec_Params params {};
		params.Threshold = Threshold;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF8F0
	 * 		Name   -> Function TBL.TBLPlayerController.DumpPartyInfo
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void ATBLPlayerController::DumpPartyInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DumpPartyInfo");
		
		ATBLPlayerController_DumpPartyInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF8D0
	 * 		Name   -> Function TBL.TBLPlayerController.DumpOwnership
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::DumpOwnership()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DumpOwnership");
		
		ATBLPlayerController_DumpOwnership_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF8B0
	 * 		Name   -> Function TBL.TBLPlayerController.DumpMovementMetrics
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::DumpMovementMetrics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DumpMovementMetrics");
		
		ATBLPlayerController_DumpMovementMetrics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF890
	 * 		Name   -> Function TBL.TBLPlayerController.DumpFriendList
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::DumpFriendList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DumpFriendList");
		
		ATBLPlayerController_DumpFriendList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF7F0
	 * 		Name   -> Function TBL.TBLPlayerController.DtlsOpen
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		class FString                                      URL                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DtlsOpen(const class FString& URL)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DtlsOpen");
		
		ATBLPlayerController_DtlsOpen_Params params {};
		params.URL = URL;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF760
	 * 		Name   -> Function TBL.TBLPlayerController.DrawWeaponTip
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawWeaponTip(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawWeaponTip");
		
		ATBLPlayerController_DrawWeaponTip_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF6D0
	 * 		Name   -> Function TBL.TBLPlayerController.DrawVisibilityCheck
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawVisibilityCheck(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawVisibilityCheck");
		
		ATBLPlayerController_DrawVisibilityCheck_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF640
	 * 		Name   -> Function TBL.TBLPlayerController.DrawTracersClear
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawTracersClear(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawTracersClear");
		
		ATBLPlayerController_DrawTracersClear_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF5B0
	 * 		Name   -> Function TBL.TBLPlayerController.DrawTracers
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawTracers(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawTracers");
		
		ATBLPlayerController_DrawTracers_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF520
	 * 		Name   -> Function TBL.TBLPlayerController.DrawTracerDirection
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawTracerDirection(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawTracerDirection");
		
		ATBLPlayerController_DrawTracerDirection_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF490
	 * 		Name   -> Function TBL.TBLPlayerController.DrawTracerCache
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawTracerCache(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawTracerCache");
		
		ATBLPlayerController_DrawTracerCache_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF400
	 * 		Name   -> Function TBL.TBLPlayerController.DrawSpectatorCamera
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawSpectatorCamera(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawSpectatorCamera");
		
		ATBLPlayerController_DrawSpectatorCamera_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF380
	 * 		Name   -> Function TBL.TBLPlayerController.DrawSocket
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawSocket(const class FName& SocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawSocket");
		
		ATBLPlayerController_DrawSocket_Params params {};
		params.SocketName = SocketName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF2F0
	 * 		Name   -> Function TBL.TBLPlayerController.DrawShield
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawShield(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawShield");
		
		ATBLPlayerController_DrawShield_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF260
	 * 		Name   -> Function TBL.TBLPlayerController.DrawRangedInaccuracy
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawRangedInaccuracy(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawRangedInaccuracy");
		
		ATBLPlayerController_DrawRangedInaccuracy_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF1D0
	 * 		Name   -> Function TBL.TBLPlayerController.DrawProjectile
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawProjectile(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawProjectile");
		
		ATBLPlayerController_DrawProjectile_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF140
	 * 		Name   -> Function TBL.TBLPlayerController.DrawParryHit
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawParryHit(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawParryHit");
		
		ATBLPlayerController_DrawParryHit_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF0B0
	 * 		Name   -> Function TBL.TBLPlayerController.DrawMeleeHit
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawMeleeHit(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawMeleeHit");
		
		ATBLPlayerController_DrawMeleeHit_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF020
	 * 		Name   -> Function TBL.TBLPlayerController.DrawHorseImpact
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawHorseImpact(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawHorseImpact");
		
		ATBLPlayerController_DrawHorseImpact_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEF90
	 * 		Name   -> Function TBL.TBLPlayerController.DrawFacingCheck
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawFacingCheck(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawFacingCheck");
		
		ATBLPlayerController_DrawFacingCheck_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEF00
	 * 		Name   -> Function TBL.TBLPlayerController.DrawClientTracers
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawClientTracers(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawClientTracers");
		
		ATBLPlayerController_DrawClientTracers_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEE70
	 * 		Name   -> Function TBL.TBLPlayerController.DrawCamera
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawCamera(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawCamera");
		
		ATBLPlayerController_DrawCamera_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEDE0
	 * 		Name   -> Function TBL.TBLPlayerController.DrawBackSwingCheck
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawBackSwingCheck(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawBackSwingCheck");
		
		ATBLPlayerController_DrawBackSwingCheck_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BED50
	 * 		Name   -> Function TBL.TBLPlayerController.DrawAllTracers
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DrawAllTracers(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DrawAllTracers");
		
		ATBLPlayerController_DrawAllTracers_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BECC0
	 * 		Name   -> Function TBL.TBLPlayerController.DisplaySwingThroughInfo
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DisplaySwingThroughInfo(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DisplaySwingThroughInfo");
		
		ATBLPlayerController_DisplaySwingThroughInfo_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BECA0
	 * 		Name   -> Function TBL.TBLPlayerController.DisplayDebugScrollUp
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::DisplayDebugScrollUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DisplayDebugScrollUp");
		
		ATBLPlayerController_DisplayDebugScrollUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEC80
	 * 		Name   -> Function TBL.TBLPlayerController.DisplayDebugScrollReleased
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::DisplayDebugScrollReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DisplayDebugScrollReleased");
		
		ATBLPlayerController_DisplayDebugScrollReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEC60
	 * 		Name   -> Function TBL.TBLPlayerController.DisplayDebugScrollDown
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerController::DisplayDebugScrollDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DisplayDebugScrollDown");
		
		ATBLPlayerController_DisplayDebugScrollDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEBB0
	 * 		Name   -> Function TBL.TBLPlayerController.DisableCameraOffset
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::DisableCameraOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DisableCameraOffset");
		
		ATBLPlayerController_DisableCameraOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEB20
	 * 		Name   -> Function TBL.TBLPlayerController.DevMode
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bActivate                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DevMode(bool bActivate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DevMode");
		
		ATBLPlayerController_DevMode_Params params {};
		params.bActivate = bActivate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEB00
	 * 		Name   -> Function TBL.TBLPlayerController.DestroyInputReplayComponent
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::DestroyInputReplayComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DestroyInputReplayComponent");
		
		ATBLPlayerController_DestroyInputReplayComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE990
	 * 		Name   -> Function TBL.TBLPlayerController.DebugSetPartySetting
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::DebugSetPartySetting(const class FString& Key, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.DebugSetPartySetting");
		
		ATBLPlayerController_DebugSetPartySetting_Params params {};
		params.Key = Key;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE970
	 * 		Name   -> Function TBL.TBLPlayerController.CreateInputReplayComponent
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::CreateInputReplayComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CreateInputReplayComponent");
		
		ATBLPlayerController_CreateInputReplayComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE950
	 * 		Name   -> Function TBL.TBLPlayerController.ClosePropertyDebugger
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ClosePropertyDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClosePropertyDebugger");
		
		ATBLPlayerController_ClosePropertyDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE930
	 * 		Name   -> Function TBL.TBLPlayerController.CloseMovementDebugger
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::CloseMovementDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CloseMovementDebugger");
		
		ATBLPlayerController_CloseMovementDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE8A0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientUpdateVoiceStateForPlayer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class ATBLPlayerState*                             NewPlayer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientUpdateVoiceStateForPlayer(class ATBLPlayerState* NewPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientUpdateVoiceStateForPlayer");
		
		ATBLPlayerController_ClientUpdateVoiceStateForPlayer_Params params {};
		params.NewPlayer = NewPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE880
	 * 		Name   -> Function TBL.TBLPlayerController.ClientSwitchToSpectator
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientSwitchToSpectator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientSwitchToSpectator");
		
		ATBLPlayerController_ClientSwitchToSpectator_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE860
	 * 		Name   -> Function TBL.TBLPlayerController.ClientStartOnlineGame
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientStartOnlineGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientStartOnlineGame");
		
		ATBLPlayerController_ClientStartOnlineGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE790
	 * 		Name   -> Function TBL.TBLPlayerController.ClientSpawnerStartAllowingControl
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class ASpawner*                                    InSpawner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientSpawnerStartAllowingControl(class ASpawner* InSpawner, class ATBLCharacter* Char)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientSpawnerStartAllowingControl");
		
		ATBLPlayerController_ClientSpawnerStartAllowingControl_Params params {};
		params.InSpawner = InSpawner;
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E946A0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientShowTeamSelectScreen
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientShowTeamSelectScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientShowTeamSelectScreen");
		
		ATBLPlayerController_ClientShowTeamSelectScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E95120
	 * 		Name   -> Function TBL.TBLPlayerController.ClientShowLoadoutScreen
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientShowLoadoutScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientShowLoadoutScreen");
		
		ATBLPlayerController_ClientShowLoadoutScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE690
	 * 		Name   -> Function TBL.TBLPlayerController.ClientShowHudMarkerPointEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FName                                        HudMarkerTag                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TicketsModified                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                TeamIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientShowHudMarkerPointEvent(const class FName& HudMarkerTag, float TicketsModified, int TeamIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientShowHudMarkerPointEvent");
		
		ATBLPlayerController_ClientShowHudMarkerPointEvent_Params params {};
		params.HudMarkerTag = HudMarkerTag;
		params.TicketsModified = TicketsModified;
		params.TeamIndex = TeamIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE600
	 * 		Name   -> Function TBL.TBLPlayerController.ClientSetVisibilityOfAllObjectiveZones
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsVisible                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientSetVisibilityOfAllObjectiveZones(bool IsVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientSetVisibilityOfAllObjectiveZones");
		
		ATBLPlayerController_ClientSetVisibilityOfAllObjectiveZones_Params params {};
		params.IsVisible = IsVisible;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE570
	 * 		Name   -> Function TBL.TBLPlayerController.ClientSetSyntheticInputMovement
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientSetSyntheticInputMovement(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientSetSyntheticInputMovement");
		
		ATBLPlayerController_ClientSetSyntheticInputMovement_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE450
	 * 		Name   -> Function TBL.TBLPlayerController.ClientSetSyntheticInputAI
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientSetSyntheticInputAI(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientSetSyntheticInputAI");
		
		ATBLPlayerController_ClientSetSyntheticInputAI_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE4E0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientSetSyntheticInputActions
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientSetSyntheticInputActions(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientSetSyntheticInputActions");
		
		ATBLPlayerController_ClientSetSyntheticInputActions_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE370
	 * 		Name   -> Function TBL.TBLPlayerController.ClientSetSpectatorLocation
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		struct FVector                                     InLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    InRotation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientSetSpectatorLocation(const struct FVector& InLocation, const struct FRotator& InRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientSetSpectatorLocation");
		
		ATBLPlayerController_ClientSetSpectatorLocation_Params params {};
		params.InLocation = InLocation;
		params.InRotation = InRotation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE350
	 * 		Name   -> Function TBL.TBLPlayerController.ClientRequestPostMatchInfo
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientRequestPostMatchInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientRequestPostMatchInfo");
		
		ATBLPlayerController_ClientRequestPostMatchInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE1C0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceiveLocalizedObjectiveMessage
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		struct FObjectiveMessage                           ObjectiveMessage                                           (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceiveLocalizedObjectiveMessage(const struct FObjectiveMessage& ObjectiveMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceiveLocalizedObjectiveMessage");
		
		ATBLPlayerController_ClientReceiveLocalizedObjectiveMessage_Params params {};
		params.ObjectiveMessage = ObjectiveMessage;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE0C0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceiveLocalizedChat
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        FormatText                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceiveLocalizedChat(const class FText& FormatText, TBL_EChatType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceiveLocalizedChat");
		
		ATBLPlayerController_ClientReceiveLocalizedChat_Params params {};
		params.FormatText = FormatText;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BDFB0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceiveGameModeMessages
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FGameModeMessage>                    GameModeMessages                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceiveGameModeMessages(TArray<struct FGameModeMessage> GameModeMessages)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceiveGameModeMessages");
		
		ATBLPlayerController_ClientReceiveGameModeMessages_Params params {};
		params.GameModeMessages = GameModeMessages;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BDE80
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceiveGameModeMessage
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		struct FGameModeMessage                            GameModeMessage                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceiveGameModeMessage(const struct FGameModeMessage& GameModeMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceiveGameModeMessage");
		
		ATBLPlayerController_ClientReceiveGameModeMessage_Params params {};
		params.GameModeMessage = GameModeMessage;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BDDF0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceiveDecapHead
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class AInventoryItem*                              InDecapHead                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceiveDecapHead(class AInventoryItem* InDecapHead)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceiveDecapHead");
		
		ATBLPlayerController_ClientReceiveDecapHead_Params params {};
		params.InDecapHead = InDecapHead;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BDB10
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceiveDeathRecap
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		struct FDeathRecap                                 DeathRecap                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceiveDeathRecap(const struct FDeathRecap& DeathRecap)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceiveDeathRecap");
		
		ATBLPlayerController_ClientReceiveDeathRecap_Params params {};
		params.DeathRecap = DeathRecap;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BE2D0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceivedAutoBalanceNotification
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       NewFaction                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceivedAutoBalanceNotification(TBL_EFaction NewFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceivedAutoBalanceNotification");
		
		ATBLPlayerController_ClientReceivedAutoBalanceNotification_Params params {};
		params.NewFaction = NewFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD960
	 * 		Name   -> Function TBL.TBLPlayerController.ClientReceiveChat
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		class ATBLPlayerState*                             SenderPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      S                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsSenderDev                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      OverrideColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientReceiveChat(class ATBLPlayerState* SenderPlayerState, const class FString& S, TBL_EChatType Type, bool IsSenderDev, const struct FColor& OverrideColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientReceiveChat");
		
		ATBLPlayerController_ClientReceiveChat_Params params {};
		params.SenderPlayerState = SenderPlayerState;
		params.S = S;
		params.Type = Type;
		params.IsSenderDev = IsSenderDev;
		params.OverrideColor = OverrideColor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD8C0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPushCmd
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FString                                      Cmd                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPushCmd(const class FString& Cmd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPushCmd");
		
		ATBLPlayerController_ClientPushCmd_Params params {};
		params.Cmd = Cmd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD7C0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPromptPlayerMessageRequest
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
	 * Parameters:
	 * 		struct FGameplayTag                                MessageTag                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                MessageId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPromptPlayerMessageRequest(const struct FGameplayTag& MessageTag, int MessageId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPromptPlayerMessageRequest");
		
		ATBLPlayerController_ClientPromptPlayerMessageRequest_Params params {};
		params.MessageTag = MessageTag;
		params.MessageId = MessageId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD730
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPostGameStartMatchmaking
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		bool                                               bAlways                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPostGameStartMatchmaking(bool bAlways)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPostGameStartMatchmaking");
		
		ATBLPlayerController_ClientPostGameStartMatchmaking_Params params {};
		params.bAlways = bAlways;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD690
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPostGameMigrateToNewMatchmakingServer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FString                                      ConnectString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPostGameMigrateToNewMatchmakingServer(const class FString& ConnectString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPostGameMigrateToNewMatchmakingServer");
		
		ATBLPlayerController_ClientPostGameMigrateToNewMatchmakingServer_Params params {};
		params.ConnectString = ConnectString;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD520
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPostAKSoundsOnActor
	 * 		Flags  -> (Net, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      SoundActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UAkAudioEvent*>                       Sounds                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPostAKSoundsOnActor(class AActor* SoundActor, TArray<class UAkAudioEvent*> Sounds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPostAKSoundsOnActor");
		
		ATBLPlayerController_ClientPostAKSoundsOnActor_Params params {};
		params.SoundActor = SoundActor;
		params.Sounds = Sounds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD450
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPostAKSoundOnActor
	 * 		Flags  -> (Net, Native, Event, Public, NetClient, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      SoundActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPostAKSoundOnActor(class AActor* SoundActor, class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPostAKSoundOnActor");
		
		ATBLPlayerController_ClientPostAKSoundOnActor_Params params {};
		params.SoundActor = SoundActor;
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD600
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPostAkSound
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class UAkAudioEvent*                               Sound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPostAkSound(class UAkAudioEvent* Sound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPostAkSound");
		
		ATBLPlayerController_ClientPostAkSound_Params params {};
		params.Sound = Sound;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD390
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPlayEmote
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable, NetValidate)
	 * Parameters:
	 * 		class FName                                        EmoteName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientPlayEmote(const class FName& EmoteName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPlayEmote");
		
		ATBLPlayerController_ClientPlayEmote_Params params {};
		params.EmoteName = EmoteName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91330
	 * 		Name   -> Function TBL.TBLPlayerController.ClientPlayAimedAtSound
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 */
	void ATBLPlayerController::ClientPlayAimedAtSound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientPlayAimedAtSound");
		
		ATBLPlayerController_ClientPlayAimedAtSound_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD300
	 * 		Name   -> Function TBL.TBLPlayerController.ClientOnRevivedOtherPlayer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class APawn*                                       RevivedPawn                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientOnRevivedOtherPlayer(class APawn* RevivedPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientOnRevivedOtherPlayer");
		
		ATBLPlayerController_ClientOnRevivedOtherPlayer_Params params {};
		params.RevivedPawn = RevivedPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD270
	 * 		Name   -> Function TBL.TBLPlayerController.ClientOnPlayerRevived
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class APawn*                                       RevivingPawn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientOnPlayerRevived(class APawn* RevivingPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientOnPlayerRevived");
		
		ATBLPlayerController_ClientOnPlayerRevived_Params params {};
		params.RevivingPawn = RevivingPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD1A0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientOnCounteredAttack
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		TBL_EDefenderBlockedPolicy                         BlockPolicy                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientOnCounteredAttack(TBL_EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientOnCounteredAttack");
		
		ATBLPlayerController_ClientOnCounteredAttack_Params params {};
		params.BlockPolicy = BlockPolicy;
		params.AttackingCharacter = AttackingCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BD0A0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientOnBlockedAttack
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		TBL_EDefenderBlockedPolicy                         BlockPolicy                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasProjectile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientOnBlockedAttack(TBL_EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter, bool bWasProjectile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientOnBlockedAttack");
		
		ATBLPlayerController_ClientOnBlockedAttack_Params params {};
		params.BlockPolicy = BlockPolicy;
		params.AttackingCharacter = AttackingCharacter;
		params.bWasProjectile = bWasProjectile;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BCFD0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientNotifyWaveJoinResponse
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class ASpawnWave*                                  Wave                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bJoinedWaveSuccess                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientNotifyWaveJoinResponse(class ASpawnWave* Wave, bool bJoinedWaveSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientNotifyWaveJoinResponse");
		
		ATBLPlayerController_ClientNotifyWaveJoinResponse_Params params {};
		params.Wave = Wave;
		params.bJoinedWaveSuccess = bJoinedWaveSuccess;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BCF00
	 * 		Name   -> Function TBL.TBLPlayerController.ClientNotifyPendingSpawn
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class ASpawner*                                    PendingSpawner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ServerSpawnTimeSeconds                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientNotifyPendingSpawn(class ASpawner* PendingSpawner, float ServerSpawnTimeSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientNotifyPendingSpawn");
		
		ATBLPlayerController_ClientNotifyPendingSpawn_Params params {};
		params.PendingSpawner = PendingSpawner;
		params.ServerSpawnTimeSeconds = ServerSpawnTimeSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BCE70
	 * 		Name   -> Function TBL.TBLPlayerController.ClientNotifyForwardSpawnAwaitingCombatTimer
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class AForwardSpawnWave*                           ForwardWave                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientNotifyForwardSpawnAwaitingCombatTimer(class AForwardSpawnWave* ForwardWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientNotifyForwardSpawnAwaitingCombatTimer");
		
		ATBLPlayerController_ClientNotifyForwardSpawnAwaitingCombatTimer_Params params {};
		params.ForwardWave = ForwardWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BCD50
	 * 		Name   -> Function TBL.TBLPlayerController.ClientNotifyCausedDamage
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientNotifyCausedDamage(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientNotifyCausedDamage");
		
		ATBLPlayerController_ClientNotifyCausedDamage_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BCC90
	 * 		Name   -> Function TBL.TBLPlayerController.ClientKicked
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FText                                        KickReason                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientKicked(const class FText& KickReason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientKicked");
		
		ATBLPlayerController_ClientKicked_Params params {};
		params.KickReason = KickReason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BCA70
	 * 		Name   -> Function TBL.TBLPlayerController.ClientHandleGlobalGameNotification
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		TBL_EGlobalGameNotificationCategory                Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Title                                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FName                                        Subcategory                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Data                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientHandleGlobalGameNotification(TBL_EGlobalGameNotificationCategory Category, const class FText& Title, const class FText& Body, const class FName& Subcategory, class UObject* Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientHandleGlobalGameNotification");
		
		ATBLPlayerController_ClientHandleGlobalGameNotification_Params params {};
		params.Category = Category;
		params.Title = Title;
		params.Body = Body;
		params.Subcategory = Subcategory;
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC9E0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientGoingToSpawnAtSpawner
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class ASpawner*                                    InSpawner                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientGoingToSpawnAtSpawner(class ASpawner* InSpawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientGoingToSpawnAtSpawner");
		
		ATBLPlayerController_ClientGoingToSpawnAtSpawner_Params params {};
		params.InSpawner = InSpawner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC960
	 * 		Name   -> Function TBL.TBLPlayerController.ClientFadeOut
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		float                                              PlaybackSpeed                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientFadeOut(float PlaybackSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientFadeOut");
		
		ATBLPlayerController_ClientFadeOut_Params params {};
		params.PlaybackSpeed = PlaybackSpeed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC8E0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientFadeIn
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		float                                              PlaybackSpeed                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientFadeIn(float PlaybackSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientFadeIn");
		
		ATBLPlayerController_ClientFadeIn_Params params {};
		params.PlaybackSpeed = PlaybackSpeed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC8C0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientEndOnlineGame
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientEndOnlineGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientEndOnlineGame");
		
		ATBLPlayerController_ClientEndOnlineGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC770
	 * 		Name   -> Function TBL.TBLPlayerController.ClientDrawDebugTracerSphere
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     Center                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Segments                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientDrawDebugTracerSphere(const struct FVector& Center, float Radius, int Segments, const struct FColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientDrawDebugTracerSphere");
		
		ATBLPlayerController_ClientDrawDebugTracerSphere_Params params {};
		params.Center = Center;
		params.Radius = Radius;
		params.Segments = Segments;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC5F0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientDrawDebugTracerBox
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     Center                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Extent                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FQuat                                       Rotation                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientDrawDebugTracerBox(const struct FVector& Center, const struct FVector& Extent, const struct FQuat& Rotation, const struct FColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientDrawDebugTracerBox");
		
		ATBLPlayerController_ClientDrawDebugTracerBox_Params params {};
		params.Center = Center;
		params.Extent = Extent;
		params.Rotation = Rotation;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC5D0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientConfirmExit
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientConfirmExit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientConfirmExit");
		
		ATBLPlayerController_ClientConfirmExit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC5B0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientClearPostMatchInfo
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientClearPostMatchInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientClearPostMatchInfo");
		
		ATBLPlayerController_ClientClearPostMatchInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC3D0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientCausedFallDeath
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      FallDamage                                                 (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientCausedFallDeath(const struct FDeathDamageTakenEvent& FallDamage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientCausedFallDeath");
		
		ATBLPlayerController_ClientCausedFallDeath_Params params {};
		params.FallDamage = FallDamage;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC310
	 * 		Name   -> Function TBL.TBLPlayerController.ClientCancelPlayerMessageRequest
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
	 * Parameters:
	 * 		int                                                MessageId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientCancelPlayerMessageRequest(int MessageId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientCancelPlayerMessageRequest");
		
		ATBLPlayerController_ClientCancelPlayerMessageRequest_Params params {};
		params.MessageId = MessageId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BC160
	 * 		Name   -> Function TBL.TBLPlayerController.ClientBroadcastDebugMessage
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      TextColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bToAll                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTeamOnly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientBroadcastDebugMessage(const class FString& Message, const struct FColor& TextColor, float Duration, bool bToAll, bool bTeamOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientBroadcastDebugMessage");
		
		ATBLPlayerController_ClientBroadcastDebugMessage_Params params {};
		params.Message = Message;
		params.TextColor = TextColor;
		params.Duration = Duration;
		params.bToAll = bToAll;
		params.bTeamOnly = bTeamOnly;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBFF0
	 * 		Name   -> Function TBL.TBLPlayerController.ClientApprovedLoadout
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		bool                                               IsLoadoutApproved                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      RequestedSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLoadout                                    RequestedLoadout                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientApprovedLoadout(bool IsLoadoutApproved, class UClass* RequestedSubclass, const struct FLoadout& RequestedLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientApprovedLoadout");
		
		ATBLPlayerController_ClientApprovedLoadout_Params params {};
		params.IsLoadoutApproved = IsLoadoutApproved;
		params.RequestedSubclass = RequestedSubclass;
		params.RequestedLoadout = RequestedLoadout;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBF20
	 * 		Name   -> Function TBL.TBLPlayerController.ClientAcknowledgeTeamRequest
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ClientAcknowledgeTeamRequest(bool bSuccess, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientAcknowledgeTeamRequest");
		
		ATBLPlayerController_ClientAcknowledgeTeamRequest_Params params {};
		params.bSuccess = bSuccess;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBF00
	 * 		Name   -> Function TBL.TBLPlayerController.ClientAckDoneTravelling
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void ATBLPlayerController::ClientAckDoneTravelling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClientAckDoneTravelling");
		
		ATBLPlayerController_ClientAckDoneTravelling_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBEE0
	 * 		Name   -> Function TBL.TBLPlayerController.ClearServerHistoryList
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 */
	void ATBLPlayerController::ClearServerHistoryList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClearServerHistoryList");
		
		ATBLPlayerController_ClearServerHistoryList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBEC0
	 * 		Name   -> Function TBL.TBLPlayerController.ClearSeenGameUpdates
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ClearSeenGameUpdates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClearSeenGameUpdates");
		
		ATBLPlayerController_ClearSeenGameUpdates_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBEA0
	 * 		Name   -> Function TBL.TBLPlayerController.ClearPlayerHasAcceptedNDA
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ClearPlayerHasAcceptedNDA()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClearPlayerHasAcceptedNDA");
		
		ATBLPlayerController_ClearPlayerHasAcceptedNDA_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBE80
	 * 		Name   -> Function TBL.TBLPlayerController.ClearMovementMetrics
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ClearMovementMetrics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClearMovementMetrics");
		
		ATBLPlayerController_ClearMovementMetrics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBE60
	 * 		Name   -> Function TBL.TBLPlayerController.ClearLoadedSoundBanks
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ClearLoadedSoundBanks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClearLoadedSoundBanks");
		
		ATBLPlayerController_ClearLoadedSoundBanks_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBE40
	 * 		Name   -> Function TBL.TBLPlayerController.ClearFlavorStats
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::ClearFlavorStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ClearFlavorStats");
		
		ATBLPlayerController_ClearFlavorStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBE20
	 * 		Name   -> Function TBL.TBLPlayerController.CinematicSpectatorCamera
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::CinematicSpectatorCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CinematicSpectatorCamera");
		
		ATBLPlayerController_CinematicSpectatorCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBD20
	 * 		Name   -> Function TBL.TBLPlayerController.CheckPersonalityOwnership
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EAudioPersonalityType                          InPersonality                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                CharacterType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       InFaction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::CheckPersonalityOwnership(TBL_EAudioPersonalityType InPersonality, TBL_EAudioClassType CharacterType, TBL_EFaction InFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CheckPersonalityOwnership");
		
		ATBLPlayerController_CheckPersonalityOwnership_Params params {};
		params.InPersonality = InPersonality;
		params.CharacterType = CharacterType;
		params.InFaction = InFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBCA0
	 * 		Name   -> Function TBL.TBLPlayerController.ChatUnmutePlayer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerState*                                Unmuted                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ChatUnmutePlayer(class APlayerState* Unmuted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ChatUnmutePlayer");
		
		ATBLPlayerController_ChatUnmutePlayer_Params params {};
		params.Unmuted = Unmuted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBC20
	 * 		Name   -> Function TBL.TBLPlayerController.ChatMutePlayer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerState*                                Muted                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::ChatMutePlayer(class APlayerState* Muted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.ChatMutePlayer");
		
		ATBLPlayerController_ChatMutePlayer_Params params {};
		params.Muted = Muted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBB20
	 * 		Name   -> Function TBL.TBLPlayerController.CanUseLoadoutItem
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      LoadoutSelection                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Item                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FOwnershipResponse ATBLPlayerController::CanUseLoadoutItem(class UClass* LoadoutSelection, class UClass* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CanUseLoadoutItem");
		
		ATBLPlayerController_CanUseLoadoutItem_Params params {};
		params.LoadoutSelection = LoadoutSelection;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BBA60
	 * 		Name   -> Function TBL.TBLPlayerController.CanUseLoadout
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      LoadoutSelection                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FOwnershipResponse ATBLPlayerController::CanUseLoadout(class UClass* LoadoutSelection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CanUseLoadout");
		
		ATBLPlayerController_CanUseLoadout_Params params {};
		params.LoadoutSelection = LoadoutSelection;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB9A0
	 * 		Name   -> Function TBL.TBLPlayerController.CanUseCharacter
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      CharacterSubclass                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FOwnershipResponse ATBLPlayerController::CanUseCharacter(class UClass* CharacterSubclass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CanUseCharacter");
		
		ATBLPlayerController_CanUseCharacter_Params params {};
		params.CharacterSubclass = CharacterSubclass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F710
	 * 		Name   -> Function TBL.TBLPlayerController.CanSwitchCamera
	 * 		Flags  -> (Final, Native, Protected, Const)
	 */
	bool ATBLPlayerController::CanSwitchCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CanSwitchCamera");
		
		ATBLPlayerController_CanSwitchCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB910
	 * 		Name   -> Function TBL.TBLPlayerController.CanPlayerCallKickVote
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerState*                                KickTarget                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLPlayerController::CanPlayerCallKickVote(class APlayerState* KickTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.CanPlayerCallKickVote");
		
		ATBLPlayerController_CanPlayerCallKickVote_Params params {};
		params.KickTarget = KickTarget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB8F0
	 * 		Name   -> Function TBL.TBLPlayerController.BugAnimation
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::BugAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.BugAnimation");
		
		ATBLPlayerController_BugAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB740
	 * 		Name   -> Function TBL.TBLPlayerController.BroadcastDebugMessage
	 * 		Flags  -> (Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      TextColor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bToAll                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bTeamOnly                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::BroadcastDebugMessage(const class FString& Message, const struct FColor& TextColor, float Duration, bool bToAll, bool bTeamOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.BroadcastDebugMessage");
		
		ATBLPlayerController_BroadcastDebugMessage_Params params {};
		params.Message = Message;
		params.TextColor = TextColor;
		params.Duration = Duration;
		params.bToAll = bToAll;
		params.bTeamOnly = bTeamOnly;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB6C0
	 * 		Name   -> Function TBL.TBLPlayerController.Benchmark
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		int                                                Workscale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::Benchmark(int Workscale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.Benchmark");
		
		ATBLPlayerController_Benchmark_Params params {};
		params.Workscale = Workscale;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.AutoInputRecord
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerController::AutoInputRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AutoInputRecord");
		
		ATBLPlayerController_AutoInputRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB530
	 * 		Name   -> Function TBL.TBLPlayerController.AttachCameraToWeapon
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        WeaponName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseWeaponRotation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AttachCameraToWeapon(const class FName& WeaponName, bool bUseWeaponRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AttachCameraToWeapon");
		
		ATBLPlayerController_AttachCameraToWeapon_Params params {};
		params.WeaponName = WeaponName;
		params.bUseWeaponRotation = bUseWeaponRotation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB4A0
	 * 		Name   -> Function TBL.TBLPlayerController.AttachCameraToProjectile
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bUseProjectileRotation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AttachCameraToProjectile(bool bUseProjectileRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AttachCameraToProjectile");
		
		ATBLPlayerController_AttachCameraToProjectile_Params params {};
		params.bUseProjectileRotation = bUseProjectileRotation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB3D0
	 * 		Name   -> Function TBL.TBLPlayerController.AttachCameraToHorse
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseBoneRotation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AttachCameraToHorse(const class FName& BoneName, bool bUseBoneRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AttachCameraToHorse");
		
		ATBLPlayerController_AttachCameraToHorse_Params params {};
		params.BoneName = BoneName;
		params.bUseBoneRotation = bUseBoneRotation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB300
	 * 		Name   -> Function TBL.TBLPlayerController.AttachCameraToBone
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseBoneRotation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AttachCameraToBone(const class FName& BoneName, bool bUseBoneRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AttachCameraToBone");
		
		ATBLPlayerController_AttachCameraToBone_Params params {};
		params.BoneName = BoneName;
		params.bUseBoneRotation = bUseBoneRotation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerController.AnalyticsQuery
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLPlayerController::AnalyticsQuery()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AnalyticsQuery");
		
		ATBLPlayerController_AnalyticsQuery_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB250
	 * 		Name   -> Function TBL.TBLPlayerController.AdminSay
	 * 		Flags  -> (Exec, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FString                                      Msg                                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AdminSay(class FString* Msg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AdminSay");
		
		ATBLPlayerController_AdminSay_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Msg != nullptr)
			*Msg = params.Msg;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB170
	 * 		Name   -> Function TBL.TBLPlayerController.Admin
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Cmd                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::Admin(const class FString& Cmd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.Admin");
		
		ATBLPlayerController_Admin_Params params {};
		params.Cmd = Cmd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB0D0
	 * 		Name   -> Function TBL.TBLPlayerController.AddViewedItem
	 * 		Flags  -> (Final, Exec, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             ItemId                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AddViewedItem(const struct FPrimaryAssetId& ItemId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AddViewedItem");
		
		ATBLPlayerController_AddViewedItem_Params params {};
		params.ItemId = ItemId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB030
	 * 		Name   -> Function TBL.TBLPlayerController.AddUncheckedLevelUpResult
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             NewLevelUpItem                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AddUncheckedLevelUpResult(const struct FPrimaryAssetId& NewLevelUpItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AddUncheckedLevelUpResult");
		
		ATBLPlayerController_AddUncheckedLevelUpResult_Params params {};
		params.NewLevelUpItem = NewLevelUpItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BAF90
	 * 		Name   -> Function TBL.TBLPlayerController.AddFriendByName
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AddFriendByName(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AddFriendByName");
		
		ATBLPlayerController_AddFriendByName_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BAEF0
	 * 		Name   -> Function TBL.TBLPlayerController.AddFriendById
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      UniqueId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AddFriendById(const class FString& UniqueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AddFriendById");
		
		ATBLPlayerController_AddFriendById_Params params {};
		params.UniqueId = UniqueId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BADE0
	 * 		Name   -> Function TBL.TBLPlayerController.AddAllViewedItems
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioClassType                                CharacterType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AssetsTypeName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerController::AddAllViewedItems(TBL_EAudioClassType CharacterType, TBL_EFaction Faction, const class FName& AssetsTypeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerController.AddAllViewedItems");
		
		ATBLPlayerController_AddAllViewedItems_Params params {};
		params.CharacterType = CharacterType;
		params.Faction = Faction;
		params.AssetsTypeName = AssetsTypeName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLPlayerController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLPlayerController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerController");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLPlayerControllerCinematic.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLPlayerControllerCinematic::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerControllerCinematic");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AArenaPlayerController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AArenaPlayerController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ArenaPlayerController");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0650
	 * 		Name   -> Function TBL.TBLPlayerState.UploadPing
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::UploadPing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.UploadPing");
		
		ATBLPlayerState_UploadPing_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D05D0
	 * 		Name   -> Function TBL.TBLPlayerState.UpdatePlayerAutoBalanceEligibility
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               CanBeAutoBalanced                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::UpdatePlayerAutoBalanceEligibility(bool CanBeAutoBalanced)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.UpdatePlayerAutoBalanceEligibility");
		
		ATBLPlayerState_UpdatePlayerAutoBalanceEligibility_Params params {};
		params.CanBeAutoBalanced = CanBeAutoBalanced;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D05B0
	 * 		Name   -> Function TBL.TBLPlayerState.UpdateDeadCharacters
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerState::UpdateDeadCharacters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.UpdateDeadCharacters");
		
		ATBLPlayerState_UpdateDeadCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0510
	 * 		Name   -> Function TBL.TBLPlayerState.SyncScoreEvents
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		TArray<struct FScoreEventByName>                   ScoreEvents                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::SyncScoreEvents(TArray<struct FScoreEventByName> ScoreEvents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.SyncScoreEvents");
		
		ATBLPlayerState_SyncScoreEvents_Params params {};
		params.ScoreEvents = ScoreEvents;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0410
	 * 		Name   -> Function TBL.TBLPlayerState.StatsGetPlayerScoreEvents
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<struct FScoreEventStruct> ATBLPlayerState::StatsGetPlayerScoreEvents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.StatsGetPlayerScoreEvents");
		
		ATBLPlayerState_StatsGetPlayerScoreEvents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0380
	 * 		Name   -> Function TBL.TBLPlayerState.SetPlayerVIPStatus
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsVIP                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::SetPlayerVIPStatus(bool IsVIP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.SetPlayerVIPStatus");
		
		ATBLPlayerState_SetPlayerVIPStatus_Params params {};
		params.IsVIP = IsVIP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D02A0
	 * 		Name   -> Function TBL.TBLPlayerState.SetPartyId
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      InPartyId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::SetPartyId(const class FString& InPartyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.SetPartyId");
		
		ATBLPlayerState_SetPartyId_Params params {};
		params.InPartyId = InPartyId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0220
	 * 		Name   -> Function TBL.TBLPlayerState.SetNumInParty
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                inNumInParty                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::SetNumInParty(int inNumInParty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.SetNumInParty");
		
		ATBLPlayerState_SetNumInParty_Params params {};
		params.inNumInParty = inNumInParty;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0190
	 * 		Name   -> Function TBL.TBLPlayerState.SetIsFriend
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsFriend                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::SetIsFriend(bool IsFriend)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.SetIsFriend");
		
		ATBLPlayerState_SetIsFriend_Params params {};
		params.IsFriend = IsFriend;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CFB70
	 * 		Name   -> Function TBL.TBLPlayerState.ServerUploadPing
	 * 		Flags  -> (Net, Native, Event, Protected, NetServer)
	 * Parameters:
	 * 		unsigned char                                      NewPing                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::ServerUploadPing(unsigned char NewPing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ServerUploadPing");
		
		ATBLPlayerState_ServerUploadPing_Params params {};
		params.NewPing = NewPing;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CFAA0
	 * 		Name   -> Function TBL.TBLPlayerState.ServerUpdateFriendStatus
	 * 		Flags  -> (Net, Native, Event, Public, NetServer)
	 * Parameters:
	 * 		class ATBLPlayerState*                             MyFriend                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsFriend                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::ServerUpdateFriendStatus(class ATBLPlayerState* MyFriend, bool IsFriend)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ServerUpdateFriendStatus");
		
		ATBLPlayerState_ServerUpdateFriendStatus_Params params {};
		params.MyFriend = MyFriend;
		params.IsFriend = IsFriend;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF970
	 * 		Name   -> Function TBL.TBLPlayerState.ReturnListOfFriends
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLPlayerState*> ATBLPlayerState::ReturnListOfFriends(TArray<class ATBLPlayerState*> PlayerStates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ReturnListOfFriends");
		
		ATBLPlayerState_ReturnListOfFriends_Params params {};
		params.PlayerStates = PlayerStates;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF950
	 * 		Name   -> Function TBL.TBLPlayerState.ResetPartyId
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerState::ResetPartyId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ResetPartyId");
		
		ATBLPlayerState_ResetPartyId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E933D0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_Team
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLPlayerState::OnRep_Team()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_Team");
		
		ATBLPlayerState_OnRep_Team_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF7D0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_Takedowns
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_Takedowns()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_Takedowns");
		
		ATBLPlayerState_OnRep_Takedowns_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E931F0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_Presets
	 * 		Flags  -> (Native, Protected)
	 */
	void ATBLPlayerState::OnRep_Presets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_Presets");
		
		ATBLPlayerState_OnRep_Presets_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF7B0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_PlayerScore
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_PlayerScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_PlayerScore");
		
		ATBLPlayerState_OnRep_PlayerScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF790
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_PlatformUniqueId
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerState::OnRep_PlatformUniqueId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_PlatformUniqueId");
		
		ATBLPlayerState_OnRep_PlatformUniqueId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF770
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_PersonalityType
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_PersonalityType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_PersonalityType");
		
		ATBLPlayerState_OnRep_PersonalityType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF750
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_OnlineStats
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerState::OnRep_OnlineStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_OnlineStats");
		
		ATBLPlayerState_OnRep_OnlineStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_OnlineAccount
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_OnlineAccount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_OnlineAccount");
		
		ATBLPlayerState_OnRep_OnlineAccount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF730
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_NextSpawnTeam
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLPlayerState::OnRep_NextSpawnTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_NextSpawnTeam");
		
		ATBLPlayerState_OnRep_NextSpawnTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E92D50
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_NextSpawnPawnSubclass
	 * 		Flags  -> (Native, Protected)
	 */
	void ATBLPlayerState::OnRep_NextSpawnPawnSubclass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_NextSpawnPawnSubclass");
		
		ATBLPlayerState_OnRep_NextSpawnPawnSubclass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF710
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_Kills
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_Kills()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_Kills");
		
		ATBLPlayerState_OnRep_Kills_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF6F0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_GlobalRank
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_GlobalRank()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_GlobalRank");
		
		ATBLPlayerState_OnRep_GlobalRank_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF6D0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_Deaths
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_Deaths()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_Deaths");
		
		ATBLPlayerState_OnRep_Deaths_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF6A0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_ClientPlatform
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_ClientPlatform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_ClientPlatform");
		
		ATBLPlayerState_OnRep_ClientPlatform_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_CharacterClass
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerState::OnRep_CharacterClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_CharacterClass");
		
		ATBLPlayerState_OnRep_CharacterClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF7F0
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_bMustSetLoadout
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::OnRep_bMustSetLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_bMustSetLoadout");
		
		ATBLPlayerState_OnRep_bMustSetLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF680
	 * 		Name   -> Function TBL.TBLPlayerState.OnRep_AttachToProjectile
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerState::OnRep_AttachToProjectile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnRep_AttachToProjectile");
		
		ATBLPlayerState_OnRep_AttachToProjectile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF5D0
	 * 		Name   -> Function TBL.TBLPlayerState.OnPawnDamaged
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::OnPawnDamaged(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.OnPawnDamaged");
		
		ATBLPlayerState_OnPawnDamaged_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF500
	 * 		Name   -> Function TBL.TBLPlayerState.LocalPlayerPartyLeft
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               Result                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::LocalPlayerPartyLeft(bool Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.LocalPlayerPartyLeft");
		
		ATBLPlayerState_LocalPlayerPartyLeft_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF460
	 * 		Name   -> Function TBL.TBLPlayerState.LocalPlayerPartyInviteAccepted
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      NewPartyId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::LocalPlayerPartyInviteAccepted(const class FString& NewPartyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.LocalPlayerPartyInviteAccepted");
		
		ATBLPlayerState_LocalPlayerPartyInviteAccepted_Params params {};
		params.NewPartyId = NewPartyId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF440
	 * 		Name   -> Function TBL.TBLPlayerState.LocalPlayerPartyDisbanded
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLPlayerState::LocalPlayerPartyDisbanded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.LocalPlayerPartyDisbanded");
		
		ATBLPlayerState_LocalPlayerPartyDisbanded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF350
	 * 		Name   -> Function TBL.TBLPlayerState.LocalPlayerPartyCreated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               Result                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      NewPartyId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::LocalPlayerPartyCreated(bool Result, const class FString& NewPartyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.LocalPlayerPartyCreated");
		
		ATBLPlayerState_LocalPlayerPartyCreated_Params params {};
		params.Result = Result;
		params.NewPartyId = NewPartyId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF140
	 * 		Name   -> Function TBL.TBLPlayerState.IsInParty
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerState::IsInParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.IsInParty");
		
		ATBLPlayerState_IsInParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF0A0
	 * 		Name   -> Function TBL.TBLPlayerState.GetPlayerVIPStatus
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerState::GetPlayerVIPStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetPlayerVIPStatus");
		
		ATBLPlayerState_GetPlayerVIPStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF080
	 * 		Name   -> Function TBL.TBLPlayerState.GetPersonalityType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EAudioPersonalityType ATBLPlayerState::GetPersonalityType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetPersonalityType");
		
		ATBLPlayerState_GetPersonalityType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CEFC0
	 * 		Name   -> Function TBL.TBLPlayerState.GetPartyId
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FString ATBLPlayerState::GetPartyId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetPartyId");
		
		ATBLPlayerState_GetPartyId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CEFA0
	 * 		Name   -> Function TBL.TBLPlayerState.GetNumInParty
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	int ATBLPlayerState::GetNumInParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetNumInParty");
		
		ATBLPlayerState_GetNumInParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CEC30
	 * 		Name   -> Function TBL.TBLPlayerState.GetIsFriend
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLPlayerState::GetIsFriend()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetIsFriend");
		
		ATBLPlayerState_GetIsFriend_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CEBF0
	 * 		Name   -> Function TBL.TBLPlayerState.GetDisplayColor
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 */
	struct FLinearColor ATBLPlayerState::GetDisplayColor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetDisplayColor");
		
		ATBLPlayerState_GetDisplayColor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE8E0
	 * 		Name   -> Function TBL.TBLPlayerState.GetDeathRecapEntryForTakeDowner
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FDeathRecapEntry                            Entry                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::GetDeathRecapEntryForTakeDowner(struct FDeathRecapEntry* Entry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetDeathRecapEntryForTakeDowner");
		
		ATBLPlayerState_GetDeathRecapEntryForTakeDowner_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Entry != nullptr)
			*Entry = params.Entry;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE830
	 * 		Name   -> Function TBL.TBLPlayerState.GetDeathRecapEntryForKiller
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FDeathRecapEntry                            Entry                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::GetDeathRecapEntryForKiller(struct FDeathRecapEntry* Entry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetDeathRecapEntryForKiller");
		
		ATBLPlayerState_GetDeathRecapEntryForKiller_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Entry != nullptr)
			*Entry = params.Entry;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE700
	 * 		Name   -> Function TBL.TBLPlayerState.GetDeathRecapEntries
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TArray<struct FDeathRecapEntry> ATBLPlayerState::GetDeathRecapEntries()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetDeathRecapEntries");
		
		ATBLPlayerState_GetDeathRecapEntries_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE670
	 * 		Name   -> Function TBL.TBLPlayerState.GetDeadCharacter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		unsigned char                                      ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLCharacter* ATBLPlayerState::GetDeadCharacter(unsigned char ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetDeadCharacter");
		
		ATBLPlayerState_GetDeadCharacter_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE640
	 * 		Name   -> Function TBL.TBLPlayerState.GetClientHardwarePlatform
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EHardwarePlatform ATBLPlayerState::GetClientHardwarePlatform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetClientHardwarePlatform");
		
		ATBLPlayerState_GetClientHardwarePlatform_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE550
	 * 		Name   -> Function TBL.TBLPlayerState.GetCharacterClass
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsDead                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsSpectating                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ATBLPlayerState::GetCharacterClass(bool* IsDead, bool* IsSpectating)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetCharacterClass");
		
		ATBLPlayerState_GetCharacterClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IsDead != nullptr)
			*IsDead = params.IsDead;
		if (IsSpectating != nullptr)
			*IsSpectating = params.IsSpectating;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE470
	 * 		Name   -> Function TBL.TBLPlayerState.GetAllPresetsAsArray
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FCustomizationPreset>                OutPresets                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::GetAllPresetsAsArray(TArray<struct FCustomizationPreset>* OutPresets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.GetAllPresetsAsArray");
		
		ATBLPlayerState_GetAllPresetsAsArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPresets != nullptr)
			*OutPresets = params.OutPresets;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE080
	 * 		Name   -> Function TBL.TBLPlayerState.ClientSetPlayerVIPStatus
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		bool                                               IsVIP                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::ClientSetPlayerVIPStatus(bool IsVIP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ClientSetPlayerVIPStatus");
		
		ATBLPlayerState_ClientSetPlayerVIPStatus_Params params {};
		params.IsVIP = IsVIP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CDF40
	 * 		Name   -> Function TBL.TBLPlayerState.ClientScoreOverrideEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FName                                        RowName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ScoreAmount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             Killed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int16_t                                            NoveltyScoreRowIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::ClientScoreOverrideEvent(const class FName& RowName, int ScoreAmount, class ATBLPlayerState* Killed, int16_t NoveltyScoreRowIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ClientScoreOverrideEvent");
		
		ATBLPlayerState_ClientScoreOverrideEvent_Params params {};
		params.RowName = RowName;
		params.ScoreAmount = ScoreAmount;
		params.Killed = Killed;
		params.NoveltyScoreRowIndex = NoveltyScoreRowIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CDDC0
	 * 		Name   -> Function TBL.TBLPlayerState.ClientScoreEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FName                                        RowName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ScoreAmount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             Killed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Bonuses                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int16_t                                            NoveltyScoreRowIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::ClientScoreEvent(const class FName& RowName, int ScoreAmount, class ATBLPlayerState* Killed, int Bonuses, int16_t NoveltyScoreRowIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ClientScoreEvent");
		
		ATBLPlayerState_ClientScoreEvent_Params params {};
		params.RowName = RowName;
		params.ScoreAmount = ScoreAmount;
		params.Killed = Killed;
		params.Bonuses = Bonuses;
		params.NoveltyScoreRowIndex = NoveltyScoreRowIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CDC40
	 * 		Name   -> Function TBL.TBLPlayerState.ClientScoreCurveEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FName                                        RowName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ScoreCurveAmount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ScoreAmount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             Killed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int16_t                                            NoveltyScoreRowIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::ClientScoreCurveEvent(const class FName& RowName, int ScoreCurveAmount, int ScoreAmount, class ATBLPlayerState* Killed, int16_t NoveltyScoreRowIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ClientScoreCurveEvent");
		
		ATBLPlayerState_ClientScoreCurveEvent_Params params {};
		params.RowName = RowName;
		params.ScoreCurveAmount = ScoreCurveAmount;
		params.ScoreAmount = ScoreAmount;
		params.Killed = Killed;
		params.NoveltyScoreRowIndex = NoveltyScoreRowIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CDC20
	 * 		Name   -> Function TBL.TBLPlayerState.ClientForceReplicate
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 */
	void ATBLPlayerState::ClientForceReplicate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ClientForceReplicate");
		
		ATBLPlayerState_ClientForceReplicate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CDB90
	 * 		Name   -> Function TBL.TBLPlayerState.ClientBlockInput
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		bool                                               BlockInput                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::ClientBlockInput(bool BlockInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.ClientBlockInput");
		
		ATBLPlayerState_ClientBlockInput_Params params {};
		params.BlockInput = BlockInput;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CD920
	 * 		Name   -> Function TBL.TBLPlayerState.CanBeAutoBalanced
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLPlayerState::CanBeAutoBalanced()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.CanBeAutoBalanced");
		
		ATBLPlayerState_CanBeAutoBalanced_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CD7C0
	 * 		Name   -> Function TBL.TBLPlayerState.BroadcastStatsLevelUp
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TArray<struct FLevelUpResult>                      NewLevelUpResults                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::BroadcastStatsLevelUp(TArray<struct FLevelUpResult> NewLevelUpResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.BroadcastStatsLevelUp");
		
		ATBLPlayerState_BroadcastStatsLevelUp_Params params {};
		params.NewLevelUpResults = NewLevelUpResults;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CD730
	 * 		Name   -> Function TBL.TBLPlayerState.BroadcastPauseRagdolls
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		bool                                               bPaused                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::BroadcastPauseRagdolls(bool bPaused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.BroadcastPauseRagdolls");
		
		ATBLPlayerState_BroadcastPauseRagdolls_Params params {};
		params.bPaused = bPaused;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CD620
	 * 		Name   -> Function TBL.TBLPlayerState.AddDeadCharacter
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		unsigned char                                      ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSpawnedHead                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerState::AddDeadCharacter(unsigned char ID, class ATBLCharacter* InCharacter, bool bSpawnedHead)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerState.AddDeadCharacter");
		
		ATBLPlayerState_AddDeadCharacter_Params params {};
		params.ID = ID;
		params.InCharacter = InCharacter;
		params.bSpawnedHead = bSpawnedHead;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLPlayerState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLPlayerState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCEC0
	 * 		Name   -> Function TBL.ArenaPlayerState.OnRep_LivesLeft
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaPlayerState::OnRep_LivesLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaPlayerState.OnRep_LivesLeft");
		
		AArenaPlayerState_OnRep_LivesLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCEA0
	 * 		Name   -> Function TBL.ArenaPlayerState.OnRep_IsPartOfRound
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaPlayerState::OnRep_IsPartOfRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaPlayerState.OnRep_IsPartOfRound");
		
		AArenaPlayerState_OnRep_IsPartOfRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCE80
	 * 		Name   -> Function TBL.ArenaPlayerState.OnRep_IsDeadAndOutOfLives
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaPlayerState::OnRep_IsDeadAndOutOfLives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaPlayerState.OnRep_IsDeadAndOutOfLives");
		
		AArenaPlayerState_OnRep_IsDeadAndOutOfLives_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC860
	 * 		Name   -> Function TBL.ArenaPlayerState.GetLivesLeft
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int AArenaPlayerState::GetLivesLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaPlayerState.GetLivesLeft");
		
		AArenaPlayerState_GetLivesLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC830
	 * 		Name   -> Function TBL.ArenaPlayerState.GetIsPartOfRound
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool AArenaPlayerState::GetIsPartOfRound()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaPlayerState.GetIsPartOfRound");
		
		AArenaPlayerState_GetIsPartOfRound_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC800
	 * 		Name   -> Function TBL.ArenaPlayerState.GetIsDeadAndOutOfLives
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool AArenaPlayerState::GetIsDeadAndOutOfLives()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaPlayerState.GetIsDeadAndOutOfLives");
		
		AArenaPlayerState_GetIsDeadAndOutOfLives_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AArenaPlayerState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AArenaPlayerState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ArenaPlayerState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAsnycLoadingHelpers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAsnycLoadingHelpers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AsnycLoadingHelpers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.AttachRagdollInterface.OnRagdollDetach
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAttachRagdollInterface::OnRagdollDetach(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AttachRagdollInterface.OnRagdollDetach");
		
		UAttachRagdollInterface_OnRagdollDetach_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.AttachRagdollInterface.OnRagdollAttach
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAttachRagdollInterface::OnRagdollAttach(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AttachRagdollInterface.OnRagdollAttach");
		
		UAttachRagdollInterface_OnRagdollAttach_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.AttachRagdollInterface.GetAttachRagdollParams
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAttachRagdollParams                        AttachRagdollParams                                        (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UAttachRagdollInterface::GetAttachRagdollParams(struct FAttachRagdollParams* AttachRagdollParams, class ATBLCharacter* Character, const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AttachRagdollInterface.GetAttachRagdollParams");
		
		UAttachRagdollInterface_GetAttachRagdollParams_Params params {};
		params.Character = Character;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (AttachRagdollParams != nullptr)
			*AttachRagdollParams = params.AttachRagdollParams;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAttachRagdollInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAttachRagdollInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AttachRagdollInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTracerType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTracerType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TracerType");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAttackTracers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAttackTracers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AttackTracers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CC770
	 * 		Name   -> Function TBL.AttackType.GetHitEffect
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EOnHitEffect UAttackType::GetHitEffect(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AttackType.GetHitEffect");
		
		UAttackType_GetHitEffect_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAttackType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAttackType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AttackType");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D11E0
	 * 		Name   -> Function TBL.AudioBlueprintLibrary.StopMusic
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                TransitionDurationMs                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAudioBlueprintLibrary::STATIC_StopMusic(class UObject* WorldContextObject, int TransitionDurationMs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AudioBlueprintLibrary.StopMusic");
		
		UAudioBlueprintLibrary_StopMusic_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.TransitionDurationMs = TransitionDurationMs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0F60
	 * 		Name   -> Function TBL.AudioBlueprintLibrary.ResumeMusic
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAudioBlueprintLibrary::STATIC_ResumeMusic(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AudioBlueprintLibrary.ResumeMusic");
		
		UAudioBlueprintLibrary_ResumeMusic_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0E30
	 * 		Name   -> Function TBL.AudioBlueprintLibrary.PostMusicEvent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               Event                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                TransitionDurationMs                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAudioBlueprintLibrary::STATIC_PostMusicEvent(class UObject* WorldContextObject, class UAkAudioEvent* Event, int TransitionDurationMs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AudioBlueprintLibrary.PostMusicEvent");
		
		UAudioBlueprintLibrary_PostMusicEvent_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Event = Event;
		params.TransitionDurationMs = TransitionDurationMs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0DC0
	 * 		Name   -> Function TBL.AudioBlueprintLibrary.PauseMusic
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAudioBlueprintLibrary::STATIC_PauseMusic(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AudioBlueprintLibrary.PauseMusic");
		
		UAudioBlueprintLibrary_PauseMusic_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0150
	 * 		Name   -> Function TBL.AudioBlueprintLibrary.IsPlayingMusic
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UAudioBlueprintLibrary::STATIC_IsPlayingMusic(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AudioBlueprintLibrary.IsPlayingMusic");
		
		UAudioBlueprintLibrary_IsPlayingMusic_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAudioBlueprintLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAudioBlueprintLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AudioBlueprintLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTracerShape.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTracerShape::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TracerShape");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAuraTracers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAuraTracers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AuraTracers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAutoInvalidationBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAutoInvalidationBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AutoInvalidationBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.AutomationApiBase.MakeTeamSelection
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLPlayerController*                        PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAutomationApiBase::MakeTeamSelection(class ATBLPlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AutomationApiBase.MakeTeamSelection");
		
		UAutomationApiBase_MakeTeamSelection_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.AutomationApiBase.MakeSpawnSelection
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLPlayerController*                        PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAutomationApiBase::MakeSpawnSelection(class ATBLPlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AutomationApiBase.MakeSpawnSelection");
		
		UAutomationApiBase_MakeSpawnSelection_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAutomationApiBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAutomationApiBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AutomationApiBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0DA0
	 * 		Name   -> Function TBL.AutomationLevelSequenceActor.OnStop
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AAutomationLevelSequenceActor::OnStop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AutomationLevelSequenceActor.OnStop");
		
		AAutomationLevelSequenceActor_OnStop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0CC0
	 * 		Name   -> Function TBL.AutomationLevelSequenceActor.OnSequenceEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FAutomationSequenceEvent                    SequenceEvent                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void AAutomationLevelSequenceActor::OnSequenceEvent(const struct FAutomationSequenceEvent& SequenceEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AutomationLevelSequenceActor.OnSequenceEvent");
		
		AAutomationLevelSequenceActor_OnSequenceEvent_Params params {};
		params.SequenceEvent = SequenceEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AAutomationLevelSequenceActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AAutomationLevelSequenceActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AutomationLevelSequenceActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAutomationSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAutomationSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AutomationSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91B30
	 * 		Name   -> Function TBL.TBLCharacterBase.ShowThirdPersonMesh
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void ATBLCharacterBase::ShowThirdPersonMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.ShowThirdPersonMesh");
		
		ATBLCharacterBase_ShowThirdPersonMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680280
	 * 		Name   -> Function TBL.TBLCharacterBase.SetCinematicSpawnInEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacterBase::STATIC_SetCinematicSpawnInEnabled(class UObject* WorldContextObject, bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.SetCinematicSpawnInEnabled");
		
		ATBLCharacterBase_SetCinematicSpawnInEnabled_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F870
	 * 		Name   -> Function TBL.TBLCharacterBase.PreRecalcRequiredBones_Mesh1P
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacterBase::PreRecalcRequiredBones_Mesh1P()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.PreRecalcRequiredBones_Mesh1P");
		
		ATBLCharacterBase_PreRecalcRequiredBones_Mesh1P_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F850
	 * 		Name   -> Function TBL.TBLCharacterBase.PostRecalcRequiredBones_Mesh1P
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacterBase::PostRecalcRequiredBones_Mesh1P()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.PostRecalcRequiredBones_Mesh1P");
		
		ATBLCharacterBase_PostRecalcRequiredBones_Mesh1P_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167ED40
	 * 		Name   -> Function TBL.TBLCharacterBase.IsTargetable
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacterBase::IsTargetable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.IsTargetable");
		
		ATBLCharacterBase_IsTargetable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167ECB0
	 * 		Name   -> Function TBL.TBLCharacterBase.IsFirstPerson
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacterBase::IsFirstPerson()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.IsFirstPerson");
		
		ATBLCharacterBase_IsFirstPerson_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EC80
	 * 		Name   -> Function TBL.TBLCharacterBase.IsCustomizationCharacter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLCharacterBase::IsCustomizationCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.IsCustomizationCharacter");
		
		ATBLCharacterBase_IsCustomizationCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EC50
	 * 		Name   -> Function TBL.TBLCharacterBase.IsAlive
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacterBase::IsAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.IsAlive");
		
		ATBLCharacterBase_IsAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E960
	 * 		Name   -> Function TBL.TBLCharacterBase.GetMeshVisibilityFlag
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EMeshVisibilityFlag ATBLCharacterBase::GetMeshVisibilityFlag()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.GetMeshVisibilityFlag");
		
		ATBLCharacterBase_GetMeshVisibilityFlag_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E8A0
	 * 		Name   -> Function TBL.TBLCharacterBase.GetCreationTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	float ATBLCharacterBase::GetCreationTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.GetCreationTime");
		
		ATBLCharacterBase_GetCreationTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90470
	 * 		Name   -> Function TBL.TBLCharacterBase.EnableMeshCollision
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLCharacterBase::EnableMeshCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.EnableMeshCollision");
		
		ATBLCharacterBase_EnableMeshCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90610
	 * 		Name   -> Function TBL.TBLCharacterBase.DisableMeshCollision
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLCharacterBase::DisableMeshCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterBase.DisableMeshCollision");
		
		ATBLCharacterBase_DisableMeshCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLCharacterBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLCharacterBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164A180
	 * 		Name   -> Function TBL.SiegeEngine.UseKeyRepeat
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASiegeEngine::UseKeyRepeat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.UseKeyRepeat");
		
		ASiegeEngine_UseKeyRepeat_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164A160
	 * 		Name   -> Function TBL.SiegeEngine.UseKeyReleased
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASiegeEngine::UseKeyReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.UseKeyReleased");
		
		ASiegeEngine_UseKeyReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164A140
	 * 		Name   -> Function TBL.SiegeEngine.UseKeyPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASiegeEngine::UseKeyPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.UseKeyPressed");
		
		ASiegeEngine_UseKeyPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649D00
	 * 		Name   -> Function TBL.SiegeEngine.ServerDismountPressed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ASiegeEngine::ServerDismountPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.ServerDismountPressed");
		
		ASiegeEngine_ServerDismountPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016499E0
	 * 		Name   -> Function TBL.SiegeEngine.OnTurnLockLimit
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaYaw                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::OnTurnLockLimit(float DeltaTime, float DeltaYaw)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.OnTurnLockLimit");
		
		ASiegeEngine_OnTurnLockLimit_Params params {};
		params.DeltaTime = DeltaTime;
		params.DeltaYaw = DeltaYaw;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016496D0
	 * 		Name   -> Function TBL.SiegeEngine.OnRiderCombatStateChanged
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::OnRiderCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.OnRiderCombatStateChanged");
		
		ASiegeEngine_OnRiderCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90990
	 * 		Name   -> Function TBL.SiegeEngine.OnRep_Driver
	 * 		Flags  -> (Native, Protected)
	 */
	void ASiegeEngine::OnRep_Driver()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.OnRep_Driver");
		
		ASiegeEngine_OnRep_Driver_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90FB0
	 * 		Name   -> Function TBL.SiegeEngine.OnDriverSetRagdollPhysics
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::OnDriverSetRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.OnDriverSetRagdollPhysics");
		
		ASiegeEngine_OnDriverSetRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649270
	 * 		Name   -> Function TBL.SiegeEngine.OnDriverKilled
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::OnDriverKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.OnDriverKilled");
		
		ASiegeEngine_OnDriverKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016490F0
	 * 		Name   -> Function TBL.SiegeEngine.OnAbilityError
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EResultCode                                    Code                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAbilityInvocation*                          Invocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::OnAbilityError(class AActor* Initiator, TBL_EResultCode Code, class AAbilityInvocation* Invocation, const class FName& AttackName, class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.OnAbilityError");
		
		ASiegeEngine_OnAbilityError_Params params {};
		params.Initiator = Initiator;
		params.Code = Code;
		params.Invocation = Invocation;
		params.AttackName = AttackName;
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649060
	 * 		Name   -> Function TBL.SiegeEngine.MountPressed
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::MountPressed(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.MountPressed");
		
		ASiegeEngine_MountPressed_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648F60
	 * 		Name   -> Function TBL.SiegeEngine.GetSiegeEngineCombatStateComponent
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	class UCombatStateComponent* ASiegeEngine::GetSiegeEngineCombatStateComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.GetSiegeEngineCombatStateComponent");
		
		ASiegeEngine_GetSiegeEngineCombatStateComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648DF0
	 * 		Name   -> Function TBL.SiegeEngine.GetMinChargingToFire
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	float ASiegeEngine::GetMinChargingToFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.GetMinChargingToFire");
		
		ASiegeEngine_GetMinChargingToFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648DC0
	 * 		Name   -> Function TBL.SiegeEngine.GetLoadedItem
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	class AActor* ASiegeEngine::GetLoadedItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.GetLoadedItem");
		
		ASiegeEngine_GetLoadedItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648D60
	 * 		Name   -> Function TBL.SiegeEngine.GetChargingPercent
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	float ASiegeEngine::GetChargingPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.GetChargingPercent");
		
		ASiegeEngine_GetChargingPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648CE0
	 * 		Name   -> Function TBL.SiegeEngine.ForceDismount
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::ForceDismount(TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.ForceDismount");
		
		ASiegeEngine_ForceDismount_Params params {};
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91910
	 * 		Name   -> Function TBL.SiegeEngine.FocusReleased
	 * 		Flags  -> (Native, Protected)
	 */
	void ASiegeEngine::FocusReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.FocusReleased");
		
		ASiegeEngine_FocusReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91AD0
	 * 		Name   -> Function TBL.SiegeEngine.FocusPressed
	 * 		Flags  -> (Native, Protected)
	 */
	void ASiegeEngine::FocusPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.FocusPressed");
		
		ASiegeEngine_FocusPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91C70
	 * 		Name   -> Function TBL.SiegeEngine.FireReleased
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::FireReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.FireReleased");
		
		ASiegeEngine_FireReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91B10
	 * 		Name   -> Function TBL.SiegeEngine.Fire
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::Fire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.Fire");
		
		ASiegeEngine_Fire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FF10
	 * 		Name   -> Function TBL.SiegeEngine.DismountReleased
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::DismountReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.DismountReleased");
		
		ASiegeEngine_DismountReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90B70
	 * 		Name   -> Function TBL.SiegeEngine.DismountPressed
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::DismountPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.DismountPressed");
		
		ASiegeEngine_DismountPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648900
	 * 		Name   -> Function TBL.SiegeEngine.CanMount
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASiegeEngine::CanMount(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.CanMount");
		
		ASiegeEngine_CanMount_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648880
	 * 		Name   -> Function TBL.SiegeEngine.BroadcastSetRotationYaw
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		float                                              NewRotationYaw                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::BroadcastSetRotationYaw(float NewRotationYaw)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.BroadcastSetRotationYaw");
		
		ASiegeEngine_BroadcastSetRotationYaw_Params params {};
		params.NewRotationYaw = NewRotationYaw;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016487F0
	 * 		Name   -> Function TBL.SiegeEngine.BroadcastMount
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::BroadcastMount(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.BroadcastMount");
		
		ASiegeEngine_BroadcastMount_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648760
	 * 		Name   -> Function TBL.SiegeEngine.BroadcastInterpToMountLocation
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::BroadcastInterpToMountLocation(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.BroadcastInterpToMountLocation");
		
		ASiegeEngine_BroadcastInterpToMountLocation_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016486E0
	 * 		Name   -> Function TBL.SiegeEngine.BroadcastDismount
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASiegeEngine::BroadcastDismount(TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.BroadcastDismount");
		
		ASiegeEngine_BroadcastDismount_Params params {};
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E903B0
	 * 		Name   -> Function TBL.SiegeEngine.ArrowCamReleased
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::ArrowCamReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.ArrowCamReleased");
		
		ASiegeEngine_ArrowCamReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90530
	 * 		Name   -> Function TBL.SiegeEngine.ArrowCamPressed
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::ArrowCamPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.ArrowCamPressed");
		
		ASiegeEngine_ArrowCamPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90B50
	 * 		Name   -> Function TBL.SiegeEngine.ArrowCamGamePadReleased
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::ArrowCamGamePadReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.ArrowCamGamePadReleased");
		
		ASiegeEngine_ArrowCamGamePadReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90A70
	 * 		Name   -> Function TBL.SiegeEngine.ArrowCamGamePadPressed
	 * 		Flags  -> (Native, Public)
	 */
	void ASiegeEngine::ArrowCamGamePadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngine.ArrowCamGamePadPressed");
		
		ASiegeEngine_ArrowCamGamePadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ASiegeEngine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASiegeEngine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SiegeEngine");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0FD0
	 * 		Name   -> Function TBL.Ballista.SetBroken
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bInBroken                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ABallista::SetBroken(bool bInBroken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ballista.SetBroken");
		
		ABallista_SetBroken_Params params {};
		params.bInBroken = bInBroken;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0CA0
	 * 		Name   -> Function TBL.Ballista.OnRep_RotationSpeed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ABallista::OnRep_RotationSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ballista.OnRep_RotationSpeed");
		
		ABallista_OnRep_RotationSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0C60
	 * 		Name   -> Function TBL.Ballista.OnRep_Broken
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ABallista::OnRep_Broken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ballista.OnRep_Broken");
		
		ABallista_OnRep_Broken_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D09D0
	 * 		Name   -> Function TBL.Ballista.OnKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ABallista::OnKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ballista.OnKilled");
		
		ABallista_OnKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0900
	 * 		Name   -> Function TBL.Ballista.OnHealthChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ABallista::OnHealthChanged(float Amount, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ballista.OnHealthChanged");
		
		ABallista_OnHealthChanged_Params params {};
		params.Amount = Amount;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0850
	 * 		Name   -> Function TBL.Ballista.OnDamageTaken
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ABallista::OnDamageTaken(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ballista.OnDamageTaken");
		
		ABallista_OnDamageTaken_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFF60
	 * 		Name   -> Function TBL.Ballista.EventUsePressed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       InPawn                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InInteractable                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ABallista::EventUsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ballista.EventUsePressed");
		
		ABallista_EventUsePressed_Params params {};
		params.InPawn = InPawn;
		params.InInteractable = InInteractable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ABallista.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABallista::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Ballista");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAchievementWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAchievementWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAchievementWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0B30
	 * 		Name   -> Function TBL.BandageXTimesWorker.OnPlayerUsedItem
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBandageXTimesWorker::OnPlayerUsedItem(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BandageXTimesWorker.OnPlayerUsedItem");
		
		UBandageXTimesWorker_OnPlayerUsedItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0AB0
	 * 		Name   -> Function TBL.BandageXTimesWorker.OnPlayerPossess
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBandageXTimesWorker::OnPlayerPossess(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BandageXTimesWorker.OnPlayerPossess");
		
		UBandageXTimesWorker_OnPlayerPossess_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBandageXTimesWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBandageXTimesWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BandageXTimesWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF940
	 * 		Name   -> Function TBL.CombatState.UseItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::UseItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.UseItem");
		
		UCombatState_UseItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF920
	 * 		Name   -> Function TBL.CombatState.SyncDrawStrength
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, Const)
	 */
	void UCombatState::SyncDrawStrength()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.SyncDrawStrength");
		
		UCombatState_SyncDrawStrength_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF900
	 * 		Name   -> Function TBL.CombatState.StopFocus
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::StopFocus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StopFocus");
		
		UCombatState_StopFocus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.StartRevive
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               DownedCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::StartRevive(class ATBLCharacter* DownedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartRevive");
		
		UCombatState_StartRevive_Params params {};
		params.DownedCharacter = DownedCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF8E0
	 * 		Name   -> Function TBL.CombatState.StartReleaseStab
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::StartReleaseStab()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartReleaseStab");
		
		UCombatState_StartReleaseStab_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.StartHoldAttack
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UCombatState::StartHoldAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartHoldAttack");
		
		UCombatState_StartHoldAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF850
	 * 		Name   -> Function TBL.CombatState.StartHeavyAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bIsHeavy                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::StartHeavyAttack(bool bIsHeavy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartHeavyAttack");
		
		UCombatState_StartHeavyAttack_Params params {};
		params.bIsHeavy = bIsHeavy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF830
	 * 		Name   -> Function TBL.CombatState.StartFocus
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::StartFocus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartFocus");
		
		UCombatState_StartFocus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF810
	 * 		Name   -> Function TBL.CombatState.StartFire
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::StartFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartFire");
		
		UCombatState_StartFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF7F0
	 * 		Name   -> Function TBL.CombatState.StartFeint
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatState::StartFeint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartFeint");
		
		UCombatState_StartFeint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF7D0
	 * 		Name   -> Function TBL.CombatState.StartChargeStab
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::StartChargeStab()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartChargeStab");
		
		UCombatState_StartChargeStab_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF7B0
	 * 		Name   -> Function TBL.CombatState.StartAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::StartAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.StartAttack");
		
		UCombatState_StartAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF780
	 * 		Name   -> Function TBL.CombatState.ShouldUseDrawStrengthModifier
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::ShouldUseDrawStrengthModifier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ShouldUseDrawStrengthModifier");
		
		UCombatState_ShouldUseDrawStrengthModifier_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF750
	 * 		Name   -> Function TBL.CombatState.ShouldSprintDecelerate
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UCombatState::ShouldSprintDecelerate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ShouldSprintDecelerate");
		
		UCombatState_ShouldSprintDecelerate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF720
	 * 		Name   -> Function TBL.CombatState.ShouldRemainInSprint
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UCombatState::ShouldRemainInSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ShouldRemainInSprint");
		
		UCombatState_ShouldRemainInSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF690
	 * 		Name   -> Function TBL.CombatState.SetWeaponLoaded
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bLoaded                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::SetWeaponLoaded(bool bLoaded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.SetWeaponLoaded");
		
		UCombatState_SetWeaponLoaded_Params params {};
		params.bLoaded = bLoaded;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF490
	 * 		Name   -> Function TBL.CombatState.SetCombatStateTimer
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		int                                                OutHandle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLooping                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::SetCombatStateTimer(int* OutHandle, const class FScriptDelegate& Delegate, float Time, bool bLooping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.SetCombatStateTimer");
		
		UCombatState_SetCombatStateTimer_Params params {};
		params.Delegate = Delegate;
		params.Time = Time;
		params.bLooping = bLooping;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHandle != nullptr)
			*OutHandle = params.OutHandle;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.Revive
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UCombatState::Revive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.Revive");
		
		UCombatState_Revive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF3C0
	 * 		Name   -> Function TBL.CombatState.RestOfCurrentState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               InCanSwitchInventoryItems                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               InCanMountActors                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::RestOfCurrentState(bool InCanSwitchInventoryItems, bool InCanMountActors)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.RestOfCurrentState");
		
		UCombatState_RestOfCurrentState_Params params {};
		params.InCanSwitchInventoryItems = InCanSwitchInventoryItems;
		params.InCanMountActors = InCanMountActors;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF3A0
	 * 		Name   -> Function TBL.CombatState.ResetMinimumHoldingTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::ResetMinimumHoldingTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ResetMinimumHoldingTime");
		
		UCombatState_ResetMinimumHoldingTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF380
	 * 		Name   -> Function TBL.CombatState.ResetAmmoAttachment
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::ResetAmmoAttachment()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ResetAmmoAttachment");
		
		UCombatState_ResetAmmoAttachment_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF360
	 * 		Name   -> Function TBL.CombatState.ProjectileInterrupted
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::ProjectileInterrupted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ProjectileInterrupted");
		
		UCombatState_ProjectileInterrupted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF2E0
	 * 		Name   -> Function TBL.CombatState.PlayEquipAnimation
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::PlayEquipAnimation(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.PlayEquipAnimation");
		
		UCombatState_PlayEquipAnimation_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OverrideCrowdControlEvent
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_ECrowdControlCombatState                       CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           Variant                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCombatState::OverrideCrowdControlEvent(TBL_ECrowdControlCombatState CombatState, TBL_ECrowdControlVariant Variant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OverrideCrowdControlEvent");
		
		UCombatState_OverrideCrowdControlEvent_Params params {};
		params.CombatState = CombatState;
		params.Variant = Variant;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF260
	 * 		Name   -> Function TBL.CombatState.OnTurnLockTimeout
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::OnTurnLockTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnTurnLockTimeout");
		
		UCombatState_OnTurnLockTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnStartEquip
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::OnStartEquip(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnStartEquip");
		
		UCombatState_OnStartEquip_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EAB080
	 * 		Name   -> Function TBL.CombatState.OnReloadPressed
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	void UCombatState::OnReloadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnReloadPressed");
		
		UCombatState_OnReloadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnMovementInput
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::OnMovementInput(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnMovementInput");
		
		UCombatState_OnMovementInput_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnJumpPressed
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UCombatState::OnJumpPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnJumpPressed");
		
		UCombatState_OnJumpPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnItemStackChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::OnItemStackChanged(class AInventoryItem* Item, int Delta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnItemStackChanged");
		
		UCombatState_OnItemStackChanged_Params params {};
		params.Item = Item;
		params.Delta = Delta;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnFocusReleased
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UCombatState::OnFocusReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnFocusReleased");
		
		UCombatState_OnFocusReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnFocusPressed
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UCombatState::OnFocusPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnFocusPressed");
		
		UCombatState_OnFocusPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF240
	 * 		Name   -> Function TBL.CombatState.OnFireProjectile
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::OnFireProjectile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnFireProjectile");
		
		UCombatState_OnFireProjectile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnEndTurnLock
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 */
	void UCombatState::OnEndTurnLock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnEndTurnLock");
		
		UCombatState_OnEndTurnLock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CombatState.OnActivateAbility
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UCombatState::OnActivateAbility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.OnActivateAbility");
		
		UCombatState_OnActivateAbility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF210
	 * 		Name   -> Function TBL.CombatState.NeedsReload
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::NeedsReload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.NeedsReload");
		
		UCombatState_NeedsReload_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF1F0
	 * 		Name   -> Function TBL.CombatState.KnockRiderOffHorse
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::KnockRiderOffHorse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.KnockRiderOffHorse");
		
		UCombatState_KnockRiderOffHorse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF120
	 * 		Name   -> Function TBL.CombatState.IsWithinWindow
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		float                                              WindowTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromEndOfState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCombatState::IsWithinWindow(float WindowTime, bool bFromEndOfState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsWithinWindow");
		
		UCombatState_IsWithinWindow_Params params {};
		params.WindowTime = WindowTime;
		params.bFromEndOfState = bFromEndOfState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF0F0
	 * 		Name   -> Function TBL.CombatState.IsRiposte
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsRiposte()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsRiposte");
		
		UCombatState_IsRiposte_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF0C0
	 * 		Name   -> Function TBL.CombatState.IsOutOfAmmo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsOutOfAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsOutOfAmmo");
		
		UCombatState_IsOutOfAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF090
	 * 		Name   -> Function TBL.CombatState.IsInitialized
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsInitialized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsInitialized");
		
		UCombatState_IsInitialized_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEFD0
	 * 		Name   -> Function TBL.CombatState.IsHoldingReloadableThrowable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsHoldingReloadableThrowable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsHoldingReloadableThrowable");
		
		UCombatState_IsHoldingReloadableThrowable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEFA0
	 * 		Name   -> Function TBL.CombatState.IsHoldingInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsHoldingInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsHoldingInput");
		
		UCombatState_IsHoldingInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEF70
	 * 		Name   -> Function TBL.CombatState.IsHoldAttackPressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsHoldAttackPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsHoldAttackPressed");
		
		UCombatState_IsHoldAttackPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEF40
	 * 		Name   -> Function TBL.CombatState.IsHeavy
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsHeavy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsHeavy");
		
		UCombatState_IsHeavy_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEF10
	 * 		Name   -> Function TBL.CombatState.IsFocusQueued
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UCombatState::IsFocusQueued()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsFocusQueued");
		
		UCombatState_IsFocusQueued_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEEE0
	 * 		Name   -> Function TBL.CombatState.IsFeint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsFeint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsFeint");
		
		UCombatState_IsFeint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEEB0
	 * 		Name   -> Function TBL.CombatState.IsCounter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsCounter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsCounter");
		
		UCombatState_IsCounter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEE80
	 * 		Name   -> Function TBL.CombatState.IsCombo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsCombo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsCombo");
		
		UCombatState_IsCombo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEDF0
	 * 		Name   -> Function TBL.CombatState.IsCombatStateTimerActive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		int                                                Handle                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCombatState::IsCombatStateTimerActive(int Handle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsCombatStateTimerActive");
		
		UCombatState_IsCombatStateTimerActive_Params params {};
		params.Handle = Handle;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEDC0
	 * 		Name   -> Function TBL.CombatState.IsAttackQueued
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::IsAttackQueued()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.IsAttackQueued");
		
		UCombatState_IsAttackQueued_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DED40
	 * 		Name   -> Function TBL.CombatState.HoldState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EHeldBehavior                                  HeldBehavior                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::HoldState(TBL_EHeldBehavior HeldBehavior)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.HoldState");
		
		UCombatState_HoldState_Params params {};
		params.HeldBehavior = HeldBehavior;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE830
	 * 		Name   -> Function TBL.CombatState.HandleDelayedStartAttack
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UCombatState::HandleDelayedStartAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.HandleDelayedStartAttack");
		
		UCombatState_HandleDelayedStartAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE420
	 * 		Name   -> Function TBL.CombatState.Getup
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::Getup(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.Getup");
		
		UCombatState_Getup_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE3F0
	 * 		Name   -> Function TBL.CombatState.GetTimeSinceLastQueuedAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatState::GetTimeSinceLastQueuedAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetTimeSinceLastQueuedAttack");
		
		UCombatState_GetTimeSinceLastQueuedAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE3C0
	 * 		Name   -> Function TBL.CombatState.GetTimeInStatePercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatState::GetTimeInStatePercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetTimeInStatePercent");
		
		UCombatState_GetTimeInStatePercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE390
	 * 		Name   -> Function TBL.CombatState.GetTimeInState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatState::GetTimeInState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetTimeInState");
		
		UCombatState_GetTimeInState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE2C0
	 * 		Name   -> Function TBL.CombatState.GetSoftRecoveryPercent
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	float UCombatState::GetSoftRecoveryPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetSoftRecoveryPercent");
		
		UCombatState_GetSoftRecoveryPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE290
	 * 		Name   -> Function TBL.CombatState.GetRemainingTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatState::GetRemainingTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetRemainingTime");
		
		UCombatState_GetRemainingTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE260
	 * 		Name   -> Function TBL.CombatState.GetQueuedAttackTypeCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EAttackTypeCategory UCombatState::GetQueuedAttackTypeCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetQueuedAttackTypeCategory");
		
		UCombatState_GetQueuedAttackTypeCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE230
	 * 		Name   -> Function TBL.CombatState.GetQueuedAttackType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UAttackType* UCombatState::GetQueuedAttackType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetQueuedAttackType");
		
		UCombatState_GetQueuedAttackType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE1F0
	 * 		Name   -> Function TBL.CombatState.GetQueuedAttackName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatState::GetQueuedAttackName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetQueuedAttackName");
		
		UCombatState_GetQueuedAttackName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE1B0
	 * 		Name   -> Function TBL.CombatState.GetQueuedAttackCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatState::GetQueuedAttackCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetQueuedAttackCategory");
		
		UCombatState_GetQueuedAttackCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE180
	 * 		Name   -> Function TBL.CombatState.GetQueuedAttackCanComboInInterrupt
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::GetQueuedAttackCanComboInInterrupt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetQueuedAttackCanComboInInterrupt");
		
		UCombatState_GetQueuedAttackCanComboInInterrupt_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE120
	 * 		Name   -> Function TBL.CombatState.GetOwner
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class AActor* UCombatState::GetOwner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetOwner");
		
		UCombatState_GetOwner_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE0F0
	 * 		Name   -> Function TBL.CombatState.GetMinimumHoldingTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatState::GetMinimumHoldingTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetMinimumHoldingTime");
		
		UCombatState_GetMinimumHoldingTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE0B0
	 * 		Name   -> Function TBL.CombatState.GetMaxDrawStrengthTime
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	float UCombatState::GetMaxDrawStrengthTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetMaxDrawStrengthTime");
		
		UCombatState_GetMaxDrawStrengthTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE070
	 * 		Name   -> Function TBL.CombatState.GetDrawStrengthModifier
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	float UCombatState::GetDrawStrengthModifier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetDrawStrengthModifier");
		
		UCombatState_GetDrawStrengthModifier_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDF90
	 * 		Name   -> Function TBL.CombatState.GetCurrentAttackTypeCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EAttackTypeCategory UCombatState::GetCurrentAttackTypeCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCurrentAttackTypeCategory");
		
		UCombatState_GetCurrentAttackTypeCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDF60
	 * 		Name   -> Function TBL.CombatState.GetCurrentAttackType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UAttackType* UCombatState::GetCurrentAttackType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCurrentAttackType");
		
		UCombatState_GetCurrentAttackType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDF20
	 * 		Name   -> Function TBL.CombatState.GetCurrentAttackName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatState::GetCurrentAttackName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCurrentAttackName");
		
		UCombatState_GetCurrentAttackName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDEE0
	 * 		Name   -> Function TBL.CombatState.GetCurrentAttackCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatState::GetCurrentAttackCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCurrentAttackCategory");
		
		UCombatState_GetCurrentAttackCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDEA0
	 * 		Name   -> Function TBL.CombatState.GetCombatStateFromQueuedAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatState::GetCombatStateFromQueuedAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCombatStateFromQueuedAttack");
		
		UCombatState_GetCombatStateFromQueuedAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDE40
	 * 		Name   -> Function TBL.CombatState.GetCharactersEquippedWeapon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class AInventoryItem* UCombatState::GetCharactersEquippedWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCharactersEquippedWeapon");
		
		UCombatState_GetCharactersEquippedWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDC90
	 * 		Name   -> Function TBL.CombatState.GetCharactersCurrentEmote
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               IsRootAnimation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPersonalityEmoteTableRow                   Emote                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		int                                                EmoteId                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::GetCharactersCurrentEmote(bool* IsRootAnimation, struct FPersonalityEmoteTableRow* Emote, int* EmoteId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCharactersCurrentEmote");
		
		UCombatState_GetCharactersCurrentEmote_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IsRootAnimation != nullptr)
			*IsRootAnimation = params.IsRootAnimation;
		if (Emote != nullptr)
			*Emote = params.Emote;
		if (EmoteId != nullptr)
			*EmoteId = params.EmoteId;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDC60
	 * 		Name   -> Function TBL.CombatState.GetCharacterMovement
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UTBLCharacterMovement* UCombatState::GetCharacterMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCharacterMovement");
		
		UCombatState_GetCharacterMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDC30
	 * 		Name   -> Function TBL.CombatState.GetCharacter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class ATBLCharacter* UCombatState::GetCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCharacter");
		
		UCombatState_GetCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDBF0
	 * 		Name   -> Function TBL.CombatState.GetCancelledCombatState
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	class FName UCombatState::GetCancelledCombatState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetCancelledCombatState");
		
		UCombatState_GetCancelledCombatState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDBC0
	 * 		Name   -> Function TBL.CombatState.GetAttackTransition
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	TBL_EAttackTransition UCombatState::GetAttackTransition()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetAttackTransition");
		
		UCombatState_GetAttackTransition_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDB20
	 * 		Name   -> Function TBL.CombatState.GetAbilityPropertyValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class FName                                        PropertyName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UCombatState::GetAbilityPropertyValue(const class FName& PropertyName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.GetAbilityPropertyValue");
		
		UCombatState_GetAbilityPropertyValue_Params params {};
		params.PropertyName = PropertyName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDA90
	 * 		Name   -> Function TBL.CombatState.EventWasParried
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               ParryingCharacter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventWasParried(class ATBLCharacter* ParryingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventWasParried");
		
		UCombatState_EventWasParried_Params params {};
		params.ParryingCharacter = ParryingCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDA10
	 * 		Name   -> Function TBL.CombatState.EventTick
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventTick(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventTick");
		
		UCombatState_EventTick_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD9F0
	 * 		Name   -> Function TBL.CombatState.EventRagdolled
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 */
	void UCombatState::EventRagdolled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventRagdolled");
		
		UCombatState_EventRagdolled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD960
	 * 		Name   -> Function TBL.CombatState.EventParrySuccess
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               ParriedCharacter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventParrySuccess(class ATBLCharacter* ParriedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventParrySuccess");
		
		UCombatState_EventParrySuccess_Params params {};
		params.ParriedCharacter = ParriedCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD8D0
	 * 		Name   -> Function TBL.CombatState.EventMeleeSuccess
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               DamagedCharacter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventMeleeSuccess(class ATBLCharacter* DamagedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventMeleeSuccess");
		
		UCombatState_EventMeleeSuccess_Params params {};
		params.DamagedCharacter = DamagedCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD840
	 * 		Name   -> Function TBL.CombatState.EventLanded
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class ACharacter*                                  InTarget                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventLanded(class ACharacter* InTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventLanded");
		
		UCombatState_EventLanded_Params params {};
		params.InTarget = InTarget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD770
	 * 		Name   -> Function TBL.CombatState.EventEndState
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        NextState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bStartAttack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventEndState(const class FName& NextState, bool bStartAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventEndState");
		
		UCombatState_EventEndState_Params params {};
		params.NextState = NextState;
		params.bStartAttack = bStartAttack;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD750
	 * 		Name   -> Function TBL.CombatState.EventEndAnimation
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 */
	void UCombatState::EventEndAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventEndAnimation");
		
		UCombatState_EventEndAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD6A0
	 * 		Name   -> Function TBL.CombatState.EventDamageCaused
	 * 		Flags  -> (Native, Event, Protected, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventDamageCaused(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventDamageCaused");
		
		UCombatState_EventDamageCaused_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD5F0
	 * 		Name   -> Function TBL.CombatState.EventDamage
	 * 		Flags  -> (Native, Event, Protected, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventDamage(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventDamage");
		
		UCombatState_EventDamage_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD550
	 * 		Name   -> Function TBL.CombatState.EventCannotQueueAttack
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class UAttackType*                                 AttackType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCombatState::EventCannotQueueAttack(class UAttackType* AttackType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventCannotQueueAttack");
		
		UCombatState_EventCannotQueueAttack_Params params {};
		params.AttackType = AttackType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD530
	 * 		Name   -> Function TBL.CombatState.EventCancelAttack
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 */
	void UCombatState::EventCancelAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventCancelAttack");
		
		UCombatState_EventCancelAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD430
	 * 		Name   -> Function TBL.CombatState.EventBeginState
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PreviousStateTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AnimationLength                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventBeginState(const class FName& PreviousState, float PreviousStateTime, float AnimationLength)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventBeginState");
		
		UCombatState_EventBeginState_Params params {};
		params.PreviousState = PreviousState;
		params.PreviousStateTime = PreviousStateTime;
		params.AnimationLength = AnimationLength;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD360
	 * 		Name   -> Function TBL.CombatState.EventBeginFire
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHeldQueue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::EventBeginFire(const class FName& AttackName, bool bHeldQueue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.EventBeginFire");
		
		UCombatState_EventBeginFire_Params params {};
		params.AttackName = AttackName;
		params.bHeldQueue = bHeldQueue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD330
	 * 		Name   -> Function TBL.CombatState.DisableSprintTurn
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UCombatState::DisableSprintTurn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.DisableSprintTurn");
		
		UCombatState_DisableSprintTurn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD2B0
	 * 		Name   -> Function TBL.CombatState.CombatStateEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::CombatStateEvent(const class FName& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CombatStateEvent");
		
		UCombatState_CombatStateEvent_Params params {};
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD200
	 * 		Name   -> Function TBL.CombatState.CanUseWeaponsAndSiegeActors
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CanUseWeaponsAndSiegeActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanUseWeaponsAndSiegeActors");
		
		UCombatState_CanUseWeaponsAndSiegeActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD1D0
	 * 		Name   -> Function TBL.CombatState.CanSwitchInventoryItems
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UCombatState::CanSwitchInventoryItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanSwitchInventoryItems");
		
		UCombatState_CanSwitchInventoryItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD1A0
	 * 		Name   -> Function TBL.CombatState.CanSprint
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UCombatState::CanSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanSprint");
		
		UCombatState_CanSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD280
	 * 		Name   -> Function TBL.CombatState.CannotUseInteractables
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CannotUseInteractables()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CannotUseInteractables");
		
		UCombatState_CannotUseInteractables_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD250
	 * 		Name   -> Function TBL.CombatState.CannotMove
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CannotMove()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CannotMove");
		
		UCombatState_CannotMove_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD170
	 * 		Name   -> Function TBL.CombatState.CanMountActors
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CanMountActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanMountActors");
		
		UCombatState_CanMountActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD140
	 * 		Name   -> Function TBL.CombatState.CanJump
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UCombatState::CanJump()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanJump");
		
		UCombatState_CanJump_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD110
	 * 		Name   -> Function TBL.CombatState.CanInitiateQueuedAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::CanInitiateQueuedAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanInitiateQueuedAttack");
		
		UCombatState_CanInitiateQueuedAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD0E0
	 * 		Name   -> Function TBL.CombatState.CanInitiateCrouch
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CanInitiateCrouch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanInitiateCrouch");
		
		UCombatState_CanInitiateCrouch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD0B0
	 * 		Name   -> Function TBL.CombatState.CanFeint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::CanFeint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanFeint");
		
		UCombatState_CanFeint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD080
	 * 		Name   -> Function TBL.CombatState.CanDash
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CanDash()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanDash");
		
		UCombatState_CanDash_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD050
	 * 		Name   -> Function TBL.CombatState.CanCrouch
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CanCrouch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanCrouch");
		
		UCombatState_CanCrouch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD020
	 * 		Name   -> Function TBL.CombatState.CanComboFromState
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatState::CanComboFromState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanComboFromState");
		
		UCombatState_CanComboFromState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD230
	 * 		Name   -> Function TBL.CombatState.CancelAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatState::CancelAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CancelAttack");
		
		UCombatState_CancelAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCF80
	 * 		Name   -> Function TBL.CombatState.CanBeCancelled
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 * Parameters:
	 * 		bool                                               bIsCancelIntoParry                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCombatState::CanBeCancelled(bool bIsCancelIntoParry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.CanBeCancelled");
		
		UCombatState_CanBeCancelled_Params params {};
		params.bIsCancelIntoParry = bIsCancelIntoParry;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCED0
	 * 		Name   -> Function TBL.CombatState.AutomaticReload
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatState::AutomaticReload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.AutomaticReload");
		
		UCombatState_AutomaticReload_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCE10
	 * 		Name   -> Function TBL.CombatState.AddTimerHandle
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                Handle                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatStateName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::AddTimerHandle(int Handle, const class FName& CombatStateName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.AddTimerHandle");
		
		UCombatState_AddTimerHandle_Params params {};
		params.Handle = Handle;
		params.CombatStateName = CombatStateName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCDF0
	 * 		Name   -> Function TBL.CombatState.ActionQueueAttack
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UCombatState::ActionQueueAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ActionQueueAttack");
		
		UCombatState_ActionQueueAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCCE0
	 * 		Name   -> Function TBL.CombatState.ActionGotoState
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        NextState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OverrideStateTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bResetStateTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatState::ActionGotoState(const class FName& NextState, float OverrideStateTime, bool bResetStateTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ActionGotoState");
		
		UCombatState_ActionGotoState_Params params {};
		params.NextState = NextState;
		params.OverrideStateTime = OverrideStateTime;
		params.bResetStateTime = bResetStateTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCCC0
	 * 		Name   -> Function TBL.CombatState.ActionClearToggleAltAttack
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UCombatState::ActionClearToggleAltAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ActionClearToggleAltAttack");
		
		UCombatState_ActionClearToggleAltAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCCA0
	 * 		Name   -> Function TBL.CombatState.ActionClearHeldAttackQueue
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UCombatState::ActionClearHeldAttackQueue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ActionClearHeldAttackQueue");
		
		UCombatState_ActionClearHeldAttackQueue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCC80
	 * 		Name   -> Function TBL.CombatState.ActionClearAttackQueue
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UCombatState::ActionClearAttackQueue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatState.ActionClearAttackQueue");
		
		UCombatState_ActionClearAttackQueue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D1290
	 * 		Name   -> Function TBL.BaseCombatState.ToggleReloadHint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Enable                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBaseCombatState::ToggleReloadHint(bool Enable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.ToggleReloadHint");
		
		UBaseCombatState_ToggleReloadHint_Params params {};
		params.Enable = Enable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0F40
	 * 		Name   -> Function TBL.BaseCombatState.RemoveReloadHint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UBaseCombatState::RemoveReloadHint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.RemoveReloadHint");
		
		UBaseCombatState_RemoveReloadHint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0F20
	 * 		Name   -> Function TBL.BaseCombatState.Reload
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UBaseCombatState::Reload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.Reload");
		
		UBaseCombatState_Reload_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D02D0
	 * 		Name   -> Function TBL.BaseCombatState.NeedToReload
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UBaseCombatState::NeedToReload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.NeedToReload");
		
		UBaseCombatState_NeedToReload_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D02B0
	 * 		Name   -> Function TBL.BaseCombatState.ManualReload
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UBaseCombatState::ManualReload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.ManualReload");
		
		UBaseCombatState_ManualReload_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0050
	 * 		Name   -> Function TBL.BaseCombatState.GetStaminaPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UBaseCombatState::GetStaminaPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.GetStaminaPercent");
		
		UBaseCombatState_GetStaminaPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFF40
	 * 		Name   -> Function TBL.BaseCombatState.DropHeavyObject
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UBaseCombatState::DropHeavyObject()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.DropHeavyObject");
		
		UBaseCombatState_DropHeavyObject_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFF10
	 * 		Name   -> Function TBL.BaseCombatState.DidHitInRelease
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UBaseCombatState::DidHitInRelease()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.DidHitInRelease");
		
		UBaseCombatState_DidHitInRelease_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFE20
	 * 		Name   -> Function TBL.BaseCombatState.AddReloadHint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UBaseCombatState::AddReloadHint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseCombatState.AddReloadHint");
		
		UBaseCombatState_AddReloadHint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBaseCombatState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseCombatState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BaseCombatState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0410
	 * 		Name   -> Function TBL.BaseKillWorker.OnCausedDamage
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UBaseKillWorker::OnCausedDamage(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BaseKillWorker.OnCausedDamage");
		
		UBaseKillWorker_OnCausedDamage_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBaseKillWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBaseKillWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BaseKillWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0C80
	 * 		Name   -> Function TBL.BatteringRam.OnRep_ChargePercent
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ABatteringRam::OnRep_ChargePercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BatteringRam.OnRep_ChargePercent");
		
		ABatteringRam_OnRep_ChargePercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0BB0
	 * 		Name   -> Function TBL.BatteringRam.OnPushableActivated
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bIsActive                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ABatteringRam::OnPushableActivated(bool bIsActive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BatteringRam.OnPushableActivated");
		
		ABatteringRam_OnPushableActivated_Params params {};
		params.bIsActive = bIsActive;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0540
	 * 		Name   -> Function TBL.BatteringRam.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ABatteringRam::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BatteringRam.OnCombatStateChanged");
		
		ABatteringRam_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D04C0
	 * 		Name   -> Function TBL.BatteringRam.OnCharacterMount
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ABatteringRam::OnCharacterMount(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BatteringRam.OnCharacterMount");
		
		ABatteringRam_OnCharacterMount_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0020
	 * 		Name   -> Function TBL.BatteringRam.GetNumCharacters
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int ABatteringRam::GetNumCharacters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BatteringRam.GetNumCharacters");
		
		ABatteringRam_GetNumCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ABatteringRam.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABatteringRam::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BatteringRam");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBlockedDamage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBlockedDamage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BlockedDamage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0300
	 * 		Name   -> Function TBL.BlockProjectileWorker.OnBlockedAttack
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		TBL_EDefenderBlockedPolicy                         BlockPolicy                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bProjectileAttack                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBlockProjectileWorker::OnBlockedAttack(TBL_EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter, bool bProjectileAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BlockProjectileWorker.OnBlockedAttack");
		
		UBlockProjectileWorker_OnBlockedAttack_Params params {};
		params.BlockPolicy = BlockPolicy;
		params.AttackingCharacter = AttackingCharacter;
		params.bProjectileAttack = bProjectileAttack;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBlockProjectileWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBlockProjectileWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BlockProjectileWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBlueprintDebugMenuComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBlueprintDebugMenuComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BlueprintDebugMenuComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBoneList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBoneList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BoneList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBotSpawnOverrides.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBotSpawnOverrides::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BotSpawnOverrides");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UShapeTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UShapeTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ShapeTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFEF0
	 * 		Name   -> Function TBL.BoxTargetMethod.DelayFinish
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UBoxTargetMethod::DelayFinish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BoxTargetMethod.DelayFinish");
		
		UBoxTargetMethod_DelayFinish_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBoxTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBoxTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BoxTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBoxTracers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBoxTracers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BoxTracers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D1060
	 * 		Name   -> Function TBL.BrawlAlwaysOnMusicManager.SetCurrentMusicState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EBrawlAlwaysOnMusicState                       NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ABrawlAlwaysOnMusicManager::SetCurrentMusicState(TBL_EBrawlAlwaysOnMusicState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BrawlAlwaysOnMusicManager.SetCurrentMusicState");
		
		ABrawlAlwaysOnMusicManager_SetCurrentMusicState_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0C40
	 * 		Name   -> Function TBL.BrawlAlwaysOnMusicManager.OnRep_BrawlAlwaysOnMusicState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ABrawlAlwaysOnMusicManager::OnRep_BrawlAlwaysOnMusicState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BrawlAlwaysOnMusicManager.OnRep_BrawlAlwaysOnMusicState");
		
		ABrawlAlwaysOnMusicManager_OnRep_BrawlAlwaysOnMusicState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6B10
	 * 		Name   -> Function TBL.BrawlAlwaysOnMusicManager.GetCurrentMusicState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EBrawlAlwaysOnMusicState ABrawlAlwaysOnMusicManager::GetCurrentMusicState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BrawlAlwaysOnMusicManager.GetCurrentMusicState");
		
		ABrawlAlwaysOnMusicManager_GetCurrentMusicState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ABrawlAlwaysOnMusicManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABrawlAlwaysOnMusicManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BrawlAlwaysOnMusicManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ABreakableActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABreakableActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BreakableActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D1160
	 * 		Name   -> Function TBL.BreakableComponent.SetHealth
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InHealth                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBreakableComponent::SetHealth(float InHealth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BreakableComponent.SetHealth");
		
		UBreakableComponent_SetHealth_Params params {};
		params.InHealth = InHealth;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D10E0
	 * 		Name   -> Function TBL.BreakableComponent.SetFriendlyTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       InFriendlyTeam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBreakableComponent::SetFriendlyTeam(TBL_EFaction InFriendlyTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BreakableComponent.SetFriendlyTeam");
		
		UBreakableComponent_SetFriendlyTeam_Params params {};
		params.InFriendlyTeam = InFriendlyTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D01D0
	 * 		Name   -> Function TBL.BreakableComponent.Killed
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UBreakableComponent::Killed(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BreakableComponent.Killed");
		
		UBreakableComponent_Killed_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0080
	 * 		Name   -> Function TBL.BreakableComponent.HealthStatChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UBreakableComponent::HealthStatChanged(float Amount, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BreakableComponent.HealthStatChanged");
		
		UBreakableComponent_HealthStatChanged_Params params {};
		params.Amount = Amount;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFE40
	 * 		Name   -> Function TBL.BreakableComponent.Damaged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UBreakableComponent::Damaged(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BreakableComponent.Damaged");
		
		UBreakableComponent_Damaged_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBreakableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBreakableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BreakableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4480
	 * 		Name   -> Function TBL.BurnableComponent.HandleOwnerDamageTaken
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UBurnableComponent::HandleOwnerDamageTaken(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BurnableComponent.HandleOwnerDamageTaken");
		
		UBurnableComponent_HandleOwnerDamageTaken_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4440
	 * 		Name   -> Function TBL.BurnableComponent.GetTimeUntilBurnedDown
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UBurnableComponent::GetTimeUntilBurnedDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BurnableComponent.GetTimeUntilBurnedDown");
		
		UBurnableComponent_GetTimeUntilBurnedDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBurnableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBurnableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BurnableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D52D0
	 * 		Name   -> Function TBL.CameraModifier_ArrowCam.UpdateCharacterMesh
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UCameraModifier_ArrowCam::UpdateCharacterMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_ArrowCam.UpdateCharacterMesh");
		
		UCameraModifier_ArrowCam_UpdateCharacterMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D3F00
	 * 		Name   -> Function TBL.CameraModifier_ArrowCam.ArrowCamReleased
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCameraModifier_ArrowCam::ArrowCamReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_ArrowCam.ArrowCamReleased");
		
		UCameraModifier_ArrowCam_ArrowCamReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D3EE0
	 * 		Name   -> Function TBL.CameraModifier_ArrowCam.ArrowCamPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCameraModifier_ArrowCam::ArrowCamPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_ArrowCam.ArrowCamPressed");
		
		UCameraModifier_ArrowCam_ArrowCamPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_ArrowCam.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_ArrowCam::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_ArrowCam");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_BlendInRotation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_BlendInRotation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_BlendInRotation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_CancelRotation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_CancelRotation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_CancelRotation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D52F0
	 * 		Name   -> Function TBL.CameraModifier_DeathCam.UpdateOnCinematicStateChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FGameplayTag                                PreviousStateTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCinematicState*                             PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTag                                NewStateTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCinematicState*                             NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCameraModifier_DeathCam::UpdateOnCinematicStateChanged(const struct FGameplayTag& PreviousStateTag, class UCinematicState* PreviousState, const struct FGameplayTag& NewStateTag, class UCinematicState* NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_DeathCam.UpdateOnCinematicStateChanged");
		
		UCameraModifier_DeathCam_UpdateOnCinematicStateChanged_Params params {};
		params.PreviousStateTag = PreviousStateTag;
		params.PreviousState = PreviousState;
		params.NewStateTag = NewStateTag;
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_DeathCam.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_DeathCam::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_DeathCam");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_DeathCam1P.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_DeathCam1P::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_DeathCam1P");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CameraModifier_FollowAnimation.ShouldBlend
	 * 		Flags  -> (Event, Public, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		struct FRotator                                    ControlRot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    SocketRot                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UCameraModifier_FollowAnimation::ShouldBlend(const struct FRotator& ControlRot, const struct FRotator& SocketRot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_FollowAnimation.ShouldBlend");
		
		UCameraModifier_FollowAnimation_ShouldBlend_Params params {};
		params.ControlRot = ControlRot;
		params.SocketRot = SocketRot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4110
	 * 		Name   -> Function TBL.CameraModifier_FollowAnimation.Cancel
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCameraModifier_FollowAnimation::Cancel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_FollowAnimation.Cancel");
		
		UCameraModifier_FollowAnimation_Cancel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_FollowAnimation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_FollowAnimation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_FollowAnimation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_TurnLock.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_TurnLock::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_TurnLock");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_HorizontalLock.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_HorizontalLock::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_HorizontalLock");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_LockCamera.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_LockCamera::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_LockCamera");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_Offset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_Offset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_Offset");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D52D0
	 * 		Name   -> Function TBL.CameraModifier_SpawnFadeOut.UpdateCharacterMesh
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UCameraModifier_SpawnFadeOut::UpdateCharacterMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_SpawnFadeOut.UpdateCharacterMesh");
		
		UCameraModifier_SpawnFadeOut_UpdateCharacterMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_SpawnFadeOut.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_SpawnFadeOut::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_SpawnFadeOut");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D5140
	 * 		Name   -> Function TBL.CameraModifier_TurnLimit.SmoothTurnLimitEnding
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		float                                              CurrentTurnLimit                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EndSpeed                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TargetTurnLimit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCameraModifier_TurnLimit::SmoothTurnLimitEnding(float* CurrentTurnLimit, float* EndSpeed, float TargetTurnLimit, float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_TurnLimit.SmoothTurnLimitEnding");
		
		UCameraModifier_TurnLimit_SmoothTurnLimitEnding_Params params {};
		params.TargetTurnLimit = TargetTurnLimit;
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (CurrentTurnLimit != nullptr)
			*CurrentTurnLimit = params.CurrentTurnLimit;
		if (EndSpeed != nullptr)
			*EndSpeed = params.EndSpeed;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D3FF0
	 * 		Name   -> Function TBL.CameraModifier_TurnLimit.CalcTurnLimit
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              InPercent                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UCameraModifier_TurnLimit::CalcTurnLimit(float InPercent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CameraModifier_TurnLimit.CalcTurnLimit");
		
		UCameraModifier_TurnLimit_CalcTurnLimit_Params params {};
		params.InPercent = InPercent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_TurnLimit.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_TurnLimit::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_TurnLimit");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_VerticalLock.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_VerticalLock::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_VerticalLock");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCameraModifier_Zoom.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCameraModifier_Zoom::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CameraModifier_Zoom");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Condition");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCanDash.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCanDash::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CanDash");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCanDropItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCanDropItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CanDropItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCanJump.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCanJump::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CanJump");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCanSwitchInventoryItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCanSwitchInventoryItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CanSwitchInventoryItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCanUseItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCanUseItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CanUseItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D50C0
	 * 		Name   -> Function TBL.CaptureVolume.RemovePlayerFromCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::RemovePlayerFromCapturePoint(class ATBLCharacter* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.RemovePlayerFromCapturePoint");
		
		ACaptureVolume_RemovePlayerFromCapturePoint_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D50A0
	 * 		Name   -> Function TBL.CaptureVolume.RefreshActorsInCaptureZone
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ACaptureVolume::RefreshActorsInCaptureZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.RefreshActorsInCaptureZone");
		
		ACaptureVolume_RefreshActorsInCaptureZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D5000
	 * 		Name   -> Function TBL.CaptureVolume.PlayerSatisfiesCaptureRequirments
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ACaptureVolume::PlayerSatisfiesCaptureRequirments(class ATBLCharacter* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.PlayerSatisfiesCaptureRequirments");
		
		ACaptureVolume_PlayerSatisfiesCaptureRequirments_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4C80
	 * 		Name   -> Function TBL.CaptureVolume.OnTrackedCharacterKilled
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::OnTrackedCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnTrackedCharacterKilled");
		
		ACaptureVolume_OnTrackedCharacterKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4BF0
	 * 		Name   -> Function TBL.CaptureVolume.OnTrackedCharacterDestroyed
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::OnTrackedCharacterDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnTrackedCharacterDestroyed");
		
		ACaptureVolume_OnTrackedCharacterDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x009BDAA0
	 * 		Name   -> Function TBL.CaptureVolume.OnRep_CaptureState
	 * 		Flags  -> (Native, Public)
	 */
	void ACaptureVolume::OnRep_CaptureState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnRep_CaptureState");
		
		ACaptureVolume_OnRep_CaptureState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CaptureVolume.OnCaptureStateNeutralizing
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ACaptureVolume::OnCaptureStateNeutralizing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnCaptureStateNeutralizing");
		
		ACaptureVolume_OnCaptureStateNeutralizing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CaptureVolume.OnCaptureStateIdle
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ACaptureVolume::OnCaptureStateIdle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnCaptureStateIdle");
		
		ACaptureVolume_OnCaptureStateIdle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CaptureVolume.OnCaptureStateContested
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ACaptureVolume::OnCaptureStateContested()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnCaptureStateContested");
		
		ACaptureVolume_OnCaptureStateContested_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CaptureVolume.OnCaptureStateCapturing
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ACaptureVolume::OnCaptureStateCapturing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnCaptureStateCapturing");
		
		ACaptureVolume_OnCaptureStateCapturing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CaptureVolume.OnCaptureStateCaptured
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ACaptureVolume::OnCaptureStateCaptured()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.OnCaptureStateCaptured");
		
		ACaptureVolume_OnCaptureStateCaptured_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D43A0
	 * 		Name   -> Function TBL.CaptureVolume.GetControllingTeam
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsTie                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLTeam* ACaptureVolume::GetControllingTeam(bool* IsTie)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.GetControllingTeam");
		
		ACaptureVolume_GetControllingTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IsTie != nullptr)
			*IsTie = params.IsTie;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D42D0
	 * 		Name   -> Function TBL.CaptureVolume.EndOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.EndOverlap");
		
		ACaptureVolume_EndOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4200
	 * 		Name   -> Function TBL.CaptureVolume.ClientEndOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::ClientEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.ClientEndOverlap");
		
		ACaptureVolume_ClientEndOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4130
	 * 		Name   -> Function TBL.CaptureVolume.ClientBeginOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::ClientBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.ClientBeginOverlap");
		
		ACaptureVolume_ClientBeginOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D3F20
	 * 		Name   -> Function TBL.CaptureVolume.BeginOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.BeginOverlap");
		
		ACaptureVolume_BeginOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D3E60
	 * 		Name   -> Function TBL.CaptureVolume.AddPlayerToCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACaptureVolume::AddPlayerToCapturePoint(class ATBLCharacter* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CaptureVolume.AddPlayerToCapturePoint");
		
		ACaptureVolume_AddPlayerToCapturePoint_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ACaptureVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACaptureVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CaptureVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D52B0
	 * 		Name   -> Function TBL.CarryablePlayerComponent.StartPickup
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UCarryablePlayerComponent::StartPickup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.StartPickup");
		
		UCarryablePlayerComponent_StartPickup_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4F30
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnUseReleased
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              UseTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnUseReleased(class APawn* Pawn, float UseTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnUseReleased");
		
		UCarryablePlayerComponent_OnUseReleased_Params params {};
		params.Pawn = Pawn;
		params.UseTime = UseTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4E20
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnUseHeld
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              UseTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnUseHeld(class APawn* Pawn, float UseTime, class UInteractableComponent* Interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnUseHeld");
		
		UCarryablePlayerComponent_OnUseHeld_Params params {};
		params.Pawn = Pawn;
		params.UseTime = UseTime;
		params.Interactable = Interactable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4D60
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnUse
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnUse(class APawn* Pawn, class UInteractableComponent* Interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnUse");
		
		UCarryablePlayerComponent_OnUse_Params params {};
		params.Pawn = Pawn;
		params.Interactable = Interactable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4A70
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnThrown
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  Transform                                                  (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnThrown(class AInventoryItem* Item, class ATBLCharacter* Character, const struct FTransform& Transform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnThrown");
		
		UCarryablePlayerComponent_OnThrown_Params params {};
		params.Item = Item;
		params.Character = Character;
		params.Transform = Transform;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D49F0
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnSpawnFakeClient
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              FakeClient                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnSpawnFakeClient(class AInventoryItem* FakeClient)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnSpawnFakeClient");
		
		UCarryablePlayerComponent_OnSpawnFakeClient_Params params {};
		params.FakeClient = FakeClient;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4960
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnSetAttached
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bAttached                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnSetAttached(bool bAttached)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnSetAttached");
		
		UCarryablePlayerComponent_OnSetAttached_Params params {};
		params.bAttached = bAttached;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4940
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnRootTransformUpdated
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UCarryablePlayerComponent::OnRootTransformUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnRootTransformUpdated");
		
		UCarryablePlayerComponent_OnRootTransformUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4920
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnRep_CarryableItem
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UCarryablePlayerComponent::OnRep_CarryableItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnRep_CarryableItem");
		
		UCarryablePlayerComponent_OnRep_CarryableItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4890
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnInteractableEnabled
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnInteractableEnabled(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnInteractableEnabled");
		
		UCarryablePlayerComponent_OnInteractableEnabled_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4710
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnDropped
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  Transform                                                  (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnDropped(class AInventoryItem* Item, class ATBLCharacter* Character, const struct FTransform& Transform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnDropped");
		
		UCarryablePlayerComponent_OnDropped_Params params {};
		params.Item = Item;
		params.Character = Character;
		params.Transform = Transform;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4630
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnCharacterKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnCharacterKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnCharacterKilled");
		
		UCarryablePlayerComponent_OnCharacterKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D45B0
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnCharacterDestroyed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnCharacterDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnCharacterDestroyed");
		
		UCarryablePlayerComponent_OnCharacterDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4530
	 * 		Name   -> Function TBL.CarryablePlayerComponent.OnCarryableAnimationEvent
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCarryablePlayerComponent::OnCarryableAnimationEvent(const class FName& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.OnCarryableAnimationEvent");
		
		UCarryablePlayerComponent_OnCarryableAnimationEvent_Params params {};
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4080
	 * 		Name   -> Function TBL.CarryablePlayerComponent.CanPickup
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCarryablePlayerComponent::CanPickup(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CarryablePlayerComponent.CanPickup");
		
		UCarryablePlayerComponent_CanPickup_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCarryablePlayerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCarryablePlayerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CarryablePlayerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9390
	 * 		Name   -> Function TBL.Catapult.SetCatapultState
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECatapultState                                 State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::SetCatapultState(TBL_ECatapultState State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.SetCatapultState");
		
		ACatapult_SetCatapultState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0FD0
	 * 		Name   -> Function TBL.Catapult.SetBroken
	 * 		Flags  -> (Native, Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bInBroken                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::SetBroken(bool bInBroken)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.SetBroken");
		
		ACatapult_SetBroken_Params params {};
		params.bInBroken = bInBroken;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D92B0
	 * 		Name   -> Function TBL.Catapult.ServerReloadReleased
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ACatapult::ServerReloadReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ServerReloadReleased");
		
		ACatapult_ServerReloadReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9260
	 * 		Name   -> Function TBL.Catapult.ServerReloadPressed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ACatapult::ServerReloadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ServerReloadPressed");
		
		ACatapult_ServerReloadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9210
	 * 		Name   -> Function TBL.Catapult.ServerFireReleased
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ACatapult::ServerFireReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ServerFireReleased");
		
		ACatapult_ServerFireReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D91C0
	 * 		Name   -> Function TBL.Catapult.ServerFirePressed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ACatapult::ServerFirePressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ServerFirePressed");
		
		ACatapult_ServerFirePressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9140
	 * 		Name   -> Function TBL.Catapult.RemoveAttachedItem
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::RemoveAttachedItem(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.RemoveAttachedItem");
		
		ACatapult_RemoveAttachedItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9120
	 * 		Name   -> Function TBL.Catapult.ReloadReleased
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ACatapult::ReloadReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ReloadReleased");
		
		ACatapult_ReloadReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9100
	 * 		Name   -> Function TBL.Catapult.ReloadPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ACatapult::ReloadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ReloadPressed");
		
		ACatapult_ReloadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D90E0
	 * 		Name   -> Function TBL.Catapult.ReadyToFire
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ACatapult::ReadyToFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ReadyToFire");
		
		ACatapult_ReadyToFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9000
	 * 		Name   -> Function TBL.Catapult.OnRep_RotationSpeed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ACatapult::OnRep_RotationSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnRep_RotationSpeed");
		
		ACatapult_OnRep_RotationSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8FE0
	 * 		Name   -> Function TBL.Catapult.OnRep_LoadedAmmo
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ACatapult::OnRep_LoadedAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnRep_LoadedAmmo");
		
		ACatapult_OnRep_LoadedAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8FA0
	 * 		Name   -> Function TBL.Catapult.OnRep_ChargePercent
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ACatapult::OnRep_ChargePercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnRep_ChargePercent");
		
		ACatapult_OnRep_ChargePercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8F20
	 * 		Name   -> Function TBL.Catapult.OnRep_CatapultState
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_ECatapultState                                 PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnRep_CatapultState(TBL_ECatapultState PreviousState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnRep_CatapultState");
		
		ACatapult_OnRep_CatapultState_Params params {};
		params.PreviousState = PreviousState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8F00
	 * 		Name   -> Function TBL.Catapult.OnRep_Broken
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ACatapult::OnRep_Broken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnRep_Broken");
		
		ACatapult_OnRep_Broken_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8CF0
	 * 		Name   -> Function TBL.Catapult.OnReloadCollision
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OverlapInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnReloadCollision(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnReloadCollision");
		
		ACatapult_OnReloadCollision_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.OverlapInfo = OverlapInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8C60
	 * 		Name   -> Function TBL.Catapult.OnPushableActivated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               IsActive                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnPushableActivated(bool IsActive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnPushableActivated");
		
		ACatapult_OnPushableActivated_Params params {};
		params.IsActive = IsActive;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8B20
	 * 		Name   -> Function TBL.Catapult.OnLoadVolumeEndOverlap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnLoadVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnLoadVolumeEndOverlap");
		
		ACatapult_OnLoadVolumeEndOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8910
	 * 		Name   -> Function TBL.Catapult.OnLoadVolumeBeginOverlap
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OverlapInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnLoadVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnLoadVolumeBeginOverlap");
		
		ACatapult_OnLoadVolumeBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.OverlapInfo = OverlapInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8830
	 * 		Name   -> Function TBL.Catapult.OnKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnKilled");
		
		ACatapult_OnKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8760
	 * 		Name   -> Function TBL.Catapult.OnItemPickup
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsAddedToInventory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnItemPickup(class AInventoryItem* Item, bool IsAddedToInventory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnItemPickup");
		
		ACatapult_OnItemPickup_Params params {};
		params.Item = Item;
		params.IsAddedToInventory = IsAddedToInventory;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8690
	 * 		Name   -> Function TBL.Catapult.OnHealthChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnHealthChanged(float Amount, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnHealthChanged");
		
		ACatapult_OnHealthChanged_Params params {};
		params.Amount = Amount;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8670
	 * 		Name   -> Function TBL.Catapult.OnFire
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ACatapult::OnFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnFire");
		
		ACatapult_OnFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D85C0
	 * 		Name   -> Function TBL.Catapult.OnDamageTaken
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ACatapult::OnDamageTaken(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.OnDamageTaken");
		
		ACatapult_OnDamageTaken_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Catapult.K2_OnCatapultStateChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_ECatapultState                                 State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECatapultState                                 PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::K2_OnCatapultStateChanged(TBL_ECatapultState State, TBL_ECatapultState PreviousState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.K2_OnCatapultStateChanged");
		
		ACatapult_K2_OnCatapultStateChanged_Params params {};
		params.State = State;
		params.PreviousState = PreviousState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8180
	 * 		Name   -> Function TBL.Catapult.IsPushable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ACatapult::IsPushable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.IsPushable");
		
		ACatapult_IsPushable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8150
	 * 		Name   -> Function TBL.Catapult.IsPackaged
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ACatapult::IsPackaged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.IsPackaged");
		
		ACatapult_IsPackaged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8120
	 * 		Name   -> Function TBL.Catapult.IsInteractable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ACatapult::IsInteractable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.IsInteractable");
		
		ACatapult_IsInteractable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8080
	 * 		Name   -> Function TBL.Catapult.IsCatapultRock
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ACatapult::IsCatapultRock(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.IsCatapultRock");
		
		ACatapult_IsCatapultRock_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Catapult.GetSpoonCollision
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	class UPrimitiveComponent* ACatapult::GetSpoonCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.GetSpoonCollision");
		
		ACatapult_GetSpoonCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Catapult.GetReloadCollision
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	class UPrimitiveComponent* ACatapult::GetReloadCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.GetReloadCollision");
		
		ACatapult_GetReloadCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Catapult.GetLoadVolume
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	class UPrimitiveComponent* ACatapult::GetLoadVolume()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.GetLoadVolume");
		
		ACatapult_GetLoadVolume_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFF60
	 * 		Name   -> Function TBL.Catapult.EventUsePressed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       InPawn                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InInteractable                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::EventUsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.EventUsePressed");
		
		ACatapult_EventUsePressed_Params params {};
		params.InPawn = InPawn;
		params.InInteractable = InInteractable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E92110
	 * 		Name   -> Function TBL.Catapult.ClientOnFire
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 */
	void ACatapult::ClientOnFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.ClientOnFire");
		
		ACatapult_ClientOnFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D7ED0
	 * 		Name   -> Function TBL.Catapult.CatapultLoadItem
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACatapult::CatapultLoadItem(class AInventoryItem* Item, class ATBLCharacter* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.CatapultLoadItem");
		
		ACatapult_CatapultLoadItem_Params params {};
		params.Item = Item;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D7E30
	 * 		Name   -> Function TBL.Catapult.CanLoad
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ACatapult::CanLoad(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.CanLoad");
		
		ACatapult_CanLoad_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91A30
	 * 		Name   -> Function TBL.Catapult.BroadcastFireNoDriver
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 */
	void ACatapult::BroadcastFireNoDriver()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Catapult.BroadcastFireNoDriver");
		
		ACatapult_BroadcastFireNoDriver_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ACatapult.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACatapult::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Catapult");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5550
	 * 		Name   -> Function TBL.CombatStateActivationMethod.OnCombatStateChanged
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateActivationMethod::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateActivationMethod.OnCombatStateChanged");
		
		UCombatStateActivationMethod_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatStateActivationMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatStateActivationMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatStateActivationMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UChargingActivationMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChargingActivationMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ChargingActivationMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D81B0
	 * 		Name   -> Function TBL.CatapultActivationMethod.OnAnimNotifyCatapultFire
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UTBLCatapultAnimInstance*                    AnimInstance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCatapultActivationMethod::OnAnimNotifyCatapultFire(class UTBLCatapultAnimInstance* AnimInstance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CatapultActivationMethod.OnAnimNotifyCatapultFire");
		
		UCatapultActivationMethod_OnAnimNotifyCatapultFire_Params params {};
		params.AnimInstance = AnimInstance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCatapultActivationMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCatapultActivationMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CatapultActivationMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EA170
	 * 		Name   -> Function TBL.CompositeTargetMethod.TargetUsingMethod
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class UAbilityTargetMethod*                        TargetMethod                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAbilityInitiationParams                    InInitiationParams                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bLocal                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                InMultiTargetMethodIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCompositeTargetMethod::TargetUsingMethod(class UAbilityTargetMethod* TargetMethod, const struct FAbilityInitiationParams& InInitiationParams, bool bLocal, int InMultiTargetMethodIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CompositeTargetMethod.TargetUsingMethod");
		
		UCompositeTargetMethod_TargetUsingMethod_Params params {};
		params.TargetMethod = TargetMethod;
		params.InInitiationParams = InInitiationParams;
		params.bLocal = bLocal;
		params.InMultiTargetMethodIndex = InMultiTargetMethodIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCompositeTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCompositeTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CompositeTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163F3F0
	 * 		Name   -> Function TBL.ProjectileTargetMethod.UpdateFakeClientProjectile
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UProjectileTargetMethod::UpdateFakeClientProjectile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.UpdateFakeClientProjectile");
		
		UProjectileTargetMethod_UpdateFakeClientProjectile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163F200
	 * 		Name   -> Function TBL.ProjectileTargetMethod.SpawnProjectile
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		struct FTransform                                  SpawnTransform                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bFakeClient                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      TargetProj                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                InvocationId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UProjectileTargetMethod::SpawnProjectile(const struct FTransform& SpawnTransform, bool bFakeClient, class AActor* TargetProj, int InvocationId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.SpawnProjectile");
		
		UProjectileTargetMethod_SpawnProjectile_Params params {};
		params.SpawnTransform = SpawnTransform;
		params.bFakeClient = bFakeClient;
		params.TargetProj = TargetProj;
		params.InvocationId = InvocationId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E920
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnStop
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnStop(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnStop");
		
		UProjectileTargetMethod_OnStop_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFEF0
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnProjectileMovementFinished
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UProjectileTargetMethod::OnProjectileMovementFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnProjectileMovementFinished");
		
		UProjectileTargetMethod_OnProjectileMovementFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E900
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnProjectileDisabled
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UProjectileTargetMethod::OnProjectileDisabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnProjectileDisabled");
		
		UProjectileTargetMethod_OnProjectileDisabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E880
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnProjectileDestroyedCosmetic
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnProjectileDestroyedCosmetic(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnProjectileDestroyedCosmetic");
		
		UProjectileTargetMethod_OnProjectileDestroyedCosmetic_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E800
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnProjectileDestroyed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnProjectileDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnProjectileDestroyed");
		
		UProjectileTargetMethod_OnProjectileDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E780
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnProjectileBeginPlay
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnProjectileBeginPlay(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnProjectileBeginPlay");
		
		UProjectileTargetMethod_OnProjectileBeginPlay_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E300
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnHitCosmetic
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnHitCosmetic(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnHitCosmetic");
		
		UProjectileTargetMethod_OnHitCosmetic_Params params {};
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E170
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnHit
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnHit");
		
		UProjectileTargetMethod_OnHit_Params params {};
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163DDD0
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnBeginOverlapCosmetic
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnBeginOverlapCosmetic(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnBeginOverlapCosmetic");
		
		UProjectileTargetMethod_OnBeginOverlapCosmetic_Params params {};
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163DC00
	 * 		Name   -> Function TBL.ProjectileTargetMethod.OnBeginOverlap
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OverlapInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::OnBeginOverlap(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.OnBeginOverlap");
		
		UProjectileTargetMethod_OnBeginOverlap_Params params {};
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.OverlapInfo = OverlapInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D540
	 * 		Name   -> Function TBL.ProjectileTargetMethod.HandlePassiveShieldHit
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              Shield                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::HandlePassiveShieldHit(class AInventoryItem* Shield, class ATBLCharacter* HitCharacter, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.HandlePassiveShieldHit");
		
		UProjectileTargetMethod_HandlePassiveShieldHit_Params params {};
		params.Shield = Shield;
		params.HitCharacter = HitCharacter;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D3E0
	 * 		Name   -> Function TBL.ProjectileTargetMethod.HandleParries
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UProjectileTargetMethod::HandleParries(const struct FHitResult& Hit, class ATBLCharacter* HitCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.HandleParries");
		
		UProjectileTargetMethod_HandleParries_Params params {};
		params.Hit = Hit;
		params.HitCharacter = HitCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D310
	 * 		Name   -> Function TBL.ProjectileTargetMethod.HandleDelayedHitsCosmetic
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UProjectileTargetMethod::HandleDelayedHitsCosmetic()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.HandleDelayedHitsCosmetic");
		
		UProjectileTargetMethod_HandleDelayedHitsCosmetic_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D2F0
	 * 		Name   -> Function TBL.ProjectileTargetMethod.HandleDelayedHits
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UProjectileTargetMethod::HandleDelayedHits()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.HandleDelayedHits");
		
		UProjectileTargetMethod_HandleDelayedHits_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163C9F0
	 * 		Name   -> Function TBL.ProjectileTargetMethod.AddDelayedHit
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileTargetMethod::AddDelayedHit(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileTargetMethod.AddDelayedHit");
		
		UProjectileTargetMethod_AddDelayedHit_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UProjectileTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProjectileTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ProjectileTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCatapultTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCatapultTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CatapultTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UChannelingActivationMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChannelingActivationMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ChannelingActivationMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8FC0
	 * 		Name   -> Function TBL.CharacterMountableActor.OnRep_ChargePercent
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ACharacterMountableActor::OnRep_ChargePercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CharacterMountableActor.OnRep_ChargePercent");
		
		ACharacterMountableActor_OnRep_ChargePercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D82B0
	 * 		Name   -> Function TBL.CharacterMountableActor.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACharacterMountableActor::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CharacterMountableActor.OnCombatStateChanged");
		
		ACharacterMountableActor_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D8230
	 * 		Name   -> Function TBL.CharacterMountableActor.OnCharacterMount
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ACharacterMountableActor::OnCharacterMount(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CharacterMountableActor.OnCharacterMount");
		
		ACharacterMountableActor_OnCharacterMount_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CharacterMountableActor.NeedsTick
	 * 		Flags  -> (Event, Public, BlueprintEvent, Const)
	 */
	bool ACharacterMountableActor::NeedsTick()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CharacterMountableActor.NeedsTick");
		
		ACharacterMountableActor_NeedsTick_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D0020
	 * 		Name   -> Function TBL.CharacterMountableActor.GetNumCharacters
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int ACharacterMountableActor::GetNumCharacters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CharacterMountableActor.GetNumCharacters");
		
		ACharacterMountableActor_GetNumCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ACharacterMountableActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACharacterMountableActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CharacterMountableActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HollowNavBlocker.Deactivate
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void AHollowNavBlocker::Deactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HollowNavBlocker.Deactivate");
		
		AHollowNavBlocker_Deactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HollowNavBlocker.Activate
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void AHollowNavBlocker::Activate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HollowNavBlocker.Activate");
		
		AHollowNavBlocker_Activate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AHollowNavBlocker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHollowNavBlocker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HollowNavBlocker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ACharacterPerformanceTestSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACharacterPerformanceTestSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CharacterPerformanceTestSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCharacterVOAKBank.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterVOAKBank::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CharacterVOAKBank");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UChatInputEditableTextBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatInputEditableTextBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ChatInputEditableTextBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D7F90
	 * 		Name   -> Function TBL.ChatLineBinding.GetValue
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	struct FChatLine UChatLineBinding::GetValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ChatLineBinding.GetValue");
		
		UChatLineBinding_GetValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UChatLineBinding.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatLineBinding::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ChatLineBinding");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UChatMessageText.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatMessageText::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ChatMessageText");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9410
	 * 		Name   -> Function TBL.ChatWidget.UsedChat
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UChatWidget::UsedChat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ChatWidget.UsedChat");
		
		UChatWidget_UsedChat_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9300
	 * 		Name   -> Function TBL.ChatWidget.SetAlwaysVisible
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               InAlwaysVisible                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UChatWidget::SetAlwaysVisible(bool InAlwaysVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ChatWidget.SetAlwaysVisible");
		
		UChatWidget_SetAlwaysVisible_Params params {};
		params.InAlwaysVisible = InAlwaysVisible;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UChatWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UChatWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ChatWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D9020
	 * 		Name   -> Function TBL.CinematicAnimationRemapping.OverrideSequencerAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimSequenceBase*                           InAnim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USkeletalMeshComponent*                      SkelMeshComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAnimSequenceBase* UCinematicAnimationRemapping::OverrideSequencerAnimation(class UAnimSequenceBase* InAnim, class USkeletalMeshComponent* SkelMeshComp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicAnimationRemapping.OverrideSequencerAnimation");
		
		UCinematicAnimationRemapping_OverrideSequencerAnimation_Params params {};
		params.InAnim = InAnim;
		params.SkelMeshComp = SkelMeshComp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCinematicAnimationRemapping.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCinematicAnimationRemapping::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CinematicAnimationRemapping");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.Tick
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::Tick(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.Tick");
		
		UCinematicState_Tick_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DED20
	 * 		Name   -> Function TBL.CinematicState.HideLoadingScreen
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCinematicState::HideLoadingScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HideLoadingScreen");
		
		UCinematicState_HideLoadingScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleUIStateChanged
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		struct FGameplayTag                                UIState                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleUIStateChanged(const struct FGameplayTag& UIState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleUIStateChanged");
		
		UCinematicState_HandleUIStateChanged_Params params {};
		params.UIState = UIState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleTeamChanged
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLTeam*                                    NewTeam                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleTeamChanged(class ATBLTeam* NewTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleTeamChanged");
		
		UCinematicState_HandleTeamChanged_Params params {};
		params.NewTeam = NewTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleSuicideNotify
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EKillReason                                    KillReason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleSuicideNotify(TBL_EKillReason KillReason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleSuicideNotify");
		
		UCinematicState_HandleSuicideNotify_Params params {};
		params.KillReason = KillReason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandlePossessedPawn
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandlePossessedPawn(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandlePossessedPawn");
		
		UCinematicState_HandlePossessedPawn_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandlePendingSpawn
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class ASpawner*                                    PendingSpawner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ServerSpawnTimeSeconds                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandlePendingSpawn(class ASpawner* PendingSpawner, float ServerSpawnTimeSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandlePendingSpawn");
		
		UCinematicState_HandlePendingSpawn_Params params {};
		params.PendingSpawner = PendingSpawner;
		params.ServerSpawnTimeSeconds = ServerSpawnTimeSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleNextSpawnWaveChanged
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class ASpawnWave*                                  SpawnWave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleNextSpawnWaveChanged(class ASpawnWave* SpawnWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleNextSpawnWaveChanged");
		
		UCinematicState_HandleNextSpawnWaveChanged_Params params {};
		params.SpawnWave = SpawnWave;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleNextSpawnTeamChanged
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLTeam*                                    NewTeam                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleNextSpawnTeamChanged(class ATBLTeam* NewTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleNextSpawnTeamChanged");
		
		UCinematicState_HandleNextSpawnTeamChanged_Params params {};
		params.NewTeam = NewTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleMatchStateChanged
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        MatchState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleMatchStateChanged(const class FName& MatchState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleMatchStateChanged");
		
		UCinematicState_HandleMatchStateChanged_Params params {};
		params.MatchState = MatchState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleGoingToSpawnAtSpawner
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class ASpawner*                                    Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleGoingToSpawnAtSpawner(class ASpawner* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleGoingToSpawnAtSpawner");
		
		UCinematicState_HandleGoingToSpawnAtSpawner_Params params {};
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleGameCinematicStateChanged
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		TBL_ECinematicGameState                            GameStateCinematicState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleGameCinematicStateChanged(TBL_ECinematicGameState GameStateCinematicState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleGameCinematicStateChanged");
		
		UCinematicState_HandleGameCinematicStateChanged_Params params {};
		params.GameStateCinematicState = GameStateCinematicState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleCombatStateChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::HandleCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleCombatStateChanged");
		
		UCinematicState_HandleCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.HandleCharacterAllowControl
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UCinematicState::HandleCharacterAllowControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.HandleCharacterAllowControl");
		
		UCinematicState_HandleCharacterAllowControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE150
	 * 		Name   -> Function TBL.CinematicState.GetPlayerController
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class ATBLPlayerController* UCinematicState::GetPlayerController()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.GetPlayerController");
		
		UCinematicState_GetPlayerController_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDE70
	 * 		Name   -> Function TBL.CinematicState.GetCinematicsComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UCinematicsComponent* UCinematicState::GetCinematicsComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.GetCinematicsComponent");
		
		UCinematicState_GetCinematicsComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.EndState
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FGameplayTag                                NextState                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::EndState(const struct FGameplayTag& NextState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.EndState");
		
		UCinematicState_EndState_Params params {};
		params.NextState = NextState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CinematicState.BeginState
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FGameplayTag                                PreviousState                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicState::BeginState(const struct FGameplayTag& PreviousState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicState.BeginState");
		
		UCinematicState_BeginState_Params params {};
		params.PreviousState = PreviousState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCinematicState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCinematicState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CinematicState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF610
	 * 		Name   -> Function TBL.CinematicsComponent.SetUIState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FGameplayTag                                UIState                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::SetUIState(const struct FGameplayTag& UIState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.SetUIState");
		
		UCinematicsComponent_SetUIState_Params params {};
		params.UIState = UIState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DF000
	 * 		Name   -> Function TBL.CinematicsComponent.IsInState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FGameplayTag                                State                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCinematicsComponent::IsInState(const struct FGameplayTag& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.IsInState");
		
		UCinematicsComponent_IsInState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DECA0
	 * 		Name   -> Function TBL.CinematicsComponent.HandleTeamChanged
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ATBLTeam*                                    NewTeam                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleTeamChanged(class ATBLTeam* NewTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleTeamChanged");
		
		UCinematicsComponent_HandleTeamChanged_Params params {};
		params.NewTeam = NewTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEC20
	 * 		Name   -> Function TBL.CinematicsComponent.HandleSuicideNotify
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		TBL_EKillReason                                    KillReason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleSuicideNotify(TBL_EKillReason KillReason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleSuicideNotify");
		
		UCinematicsComponent_HandleSuicideNotify_Params params {};
		params.KillReason = KillReason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEBA0
	 * 		Name   -> Function TBL.CinematicsComponent.HandlePossessedPawn
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandlePossessedPawn(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandlePossessedPawn");
		
		UCinematicsComponent_HandlePossessedPawn_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEAD0
	 * 		Name   -> Function TBL.CinematicsComponent.HandlePendingSpawn
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ASpawner*                                    PendingSpawner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ServerSpawnTimeSeconds                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandlePendingSpawn(class ASpawner* PendingSpawner, float ServerSpawnTimeSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandlePendingSpawn");
		
		UCinematicsComponent_HandlePendingSpawn_Params params {};
		params.PendingSpawner = PendingSpawner;
		params.ServerSpawnTimeSeconds = ServerSpawnTimeSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DEA50
	 * 		Name   -> Function TBL.CinematicsComponent.HandleNextSpawnWaveChanged
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ASpawnWave*                                  SpawnWave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleNextSpawnWaveChanged(class ASpawnWave* SpawnWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleNextSpawnWaveChanged");
		
		UCinematicsComponent_HandleNextSpawnWaveChanged_Params params {};
		params.SpawnWave = SpawnWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE9D0
	 * 		Name   -> Function TBL.CinematicsComponent.HandleNextSpawnTeamChanged
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ATBLTeam*                                    NewTeam                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleNextSpawnTeamChanged(class ATBLTeam* NewTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleNextSpawnTeamChanged");
		
		UCinematicsComponent_HandleNextSpawnTeamChanged_Params params {};
		params.NewTeam = NewTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE950
	 * 		Name   -> Function TBL.CinematicsComponent.HandleMatchStateChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        MatchState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleMatchStateChanged(const class FName& MatchState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleMatchStateChanged");
		
		UCinematicsComponent_HandleMatchStateChanged_Params params {};
		params.MatchState = MatchState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE8D0
	 * 		Name   -> Function TBL.CinematicsComponent.HandleGoingToSpawnAtSpawner
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ASpawner*                                    Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleGoingToSpawnAtSpawner(class ASpawner* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleGoingToSpawnAtSpawner");
		
		UCinematicsComponent_HandleGoingToSpawnAtSpawner_Params params {};
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE850
	 * 		Name   -> Function TBL.CinematicsComponent.HandleGameCinematicStateChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_ECinematicGameState                            GameStateCinematicState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleGameCinematicStateChanged(TBL_ECinematicGameState GameStateCinematicState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleGameCinematicStateChanged");
		
		UCinematicsComponent_HandleGameCinematicStateChanged_Params params {};
		params.GameStateCinematicState = GameStateCinematicState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE520
	 * 		Name   -> Function TBL.CinematicsComponent.HandleCombatStateChanged
	 * 		Flags  -> (Final, Native, Private, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::HandleCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.HandleCombatStateChanged");
		
		UCinematicsComponent_HandleCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE4A0
	 * 		Name   -> Function TBL.CinematicsComponent.GotoState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FGameplayTag                                NextState                                                  (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::GotoState(const struct FGameplayTag& NextState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.GotoState");
		
		UCinematicsComponent_GotoState_Params params {};
		params.NextState = NextState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE300
	 * 		Name   -> Function TBL.CinematicsComponent.GetState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FGameplayTag                                Tag                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCinematicState* UCinematicsComponent::GetState(const struct FGameplayTag& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.GetState");
		
		UCinematicsComponent_GetState_Params params {};
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DE030
	 * 		Name   -> Function TBL.CinematicsComponent.GetCurrentUIState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	struct FGameplayTag UCinematicsComponent::GetCurrentUIState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.GetCurrentUIState");
		
		UCinematicsComponent_GetCurrentUIState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDFF0
	 * 		Name   -> Function TBL.CinematicsComponent.GetCurrentStateTag
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FGameplayTag UCinematicsComponent::GetCurrentStateTag()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.GetCurrentStateTag");
		
		UCinematicsComponent_GetCurrentStateTag_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDFC0
	 * 		Name   -> Function TBL.CinematicsComponent.GetCurrentState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UCinematicState* UCinematicsComponent::GetCurrentState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.GetCurrentState");
		
		UCinematicsComponent_GetCurrentState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DCF00
	 * 		Name   -> Function TBL.CinematicsComponent.BindToPlayerState
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCinematicsComponent::BindToPlayerState(class APlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CinematicsComponent.BindToPlayerState");
		
		UCinematicsComponent_BindToPlayerState_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCinematicsComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCinematicsComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CinematicsComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatStateBlueprint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatStateBlueprint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatStateBlueprint");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E71C0
	 * 		Name   -> Function TBL.CombatStateComponent.WasInterruptedByJab
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::WasInterruptedByJab()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.WasInterruptedByJab");
		
		UCombatStateComponent_WasInterruptedByJab_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E7190
	 * 		Name   -> Function TBL.CombatStateComponent.WasHitByProjectile
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::WasHitByProjectile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.WasHitByProjectile");
		
		UCombatStateComponent_WasHitByProjectile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E7160
	 * 		Name   -> Function TBL.CombatStateComponent.WasBlockedWithParryForgivenessWindow
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::WasBlockedWithParryForgivenessWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.WasBlockedWithParryForgivenessWindow");
		
		UCombatStateComponent_WasBlockedWithParryForgivenessWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E7140
	 * 		Name   -> Function TBL.CombatStateComponent.StartProjectileCounterWindow
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::StartProjectileCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.StartProjectileCounterWindow");
		
		UCombatStateComponent_StartProjectileCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E7120
	 * 		Name   -> Function TBL.CombatStateComponent.StartCounterWindow
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::StartCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.StartCounterWindow");
		
		UCombatStateComponent_StartCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E7100
	 * 		Name   -> Function TBL.CombatStateComponent.StartActiveRiposteWindow
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::StartActiveRiposteWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.StartActiveRiposteWindow");
		
		UCombatStateComponent_StartActiveRiposteWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E70D0
	 * 		Name   -> Function TBL.CombatStateComponent.ShouldEndCounterWindow
	 * 		Flags  -> (Final, Native, Private, Const)
	 */
	bool UCombatStateComponent::ShouldEndCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ShouldEndCounterWindow");
		
		UCombatStateComponent_ShouldEndCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E70A0
	 * 		Name   -> Function TBL.CombatStateComponent.ShouldEndActiveRiposteWindow
	 * 		Flags  -> (Final, Native, Private, Const)
	 */
	bool UCombatStateComponent::ShouldEndActiveRiposteWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ShouldEndActiveRiposteWindow");
		
		UCombatStateComponent_ShouldEndActiveRiposteWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E7010
	 * 		Name   -> Function TBL.CombatStateComponent.SetSimulatedCombatState
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bBroadcastEndState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::SetSimulatedCombatState(bool bBroadcastEndState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.SetSimulatedCombatState");
		
		UCombatStateComponent_SetSimulatedCombatState_Params params {};
		params.bBroadcastEndState = bBroadcastEndState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6F50
	 * 		Name   -> Function TBL.CombatStateComponent.ServerStartReleaseStab
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FCombatStateReleaseStab                     Params                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerStartReleaseStab(const struct FCombatStateReleaseStab& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerStartReleaseStab");
		
		UCombatStateComponent_ServerStartReleaseStab_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6E90
	 * 		Name   -> Function TBL.CombatStateComponent.ServerStartHeavyAttack
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FCombatStateHeavyAttack                     Params                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerStartHeavyAttack(const struct FCombatStateHeavyAttack& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerStartHeavyAttack");
		
		UCombatStateComponent_ServerStartHeavyAttack_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6DE0
	 * 		Name   -> Function TBL.CombatStateComponent.ServerStartFire
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FCombatStateFire                            Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerStartFire(const struct FCombatStateFire& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerStartFire");
		
		UCombatStateComponent_ServerStartFire_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6D20
	 * 		Name   -> Function TBL.CombatStateComponent.ServerStartChargeStab
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FCombatStateChargeStab                      Params                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerStartChargeStab(const struct FCombatStateChargeStab& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerStartChargeStab");
		
		UCombatStateComponent_ServerStartChargeStab_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6C70
	 * 		Name   -> Function TBL.CombatStateComponent.ServerManualReload
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FTBL_FManualReload                          Params                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerManualReload(const struct FTBL_FManualReload& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerManualReload");
		
		UCombatStateComponent_ServerManualReload_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6AF0
	 * 		Name   -> Function TBL.CombatStateComponent.ServerHitSuccessWorldWithStats
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		int                                                AttackID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResultCompressed                        HitCompressed                                              (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bParried                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bBreakableHit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerHitSuccessWorldWithStats(int AttackID, const struct FHitResultCompressed& HitCompressed, bool bParried, bool bBreakableHit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerHitSuccessWorldWithStats");
		
		UCombatStateComponent_ServerHitSuccessWorldWithStats_Params params {};
		params.AttackID = AttackID;
		params.HitCompressed = HitCompressed;
		params.bParried = bParried;
		params.bBreakableHit = bBreakableHit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6920
	 * 		Name   -> Function TBL.CombatStateComponent.ServerHitSuccess
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		int                                                AttackID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResultCompressed                        HitCompressed                                              (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bParried                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsInTeamThwackRange                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerHitSuccess(int AttackID, const struct FHitResultCompressed& HitCompressed, bool bParried, bool bIsInTeamThwackRange)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerHitSuccess");
		
		UCombatStateComponent_ServerHitSuccess_Params params {};
		params.AttackID = AttackID;
		params.HitCompressed = HitCompressed;
		params.bParried = bParried;
		params.bIsInTeamThwackRange = bIsInTeamThwackRange;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6860
	 * 		Name   -> Function TBL.CombatStateComponent.ServerGetUp
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FCombatStateGetUp                           Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerGetUp(const struct FCombatStateGetUp& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerGetUp");
		
		UCombatStateComponent_ServerGetUp_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E67B0
	 * 		Name   -> Function TBL.CombatStateComponent.ServerDisableAttackRootMotion
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FTBL_FDisableAttackRootMotion               Params                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerDisableAttackRootMotion(const struct FTBL_FDisableAttackRootMotion& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerDisableAttackRootMotion");
		
		UCombatStateComponent_ServerDisableAttackRootMotion_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6680
	 * 		Name   -> Function TBL.CombatStateComponent.ServerDebugGotoState
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                CrowdControlVariant                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerDebugGotoState(const class FName& CombatState, const class FName& HitDirection, int CrowdControlVariant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerDebugGotoState");
		
		UCombatStateComponent_ServerDebugGotoState_Params params {};
		params.CombatState = CombatState;
		params.HitDirection = HitDirection;
		params.CrowdControlVariant = CrowdControlVariant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E65C0
	 * 		Name   -> Function TBL.CombatStateComponent.ServerCancelAttack
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FCombatStateCancelAttack                    Params                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ServerCancelAttack(const struct FCombatStateCancelAttack& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ServerCancelAttack");
		
		UCombatStateComponent_ServerCancelAttack_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E65A0
	 * 		Name   -> Function TBL.CombatStateComponent.ResetQueuedInputs
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UCombatStateComponent::ResetQueuedInputs()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ResetQueuedInputs");
		
		UCombatStateComponent_ResetQueuedInputs_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6500
	 * 		Name   -> Function TBL.CombatStateComponent.ReplicateCombatState
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bForceNetUpdate                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FReplicatedCombatStateInfo UCombatStateComponent::ReplicateCombatState(bool bForceNetUpdate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ReplicateCombatState");
		
		UCombatStateComponent_ReplicateCombatState_Params params {};
		params.bForceNetUpdate = bForceNetUpdate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6430
	 * 		Name   -> Function TBL.CombatStateComponent.Reload
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReplicateToClient                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::Reload(class AInventoryItem* Item, bool bReplicateToClient)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.Reload");
		
		UCombatStateComponent_Reload_Params params {};
		params.Item = Item;
		params.bReplicateToClient = bReplicateToClient;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6360
	 * 		Name   -> Function TBL.CombatStateComponent.QueueHeldInputs
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        InputName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIgnoreLastAttackInput                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::QueueHeldInputs(const class FName& InputName, bool bIgnoreLastAttackInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.QueueHeldInputs");
		
		UCombatStateComponent_QueueHeldInputs_Params params {};
		params.InputName = InputName;
		params.bIgnoreLastAttackInput = bIgnoreLastAttackInput;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E61D0
	 * 		Name   -> Function TBL.CombatStateComponent.OnWasParried
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               DefendingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventState                            ParryEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnWasParried(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, const struct FParryEventState& ParryEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnWasParried");
		
		UCombatStateComponent_OnWasParried_Params params {};
		params.AttackingCharacter = AttackingCharacter;
		params.DefendingCharacter = DefendingCharacter;
		params.ParryEventState = ParryEventState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E61B0
	 * 		Name   -> Function TBL.CombatStateComponent.OnStaminaDrained
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::OnStaminaDrained()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnStaminaDrained");
		
		UCombatStateComponent_OnStaminaDrained_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6190
	 * 		Name   -> Function TBL.CombatStateComponent.OnReplicatedCombatState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::OnReplicatedCombatState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnReplicatedCombatState");
		
		UCombatStateComponent_OnReplicatedCombatState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E6170
	 * 		Name   -> Function TBL.CombatStateComponent.OnRagdolled
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::OnRagdolled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnRagdolled");
		
		UCombatStateComponent_OnRagdolled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E60F0
	 * 		Name   -> Function TBL.CombatStateComponent.OnProjectileCounterWindowTimeout
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnProjectileCounterWindowTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnProjectileCounterWindowTimeout");
		
		UCombatStateComponent_OnProjectileCounterWindowTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5F60
	 * 		Name   -> Function TBL.CombatStateComponent.OnParrySuccess
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               DefendingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventState                            ParryEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnParrySuccess(class ATBLCharacter* DefendingCharacter, class ATBLCharacter* AttackingCharacter, const struct FParryEventState& ParryEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnParrySuccess");
		
		UCombatStateComponent_OnParrySuccess_Params params {};
		params.DefendingCharacter = DefendingCharacter;
		params.AttackingCharacter = AttackingCharacter;
		params.ParryEventState = ParryEventState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5EE0
	 * 		Name   -> Function TBL.CombatStateComponent.OnMovementInput
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnMovementInput(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnMovementInput");
		
		UCombatStateComponent_OnMovementInput_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5E60
	 * 		Name   -> Function TBL.CombatStateComponent.OnMeleeSuccess
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               HitCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnMeleeSuccess(class ATBLCharacter* HitCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnMeleeSuccess");
		
		UCombatStateComponent_OnMeleeSuccess_Params params {};
		params.HitCharacter = HitCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5DB0
	 * 		Name   -> Function TBL.CombatStateComponent.OnLanded
	 * 		Flags  -> (Final, Native, Private, HasOutParms)
	 * Parameters:
	 * 		struct FLandedResult                               LandedResult                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnLanded(const struct FLandedResult& LandedResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnLanded");
		
		UCombatStateComponent_OnLanded_Params params {};
		params.LandedResult = LandedResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5D90
	 * 		Name   -> Function TBL.CombatStateComponent.OnKilled
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::OnKilled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnKilled");
		
		UCombatStateComponent_OnKilled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5D70
	 * 		Name   -> Function TBL.CombatStateComponent.OnJumpPressed
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::OnJumpPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnJumpPressed");
		
		UCombatStateComponent_OnJumpPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5CB0
	 * 		Name   -> Function TBL.CombatStateComponent.OnItemStackChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnItemStackChanged(class AInventoryItem* Item, int Delta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnItemStackChanged");
		
		UCombatStateComponent_OnItemStackChanged_Params params {};
		params.Item = Item;
		params.Delta = Delta;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5BA0
	 * 		Name   -> Function TBL.CombatStateComponent.OnHitWorld
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bBreakableHit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bAutonomous                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnHitWorld(class AActor* HitActor, bool bBreakableHit, bool bAutonomous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnHitWorld");
		
		UCombatStateComponent_OnHitWorld_Params params {};
		params.HitActor = HitActor;
		params.bBreakableHit = bBreakableHit;
		params.bAutonomous = bAutonomous;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5B20
	 * 		Name   -> Function TBL.CombatStateComponent.OnEndAnimationTimeout
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnEndAnimationTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnEndAnimationTimeout");
		
		UCombatStateComponent_OnEndAnimationTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5B00
	 * 		Name   -> Function TBL.CombatStateComponent.OnEndAnimation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::OnEndAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnEndAnimation");
		
		UCombatStateComponent_OnEndAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5A40
	 * 		Name   -> Function TBL.CombatStateComponent.OnDismount
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      AttachParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnDismount(class AActor* AttachParent, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnDismount");
		
		UCombatStateComponent_OnDismount_Params params {};
		params.AttachParent = AttachParent;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5990
	 * 		Name   -> Function TBL.CombatStateComponent.OnDamageCaused
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnDamageCaused(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnDamageCaused");
		
		UCombatStateComponent_OnDamageCaused_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E58E0
	 * 		Name   -> Function TBL.CombatStateComponent.OnDamage
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnDamage(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnDamage");
		
		UCombatStateComponent_OnDamage_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5860
	 * 		Name   -> Function TBL.CombatStateComponent.OnCounterWindowTimeout
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnCounterWindowTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnCounterWindowTimeout");
		
		UCombatStateComponent_OnCounterWindowTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5490
	 * 		Name   -> Function TBL.CombatStateComponent.OnClash
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnClash(class ATBLCharacter* Initiator, class ATBLCharacter* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnClash");
		
		UCombatStateComponent_OnClash_Params params {};
		params.Initiator = Initiator;
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5300
	 * 		Name   -> Function TBL.CombatStateComponent.OnActorHit
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      SelfActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnActorHit");
		
		UCombatStateComponent_OnActorHit_Params params {};
		params.SelfActor = SelfActor;
		params.OtherActor = OtherActor;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5280
	 * 		Name   -> Function TBL.CombatStateComponent.OnActiveRiposteWindowTimeout
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnActiveRiposteWindowTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnActiveRiposteWindowTimeout");
		
		UCombatStateComponent_OnActiveRiposteWindowTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5200
	 * 		Name   -> Function TBL.CombatStateComponent.OnActivateTimer
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnActivateTimer(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnActivateTimer");
		
		UCombatStateComponent_OnActivateTimer_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5180
	 * 		Name   -> Function TBL.CombatStateComponent.OnAbilityInitiated
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AAbilityInvocation*                          Invocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::OnAbilityInitiated(class AAbilityInvocation* Invocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.OnAbilityInitiated");
		
		UCombatStateComponent_OnAbilityInitiated_Params params {};
		params.Invocation = Invocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5160
	 * 		Name   -> Function TBL.CombatStateComponent.ManualReload
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::ManualReload()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ManualReload");
		
		UCombatStateComponent_ManualReload_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5130
	 * 		Name   -> Function TBL.CombatStateComponent.IsUsingAttackTracers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsUsingAttackTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsUsingAttackTracers");
		
		UCombatStateComponent_IsUsingAttackTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5100
	 * 		Name   -> Function TBL.CombatStateComponent.IsRiposte
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsRiposte()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsRiposte");
		
		UCombatStateComponent_IsRiposte_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E50D0
	 * 		Name   -> Function TBL.CombatStateComponent.IsPreMovement
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UCombatStateComponent::IsPreMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsPreMovement");
		
		UCombatStateComponent_IsPreMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E50A0
	 * 		Name   -> Function TBL.CombatStateComponent.IsParryQueued
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsParryQueued()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsParryQueued");
		
		UCombatStateComponent_IsParryQueued_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5070
	 * 		Name   -> Function TBL.CombatStateComponent.IsKnockedDown
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsKnockedDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsKnockedDown");
		
		UCombatStateComponent_IsKnockedDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E5040
	 * 		Name   -> Function TBL.CombatStateComponent.IsInterrupted
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsInterrupted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsInterrupted");
		
		UCombatStateComponent_IsInterrupted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4FB0
	 * 		Name   -> Function TBL.CombatStateComponent.IsInState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class FName                                        StateName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCombatStateComponent::IsInState(const class FName& StateName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsInState");
		
		UCombatStateComponent_IsInState_Params params {};
		params.StateName = StateName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4F80
	 * 		Name   -> Function TBL.CombatStateComponent.IsInProjectileCounterWindow
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsInProjectileCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsInProjectileCounterWindow");
		
		UCombatStateComponent_IsInProjectileCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4F50
	 * 		Name   -> Function TBL.CombatStateComponent.IsInParryForgivenessWindow
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UCombatStateComponent::IsInParryForgivenessWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsInParryForgivenessWindow");
		
		UCombatStateComponent_IsInParryForgivenessWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4F20
	 * 		Name   -> Function TBL.CombatStateComponent.IsInCounterWindow
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsInCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsInCounterWindow");
		
		UCombatStateComponent_IsInCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4EF0
	 * 		Name   -> Function TBL.CombatStateComponent.IsInActiveRiposteWindow
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsInActiveRiposteWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsInActiveRiposteWindow");
		
		UCombatStateComponent_IsInActiveRiposteWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4EC0
	 * 		Name   -> Function TBL.CombatStateComponent.IsHoldingInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsHoldingInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsHoldingInput");
		
		UCombatStateComponent_IsHoldingInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4E90
	 * 		Name   -> Function TBL.CombatStateComponent.IsHoldAttackPressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsHoldAttackPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsHoldAttackPressed");
		
		UCombatStateComponent_IsHoldAttackPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4E60
	 * 		Name   -> Function TBL.CombatStateComponent.IsHeavy
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsHeavy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsHeavy");
		
		UCombatStateComponent_IsHeavy_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4E40
	 * 		Name   -> Function TBL.CombatStateComponent.IsFocused
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsFocused()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsFocused");
		
		UCombatStateComponent_IsFocused_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4E10
	 * 		Name   -> Function TBL.CombatStateComponent.IsFeint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsFeint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsFeint");
		
		UCombatStateComponent_IsFeint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4DE0
	 * 		Name   -> Function TBL.CombatStateComponent.IsDowned
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsDowned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsDowned");
		
		UCombatStateComponent_IsDowned_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4DB0
	 * 		Name   -> Function TBL.CombatStateComponent.IsCounter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsCounter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsCounter");
		
		UCombatStateComponent_IsCounter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4D80
	 * 		Name   -> Function TBL.CombatStateComponent.IsCombo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsCombo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsCombo");
		
		UCombatStateComponent_IsCombo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4D50
	 * 		Name   -> Function TBL.CombatStateComponent.IsCancelling
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsCancelling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsCancelling");
		
		UCombatStateComponent_IsCancelling_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4D20
	 * 		Name   -> Function TBL.CombatStateComponent.IsActiveRiposte
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsActiveRiposte()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsActiveRiposte");
		
		UCombatStateComponent_IsActiveRiposte_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4CF0
	 * 		Name   -> Function TBL.CombatStateComponent.IsActiveCounter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsActiveCounter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsActiveCounter");
		
		UCombatStateComponent_IsActiveCounter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4CC0
	 * 		Name   -> Function TBL.CombatStateComponent.IsAbilityUnblockable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::IsAbilityUnblockable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.IsAbilityUnblockable");
		
		UCombatStateComponent_IsAbilityUnblockable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4CA0
	 * 		Name   -> Function TBL.CombatStateComponent.HandleDelayedQueueHeldInputs
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::HandleDelayedQueueHeldInputs()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.HandleDelayedQueueHeldInputs");
		
		UCombatStateComponent_HandleDelayedQueueHeldInputs_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4B50
	 * 		Name   -> Function TBL.CombatStateComponent.GotoStateReplicated
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        NextStateName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bAutonomous                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OverrideStateTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           Variant                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::GotoStateReplicated(const class FName& NextStateName, bool bAutonomous, float OverrideStateTime, TBL_ECrowdControlVariant Variant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GotoStateReplicated");
		
		UCombatStateComponent_GotoStateReplicated_Params params {};
		params.NextStateName = NextStateName;
		params.bAutonomous = bAutonomous;
		params.OverrideStateTime = OverrideStateTime;
		params.Variant = Variant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4A00
	 * 		Name   -> Function TBL.CombatStateComponent.GotoState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        NextStateName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OverrideStateTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bStartAttack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           Variant                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::GotoState(const class FName& NextStateName, float OverrideStateTime, bool bStartAttack, TBL_ECrowdControlVariant Variant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GotoState");
		
		UCombatStateComponent_GotoState_Params params {};
		params.NextStateName = NextStateName;
		params.OverrideStateTime = OverrideStateTime;
		params.bStartAttack = bStartAttack;
		params.Variant = Variant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4940
	 * 		Name   -> Function TBL.CombatStateComponent.GotoParrySuccessReplicated
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                ParryAttackID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasBlockedWithParryForgivenessWindow                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::GotoParrySuccessReplicated(int ParryAttackID, bool bWasBlockedWithParryForgivenessWindow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GotoParrySuccessReplicated");
		
		UCombatStateComponent_GotoParrySuccessReplicated_Params params {};
		params.ParryAttackID = ParryAttackID;
		params.bWasBlockedWithParryForgivenessWindow = bWasBlockedWithParryForgivenessWindow;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4880
	 * 		Name   -> Function TBL.CombatStateComponent.GotoCounterReadyStateReplicated
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                ParryAttackID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackerAttackName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::GotoCounterReadyStateReplicated(int ParryAttackID, const class FName& AttackerAttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GotoCounterReadyStateReplicated");
		
		UCombatStateComponent_GotoCounterReadyStateReplicated_Params params {};
		params.ParryAttackID = ParryAttackID;
		params.AttackerAttackName = AttackerAttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4840
	 * 		Name   -> Function TBL.CombatStateComponent.GetState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatStateComponent::GetState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetState");
		
		UCombatStateComponent_GetState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4800
	 * 		Name   -> Function TBL.CombatStateComponent.GetQueuedInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatStateComponent::GetQueuedInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetQueuedInput");
		
		UCombatStateComponent_GetQueuedInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4740
	 * 		Name   -> Function TBL.CombatStateComponent.GetPreviousStateInfoByName
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FCombatStateInfo UCombatStateComponent::GetPreviousStateInfoByName(const class FName& InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetPreviousStateInfoByName");
		
		UCombatStateComponent_GetPreviousStateInfoByName_Params params {};
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4630
	 * 		Name   -> Function TBL.CombatStateComponent.GetPreviousStateInfo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               bLastAttackState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIgnoreQuickIdle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FCombatStateInfo UCombatStateComponent::GetPreviousStateInfo(bool bLastAttackState, bool bIgnoreQuickIdle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetPreviousStateInfo");
		
		UCombatStateComponent_GetPreviousStateInfo_Params params {};
		params.bLastAttackState = bLastAttackState;
		params.bIgnoreQuickIdle = bIgnoreQuickIdle;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4600
	 * 		Name   -> Function TBL.CombatStateComponent.GetMinimumHoldingTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatStateComponent::GetMinimumHoldingTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetMinimumHoldingTime");
		
		UCombatStateComponent_GetMinimumHoldingTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E45D0
	 * 		Name   -> Function TBL.CombatStateComponent.GetLastHitDirection_CrowdControl
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_ECrowdControlDirection UCombatStateComponent::GetLastHitDirection_CrowdControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetLastHitDirection_CrowdControl");
		
		UCombatStateComponent_GetLastHitDirection_CrowdControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4590
	 * 		Name   -> Function TBL.CombatStateComponent.GetLastHitDirection
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatStateComponent::GetLastHitDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetLastHitDirection");
		
		UCombatStateComponent_GetLastHitDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4560
	 * 		Name   -> Function TBL.CombatStateComponent.GetFeintMinTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatStateComponent::GetFeintMinTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetFeintMinTime");
		
		UCombatStateComponent_GetFeintMinTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4520
	 * 		Name   -> Function TBL.CombatStateComponent.GetDebugPreviousSwingThroughInfo
	 * 		Flags  -> (Final, Native, Private)
	 */
	TArray<class FString> UCombatStateComponent::GetDebugPreviousSwingThroughInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetDebugPreviousSwingThroughInfo");
		
		UCombatStateComponent_GetDebugPreviousSwingThroughInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E44E0
	 * 		Name   -> Function TBL.CombatStateComponent.GetDebugPreviousStates
	 * 		Flags  -> (Final, Native, Private)
	 */
	TArray<class FString> UCombatStateComponent::GetDebugPreviousStates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetDebugPreviousStates");
		
		UCombatStateComponent_GetDebugPreviousStates_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4490
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentStateInfo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FCombatStateInfo UCombatStateComponent::GetCurrentStateInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentStateInfo");
		
		UCombatStateComponent_GetCurrentStateInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4460
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttackTypeCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EAttackTypeCategory UCombatStateComponent::GetCurrentAttackTypeCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttackTypeCategory");
		
		UCombatStateComponent_GetCurrentAttackTypeCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4430
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttackTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatStateComponent::GetCurrentAttackTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttackTime");
		
		UCombatStateComponent_GetCurrentAttackTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4400
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttackItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class AInventoryItem* UCombatStateComponent::GetCurrentAttackItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttackItem");
		
		UCombatStateComponent_GetCurrentAttackItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E42D0
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttackInfo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               bLastValidAttack                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FAttackInfo UCombatStateComponent::GetCurrentAttackInfo(bool bLastValidAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttackInfo");
		
		UCombatStateComponent_GetCurrentAttackInfo_Params params {};
		params.bLastValidAttack = bLastValidAttack;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4290
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttackDirection
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	class FName UCombatStateComponent::GetCurrentAttackDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttackDirection");
		
		UCombatStateComponent_GetCurrentAttackDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4270
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttackComboState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatStateComponent::GetCurrentAttackComboState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttackComboState");
		
		UCombatStateComponent_GetCurrentAttackComboState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4230
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttackCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatStateComponent::GetCurrentAttackCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttackCategory");
		
		UCombatStateComponent_GetCurrentAttackCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E41F0
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UCombatStateComponent::GetCurrentAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAttack");
		
		UCombatStateComponent_GetCurrentAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E41C0
	 * 		Name   -> Function TBL.CombatStateComponent.GetCurrentAnimationLength
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UCombatStateComponent::GetCurrentAnimationLength()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCurrentAnimationLength");
		
		UCombatStateComponent_GetCurrentAnimationLength_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E40F0
	 * 		Name   -> Function TBL.CombatStateComponent.GetComboTimingPolicyString
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		TBL_EComboTimingPolicy                             ComboTimingPolicy                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UCombatStateComponent::GetComboTimingPolicyString(TBL_EComboTimingPolicy ComboTimingPolicy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetComboTimingPolicyString");
		
		UCombatStateComponent_GetComboTimingPolicyString_Params params {};
		params.ComboTimingPolicy = ComboTimingPolicy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E40C0
	 * 		Name   -> Function TBL.CombatStateComponent.GetCombatStateSynchronization
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UCombatStateSynchronization* UCombatStateComponent::GetCombatStateSynchronization()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCombatStateSynchronization");
		
		UCombatStateComponent_GetCombatStateSynchronization_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4090
	 * 		Name   -> Function TBL.CombatStateComponent.GetCombatStateQueue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UCombatStateQueue* UCombatStateComponent::GetCombatStateQueue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCombatStateQueue");
		
		UCombatStateComponent_GetCombatStateQueue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3FF0
	 * 		Name   -> Function TBL.CombatStateComponent.GetCombatStateBlueprint
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        StateName                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCombatState* UCombatStateComponent::GetCombatStateBlueprint(const class FName& StateName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetCombatStateBlueprint");
		
		UCombatStateComponent_GetCombatStateBlueprint_Params params {};
		params.StateName = StateName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3FC0
	 * 		Name   -> Function TBL.CombatStateComponent.GetClientTimeStamp
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	float UCombatStateComponent::GetClientTimeStamp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetClientTimeStamp");
		
		UCombatStateComponent_GetClientTimeStamp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3EF0
	 * 		Name   -> Function TBL.CombatStateComponent.GetAttackTransitionString
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		TBL_EAttackTransition                              AttackTransition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UCombatStateComponent::GetAttackTransitionString(TBL_EAttackTransition AttackTransition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetAttackTransitionString");
		
		UCombatStateComponent_GetAttackTransitionString_Params params {};
		params.AttackTransition = AttackTransition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3E50
	 * 		Name   -> Function TBL.CombatStateComponent.GetAttackCooldownRemainingByName
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UCombatStateComponent::GetAttackCooldownRemainingByName(const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.GetAttackCooldownRemainingByName");
		
		UCombatStateComponent_GetAttackCooldownRemainingByName_Params params {};
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3E30
	 * 		Name   -> Function TBL.CombatStateComponent.ExtendCounterWindow
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::ExtendCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ExtendCounterWindow");
		
		UCombatStateComponent_ExtendCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3E10
	 * 		Name   -> Function TBL.CombatStateComponent.EndProjectileCounterWindow
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::EndProjectileCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.EndProjectileCounterWindow");
		
		UCombatStateComponent_EndProjectileCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3DF0
	 * 		Name   -> Function TBL.CombatStateComponent.EndCounterWindow
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::EndCounterWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.EndCounterWindow");
		
		UCombatStateComponent_EndCounterWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3DD0
	 * 		Name   -> Function TBL.CombatStateComponent.EndActiveRiposteWindow
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCombatStateComponent::EndActiveRiposteWindow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.EndActiveRiposteWindow");
		
		UCombatStateComponent_EndActiveRiposteWindow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3C50
	 * 		Name   -> Function TBL.CombatStateComponent.DoHitSuccess
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		int                                                AttackID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResultCompressed                        HitCompressed                                              (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bParried                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsInTeamThwackRange                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::DoHitSuccess(int AttackID, const struct FHitResultCompressed& HitCompressed, bool bParried, bool bIsInTeamThwackRange)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.DoHitSuccess");
		
		UCombatStateComponent_DoHitSuccess_Params params {};
		params.AttackID = AttackID;
		params.HitCompressed = HitCompressed;
		params.bParried = bParried;
		params.bIsInTeamThwackRange = bIsInTeamThwackRange;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3B50
	 * 		Name   -> Function TBL.CombatStateComponent.DebugGotoState
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                CrowdControlVariant                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::DebugGotoState(const class FName& CombatState, const class FName& HitDirection, int CrowdControlVariant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.DebugGotoState");
		
		UCombatStateComponent_DebugGotoState_Params params {};
		params.CombatState = CombatState;
		params.HitDirection = HitDirection;
		params.CrowdControlVariant = CrowdControlVariant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3A10
	 * 		Name   -> Function TBL.CombatStateComponent.CrowdControl_NoDamage
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECrowdControlCombatState                       CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCrowdControlParams                         CrowdControlParams                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bAutonomous                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::CrowdControl_NoDamage(TBL_ECrowdControlCombatState CombatState, const struct FCrowdControlParams& CrowdControlParams, bool bAutonomous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.CrowdControl_NoDamage");
		
		UCombatStateComponent_CrowdControl_NoDamage_Params params {};
		params.CombatState = CombatState;
		params.CrowdControlParams = CrowdControlParams;
		params.bAutonomous = bAutonomous;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3930
	 * 		Name   -> Function TBL.CombatStateComponent.ClientRecordPreviousSwingThroughInfo
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		struct FSwingThroughInfo                           SwingThroughInfo                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ClientRecordPreviousSwingThroughInfo(const struct FSwingThroughInfo& SwingThroughInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ClientRecordPreviousSwingThroughInfo");
		
		UCombatStateComponent_ClientRecordPreviousSwingThroughInfo_Params params {};
		params.SwingThroughInfo = SwingThroughInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E96EF0
	 * 		Name   -> Function TBL.CombatStateComponent.ClientOutOfStamina
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 * Parameters:
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ClientOutOfStamina(const class FName& NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ClientOutOfStamina");
		
		UCombatStateComponent_ClientOutOfStamina_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3830
	 * 		Name   -> Function TBL.CombatStateComponent.ClientGotoState
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 * Parameters:
	 * 		class FName                                        NextState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OverrideStateTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           Variant                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ClientGotoState(const class FName& NextState, float OverrideStateTime, TBL_ECrowdControlVariant Variant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ClientGotoState");
		
		UCombatStateComponent_ClientGotoState_Params params {};
		params.NextState = NextState;
		params.OverrideStateTime = OverrideStateTime;
		params.Variant = Variant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3760
	 * 		Name   -> Function TBL.CombatStateComponent.ClientGotoParrySuccess
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 * Parameters:
	 * 		int                                                ParryAttackID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasBlockedWithParryForgivenessWindow                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ClientGotoParrySuccess(int ParryAttackID, bool bWasBlockedWithParryForgivenessWindow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ClientGotoParrySuccess");
		
		UCombatStateComponent_ClientGotoParrySuccess_Params params {};
		params.ParryAttackID = ParryAttackID;
		params.bWasBlockedWithParryForgivenessWindow = bWasBlockedWithParryForgivenessWindow;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3690
	 * 		Name   -> Function TBL.CombatStateComponent.ClientGotoCounterReadyState
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetClient)
	 * Parameters:
	 * 		int                                                ParryAttackID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackerAttackName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ClientGotoCounterReadyState(int ParryAttackID, const class FName& AttackerAttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ClientGotoCounterReadyState");
		
		UCombatStateComponent_ClientGotoCounterReadyState_Params params {};
		params.ParryAttackID = ParryAttackID;
		params.AttackerAttackName = AttackerAttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3600
	 * 		Name   -> Function TBL.CombatStateComponent.ClientCancelProjectile
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::ClientCancelProjectile(const class FName& CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.ClientCancelProjectile");
		
		UCombatStateComponent_ClientCancelProjectile_Params params {};
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E35D0
	 * 		Name   -> Function TBL.CombatStateComponent.CanDoHeavyAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UCombatStateComponent::CanDoHeavyAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.CanDoHeavyAttack");
		
		UCombatStateComponent_CanDoHeavyAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E35A0
	 * 		Name   -> Function TBL.CombatStateComponent.CanCrouch
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UCombatStateComponent::CanCrouch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.CanCrouch");
		
		UCombatStateComponent_CanCrouch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3510
	 * 		Name   -> Function TBL.CombatStateComponent.BroadcastGetUp
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::BroadcastGetUp(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.BroadcastGetUp");
		
		UCombatStateComponent_BroadcastGetUp_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3490
	 * 		Name   -> Function TBL.CombatStateComponent.BroadcastDrawStrengthModifier
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
	 * Parameters:
	 * 		unsigned char                                      InDrawStrengthModifier                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::BroadcastDrawStrengthModifier(unsigned char InDrawStrengthModifier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.BroadcastDrawStrengthModifier");
		
		UCombatStateComponent_BroadcastDrawStrengthModifier_Params params {};
		params.InDrawStrengthModifier = InDrawStrengthModifier;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3390
	 * 		Name   -> Function TBL.CombatStateComponent.BroadcastDebugGotoState
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
	 * Parameters:
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                CrowdControlVariant                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::BroadcastDebugGotoState(const class FName& CombatState, const class FName& HitDirection, int CrowdControlVariant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.BroadcastDebugGotoState");
		
		UCombatStateComponent_BroadcastDebugGotoState_Params params {};
		params.CombatState = CombatState;
		params.HitDirection = HitDirection;
		params.CrowdControlVariant = CrowdControlVariant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3260
	 * 		Name   -> Function TBL.CombatStateComponent.BroadcastCrowdControl_NoDamage
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		TBL_ECrowdControlCombatState                       CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCrowdControlParams                         CrowdControlParams                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bSkipAutonomous                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateComponent::BroadcastCrowdControl_NoDamage(TBL_ECrowdControlCombatState CombatState, const struct FCrowdControlParams& CrowdControlParams, bool bSkipAutonomous)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.BroadcastCrowdControl_NoDamage");
		
		UCombatStateComponent_BroadcastCrowdControl_NoDamage_Params params {};
		params.CombatState = CombatState;
		params.CrowdControlParams = CrowdControlParams;
		params.bSkipAutonomous = bSkipAutonomous;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3240
	 * 		Name   -> Function TBL.CombatStateComponent.AnimNotify_EndWeaponTracers
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::AnimNotify_EndWeaponTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.AnimNotify_EndWeaponTracers");
		
		UCombatStateComponent_AnimNotify_EndWeaponTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3220
	 * 		Name   -> Function TBL.CombatStateComponent.AnimNotify_ActivateAbility
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UCombatStateComponent::AnimNotify_ActivateAbility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.AnimNotify_ActivateAbility");
		
		UCombatStateComponent_AnimNotify_ActivateAbility_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E3190
	 * 		Name   -> Function TBL.CombatStateComponent.AbilityHasMeleeTargetMethod
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class UAbilitySpec*                                AbilitySpec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCombatStateComponent::AbilityHasMeleeTargetMethod(class UAbilitySpec* AbilitySpec)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateComponent.AbilityHasMeleeTargetMethod");
		
		UCombatStateComponent_AbilityHasMeleeTargetMethod_Params params {};
		params.AbilitySpec = AbilitySpec;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatStateComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatStateComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatStateComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EA2F0
	 * 		Name   -> Function TBL.CombatStateQueue.TryCancelAttack
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UCombatStateQueue::TryCancelAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.TryCancelAttack");
		
		UCombatStateQueue_TryCancelAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EA030
	 * 		Name   -> Function TBL.CombatStateQueue.ServerRemoveHeldInput
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        InputActionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateQueue::ServerRemoveHeldInput(const class FName& InputActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.ServerRemoveHeldInput");
		
		UCombatStateQueue_ServerRemoveHeldInput_Params params {};
		params.InputActionName = InputActionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9FE0
	 * 		Name   -> Function TBL.CombatStateQueue.ServerQueueParry
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void UCombatStateQueue::ServerQueueParry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.ServerQueueParry");
		
		UCombatStateQueue_ServerQueueParry_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9F20
	 * 		Name   -> Function TBL.CombatStateQueue.ServerQueueInput
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        NewQueuedInput                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateQueue::ServerQueueInput(const class FName& NewQueuedInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.ServerQueueInput");
		
		UCombatStateQueue_ServerQueueInput_Params params {};
		params.NewQueuedInput = NewQueuedInput;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9E10
	 * 		Name   -> Function TBL.CombatStateQueue.ServerAddHeldInput
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        InputActionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateQueue::ServerAddHeldInput(const class FName& InputActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.ServerAddHeldInput");
		
		UCombatStateQueue_ServerAddHeldInput_Params params {};
		params.InputActionName = InputActionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9BA0
	 * 		Name   -> Function TBL.CombatStateQueue.QueueFeint
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        FeintAttack                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateQueue::QueueFeint(const class FName& FeintAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.QueueFeint");
		
		UCombatStateQueue_QueueFeint_Params params {};
		params.FeintAttack = FeintAttack;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9B80
	 * 		Name   -> Function TBL.CombatStateQueue.OnShowInGameMenu
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UCombatStateQueue::OnShowInGameMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.OnShowInGameMenu");
		
		UCombatStateQueue_OnShowInGameMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9AC0
	 * 		Name   -> Function TBL.CombatStateQueue.OnFeintQueueTimeout
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateQueue::OnFeintQueueTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.OnFeintQueueTimeout");
		
		UCombatStateQueue_OnFeintQueueTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9990
	 * 		Name   -> Function TBL.CombatStateQueue.OnComboCancelTimeout
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateQueue::OnComboCancelTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.OnComboCancelTimeout");
		
		UCombatStateQueue_OnComboCancelTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9910
	 * 		Name   -> Function TBL.CombatStateQueue.OnCancelGamepadTimeout
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateQueue::OnCancelGamepadTimeout(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.OnCancelGamepadTimeout");
		
		UCombatStateQueue_OnCancelGamepadTimeout_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E94A0
	 * 		Name   -> Function TBL.CombatStateQueue.ClearHeldAttackQueue
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UCombatStateQueue::ClearHeldAttackQueue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateQueue.ClearHeldAttackQueue");
		
		UCombatStateQueue_ClearHeldAttackQueue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatStateQueue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatStateQueue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatStateQueue");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatStateSet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatStateSet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatStateSet");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatStateSetBlueprint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatStateSetBlueprint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatStateSetBlueprint");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E94C0
	 * 		Name   -> Function TBL.CombatStateSynchronization.ClientOnAttackFailed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		int                                                AttackID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCombatStateSynchronization::ClientOnAttackFailed(int AttackID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CombatStateSynchronization.ClientOnAttackFailed");
		
		UCombatStateSynchronization_ClientOnAttackFailed_Params params {};
		params.AttackID = AttackID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCombatStateSynchronization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCombatStateSynchronization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CombatStateSynchronization");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UConditionalActions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConditionalActions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ConditionalActions");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EA0F0
	 * 		Name   -> Function TBL.ConditionsComponent.SetDownedScore
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::SetDownedScore(float Score)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.SetDownedScore");
		
		UConditionsComponent_SetDownedScore_Params params {};
		params.Score = Score;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9ED0
	 * 		Name   -> Function TBL.ConditionsComponent.ServerGetUpFromDowned
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 */
	void UConditionsComponent::ServerGetUpFromDowned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.ServerGetUpFromDowned");
		
		UConditionsComponent_ServerGetUpFromDowned_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9D90
	 * 		Name   -> Function TBL.ConditionsComponent.Revive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               RevivedBy                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::Revive(class ATBLCharacter* RevivedBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.Revive");
		
		UConditionsComponent_Revive_Params params {};
		params.RevivedBy = RevivedBy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9D70
	 * 		Name   -> Function TBL.ConditionsComponent.ReplicateConditions
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UConditionsComponent::ReplicateConditions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.ReplicateConditions");
		
		UConditionsComponent_ReplicateConditions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9C20
	 * 		Name   -> Function TBL.ConditionsComponent.RemoveCondition
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bClearStacks                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::RemoveCondition(TBL_EConditionType Condition, bool bClearStacks)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.RemoveCondition");
		
		UConditionsComponent_RemoveCondition_Params params {};
		params.Condition = Condition;
		params.bClearStacks = bClearStacks;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9B60
	 * 		Name   -> Function TBL.ConditionsComponent.OnRep_DownedScore
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UConditionsComponent::OnRep_DownedScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.OnRep_DownedScore");
		
		UConditionsComponent_OnRep_DownedScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9B40
	 * 		Name   -> Function TBL.ConditionsComponent.OnRep_Conditions
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UConditionsComponent::OnRep_Conditions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.OnRep_Conditions");
		
		UConditionsComponent_OnRep_Conditions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9A10
	 * 		Name   -> Function TBL.ConditionsComponent.OnDownedDamageCaused
	 * 		Flags  -> (Final, Native, Private, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::OnDownedDamageCaused(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.OnDownedDamageCaused");
		
		UConditionsComponent_OnDownedDamageCaused_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9880
	 * 		Name   -> Function TBL.ConditionsComponent.HasCondition
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UConditionsComponent::HasCondition(TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.HasCondition");
		
		UConditionsComponent_HasCondition_Params params {};
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E97C0
	 * 		Name   -> Function TBL.ConditionsComponent.HandleOwnerUsed
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class APawn*                                       UsedBy                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InteractableComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::HandleOwnerUsed(class APawn* UsedBy, class UInteractableComponent* InteractableComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.HandleOwnerUsed");
		
		UConditionsComponent_HandleOwnerUsed_Params params {};
		params.UsedBy = UsedBy;
		params.InteractableComponent = InteractableComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9710
	 * 		Name   -> Function TBL.ConditionsComponent.HandleOwnerPreBroadcastDamage
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageTakenEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::HandleOwnerPreBroadcastDamage(const struct FDamageTakenEvent& DamageTakenEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.HandleOwnerPreBroadcastDamage");
		
		UConditionsComponent_HandleOwnerPreBroadcastDamage_Params params {};
		params.DamageTakenEvent = DamageTakenEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9660
	 * 		Name   -> Function TBL.ConditionsComponent.HandleOwnerDamageTaken
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::HandleOwnerDamageTaken(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.HandleOwnerDamageTaken");
		
		UConditionsComponent_HandleOwnerDamageTaken_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9640
	 * 		Name   -> Function TBL.ConditionsComponent.GetUpFromDowned
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UConditionsComponent::GetUpFromDowned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.GetUpFromDowned");
		
		UConditionsComponent_GetUpFromDowned_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9610
	 * 		Name   -> Function TBL.ConditionsComponent.GetMaxDownedScore
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UConditionsComponent::GetMaxDownedScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.GetMaxDownedScore");
		
		UConditionsComponent_GetMaxDownedScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E95E0
	 * 		Name   -> Function TBL.ConditionsComponent.GetDownedTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UConditionsComponent::GetDownedTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.GetDownedTime");
		
		UConditionsComponent_GetDownedTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E95B0
	 * 		Name   -> Function TBL.ConditionsComponent.GetDownedScorePercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UConditionsComponent::GetDownedScorePercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.GetDownedScorePercent");
		
		UConditionsComponent_GetDownedScorePercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9580
	 * 		Name   -> Function TBL.ConditionsComponent.GetDownedScore
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UConditionsComponent::GetDownedScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.GetDownedScore");
		
		UConditionsComponent_GetDownedScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9550
	 * 		Name   -> Function TBL.ConditionsComponent.GetDownedCanGetUp
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UConditionsComponent::GetDownedCanGetUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.GetDownedCanGetUp");
		
		UConditionsComponent_GetDownedCanGetUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E93E0
	 * 		Name   -> Function TBL.ConditionsComponent.ApplyCondition
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UConditionsComponent::ApplyCondition(TBL_EConditionType Condition, class AActor* DamageCauser)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ConditionsComponent.ApplyCondition");
		
		UConditionsComponent_ApplyCondition_Params params {};
		params.Condition = Condition;
		params.DamageCauser = DamageCauser;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UConditionsComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConditionsComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ConditionsComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UConditionsSpec.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UConditionsSpec::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ConditionsSpec");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimationSet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimationSet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimationSet");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_BattlecryAbility.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_BattlecryAbility::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_BattlecryAbility");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_CameraFollowAnimation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_CameraFollowAnimation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_CameraFollowAnimation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_DisableCollision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_DisableCollision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_DisableCollision");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_DisableRootMotionInAir.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_DisableRootMotionInAir::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_DisableRootMotionInAir");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_EnableRootMotion.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_EnableRootMotion::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_EnableRootMotion");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_EndLadderMovement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_EndLadderMovement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_EndLadderMovement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_PhysicsFlying.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_PhysicsFlying::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_PhysicsFlying");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_PhysicsFollowGround.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_PhysicsFollowGround::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_PhysicsFollowGround");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_PhysicsSpawn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_PhysicsSpawn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_PhysicsSpawn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAnimNotifyState_PhysicsVaulting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAnimNotifyState_PhysicsVaulting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AnimNotifyState_PhysicsVaulting");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UApplyCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UApplyCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ApplyCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCD80
	 * 		Name   -> Function TBL.ApplyTargetMethod.OnFinished
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class AAbilityInvocation*                          InInvocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAbilityTargetMethod*                        InTargetMethod                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UApplyTargetMethod::OnFinished(class AAbilityInvocation* InInvocation, class UAbilityTargetMethod* InTargetMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ApplyTargetMethod.OnFinished");
		
		UApplyTargetMethod_OnFinished_Params params {};
		params.InInvocation = InInvocation;
		params.InTargetMethod = InTargetMethod;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UApplyTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UApplyTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ApplyTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016931B0
	 * 		Name   -> Function TBL.TBLGameMode.UpdatePS5MatchResponsibility
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class APlayerController*                           ExcludePlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::UpdatePS5MatchResponsibility(class APlayerController* ExcludePlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.UpdatePS5MatchResponsibility");
		
		ATBLGameMode_UpdatePS5MatchResponsibility_Params params {};
		params.ExcludePlayer = ExcludePlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01693120
	 * 		Name   -> Function TBL.TBLGameMode.UpdateBotBackfill
	 * 		Flags  -> (Exec, Native, Public)
	 * Parameters:
	 * 		int                                                NewNumPlayers                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::UpdateBotBackfill(int NewNumPlayers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.UpdateBotBackfill");
		
		ATBLGameMode_UpdateBotBackfill_Params params {};
		params.NewNumPlayers = NewNumPlayers;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692F90
	 * 		Name   -> Function TBL.TBLGameMode.TBSSkipStage
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::TBSSkipStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.TBSSkipStage");
		
		ATBLGameMode_TBSSkipStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01693090
	 * 		Name   -> Function TBL.TBLGameMode.TBSSetUseMapList
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               UseMapList                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::TBSSetUseMapList(bool UseMapList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.TBSSetUseMapList");
		
		ATBLGameMode_TBSSetUseMapList_Params params {};
		params.UseMapList = UseMapList;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641EA0
	 * 		Name   -> Function TBL.TBLGameMode.TBSSetStageTime
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              TimeMinutes                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::TBSSetStageTime(float TimeMinutes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.TBSSetStageTime");
		
		ATBLGameMode_TBSSetStageTime_Params params {};
		params.TimeMinutes = TimeMinutes;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692FD0
	 * 		Name   -> Function TBL.TBLGameMode.TBSModifyTeamScore
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                TeamId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::TBSModifyTeamScore(int TeamId, int Score)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.TBSModifyTeamScore");
		
		ATBLGameMode_TBSModifyTeamScore_Params params {};
		params.TeamId = TeamId;
		params.Score = Score;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692FB0
	 * 		Name   -> Function TBL.TBLGameMode.TBSManuallyStartGame
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::TBSManuallyStartGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.TBSManuallyStartGame");
		
		ATBLGameMode_TBSManuallyStartGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692F90
	 * 		Name   -> Function TBL.TBLGameMode.TBSEndWarmup
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::TBSEndWarmup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.TBSEndWarmup");
		
		ATBLGameMode_TBSEndWarmup_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692F10
	 * 		Name   -> Function TBL.TBLGameMode.TBSEndGame
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                WinningTeam                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::TBSEndGame(int WinningTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.TBSEndGame");
		
		ATBLGameMode_TBSEndGame_Params params {};
		params.WinningTeam = WinningTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692E90
	 * 		Name   -> Function TBL.TBLGameMode.Slomo
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              T                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::Slomo(float T)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.Slomo");
		
		ATBLGameMode_Slomo_Params params {};
		params.T = T;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692E10
	 * 		Name   -> Function TBL.TBLGameMode.SetPS5MatchResponsiblePlayer
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class ATBLPlayerState*                             NewPlayerState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::SetPS5MatchResponsiblePlayer(class ATBLPlayerState* NewPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.SetPS5MatchResponsiblePlayer");
		
		ATBLGameMode_SetPS5MatchResponsiblePlayer_Params params {};
		params.NewPlayerState = NewPlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692D70
	 * 		Name   -> Function TBL.TBLGameMode.SetPS5MatchId
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      NewPS5MatchId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::SetPS5MatchId(const class FString& NewPS5MatchId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.SetPS5MatchId");
		
		ATBLGameMode_SetPS5MatchId_Params params {};
		params.NewPS5MatchId = NewPS5MatchId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692C50
	 * 		Name   -> Function TBL.TBLGameMode.RemoveSessionBan
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FSessionBannedPlayer                        BannedPlayer                                               (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::RemoveSessionBan(const struct FSessionBannedPlayer& BannedPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.RemoveSessionBan");
		
		ATBLGameMode_RemoveSessionBan_Params params {};
		params.BannedPlayer = BannedPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692B80
	 * 		Name   -> Function TBL.TBLGameMode.RemoveBots
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bRemoveLevelBots                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bRemoveBackfillBots                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::RemoveBots(bool bRemoveLevelBots, bool bRemoveBackfillBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.RemoveBots");
		
		ATBLGameMode_RemoveBots_Params params {};
		params.bRemoveLevelBots = bRemoveLevelBots;
		params.bRemoveBackfillBots = bRemoveBackfillBots;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692A70
	 * 		Name   -> Function TBL.TBLGameMode.PlayerRequestNewTeam
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLTeam*                                    Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bImmediatelySwitch                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLGameMode::PlayerRequestNewTeam(class AController* Controller, class ATBLTeam* Team, bool bImmediatelySwitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.PlayerRequestNewTeam");
		
		ATBLGameMode_PlayerRequestNewTeam_Params params {};
		params.Controller = Controller;
		params.Team = Team;
		params.bImmediatelySwitch = bImmediatelySwitch;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016929D0
	 * 		Name   -> Function TBL.TBLGameMode.PlayerRequestBeginSpectating
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLGameMode::PlayerRequestBeginSpectating(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.PlayerRequestBeginSpectating");
		
		ATBLGameMode_PlayerRequestBeginSpectating_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016928D0
	 * 		Name   -> Function TBL.TBLGameMode.PlayerReadyToSpawn
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class USpawnQueuer*                                SpawnQueuer                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASpawner*                                    Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::PlayerReadyToSpawn(class USpawnQueuer* SpawnQueuer, class AController* Player, class ASpawner* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.PlayerReadyToSpawn");
		
		ATBLGameMode_PlayerReadyToSpawn_Params params {};
		params.SpawnQueuer = SpawnQueuer;
		params.Player = Player;
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692800
	 * 		Name   -> Function TBL.TBLGameMode.PerformDeferredSpawnRequest
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FPendingSpawn                               DeferredSpawn                                              (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::PerformDeferredSpawnRequest(const struct FPendingSpawn& DeferredSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.PerformDeferredSpawnRequest");
		
		ATBLGameMode_PerformDeferredSpawnRequest_Params params {};
		params.DeferredSpawn = DeferredSpawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016927E0
	 * 		Name   -> Function TBL.TBLGameMode.PerformAutoBalancePriorToGameStart
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATBLGameMode::PerformAutoBalancePriorToGameStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.PerformAutoBalancePriorToGameStart");
		
		ATBLGameMode_PerformAutoBalancePriorToGameStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692700
	 * 		Name   -> Function TBL.TBLGameMode.OverrideAIBehavior
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      BehaviorTreeName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::OverrideAIBehavior(const class FString& BehaviorTreeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.OverrideAIBehavior");
		
		ATBLGameMode_OverrideAIBehavior_Params params {};
		params.BehaviorTreeName = BehaviorTreeName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692680
	 * 		Name   -> Function TBL.TBLGameMode.OnPCPossessedPawn
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       APawn                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::OnPCPossessedPawn(class APawn* APawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.OnPCPossessedPawn");
		
		ATBLGameMode_OnPCPossessedPawn_Params params {};
		params.APawn = APawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016925A0
	 * 		Name   -> Function TBL.TBLGameMode.NotifyStageStart
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      StageName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TimeRemaining                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::NotifyStageStart(const class FString& StageName, float TimeRemaining)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.NotifyStageStart");
		
		ATBLGameMode_NotifyStageStart_Params params {};
		params.StageName = StageName;
		params.TimeRemaining = TimeRemaining;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692520
	 * 		Name   -> Function TBL.TBLGameMode.NotifyStageEnd
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       WinningFaction                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::NotifyStageEnd(TBL_EFaction WinningFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.NotifyStageEnd");
		
		ATBLGameMode_NotifyStageEnd_Params params {};
		params.WinningFaction = WinningFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692380
	 * 		Name   -> Function TBL.TBLGameMode.KickByNetIdWithTimer
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FUniqueNetIdRepl                            UniqueId                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              BanTime                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::KickByNetIdWithTimer(const struct FUniqueNetIdRepl& UniqueId, const class FString& Reason, float BanTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.KickByNetIdWithTimer");
		
		ATBLGameMode_KickByNetIdWithTimer_Params params {};
		params.UniqueId = UniqueId;
		params.Reason = Reason;
		params.BanTime = BanTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692290
	 * 		Name   -> Function TBL.TBLGameMode.KickByName
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::KickByName(const class FString& PlayerName, const class FString& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.KickByName");
		
		ATBLGameMode_KickByName_Params params {};
		params.PlayerName = PlayerName;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016921A0
	 * 		Name   -> Function TBL.TBLGameMode.KickById
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::KickById(const class FString& PlayerId, const class FString& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.KickById");
		
		ATBLGameMode_KickById_Params params {};
		params.PlayerId = PlayerId;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692180
	 * 		Name   -> Function TBL.TBLGameMode.KickAllPlayers
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::KickAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.KickAllPlayers");
		
		ATBLGameMode_KickAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameMode.K2_HandleSkipStage
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLGameMode::K2_HandleSkipStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.K2_HandleSkipStage");
		
		ATBLGameMode_K2_HandleSkipStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameMode.K2_HandlePrepareMatch
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLGameMode::K2_HandlePrepareMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.K2_HandlePrepareMatch");
		
		ATBLGameMode_K2_HandlePrepareMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameMode.K2_HandleMatchIsWaitingToStart
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLGameMode::K2_HandleMatchIsWaitingToStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.K2_HandleMatchIsWaitingToStart");
		
		ATBLGameMode_K2_HandleMatchIsWaitingToStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameMode.K2_HandleMatchHasStarted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLGameMode::K2_HandleMatchHasStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.K2_HandleMatchHasStarted");
		
		ATBLGameMode_K2_HandleMatchHasStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameMode.K2_GetCurrentStage
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	class UObject* ATBLGameMode::K2_GetCurrentStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.K2_GetCurrentStage");
		
		ATBLGameMode_K2_GetCurrentStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016920E0
	 * 		Name   -> Function TBL.TBLGameMode.IsSpawnWaveInQueue
	 * 		Flags  -> (Native, Public, Const)
	 * Parameters:
	 * 		class ASpawnWave*                                  SpawnWave                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLGameMode::IsSpawnWaveInQueue(class ASpawnWave* SpawnWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.IsSpawnWaveInQueue");
		
		ATBLGameMode_IsSpawnWaveInQueue_Params params {};
		params.SpawnWave = SpawnWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameMode.IsAutoBalanceBlocked
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	bool ATBLGameMode::IsAutoBalanceBlocked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.IsAutoBalanceBlocked");
		
		ATBLGameMode_IsAutoBalanceBlocked_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90750
	 * 		Name   -> Function TBL.TBLGameMode.InitTeams
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	void ATBLGameMode::InitTeams()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.InitTeams");
		
		ATBLGameMode_InitTeams_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91D30
	 * 		Name   -> Function TBL.TBLGameMode.InitSpawnQueuers
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLGameMode::InitSpawnQueuers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.InitSpawnQueuers");
		
		ATBLGameMode_InitSpawnQueuers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01692020
	 * 		Name   -> Function TBL.TBLGameMode.HandleAIPossessedPawn
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLAIController*                            AIC                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       APawn                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::HandleAIPossessedPawn(class ATBLAIController* AIC, class APawn* APawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.HandleAIPossessedPawn");
		
		ATBLGameMode_HandleAIPossessedPawn_Params params {};
		params.AIC = AIC;
		params.APawn = APawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691FA0
	 * 		Name   -> Function TBL.TBLGameMode.GetServerIdentifier
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class FString ATBLGameMode::GetServerIdentifier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.GetServerIdentifier");
		
		ATBLGameMode_GetServerIdentifier_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691F20
	 * 		Name   -> Function TBL.TBLGameMode.GetServerDisplayName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class FString ATBLGameMode::GetServerDisplayName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.GetServerDisplayName");
		
		ATBLGameMode_GetServerDisplayName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691E50
	 * 		Name   -> Function TBL.TBLGameMode.GetNumberOfPlayersOnFaction
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bRequirePlayerState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ATBLGameMode::GetNumberOfPlayersOnFaction(TBL_EFaction Faction, bool bRequirePlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.GetNumberOfPlayersOnFaction");
		
		ATBLGameMode_GetNumberOfPlayersOnFaction_Params params {};
		params.Faction = Faction;
		params.bRequirePlayerState = bRequirePlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691D60
	 * 		Name   -> Function TBL.TBLGameMode.GetGameModeWidgetClass
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	void ATBLGameMode::GetGameModeWidgetClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.GetGameModeWidgetClass");
		
		ATBLGameMode_GetGameModeWidgetClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691D40
	 * 		Name   -> Function TBL.TBLGameMode.GetEpilogueDuration
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float ATBLGameMode::GetEpilogueDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.GetEpilogueDuration");
		
		ATBLGameMode_GetEpilogueDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691C60
	 * 		Name   -> Function TBL.TBLGameMode.GetCharacterPerformanceTestInfo
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		bool                                               IsRunningTest                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                TestIndex                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::GetCharacterPerformanceTestInfo(bool* IsRunningTest, int* TestIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.GetCharacterPerformanceTestInfo");
		
		ATBLGameMode_GetCharacterPerformanceTestInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IsRunningTest != nullptr)
			*IsRunningTest = params.IsRunningTest;
		if (TestIndex != nullptr)
			*TestIndex = params.TestIndex;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691B80
	 * 		Name   -> Function TBL.TBLGameMode.GetAIObjectiveActors
	 * 		Flags  -> (Native, Public, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AActor*> ATBLGameMode::GetAIObjectiveActors(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.GetAIObjectiveActors");
		
		ATBLGameMode_GetAIObjectiveActors_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691AF0
	 * 		Name   -> Function TBL.TBLGameMode.FindSpawnQueue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class FName                                        SpawnQueueName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USpawnQueuer* ATBLGameMode::FindSpawnQueue(const class FName& SpawnQueueName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.FindSpawnQueue");
		
		ATBLGameMode_FindSpawnQueue_Params params {};
		params.SpawnQueueName = SpawnQueueName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91B70
	 * 		Name   -> Function TBL.TBLGameMode.DisableSpawningBots
	 * 		Flags  -> (Exec, Native, Public)
	 */
	void ATBLGameMode::DisableSpawningBots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.DisableSpawningBots");
		
		ATBLGameMode_DisableSpawningBots_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691A30
	 * 		Name   -> Function TBL.TBLGameMode.ClientAddMainMenuMessage
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FText                                        Message                                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::ClientAddMainMenuMessage(const class FText& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.ClientAddMainMenuMessage");
		
		ATBLGameMode_ClientAddMainMenuMessage_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016919A0
	 * 		Name   -> Function TBL.TBLGameMode.ClearStageProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FStageActorProgress                         Progress                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::ClearStageProgress(const struct FStageActorProgress& Progress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.ClearStageProgress");
		
		ATBLGameMode_ClearStageProgress_Params params {};
		params.Progress = Progress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691980
	 * 		Name   -> Function TBL.TBLGameMode.ClearPS5MatchResponsiblePlayer
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::ClearPS5MatchResponsiblePlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.ClearPS5MatchResponsiblePlayer");
		
		ATBLGameMode_ClearPS5MatchResponsiblePlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691960
	 * 		Name   -> Function TBL.TBLGameMode.ClearPS5MatchId
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::ClearPS5MatchId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.ClearPS5MatchId");
		
		ATBLGameMode_ClearPS5MatchId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91E10
	 * 		Name   -> Function TBL.TBLGameMode.ClearAllObjectiveAITags
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 */
	void ATBLGameMode::ClearAllObjectiveAITags()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.ClearAllObjectiveAITags");
		
		ATBLGameMode_ClearAllObjectiveAITags_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691810
	 * 		Name   -> Function TBL.TBLGameMode.BroadcastLocalizedChatForFaction
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       ReceivingFaction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Msg                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::BroadcastLocalizedChatForFaction(TBL_EFaction ReceivingFaction, const class FText& Msg, TBL_EChatType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.BroadcastLocalizedChatForFaction");
		
		ATBLGameMode_BroadcastLocalizedChatForFaction_Params params {};
		params.ReceivingFaction = ReceivingFaction;
		params.Msg = Msg;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016916F0
	 * 		Name   -> Function TBL.TBLGameMode.BroadcastLocalizedChat
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Msg                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::BroadcastLocalizedChat(const class FText& Msg, TBL_EChatType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.BroadcastLocalizedChat");
		
		ATBLGameMode_BroadcastLocalizedChat_Params params {};
		params.Msg = Msg;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016915A0
	 * 		Name   -> Function TBL.TBLGameMode.BroadcastChat
	 * 		Flags  -> (Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      OverrideColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::BroadcastChat(class AActor* Sender, const class FString& Msg, TBL_EChatType Type, const struct FColor& OverrideColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.BroadcastChat");
		
		ATBLGameMode_BroadcastChat_Params params {};
		params.Sender = Sender;
		params.Msg = Msg;
		params.Type = Type;
		params.OverrideColor = OverrideColor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691580
	 * 		Name   -> Function TBL.TBLGameMode.BeginEpilogue
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameMode::BeginEpilogue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.BeginEpilogue");
		
		ATBLGameMode_BeginEpilogue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691450
	 * 		Name   -> Function TBL.TBLGameMode.BanByName
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Hours                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::BanByName(const class FString& PlayerName, int Hours, const class FString& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.BanByName");
		
		ATBLGameMode_BanByName_Params params {};
		params.PlayerName = PlayerName;
		params.Hours = Hours;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691320
	 * 		Name   -> Function TBL.TBLGameMode.BanById
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Hours                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::BanById(const class FString& PlayerId, int Hours, const class FString& Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.BanById");
		
		ATBLGameMode_BanById_Params params {};
		params.PlayerId = PlayerId;
		params.Hours = Hours;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691250
	 * 		Name   -> Function TBL.TBLGameMode.AwardVictory
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       InVictor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             InPlayerVictor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AwardVictory(TBL_EFaction InVictor, class ATBLPlayerState* InPlayerVictor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AwardVictory");
		
		ATBLGameMode_AwardVictory_Params params {};
		params.InVictor = InVictor;
		params.InPlayerVictor = InPlayerVictor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016911C0
	 * 		Name   -> Function TBL.TBLGameMode.AwardFFAVictory
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             InPlayerVictor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AwardFFAVictory(class ATBLPlayerState* InPlayerVictor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AwardFFAVictory");
		
		ATBLGameMode_AwardFFAVictory_Params params {};
		params.InPlayerVictor = InPlayerVictor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLGameMode.AutoBalanceByPlayerKills
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::AutoBalanceByPlayerKills()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AutoBalanceByPlayerKills");
		
		ATBLGameMode_AutoBalanceByPlayerKills_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLGameMode.AutoBalanceByNumPlayers
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLGameMode::AutoBalanceByNumPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AutoBalanceByNumPlayers");
		
		ATBLGameMode_AutoBalanceByNumPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691130
	 * 		Name   -> Function TBL.TBLGameMode.AddStageProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FStageActorProgress                         Progress                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddStageProgress(const struct FStageActorProgress& Progress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddStageProgress");
		
		ATBLGameMode_AddStageProgress_Params params {};
		params.Progress = Progress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016910A0
	 * 		Name   -> Function TBL.TBLGameMode.AddPlayerNullBots
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddPlayerNullBots(int InNumBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddPlayerNullBots");
		
		ATBLGameMode_AddPlayerNullBots_Params params {};
		params.InNumBots = InNumBots;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01691010
	 * 		Name   -> Function TBL.TBLGameMode.AddPlayerDummyBots
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddPlayerDummyBots(int InNumBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddPlayerDummyBots");
		
		ATBLGameMode_AddPlayerDummyBots_Params params {};
		params.InNumBots = InNumBots;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01690F20
	 * 		Name   -> Function TBL.TBLGameMode.AddPlayerBotsEx
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddPlayerBotsEx(int InNumBots, int Team, int Class)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddPlayerBotsEx");
		
		ATBLGameMode_AddPlayerBotsEx_Params params {};
		params.InNumBots = InNumBots;
		params.Team = Team;
		params.Class = Class;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01690E90
	 * 		Name   -> Function TBL.TBLGameMode.AddPlayerBots
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddPlayerBots(int InNumBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddPlayerBots");
		
		ATBLGameMode_AddPlayerBots_Params params {};
		params.InNumBots = InNumBots;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01690E00
	 * 		Name   -> Function TBL.TBLGameMode.AddNullBots
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddNullBots(int InNumBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddNullBots");
		
		ATBLGameMode_AddNullBots_Params params {};
		params.InNumBots = InNumBots;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01690D70
	 * 		Name   -> Function TBL.TBLGameMode.AddDummyBots
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddDummyBots(int InNumBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddDummyBots");
		
		ATBLGameMode_AddDummyBots_Params params {};
		params.InNumBots = InNumBots;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01690C80
	 * 		Name   -> Function TBL.TBLGameMode.AddBotsEx
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddBotsEx(int InNumBots, int Team, int Class)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddBotsEx");
		
		ATBLGameMode_AddBotsEx_Params params {};
		params.InNumBots = InNumBots;
		params.Team = Team;
		params.Class = Class;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01690BF0
	 * 		Name   -> Function TBL.TBLGameMode.AddBots
	 * 		Flags  -> (Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                InNumBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameMode::AddBots(int InNumBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.AddBots");
		
		ATBLGameMode_AddBots_Params params {};
		params.InNumBots = InNumBots;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01690BD0
	 * 		Name   -> Function TBL.TBLGameMode.ActuallyLeaveMap
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLGameMode::ActuallyLeaveMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameMode.ActuallyLeaveMap");
		
		ATBLGameMode_ActuallyLeaveMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLGameMode_NativeBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLGameMode_NativeBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameMode_NativeBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CD0A0
	 * 		Name   -> Function TBL.ArenaGameMode.TryPodiumSetup
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaGameMode::TryPodiumSetup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameMode.TryPodiumSetup");
		
		AArenaGameMode_TryPodiumSetup_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CD080
	 * 		Name   -> Function TBL.ArenaGameMode.ShowPodiumLevel
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AArenaGameMode::ShowPodiumLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameMode.ShowPodiumLevel");
		
		AArenaGameMode_ShowPodiumLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCFA0
	 * 		Name   -> Function TBL.ArenaGameMode.PlayRoundFightCommanderVO
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AArenaGameMode::PlayRoundFightCommanderVO()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameMode.PlayRoundFightCommanderVO");
		
		AArenaGameMode_PlayRoundFightCommanderVO_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCE40
	 * 		Name   -> Function TBL.ArenaGameMode.OnPodiumLevelLoaded
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaGameMode::OnPodiumLevelLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameMode.OnPodiumLevelLoaded");
		
		AArenaGameMode_OnPodiumLevelLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCD60
	 * 		Name   -> Function TBL.ArenaGameMode.OnCustomizationJobsEmptied
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AArenaGameMode::OnCustomizationJobsEmptied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameMode.OnCustomizationJobsEmptied");
		
		AArenaGameMode_OnCustomizationJobsEmptied_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCCE0
	 * 		Name   -> Function TBL.ArenaGameMode.OnActorSpawned
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class AActor*                                      InActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AArenaGameMode::OnActorSpawned(class AActor* InActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameMode.OnActorSpawned");
		
		AArenaGameMode_OnActorSpawned_Params params {};
		params.InActor = InActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCCC0
	 * 		Name   -> Function TBL.ArenaGameMode.LoadPodiumCinematic
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AArenaGameMode::LoadPodiumCinematic()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameMode.LoadPodiumCinematic");
		
		AArenaGameMode_LoadPodiumCinematic_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AArenaGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AArenaGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ArenaGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameModeSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameModeSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameModeSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CCB60
	 * 		Name   -> Function TBL.ArenaGameModeSettings.GetSound
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EArenaSounds                                   ArenaSound                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAkAudioEvent* UArenaGameModeSettings::GetSound(TBL_EArenaSounds ArenaSound, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ArenaGameModeSettings.GetSound");
		
		UArenaGameModeSettings_GetSound_Params params {};
		params.ArenaSound = ArenaSound;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UArenaGameModeSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UArenaGameModeSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ArenaGameModeSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E9CF0
	 * 		Name   -> Function TBL.ContextVOManager.RemoveStage
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Stage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UContextVOManager::RemoveStage(class UObject* Stage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ContextVOManager.RemoveStage");
		
		UContextVOManager_RemoveStage_Params params {};
		params.Stage = Stage;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E92C0
	 * 		Name   -> Function TBL.ContextVOManager.AddStageContextVo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Stage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FContextVoEntry>                     ContextVO                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UContextVOManager::AddStageContextVo(class UObject* Stage, TArray<struct FContextVoEntry> ContextVO)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ContextVOManager.AddStageContextVo");
		
		UContextVOManager_AddStageContextVo_Params params {};
		params.Stage = Stage;
		params.ContextVO = ContextVO;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UContextVOManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UContextVOManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ContextVOManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF2D0
	 * 		Name   -> Function TBL.CounterXWorker.OnCounteredAttack
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		TBL_EDefenderBlockedPolicy                         BlockPolicy                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCounterXWorker::OnCounteredAttack(TBL_EDefenderBlockedPolicy BlockPolicy, class ATBLCharacter* AttackingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CounterXWorker.OnCounteredAttack");
		
		UCounterXWorker_OnCounteredAttack_Params params {};
		params.BlockPolicy = BlockPolicy;
		params.AttackingCharacter = AttackingCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCounterXWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCounterXWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CounterXWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF390
	 * 		Name   -> Function TBL.MapModifierProperty.SetNameAndDescription
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        inName                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        inDescription                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UMapModifierProperty::SetNameAndDescription(const class FText& inName, const class FText& inDescription)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MapModifierProperty.SetNameAndDescription");
		
		UMapModifierProperty_SetNameAndDescription_Params params {};
		params.inName = inName;
		params.inDescription = inDescription;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMapModifierProperty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMapModifierProperty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MapModifierProperty");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF690
	 * 		Name   -> Function TBL.MapModifierFloatProperty.SetValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMapModifierFloatProperty::SetValue(float NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MapModifierFloatProperty.SetValue");
		
		UMapModifierFloatProperty_SetValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMapModifierFloatProperty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMapModifierFloatProperty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MapModifierFloatProperty");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF710
	 * 		Name   -> Function TBL.MapModifierIntProperty.SetValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMapModifierIntProperty::SetValue(int NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MapModifierIntProperty.SetValue");
		
		UMapModifierIntProperty_SetValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMapModifierIntProperty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMapModifierIntProperty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MapModifierIntProperty");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF590
	 * 		Name   -> Function TBL.MapModifierBoolProperty.SetValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMapModifierBoolProperty::SetValue(bool NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MapModifierBoolProperty.SetValue");
		
		UMapModifierBoolProperty_SetValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMapModifierBoolProperty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMapModifierBoolProperty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MapModifierBoolProperty");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF610
	 * 		Name   -> Function TBL.MapModifierComboBoxProperty.SetValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMapModifierComboBoxProperty::SetValue(int NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MapModifierComboBoxProperty.SetValue");
		
		UMapModifierComboBoxProperty_SetValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMapModifierComboBoxProperty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMapModifierComboBoxProperty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MapModifierComboBoxProperty");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EED80
	 * 		Name   -> Function TBL.MapOptionsObject.GetMapMofidiersForGameMode
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EGameModeType                                  GamemodeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UMapModifierProperty*>                MapModifiers                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMapOptionsObject::GetMapMofidiersForGameMode(TBL_EGameModeType GamemodeType, TArray<class UMapModifierProperty*>* MapModifiers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MapOptionsObject.GetMapMofidiersForGameMode");
		
		UMapOptionsObject_GetMapMofidiersForGameMode_Params params {};
		params.GamemodeType = GamemodeType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (MapModifiers != nullptr)
			*MapModifiers = params.MapModifiers;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EE780
	 * 		Name   -> Function TBL.MapOptionsObject.GenerateMapURL
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class UMapModifierProperty*>                InMapModifierProperties                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UMapOptionsObject::GenerateMapURL(TArray<class UMapModifierProperty*> InMapModifierProperties)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MapOptionsObject.GenerateMapURL");
		
		UMapOptionsObject_GenerateMapURL_Params params {};
		params.InMapModifierProperties = InMapModifierProperties;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMapOptionsObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMapOptionsObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MapOptionsObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01639310
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.SetPlayerCapturePointProperties
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FPlayerCapturePointComponentProperties      Props                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPlayerCapturePointComponent::SetPlayerCapturePointProperties(const struct FPlayerCapturePointComponentProperties& Props)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.SetPlayerCapturePointProperties");
		
		UPlayerCapturePointComponent_SetPlayerCapturePointProperties_Params params {};
		params.Props = Props;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016392B0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.ResetCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UPlayerCapturePointComponent::ResetCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.ResetCapturePoint");
		
		UPlayerCapturePointComponent_ResetCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01639290
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.RefreshActorsInCaptureZone
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UPlayerCapturePointComponent::RefreshActorsInCaptureZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.RefreshActorsInCaptureZone");
		
		UPlayerCapturePointComponent_RefreshActorsInCaptureZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016391F0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.PlayerSatisfiesCaptureRequirments
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPlayerCapturePointComponent::PlayerSatisfiesCaptureRequirments(class ATBLCharacter* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.PlayerSatisfiesCaptureRequirments");
		
		UPlayerCapturePointComponent_PlayerSatisfiesCaptureRequirments_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016390F0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.OnTrackedCharacterKilled
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UPlayerCapturePointComponent::OnTrackedCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.OnTrackedCharacterKilled");
		
		UPlayerCapturePointComponent_OnTrackedCharacterKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01639060
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.OnTrackedCharacterDestroyed
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerCapturePointComponent::OnTrackedCharacterDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.OnTrackedCharacterDestroyed");
		
		UPlayerCapturePointComponent_OnTrackedCharacterDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638FC0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.OnRep_Properties
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPlayerCapturePointComponent::OnRep_Properties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.OnRep_Properties");
		
		UPlayerCapturePointComponent_OnRep_Properties_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638FA0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.OnRep_PlayersInPlayerCapturePoint
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPlayerCapturePointComponent::OnRep_PlayersInPlayerCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.OnRep_PlayersInPlayerCapturePoint");
		
		UPlayerCapturePointComponent_OnRep_PlayersInPlayerCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638F80
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.OnRep_IsBlocked
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPlayerCapturePointComponent::OnRep_IsBlocked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.OnRep_IsBlocked");
		
		UPlayerCapturePointComponent_OnRep_IsBlocked_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016388F0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.GetPlayersCaptureData
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TArray<struct FPlayerCaptureData> UPlayerCapturePointComponent::GetPlayersCaptureData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.GetPlayersCaptureData");
		
		UPlayerCapturePointComponent_GetPlayersCaptureData_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016387E0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.GetIsBlocked
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UPlayerCapturePointComponent::GetIsBlocked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.GetIsBlocked");
		
		UPlayerCapturePointComponent_GetIsBlocked_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638710
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.EndOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerCapturePointComponent::EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.EndOverlap");
		
		UPlayerCapturePointComponent_EndOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016386F0
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.DeactivatePlayerCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UPlayerCapturePointComponent::DeactivatePlayerCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.DeactivatePlayerCapturePoint");
		
		UPlayerCapturePointComponent_DeactivatePlayerCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638470
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.BeginOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerCapturePointComponent::BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.BeginOverlap");
		
		UPlayerCapturePointComponent_BeginOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638430
	 * 		Name   -> Function TBL.PlayerCapturePointComponent.ActivatePlayerCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UPlayerCapturePointComponent::ActivatePlayerCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerCapturePointComponent.ActivatePlayerCapturePoint");
		
		UPlayerCapturePointComponent_ActivatePlayerCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPlayerCapturePointComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerCapturePointComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PlayerCapturePointComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EE760
	 * 		Name   -> Function TBL.GameConfigObjectBase.ClearCachedMapsData
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UGameConfigObjectBase::ClearCachedMapsData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameConfigObjectBase.ClearCachedMapsData");
		
		UGameConfigObjectBase_ClearCachedMapsData_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EE600
	 * 		Name   -> Function TBL.GameConfigObjectBase.CacheMapData
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FMapOption                                  MapOption                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UGameConfigObjectBase::CacheMapData(const struct FMapOption& MapOption)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameConfigObjectBase.CacheMapData");
		
		UGameConfigObjectBase_CacheMapData_Params params {};
		params.MapOption = MapOption;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EE4B0
	 * 		Name   -> Function TBL.GameConfigObjectBase.CacheAllMapsData
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FMapOption>                          MapOptions                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bClearOldData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameConfigObjectBase::CacheAllMapsData(TArray<struct FMapOption> MapOptions, bool bClearOldData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameConfigObjectBase.CacheAllMapsData");
		
		UGameConfigObjectBase_CacheAllMapsData_Params params {};
		params.MapOptions = MapOptions;
		params.bClearOldData = bClearOldData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameConfigObjectBase.BuildDerivedProperties
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 */
	void UGameConfigObjectBase::BuildDerivedProperties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameConfigObjectBase.BuildDerivedProperties");
		
		UGameConfigObjectBase_BuildDerivedProperties_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGameConfigObjectBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameConfigObjectBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GameConfigObjectBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF060
	 * 		Name   -> Function TBL.CreateGameLibrary.MakeMapOption
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMapOption                                  MapOptions                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	class UMapOptionsObject* UCreateGameLibrary::STATIC_MakeMapOption(class UObject* WorldContextObject, const struct FMapOption& MapOptions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreateGameLibrary.MakeMapOption");
		
		UCreateGameLibrary_MakeMapOption_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.MapOptions = MapOptions;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EEFA0
	 * 		Name   -> Function TBL.CreateGameLibrary.GetTOOptions
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ThereAreNoOptionsAtTheMoment                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCreateGameLibrary::STATIC_GetTOOptions(class UObject* WorldContextObject, int* ThereAreNoOptionsAtTheMoment)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreateGameLibrary.GetTOOptions");
		
		UCreateGameLibrary_GetTOOptions_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ThereAreNoOptionsAtTheMoment != nullptr)
			*ThereAreNoOptionsAtTheMoment = params.ThereAreNoOptionsAtTheMoment;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EEE80
	 * 		Name   -> Function TBL.CreateGameLibrary.GetTDMOptions
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                TicketCountOverride                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                TimeLimitOverride                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCreateGameLibrary::STATIC_GetTDMOptions(class UObject* WorldContextObject, int* TicketCountOverride, int* TimeLimitOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreateGameLibrary.GetTDMOptions");
		
		UCreateGameLibrary_GetTDMOptions_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (TicketCountOverride != nullptr)
			*TicketCountOverride = params.TicketCountOverride;
		if (TimeLimitOverride != nullptr)
			*TimeLimitOverride = params.TimeLimitOverride;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EED50
	 * 		Name   -> Function TBL.CreateGameLibrary.GetGlobalTimeLimitOverride
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	int UCreateGameLibrary::STATIC_GetGlobalTimeLimitOverride()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreateGameLibrary.GetGlobalTimeLimitOverride");
		
		UCreateGameLibrary_GetGlobalTimeLimitOverride_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EECA0
	 * 		Name   -> Function TBL.CreateGameLibrary.GetGenericModifiers
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class UMapModifierProperty*>                Modifiers                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCreateGameLibrary::STATIC_GetGenericModifiers(TArray<class UMapModifierProperty*>* Modifiers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreateGameLibrary.GetGenericModifiers");
		
		UCreateGameLibrary_GetGenericModifiers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Modifiers != nullptr)
			*Modifiers = params.Modifiers;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EEB80
	 * 		Name   -> Function TBL.CreateGameLibrary.GetFFAOptions
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ScoreLimitOverride                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                TimeLimitOverride                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCreateGameLibrary::STATIC_GetFFAOptions(class UObject* WorldContextObject, int* ScoreLimitOverride, int* TimeLimitOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreateGameLibrary.GetFFAOptions");
		
		UCreateGameLibrary_GetFFAOptions_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ScoreLimitOverride != nullptr)
			*ScoreLimitOverride = params.ScoreLimitOverride;
		if (TimeLimitOverride != nullptr)
			*TimeLimitOverride = params.TimeLimitOverride;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EEA90
	 * 		Name   -> Function TBL.CreateGameLibrary.GetDefaultModifiersForGameMode
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EGameModeType                                  GameMode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UMapModifierProperty*>                Modifiers                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCreateGameLibrary::STATIC_GetDefaultModifiersForGameMode(TBL_EGameModeType GameMode, TArray<class UMapModifierProperty*>* Modifiers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreateGameLibrary.GetDefaultModifiersForGameMode");
		
		UCreateGameLibrary_GetDefaultModifiersForGameMode_Params params {};
		params.GameMode = GameMode;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Modifiers != nullptr)
			*Modifiers = params.Modifiers;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCreateGameLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCreateGameLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CreateGameLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EF790
	 * 		Name   -> Function TBL.CreditsScrollBox.UpdateScrolling
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCreditsScrollBox::UpdateScrolling(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreditsScrollBox.UpdateScrolling");
		
		UCreditsScrollBox_UpdateScrolling_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EE8B0
	 * 		Name   -> Function TBL.CreditsScrollBox.GetCredits
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TArray<struct FCreditsSection> UCreditsScrollBox::GetCredits()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CreditsScrollBox.GetCredits");
		
		UCreditsScrollBox_GetCredits_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCreditsScrollBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCreditsScrollBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CreditsScrollBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCrowdControl.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCrowdControl::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CrowdControl");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVirtualGood.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVirtualGood::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VirtualGood");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVirtualGoodItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVirtualGoodItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VirtualGoodItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015EE2F0
	 * 		Name   -> Function TBL.CTBase.Apply
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FCustomizationContext                       InContext                                                  (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       InPawn                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCTBase::Apply(struct FCustomizationContext* InContext, class APawn* InPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CTBase.Apply");
		
		UCTBase_Apply_Params params {};
		params.InPawn = InPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InContext != nullptr)
			*InContext = params.InContext;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTArmourSet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTArmourSet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTArmourSet");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTBaseCharacter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTBaseCharacter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTBaseCharacter");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTBeard.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTBeard::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTBeard");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTEyeColors.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTEyeColors::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTEyeColors");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTFacePaint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTFacePaint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTFacePaint");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTHair.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTHair::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTHair");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTHairColor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTHairColor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTHairColor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTHead.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTHead::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTHead");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTHelmet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTHelmet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTHelmet");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTHeraldry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTHeraldry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTHeraldry");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTLeg.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTLeg::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTLeg");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTNickname.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTNickname::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTNickname");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3220
	 * 		Name   -> Function TBL.CTNovelty.ResolveAssetClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UClass* UCTNovelty::ResolveAssetClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CTNovelty.ResolveAssetClass");
		
		UCTNovelty_ResolveAssetClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTNovelty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTNovelty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTNovelty");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTPersonality.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTPersonality::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTPersonality");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTScar.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTScar::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTScar");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F32B0
	 * 		Name   -> Function TBL.CTShield.ResolveAssetClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UClass* UCTShield::ResolveAssetClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CTShield.ResolveAssetClass");
		
		UCTShield_ResolveAssetClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTShield.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTShield::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTShield");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTSkinTone.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTSkinTone::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTSkinTone");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTTattoo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTTattoo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTTattoo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTTorso.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTTorso::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTTorso");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F32B0
	 * 		Name   -> Function TBL.CTWeapon.ResolveAssetClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UClass* UCTWeapon::ResolveAssetClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CTWeapon.ResolveAssetClass");
		
		UCTWeapon_ResolveAssetClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCTWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCTWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CTWeapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E200
	 * 		Name   -> Function TBL.SpawnQueuer.RequestSpawnFor
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AController*                                 PC                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USpawnQueuer::RequestSpawnFor(class AController* PC)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.RequestSpawnFor");
		
		USpawnQueuer_RequestSpawnFor_Params params {};
		params.PC = PC;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E160
	 * 		Name   -> Function TBL.SpawnQueuer.RemoveFromQueue
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AController*                                 PC                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USpawnQueuer::RemoveFromQueue(class AController* PC)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.RemoveFromQueue");
		
		USpawnQueuer_RemoveFromQueue_Params params {};
		params.PC = PC;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.SpawnQueuer.ReceiveDeactivate
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void USpawnQueuer::ReceiveDeactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.ReceiveDeactivate");
		
		USpawnQueuer_ReceiveDeactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.SpawnQueuer.ReceiveActivate
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void USpawnQueuer::ReceiveActivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.ReceiveActivate");
		
		USpawnQueuer_ReceiveActivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D7F0
	 * 		Name   -> Function TBL.SpawnQueuer.IsActive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool USpawnQueuer::IsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.IsActive");
		
		USpawnQueuer_IsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CF90
	 * 		Name   -> Function TBL.SpawnQueuer.Deactivate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void USpawnQueuer::Deactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.Deactivate");
		
		USpawnQueuer_Deactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CE00
	 * 		Name   -> Function TBL.SpawnQueuer.CanDeactivate
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	bool USpawnQueuer::CanDeactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.CanDeactivate");
		
		USpawnQueuer_CanDeactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CDD0
	 * 		Name   -> Function TBL.SpawnQueuer.CanActivate
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	bool USpawnQueuer::CanActivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.CanActivate");
		
		USpawnQueuer_CanActivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CBF0
	 * 		Name   -> Function TBL.SpawnQueuer.Activate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void USpawnQueuer::Activate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnQueuer.Activate");
		
		USpawnQueuer_Activate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpawnQueuer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnQueuer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpawnQueuer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCumulativeSpawnQueuer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCumulativeSpawnQueuer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CumulativeSpawnQueuer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ACustomizationAttachment.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ACustomizationAttachment::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationAttachment");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3200
	 * 		Name   -> Function TBL.CustomizationComponent.OnRep_CustomizationPreset
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UCustomizationComponent::OnRep_CustomizationPreset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationComponent.OnRep_CustomizationPreset");
		
		UCustomizationComponent_OnRep_CustomizationPreset_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2B70
	 * 		Name   -> Function TBL.CustomizationComponent.GetPendingCustomization
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<struct FPrimaryAssetId> UCustomizationComponent::GetPendingCustomization()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationComponent.GetPendingCustomization");
		
		UCustomizationComponent_GetPendingCustomization_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2180
	 * 		Name   -> Function TBL.CustomizationComponent.GetCurrentCustomization
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<struct FPrimaryAssetId> UCustomizationComponent::GetCurrentCustomization()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationComponent.GetCurrentCustomization");
		
		UCustomizationComponent_GetCurrentCustomization_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1CA0
	 * 		Name   -> Function TBL.CustomizationComponent.FindPreset
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FCustomizationPreset                        OutPreset                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationComponent::FindPreset(struct FCustomizationPreset* OutPreset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationComponent.FindPreset");
		
		UCustomizationComponent_FindPreset_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPreset != nullptr)
			*OutPreset = params.OutPreset;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CustomizationConfig.GetParametersAndMorphTargetsToApply
	 * 		Flags  -> (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                SelectedSwatch                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                ScalarNames                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      ScalarValues                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                VectorNames                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FLinearColor>                        VectorValues                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                TextureNames                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UTexture*>                            TextureValues                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                MorphTargetNames                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      MorphTargetValues                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationConfig::GetParametersAndMorphTargetsToApply(const class FName& Category, int SelectedSwatch, TArray<class FName>* ScalarNames, TArray<float>* ScalarValues, TArray<class FName>* VectorNames, TArray<struct FLinearColor>* VectorValues, TArray<class FName>* TextureNames, TArray<class UTexture*>* TextureValues, TArray<class FName>* MorphTargetNames, TArray<float>* MorphTargetValues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationConfig.GetParametersAndMorphTargetsToApply");
		
		UCustomizationConfig_GetParametersAndMorphTargetsToApply_Params params {};
		params.Category = Category;
		params.SelectedSwatch = SelectedSwatch;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ScalarNames != nullptr)
			*ScalarNames = params.ScalarNames;
		if (ScalarValues != nullptr)
			*ScalarValues = params.ScalarValues;
		if (VectorNames != nullptr)
			*VectorNames = params.VectorNames;
		if (VectorValues != nullptr)
			*VectorValues = params.VectorValues;
		if (TextureNames != nullptr)
			*TextureNames = params.TextureNames;
		if (TextureValues != nullptr)
			*TextureValues = params.TextureValues;
		if (MorphTargetNames != nullptr)
			*MorphTargetNames = params.MorphTargetNames;
		if (MorphTargetValues != nullptr)
			*MorphTargetValues = params.MorphTargetValues;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CustomizationConfig.GetNumSwatchesInCategory
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UCustomizationConfig::GetNumSwatchesInCategory(const class FName& Category)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationConfig.GetNumSwatchesInCategory");
		
		UCustomizationConfig_GetNumSwatchesInCategory_Params params {};
		params.Category = Category;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CustomizationConfig.GetCategorySwatchNames
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              SwatchNames                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationConfig::GetCategorySwatchNames(const class FName& Category, TArray<class FString>* SwatchNames)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationConfig.GetCategorySwatchNames");
		
		UCustomizationConfig_GetCategorySwatchNames_Params params {};
		params.Category = Category;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SwatchNames != nullptr)
			*SwatchNames = params.SwatchNames;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CustomizationConfig.GetCategorySwatchAttachments
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCustomizationComponent*                     CustomizationComponent                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              SwatchAttachments                                          (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationConfig::GetCategorySwatchAttachments(const class FName& Category, class UCustomizationComponent* CustomizationComponent, TArray<class UClass*>* SwatchAttachments)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationConfig.GetCategorySwatchAttachments");
		
		UCustomizationConfig_GetCategorySwatchAttachments_Params params {};
		params.Category = Category;
		params.CustomizationComponent = CustomizationComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SwatchAttachments != nullptr)
			*SwatchAttachments = params.SwatchAttachments;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CustomizationConfig.GetCategories
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		TArray<class FName>                                Categories                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationConfig::GetCategories(TArray<class FName>* Categories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationConfig.GetCategories");
		
		UCustomizationConfig_GetCategories_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Categories != nullptr)
			*Categories = params.Categories;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.CustomizationConfig.ApplySwatchToMID
	 * 		Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        SwatchCategoryName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                SelectedSwatch                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMaterialInstanceDynamic*                    Mid                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMeshComponent*                              MeshComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationConfig::ApplySwatchToMID(const class FName& SwatchCategoryName, int SelectedSwatch, class UMaterialInstanceDynamic* Mid, class UMeshComponent* MeshComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationConfig.ApplySwatchToMID");
		
		UCustomizationConfig_ApplySwatchToMID_Params params {};
		params.SwatchCategoryName = SwatchCategoryName;
		params.SelectedSwatch = SelectedSwatch;
		params.Mid = Mid;
		params.MeshComponent = MeshComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationConfig.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationConfig::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationConfig");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationAssetContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationAssetContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationAssetContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F4090
	 * 		Name   -> Function TBL.CustomizationLibrary.SetVectorParameterOnMaterials
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ParameterName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ParameterValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SetVectorParameterOnMaterials(class ATBLCharacter* Char, const class FName& ParameterName, const struct FVector& ParameterValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetVectorParameterOnMaterials");
		
		UCustomizationLibrary_SetVectorParameterOnMaterials_Params params {};
		params.Char = Char;
		params.ParameterName = ParameterName;
		params.ParameterValue = ParameterValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3F10
	 * 		Name   -> Function TBL.CustomizationLibrary.SetTextureParameterValueOnMaterials
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InMeshName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ParameterName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTexture*                                    ParameterValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SlotName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_SetTextureParameterValueOnMaterials(class ATBLCharacter* InCharacter, const class FName& InMeshName, const class FName& ParameterName, class UTexture* ParameterValue, const class FName& SlotName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetTextureParameterValueOnMaterials");
		
		UCustomizationLibrary_SetTextureParameterValueOnMaterials_Params params {};
		params.InCharacter = InCharacter;
		params.InMeshName = InMeshName;
		params.ParameterName = ParameterName;
		params.ParameterValue = ParameterValue;
		params.SlotName = SlotName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3DE0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetStaticMeshAndMaterial
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UStaticMeshComponent*                        SKM                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UStaticMesh*                                 SrcMesh                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMaterialInterface*                          Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SlotName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_SetStaticMeshAndMaterial(class UStaticMeshComponent* SKM, class UStaticMesh* SrcMesh, class UMaterialInterface* Material, const class FName& SlotName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetStaticMeshAndMaterial");
		
		UCustomizationLibrary_SetStaticMeshAndMaterial_Params params {};
		params.SKM = SKM;
		params.SrcMesh = SrcMesh;
		params.Material = Material;
		params.SlotName = SlotName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3CA0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetScalarParameterValueOnMaterials
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InMeshName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InParameterName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InParameterValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_SetScalarParameterValueOnMaterials(class ATBLCharacter* InCharacter, const class FName& InMeshName, const class FName& InParameterName, float InParameterValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetScalarParameterValueOnMaterials");
		
		UCustomizationLibrary_SetScalarParameterValueOnMaterials_Params params {};
		params.InCharacter = InCharacter;
		params.InMeshName = InMeshName;
		params.InParameterName = InParameterName;
		params.InParameterValue = InParameterValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3BA0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetScalarParameterOnMaterials
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ParameterName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ParameterValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SetScalarParameterOnMaterials(class ATBLCharacter* Char, const class FName& ParameterName, float ParameterValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetScalarParameterOnMaterials");
		
		UCustomizationLibrary_SetScalarParameterOnMaterials_Params params {};
		params.Char = Char;
		params.ParameterName = ParameterName;
		params.ParameterValue = ParameterValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3A60
	 * 		Name   -> Function TBL.CustomizationLibrary.SetMorphTarget
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InMeshName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        MorphTargetName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_SetMorphTarget(class ATBLCharacter* InCharacter, const class FName& InMeshName, const class FName& MorphTargetName, float InValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetMorphTarget");
		
		UCustomizationLibrary_SetMorphTarget_Params params {};
		params.InCharacter = InCharacter;
		params.InMeshName = InMeshName;
		params.MorphTargetName = MorphTargetName;
		params.InValue = InValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F38E0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetMeshAndMaterial
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InMeshName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USkeletalMesh*                               SrcMesh                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMaterialInterface*                          Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SlotName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_SetMeshAndMaterial(class ATBLCharacter* InCharacter, const class FName& InMeshName, class USkeletalMesh* SrcMesh, class UMaterialInterface* Material, const class FName& SlotName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetMeshAndMaterial");
		
		UCustomizationLibrary_SetMeshAndMaterial_Params params {};
		params.InCharacter = InCharacter;
		params.InMeshName = InMeshName;
		params.SrcMesh = SrcMesh;
		params.Material = Material;
		params.SlotName = SlotName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3820
	 * 		Name   -> Function TBL.CustomizationLibrary.SetHelmetHidden
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Hide                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SetHelmetHidden(class ATBLCharacter* Char, bool Hide)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetHelmetHidden");
		
		UCustomizationLibrary_SetHelmetHidden_Params params {};
		params.Char = Char;
		params.Hide = Hide;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F3760
	 * 		Name   -> Function TBL.CustomizationLibrary.SetHairHidden
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Hide                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SetHairHidden(class ATBLCharacter* Char, bool Hide)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetHairHidden");
		
		UCustomizationLibrary_SetHairHidden_Params params {};
		params.Char = Char;
		params.Hide = Hide;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F36A0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetHairBeardEarHiddenFromContext
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseItemsVisibilityForContext                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SetHairBeardEarHiddenFromContext(class ATBLCharacter* Char, bool bUseItemsVisibilityForContext)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetHairBeardEarHiddenFromContext");
		
		UCustomizationLibrary_SetHairBeardEarHiddenFromContext_Params params {};
		params.Char = Char;
		params.bUseItemsVisibilityForContext = bUseItemsVisibilityForContext;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F35E0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetEarHidden
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Hide                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SetEarHidden(class ATBLCharacter* Char, bool Hide)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetEarHidden");
		
		UCustomizationLibrary_SetEarHidden_Params params {};
		params.Char = Char;
		params.Hide = Hide;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F34A0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetColorParameterValueOnMaterials
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InMeshName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InParameterName                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLinearColor                                InParameterValue                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_SetColorParameterValueOnMaterials(class ATBLCharacter* InCharacter, const class FName& InMeshName, const class FName& InParameterName, const struct FLinearColor& InParameterValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetColorParameterValueOnMaterials");
		
		UCustomizationLibrary_SetColorParameterValueOnMaterials_Params params {};
		params.InCharacter = InCharacter;
		params.InMeshName = InMeshName;
		params.InParameterName = InParameterName;
		params.InParameterValue = InParameterValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F33E0
	 * 		Name   -> Function TBL.CustomizationLibrary.SetBeardHidden
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Hide                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SetBeardHidden(class ATBLCharacter* Char, bool Hide)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SetBeardHidden");
		
		UCustomizationLibrary_SetBeardHidden_Params params {};
		params.Char = Char;
		params.Hide = Hide;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F32F0
	 * 		Name   -> Function TBL.CustomizationLibrary.SaveAssetsForClassFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                ClassType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_SaveAssetsForClassFaction(class ATBLPlayerState* PlayerState, TBL_EAudioClassType ClassType, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.SaveAssetsForClassFaction");
		
		UCustomizationLibrary_SaveAssetsForClassFaction_Params params {};
		params.PlayerState = PlayerState;
		params.ClassType = ClassType;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F30F0
	 * 		Name   -> Function TBL.CustomizationLibrary.LoadCustomizationPreset
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationPreset                        InPreset                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_LoadCustomizationPreset(class APawn* Pawn, struct FCustomizationPreset* InPreset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.LoadCustomizationPreset");
		
		UCustomizationLibrary_LoadCustomizationPreset_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InPreset != nullptr)
			*InPreset = params.InPreset;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2F30
	 * 		Name   -> Function TBL.CustomizationLibrary.InitializeContext
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FPrimaryAssetId>                     AssetIds                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationContext                       Context                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_InitializeContext(TArray<struct FPrimaryAssetId> AssetIds, struct FCustomizationContext* Context)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.InitializeContext");
		
		UCustomizationLibrary_InitializeContext_Params params {};
		params.AssetIds = AssetIds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Context != nullptr)
			*Context = params.Context;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2EA0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetWeaponTagFromPrimaryAssetId
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAsset                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EWeaponTag UCustomizationLibrary::STATIC_GetWeaponTagFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAsset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetWeaponTagFromPrimaryAssetId");
		
		UCustomizationLibrary_GetWeaponTagFromPrimaryAssetId_Params params {};
		params.PrimaryAsset = PrimaryAsset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2DE0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetTorsoMesh
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WantFirstPerson                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UCustomizationLibrary::STATIC_GetTorsoMesh(class ATBLCharacter* Char, bool WantFirstPerson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetTorsoMesh");
		
		UCustomizationLibrary_GetTorsoMesh_Params params {};
		params.Char = Char;
		params.WantFirstPerson = WantFirstPerson;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2D60
	 * 		Name   -> Function TBL.CustomizationLibrary.GetTattooCustomizationEnabled
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Enabled                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_GetTattooCustomizationEnabled(bool* Enabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetTattooCustomizationEnabled");
		
		UCustomizationLibrary_GetTattooCustomizationEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Enabled != nullptr)
			*Enabled = params.Enabled;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2C80
	 * 		Name   -> Function TBL.CustomizationLibrary.GetRandomAssets
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetId>                     OutAssetIds                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_GetRandomAssets(class ATBLCharacter* Char, TArray<struct FPrimaryAssetId>* OutAssetIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetRandomAssets");
		
		UCustomizationLibrary_GetRandomAssets_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAssetIds != nullptr)
			*OutAssetIds = params.OutAssetIds;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2BF0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetPrimaryAssetClass
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAsset                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* UCustomizationLibrary::STATIC_GetPrimaryAssetClass(const struct FPrimaryAssetId& PrimaryAsset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetPrimaryAssetClass");
		
		UCustomizationLibrary_GetPrimaryAssetClass_Params params {};
		params.PrimaryAsset = PrimaryAsset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2960
	 * 		Name   -> Function TBL.CustomizationLibrary.GetOnlineStoreOfferTitle
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FOnlineStoreOffer                           OnlineStoreOffer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class FText UCustomizationLibrary::STATIC_GetOnlineStoreOfferTitle(const struct FOnlineStoreOffer& OnlineStoreOffer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetOnlineStoreOfferTitle");
		
		UCustomizationLibrary_GetOnlineStoreOfferTitle_Params params {};
		params.OnlineStoreOffer = OnlineStoreOffer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F28A0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetLegsMesh
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WantFirstPerson                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UCustomizationLibrary::STATIC_GetLegsMesh(class ATBLCharacter* Char, bool WantFirstPerson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetLegsMesh");
		
		UCustomizationLibrary_GetLegsMesh_Params params {};
		params.Char = Char;
		params.WantFirstPerson = WantFirstPerson;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F27B0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetItemNameFromAssetId
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             PrimaryAsset                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UCustomizationLibrary::STATIC_GetItemNameFromAssetId(const struct FPrimaryAssetId& PrimaryAsset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetItemNameFromAssetId");
		
		UCustomizationLibrary_GetItemNameFromAssetId_Params params {};
		params.PrimaryAsset = PrimaryAsset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2670
	 * 		Name   -> Function TBL.CustomizationLibrary.GetInventorySKMesh
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSoftObjectPath                             WeaponAsset                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      ItemOut                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UCustomizationLibrary::STATIC_GetInventorySKMesh(class ATBLCharacter* Char, const struct FSoftObjectPath& WeaponAsset, class AActor** ItemOut)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetInventorySKMesh");
		
		UCustomizationLibrary_GetInventorySKMesh_Params params {};
		params.Char = Char;
		params.WeaponAsset = WeaponAsset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ItemOut != nullptr)
			*ItemOut = params.ItemOut;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2530
	 * 		Name   -> Function TBL.CustomizationLibrary.GetInventoryMesh
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSoftObjectPath                             WeaponAsset                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      ItemOut                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStaticMeshComponent* UCustomizationLibrary::STATIC_GetInventoryMesh(class ATBLCharacter* Char, const struct FSoftObjectPath& WeaponAsset, class AActor** ItemOut)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetInventoryMesh");
		
		UCustomizationLibrary_GetInventoryMesh_Params params {};
		params.Char = Char;
		params.WeaponAsset = WeaponAsset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ItemOut != nullptr)
			*ItemOut = params.ItemOut;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2470
	 * 		Name   -> Function TBL.CustomizationLibrary.GetHelmetMesh
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WantFirstPerson                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UCustomizationLibrary::STATIC_GetHelmetMesh(class ATBLCharacter* Char, bool WantFirstPerson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetHelmetMesh");
		
		UCustomizationLibrary_GetHelmetMesh_Params params {};
		params.Char = Char;
		params.WantFirstPerson = WantFirstPerson;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F23B0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetHeadMesh
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WantFirstPerson                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UCustomizationLibrary::STATIC_GetHeadMesh(class ATBLCharacter* Char, bool WantFirstPerson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetHeadMesh");
		
		UCustomizationLibrary_GetHeadMesh_Params params {};
		params.Char = Char;
		params.WantFirstPerson = WantFirstPerson;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F22F0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetHairMesh
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WantFirstPerson                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UCustomizationLibrary::STATIC_GetHairMesh(class ATBLCharacter* Char, bool WantFirstPerson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetHairMesh");
		
		UCustomizationLibrary_GetHairMesh_Params params {};
		params.Char = Char;
		params.WantFirstPerson = WantFirstPerson;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F2200
	 * 		Name   -> Function TBL.CustomizationLibrary.GetCustomizationAsset
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      CustomizationType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      WeaponClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCTBase* UCustomizationLibrary::STATIC_GetCustomizationAsset(class ATBLCharacter* Char, class UClass* CustomizationType, class UClass* WeaponClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetCustomizationAsset");
		
		UCustomizationLibrary_GetCustomizationAsset_Params params {};
		params.Char = Char;
		params.CustomizationType = CustomizationType;
		params.WeaponClass = WeaponClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F20C0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetBeardMesh
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WantFirstPerson                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UCustomizationLibrary::STATIC_GetBeardMesh(class ATBLCharacter* Char, bool WantFirstPerson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetBeardMesh");
		
		UCustomizationLibrary_GetBeardMesh_Params params {};
		params.Char = Char;
		params.WantFirstPerson = WantFirstPerson;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1FE0
	 * 		Name   -> Function TBL.CustomizationLibrary.GetAllWeaponMesh
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UMeshComponent*>                      OutComponents                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_GetAllWeaponMesh(class ATBLCharacter* Char, TArray<class UMeshComponent*>* OutComponents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetAllWeaponMesh");
		
		UCustomizationLibrary_GetAllWeaponMesh_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutComponents != nullptr)
			*OutComponents = params.OutComponents;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1F00
	 * 		Name   -> Function TBL.CustomizationLibrary.GetAllCharMesh
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UMeshComponent*>                      OutComponents                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_GetAllCharMesh(class ATBLCharacter* Char, TArray<class UMeshComponent*>* OutComponents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.GetAllCharMesh");
		
		UCustomizationLibrary_GetAllCharMesh_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutComponents != nullptr)
			*OutComponents = params.OutComponents;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1D80
	 * 		Name   -> Function TBL.CustomizationLibrary.ForceAllMipLevelsOnMaterials
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InMeshName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ParameterName                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SlotName                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Seconds                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UCustomizationLibrary::STATIC_ForceAllMipLevelsOnMaterials(class ATBLCharacter* InCharacter, const class FName& InMeshName, const class FName& ParameterName, const class FName& SlotName, float Seconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.ForceAllMipLevelsOnMaterials");
		
		UCustomizationLibrary_ForceAllMipLevelsOnMaterials_Params params {};
		params.InCharacter = InCharacter;
		params.InMeshName = InMeshName;
		params.ParameterName = ParameterName;
		params.SlotName = SlotName;
		params.Seconds = Seconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1A70
	 * 		Name   -> Function TBL.CustomizationLibrary.EquipAssetsForClassFaction
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                ClassType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetId>                     InAssetIds                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              CTClassesToIgnore                                          (ConstParm, Parm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_EquipAssetsForClassFaction(class ATBLPlayerState* PlayerState, class ATBLCharacter* Char, TBL_EAudioClassType ClassType, TBL_EFaction Faction, TArray<struct FPrimaryAssetId> InAssetIds, TArray<class UClass*> CTClassesToIgnore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.EquipAssetsForClassFaction");
		
		UCustomizationLibrary_EquipAssetsForClassFaction_Params params {};
		params.PlayerState = PlayerState;
		params.Char = Char;
		params.ClassType = ClassType;
		params.Faction = Faction;
		params.InAssetIds = InAssetIds;
		params.CTClassesToIgnore = CTClassesToIgnore;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F19A0
	 * 		Name   -> Function TBL.CustomizationLibrary.CustomizeHead
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      HeadActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FReplicated_FCustomizationPreset            CustomizationPreset                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_CustomizeHead(class AActor* HeadActor, const struct FReplicated_FCustomizationPreset& CustomizationPreset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.CustomizeHead");
		
		UCustomizationLibrary_CustomizeHead_Params params {};
		params.HeadActor = HeadActor;
		params.CustomizationPreset = CustomizationPreset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F18F0
	 * 		Name   -> Function TBL.CustomizationLibrary.ApplyRandomAsset
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPrimaryAssetType                           PrimaryAssetType                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_ApplyRandomAsset(class ATBLCharacter* Char, const struct FPrimaryAssetType& PrimaryAssetType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.ApplyRandomAsset");
		
		UCustomizationLibrary_ApplyRandomAsset_Params params {};
		params.Char = Char;
		params.PrimaryAssetType = PrimaryAssetType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1880
	 * 		Name   -> Function TBL.CustomizationLibrary.ApplyCutomizationToCharacter
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_ApplyCutomizationToCharacter(class ATBLCharacter* InCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.ApplyCutomizationToCharacter");
		
		UCustomizationLibrary_ApplyCutomizationToCharacter_Params params {};
		params.InCharacter = InCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1700
	 * 		Name   -> Function TBL.CustomizationLibrary.ApplyCustomizationToItem
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              NewItem                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             PlaterState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_ApplyCustomizationToItem(class ATBLCharacter* Character, class AInventoryItem* NewItem, class ATBLPlayerState* PlaterState, TBL_EFaction Faction, TBL_EAudioClassType Class)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.ApplyCustomizationToItem");
		
		UCustomizationLibrary_ApplyCustomizationToItem_Params params {};
		params.Character = Character;
		params.NewItem = NewItem;
		params.PlaterState = PlaterState;
		params.Faction = Faction;
		params.Class = Class;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F1620
	 * 		Name   -> Function TBL.CustomizationLibrary.ApplyAssets
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetId>                     InAssetIds                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationLibrary::STATIC_ApplyAssets(class ATBLCharacter* Char, TArray<struct FPrimaryAssetId>* InAssetIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationLibrary.ApplyAssets");
		
		UCustomizationLibrary_ApplyAssets_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InAssetIds != nullptr)
			*InAssetIds = params.InAssetIds;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationLoadingJob.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationLoadingJob::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationLoadingJob");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCharacterCustomizationLoadingJob.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCustomizationLoadingJob::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CharacterCustomizationLoadingJob");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationLoadingManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationLoadingManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationLoadingManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F9010
	 * 		Name   -> Function TBL.CustomizationRulesLibrary.SortCustomizationEntries
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FCustomizationEntry>                 RefCustomizationEntries                                    (Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSortByLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSortByAlignment                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSortByRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationRulesLibrary::STATIC_SortCustomizationEntries(TArray<struct FCustomizationEntry>* RefCustomizationEntries, bool bSortByLevel, bool bSortByAlignment, bool bSortByRarity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationRulesLibrary.SortCustomizationEntries");
		
		UCustomizationRulesLibrary_SortCustomizationEntries_Params params {};
		params.bSortByLevel = bSortByLevel;
		params.bSortByAlignment = bSortByAlignment;
		params.bSortByRarity = bSortByRarity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (RefCustomizationEntries != nullptr)
			*RefCustomizationEntries = params.RefCustomizationEntries;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8D30
	 * 		Name   -> Function TBL.CustomizationRulesLibrary.OnlyCustomizationEntriesCompatibleWithOwnerPreset
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomizationEntry>                 CustomizationEntries                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                ClassType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FCustomizationEntry> UCustomizationRulesLibrary::STATIC_OnlyCustomizationEntriesCompatibleWithOwnerPreset(class ATBLPlayerController* PlayerController, TArray<struct FCustomizationEntry> CustomizationEntries, TBL_EAudioClassType ClassType, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationRulesLibrary.OnlyCustomizationEntriesCompatibleWithOwnerPreset");
		
		UCustomizationRulesLibrary_OnlyCustomizationEntriesCompatibleWithOwnerPreset_Params params {};
		params.PlayerController = PlayerController;
		params.CustomizationEntries = CustomizationEntries;
		params.ClassType = ClassType;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8B70
	 * 		Name   -> Function TBL.CustomizationRulesLibrary.OnlyCustomizationAssetsCompatibleWithOwnerPreset
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetId>                     CustomizationAssets                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                ClassType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FPrimaryAssetId> UCustomizationRulesLibrary::STATIC_OnlyCustomizationAssetsCompatibleWithOwnerPreset(class ATBLPlayerController* PlayerController, TArray<struct FPrimaryAssetId> CustomizationAssets, TBL_EAudioClassType ClassType, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationRulesLibrary.OnlyCustomizationAssetsCompatibleWithOwnerPreset");
		
		UCustomizationRulesLibrary_OnlyCustomizationAssetsCompatibleWithOwnerPreset_Params params {};
		params.PlayerController = PlayerController;
		params.CustomizationAssets = CustomizationAssets;
		params.ClassType = ClassType;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8820
	 * 		Name   -> Function TBL.CustomizationRulesLibrary.GroupCustomizationEntries
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomizationEntry>                 CustomizationEntries                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCustomizationEntriesGroup>          CustomizationGroups                                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECustomizationGroupSearchResult                SearchResult                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UCustomizationRulesLibrary::STATIC_GroupCustomizationEntries(class ATBLPlayerController* PlayerController, TArray<struct FCustomizationEntry> CustomizationEntries, TArray<struct FCustomizationEntriesGroup>* CustomizationGroups, TBL_ECustomizationGroupSearchResult* SearchResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationRulesLibrary.GroupCustomizationEntries");
		
		UCustomizationRulesLibrary_GroupCustomizationEntries_Params params {};
		params.PlayerController = PlayerController;
		params.CustomizationEntries = CustomizationEntries;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (CustomizationGroups != nullptr)
			*CustomizationGroups = params.CustomizationGroups;
		if (SearchResult != nullptr)
			*SearchResult = params.SearchResult;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8260
	 * 		Name   -> Function TBL.CustomizationRulesLibrary.FindReplacementAsset
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FPrimaryAssetId                             AssetToReplace                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioClassType                                ClassType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationConstraintsQuery              ConstraintsQuery                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationCompatibilityQuery            CompatibilityQuery                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationConstraintsQuery              OptionalConstraintsQuery                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationCompatibilityQuery            OptionalCompatibilityQuery                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int                                                Alignment                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPrimaryAssetId>                     DefaultAssets                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPrimaryAssetId UCustomizationRulesLibrary::STATIC_FindReplacementAsset(const struct FPrimaryAssetId& AssetToReplace, TBL_EAudioClassType ClassType, TBL_EFaction Faction, const struct FCustomizationConstraintsQuery& ConstraintsQuery, const struct FCustomizationCompatibilityQuery& CompatibilityQuery, const struct FCustomizationConstraintsQuery& OptionalConstraintsQuery, const struct FCustomizationCompatibilityQuery& OptionalCompatibilityQuery, int Alignment, TArray<struct FPrimaryAssetId> DefaultAssets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationRulesLibrary.FindReplacementAsset");
		
		UCustomizationRulesLibrary_FindReplacementAsset_Params params {};
		params.AssetToReplace = AssetToReplace;
		params.ClassType = ClassType;
		params.Faction = Faction;
		params.ConstraintsQuery = ConstraintsQuery;
		params.CompatibilityQuery = CompatibilityQuery;
		params.OptionalConstraintsQuery = OptionalConstraintsQuery;
		params.OptionalCompatibilityQuery = OptionalCompatibilityQuery;
		params.Alignment = Alignment;
		params.DefaultAssets = DefaultAssets;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F80A0
	 * 		Name   -> Function TBL.CustomizationRulesLibrary.FilterCustomizationEntries
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FCustomizationEntry>                 CustomizationEntries                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationConstraintsQuery              ConstraintsQuery                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	TArray<struct FCustomizationEntry> UCustomizationRulesLibrary::STATIC_FilterCustomizationEntries(TArray<struct FCustomizationEntry> CustomizationEntries, const struct FCustomizationConstraintsQuery& ConstraintsQuery)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationRulesLibrary.FilterCustomizationEntries");
		
		UCustomizationRulesLibrary_FilterCustomizationEntries_Params params {};
		params.CustomizationEntries = CustomizationEntries;
		params.ConstraintsQuery = ConstraintsQuery;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F7F50
	 * 		Name   -> Function TBL.CustomizationRulesLibrary.FilterCustomizationAssets
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FPrimaryAssetId>                     CustomizationAssets                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCustomizationConstraintsQuery              ConstraintsQuery                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	TArray<struct FPrimaryAssetId> UCustomizationRulesLibrary::STATIC_FilterCustomizationAssets(TArray<struct FPrimaryAssetId> CustomizationAssets, const struct FCustomizationConstraintsQuery& ConstraintsQuery)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.CustomizationRulesLibrary.FilterCustomizationAssets");
		
		UCustomizationRulesLibrary_FilterCustomizationAssets_Params params {};
		params.CustomizationAssets = CustomizationAssets;
		params.ConstraintsQuery = ConstraintsQuery;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationRulesLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationRulesLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationRulesLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction APodiumLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APodiumLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PodiumLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PossessableInterface.EventEndPossess
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPossessableInterface::EventEndPossess(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PossessableInterface.EventEndPossess");
		
		UPossessableInterface_EventEndPossess_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PossessableInterface.EventBeginPossess
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPossessableInterface::EventBeginPossess(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PossessableInterface.EventBeginPossess");
		
		UPossessableInterface_EventBeginPossess_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPossessableInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPossessableInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PossessableInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163F180
	 * 		Name   -> Function TBL.ProgressBarCostsOverlay.SetOverlayPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InOverlayPercent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UProgressBarCostsOverlay::SetOverlayPercent(float InOverlayPercent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProgressBarCostsOverlay.SetOverlayPercent");
		
		UProgressBarCostsOverlay_SetOverlayPercent_Params params {};
		params.InOverlayPercent = InOverlayPercent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163F100
	 * 		Name   -> Function TBL.ProgressBarCostsOverlay.SetOverlayFillColorAndOpacity
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InColor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UProgressBarCostsOverlay::SetOverlayFillColorAndOpacity(const struct FLinearColor& InColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProgressBarCostsOverlay.SetOverlayFillColorAndOpacity");
		
		UProgressBarCostsOverlay_SetOverlayFillColorAndOpacity_Params params {};
		params.InColor = InColor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163F080
	 * 		Name   -> Function TBL.ProgressBarCostsOverlay.SetDamageFillColorAndOpacity
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InColor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UProgressBarCostsOverlay::SetDamageFillColorAndOpacity(const struct FLinearColor& InColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProgressBarCostsOverlay.SetDamageFillColorAndOpacity");
		
		UProgressBarCostsOverlay_SetDamageFillColorAndOpacity_Params params {};
		params.InColor = InColor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D120
	 * 		Name   -> Function TBL.ProgressBarCostsOverlay.GetFillDynamicMaterial
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UMaterialInstanceDynamic* UProgressBarCostsOverlay::GetFillDynamicMaterial()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProgressBarCostsOverlay.GetFillDynamicMaterial");
		
		UProgressBarCostsOverlay_GetFillDynamicMaterial_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UProgressBarCostsOverlay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProgressBarCostsOverlay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ProgressBarCostsOverlay");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UProgressionSpec.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProgressionSpec::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ProgressionSpec");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163DFA0
	 * 		Name   -> Function TBL.ProjectileCollision.OnHit
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         HitComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileCollision::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileCollision.OnHit");
		
		UProjectileCollision_OnHit_Params params {};
		params.HitComponent = HitComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D9F0
	 * 		Name   -> Function TBL.ProjectileCollision.OnBeginOverlap
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OverlapInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileCollision::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileCollision.OnBeginOverlap");
		
		UProjectileCollision_OnBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.OverlapInfo = OverlapInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D6D0
	 * 		Name   -> Function TBL.ProjectileCollision.IgnoreCharactersBehind
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UProjectileCollision::IgnoreCharactersBehind(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileCollision.IgnoreCharactersBehind");
		
		UProjectileCollision_IgnoreCharactersBehind_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D2D0
	 * 		Name   -> Function TBL.ProjectileCollision.HandleDelayedHits
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UProjectileCollision::HandleDelayedHits()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileCollision.HandleDelayedHits");
		
		UProjectileCollision_HandleDelayedHits_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UProjectileCollision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProjectileCollision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ProjectileCollision");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.ProjectileOverlapEventInterface.OnProjectileOverlap
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UProjectileOverlapEventInterface::OnProjectileOverlap(class AInventoryItem* Item, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ProjectileOverlapEventInterface.OnProjectileOverlap");
		
		UProjectileOverlapEventInterface_OnProjectileOverlap_Params params {};
		params.Item = Item;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UProjectileOverlapEventInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UProjectileOverlapEventInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ProjectileOverlapEventInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163F3D0
	 * 		Name   -> Function TBL.PropertyDebugger.ToggleShowDebugOther
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::ToggleShowDebugOther()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ToggleShowDebugOther");
		
		UPropertyDebugger_ToggleShowDebugOther_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163F3B0
	 * 		Name   -> Function TBL.PropertyDebugger.ToggleReplication
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::ToggleReplication()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ToggleReplication");
		
		UPropertyDebugger_ToggleReplication_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EFC0
	 * 		Name   -> Function TBL.PropertyDebugger.ServerSetOtherCharacter
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class ATBLCharacter*                               Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ServerSetOtherCharacter(class ATBLCharacter* Other)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ServerSetOtherCharacter");
		
		UPropertyDebugger_ServerSetOtherCharacter_Params params {};
		params.Other = Other;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EF00
	 * 		Name   -> Function TBL.PropertyDebugger.ServerSetOtherActor
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ServerSetOtherActor(class AActor* Other)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ServerSetOtherActor");
		
		UPropertyDebugger_ServerSetOtherActor_Params params {};
		params.Other = Other;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EE00
	 * 		Name   -> Function TBL.PropertyDebugger.ServerGetSelectedClass
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FDebugProperty                              Property                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ServerGetSelectedClass(const struct FDebugProperty& Property)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ServerGetSelectedClass");
		
		UPropertyDebugger_ServerGetSelectedClass_Params params {};
		params.Property = Property;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163ED40
	 * 		Name   -> Function TBL.PropertyDebugger.ServerGetBaseClass
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        BaseObj                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ServerGetBaseClass(const class FName& BaseObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ServerGetBaseClass");
		
		UPropertyDebugger_ServerGetBaseClass_Params params {};
		params.BaseObj = BaseObj;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EC80
	 * 		Name   -> Function TBL.PropertyDebugger.ServerEnableReplication
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bReplicate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ServerEnableReplication(bool bReplicate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ServerEnableReplication");
		
		UPropertyDebugger_ServerEnableReplication_Params params {};
		params.bReplicate = bReplicate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EBC0
	 * 		Name   -> Function TBL.PropertyDebugger.ServerDeleteDebugProperty
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bFromEnd                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ServerDeleteDebugProperty(bool bFromEnd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ServerDeleteDebugProperty");
		
		UPropertyDebugger_ServerDeleteDebugProperty_Params params {};
		params.bFromEnd = bFromEnd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EAC0
	 * 		Name   -> Function TBL.PropertyDebugger.ServerAddDebugProperty
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FDebugProperty                              Property                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ServerAddDebugProperty(const struct FDebugProperty& Property)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ServerAddDebugProperty");
		
		UPropertyDebugger_ServerAddDebugProperty_Params params {};
		params.Property = Property;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EAA0
	 * 		Name   -> Function TBL.PropertyDebugger.PrintToFile
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPropertyDebugger::PrintToFile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.PrintToFile");
		
		UPropertyDebugger_PrintToFile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EA80
	 * 		Name   -> Function TBL.PropertyDebugger.PreviousProperty
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::PreviousProperty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.PreviousProperty");
		
		UPropertyDebugger_PreviousProperty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F1B0
	 * 		Name   -> Function TBL.PropertyDebugger.OnPossessed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       NewPawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::OnPossessed(class APawn* NewPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.OnPossessed");
		
		UPropertyDebugger_OnPossessed_Params params {};
		params.NewPawn = NewPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E510
	 * 		Name   -> Function TBL.PropertyDebugger.OnMovementSync
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UMovementDebugger*                           MovementDebugger                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::OnMovementSync(class UMovementDebugger* MovementDebugger)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.OnMovementSync");
		
		UPropertyDebugger_OnMovementSync_Params params {};
		params.MovementDebugger = MovementDebugger;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D9D0
	 * 		Name   -> Function TBL.PropertyDebugger.NextProperty
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::NextProperty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.NextProperty");
		
		UPropertyDebugger_NextProperty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D9B0
	 * 		Name   -> Function TBL.PropertyDebugger.MenuUpPressed
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuUpPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuUpPressed");
		
		UPropertyDebugger_MenuUpPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D990
	 * 		Name   -> Function TBL.PropertyDebugger.MenuRight
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuRight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuRight");
		
		UPropertyDebugger_MenuRight_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D970
	 * 		Name   -> Function TBL.PropertyDebugger.MenuReleased
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuReleased");
		
		UPropertyDebugger_MenuReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D950
	 * 		Name   -> Function TBL.PropertyDebugger.MenuPageUp
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuPageUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuPageUp");
		
		UPropertyDebugger_MenuPageUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D930
	 * 		Name   -> Function TBL.PropertyDebugger.MenuPageDown
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuPageDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuPageDown");
		
		UPropertyDebugger_MenuPageDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D910
	 * 		Name   -> Function TBL.PropertyDebugger.MenuOpen
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuOpen");
		
		UPropertyDebugger_MenuOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D8F0
	 * 		Name   -> Function TBL.PropertyDebugger.MenuLeft
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuLeft");
		
		UPropertyDebugger_MenuLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D8D0
	 * 		Name   -> Function TBL.PropertyDebugger.MenuDownPressed
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuDownPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuDownPressed");
		
		UPropertyDebugger_MenuDownPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D8B0
	 * 		Name   -> Function TBL.PropertyDebugger.MenuDelete
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuDelete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuDelete");
		
		UPropertyDebugger_MenuDelete_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D890
	 * 		Name   -> Function TBL.PropertyDebugger.MenuClose
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuClose()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuClose");
		
		UPropertyDebugger_MenuClose_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D870
	 * 		Name   -> Function TBL.PropertyDebugger.MenuBackSpace
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuBackSpace()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuBackSpace");
		
		UPropertyDebugger_MenuBackSpace_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D850
	 * 		Name   -> Function TBL.PropertyDebugger.MenuAdd
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::MenuAdd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.MenuAdd");
		
		UPropertyDebugger_MenuAdd_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D800
	 * 		Name   -> Function TBL.PropertyDebugger.InitHUD
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::InitHUD()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.InitHUD");
		
		UPropertyDebugger_InitHUD_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D330
	 * 		Name   -> Function TBL.PropertyDebugger.HandleFilterText
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      Char                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPropertyDebugger::HandleFilterText(const class FString& Char)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.HandleFilterText");
		
		UPropertyDebugger_HandleFilterText_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D1E0
	 * 		Name   -> Function TBL.PropertyDebugger.GetOverrideSelectedClass
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDebugProperty                              Property                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UStruct* UPropertyDebugger::GetOverrideSelectedClass(const struct FDebugProperty& Property)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.GetOverrideSelectedClass");
		
		UPropertyDebugger_GetOverrideSelectedClass_Params params {};
		params.Property = Property;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D150
	 * 		Name   -> Function TBL.PropertyDebugger.GetOverrideBaseClass
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        BaseObj                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStruct* UPropertyDebugger::GetOverrideBaseClass(const class FName& BaseObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.GetOverrideBaseClass");
		
		UPropertyDebugger_GetOverrideBaseClass_Params params {};
		params.BaseObj = BaseObj;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CFC0
	 * 		Name   -> Function TBL.PropertyDebugger.FindProperty
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      PropName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::FindProperty(const class FString& PropName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.FindProperty");
		
		UPropertyDebugger_FindProperty_Params params {};
		params.PropName = PropName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CD80
	 * 		Name   -> Function TBL.PropertyDebugger.DrawProperty
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms)
	 * Parameters:
	 * 		class UCanvas*                                     Canvas                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              XPos                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              YPos                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PropName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PropVal                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::STATIC_DrawProperty(class UCanvas* Canvas, float* XPos, float* YPos, const class FString& PropName, const class FString& PropVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.DrawProperty");
		
		UPropertyDebugger_DrawProperty_Params params {};
		params.Canvas = Canvas;
		params.PropName = PropName;
		params.PropVal = PropVal;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (XPos != nullptr)
			*XPos = params.XPos;
		if (YPos != nullptr)
			*YPos = params.YPos;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CCF0
	 * 		Name   -> Function TBL.PropertyDebugger.DrawDebug
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class UCanvas*                                     Canvas                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::DrawDebug(class UCanvas* Canvas)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.DrawDebug");
		
		UPropertyDebugger_DrawDebug_Params params {};
		params.Canvas = Canvas;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CCD0
	 * 		Name   -> Function TBL.PropertyDebugger.DisplayDebugScrollUp
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::DisplayDebugScrollUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.DisplayDebugScrollUp");
		
		UPropertyDebugger_DisplayDebugScrollUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CCB0
	 * 		Name   -> Function TBL.PropertyDebugger.DisplayDebugScrollReleased
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::DisplayDebugScrollReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.DisplayDebugScrollReleased");
		
		UPropertyDebugger_DisplayDebugScrollReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CC90
	 * 		Name   -> Function TBL.PropertyDebugger.DisplayDebugScrollDown
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::DisplayDebugScrollDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.DisplayDebugScrollDown");
		
		UPropertyDebugger_DisplayDebugScrollDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CBF0
	 * 		Name   -> Function TBL.PropertyDebugger.DebugInputChar
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FString                                      Char                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::DebugInputChar(const class FString& Char)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.DebugInputChar");
		
		UPropertyDebugger_DebugInputChar_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CBD0
	 * 		Name   -> Function TBL.PropertyDebugger.CreateMenu
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::CreateMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.CreateMenu");
		
		UPropertyDebugger_CreateMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CBB0
	 * 		Name   -> Function TBL.PropertyDebugger.CloseDebugger
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::CloseDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.CloseDebugger");
		
		UPropertyDebugger_CloseDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01639060
	 * 		Name   -> Function TBL.PropertyDebugger.ClientReturnSelectedClass
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		class UStruct*                                     Struct                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ClientReturnSelectedClass(class UStruct* Struct)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ClientReturnSelectedClass");
		
		UPropertyDebugger_ClientReturnSelectedClass_Params params {};
		params.Struct = Struct;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CB90
	 * 		Name   -> Function TBL.PropertyDebugger.ClearFilter
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPropertyDebugger::ClearFilter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ClearFilter");
		
		UPropertyDebugger_ClearFilter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CAD0
	 * 		Name   -> Function TBL.PropertyDebugger.ApplyFilter
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPropertyDebugger::ApplyFilter(const class FString& Text)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PropertyDebugger.ApplyFilter");
		
		UPropertyDebugger_ApplyFilter_Params params {};
		params.Text = Text;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPropertyDebugger.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPropertyDebugger::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PropertyDebugger");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016429C0
	 * 		Name   -> Function TBL.PushableSplineActor.OnLevelLoaded
	 * 		Flags  -> (Final, Native, Public)
	 */
	void APushableSplineActor::OnLevelLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSplineActor.OnLevelLoaded");
		
		APushableSplineActor_OnLevelLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction APushableSplineActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APushableSplineActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PushableSplineActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643AD0
	 * 		Name   -> Function TBL.PushableComponent.SkipToEndOfCurrentEndPoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UPushableComponent::SkipToEndOfCurrentEndPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.SkipToEndOfCurrentEndPoint");
		
		UPushableComponent_SkipToEndOfCurrentEndPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016438C0
	 * 		Name   -> Function TBL.PushableComponent.SetPushingCollisionComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         NewPushingCollisionComponent                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::SetPushingCollisionComponent(class UPrimitiveComponent* NewPushingCollisionComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.SetPushingCollisionComponent");
		
		UPushableComponent_SetPushingCollisionComponent_Params params {};
		params.NewPushingCollisionComponent = NewPushingCollisionComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016437B0
	 * 		Name   -> Function TBL.PushableComponent.SetPushableMovementType
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EPushableMovementType                          NewMovementType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::SetPushableMovementType(TBL_EPushableMovementType NewMovementType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.SetPushableMovementType");
		
		UPushableComponent_SetPushableMovementType_Params params {};
		params.NewMovementType = NewMovementType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016436E0
	 * 		Name   -> Function TBL.PushableComponent.SetPushableComponentProperties
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FPushableComponentProperties                Props                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::SetPushableComponentProperties(const struct FPushableComponentProperties& Props)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.SetPushableComponentProperties");
		
		UPushableComponent_SetPushableComponentProperties_Params params {};
		params.Props = Props;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643650
	 * 		Name   -> Function TBL.PushableComponent.SetFollowerPushableComponentProperties
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FFollowerPushableComponentProperties        Props                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::SetFollowerPushableComponentProperties(const struct FFollowerPushableComponentProperties& Props)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.SetFollowerPushableComponentProperties");
		
		UPushableComponent_SetFollowerPushableComponentProperties_Params params {};
		params.Props = Props;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016435C0
	 * 		Name   -> Function TBL.PushableComponent.SetCurrentEndPointCinematic
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               CinematicEndPoint                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::SetCurrentEndPointCinematic(bool CinematicEndPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.SetCurrentEndPointCinematic");
		
		UPushableComponent_SetCurrentEndPointCinematic_Params params {};
		params.CinematicEndPoint = CinematicEndPoint;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016434B0
	 * 		Name   -> Function TBL.PushableComponent.ReversePushableByDistance
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Distance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::ReversePushableByDistance(float Distance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.ReversePushableByDistance");
		
		UPushableComponent_ReversePushableByDistance_Params params {};
		params.Distance = Distance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643430
	 * 		Name   -> Function TBL.PushableComponent.ResetProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              NewProgress                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::ResetProgress(float NewProgress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.ResetProgress");
		
		UPushableComponent_ResetProgress_Params params {};
		params.NewProgress = NewProgress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642FA0
	 * 		Name   -> Function TBL.PushableComponent.ReConfigurePushable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EPushableMovementType                          NewMovementType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPushableComponentProperties                IndependentAndLeaderProperties                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FFollowerPushableComponentProperties        FollowerProperties                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class APushableSplineActor*                        NewSplineActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FPushableEndPoint>                   NewEndPoints                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              NewFollowerPushables                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TimeToComplete                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TravelSpeedToNewSpline                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLatentActionInfo                           LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::ReConfigurePushable(TBL_EPushableMovementType NewMovementType, const struct FPushableComponentProperties& IndependentAndLeaderProperties, const struct FFollowerPushableComponentProperties& FollowerProperties, class APushableSplineActor* NewSplineActor, TArray<struct FPushableEndPoint> NewEndPoints, TArray<class AActor*> NewFollowerPushables, float TimeToComplete, float TravelSpeedToNewSpline, const struct FLatentActionInfo& LatentInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.ReConfigurePushable");
		
		UPushableComponent_ReConfigurePushable_Params params {};
		params.NewMovementType = NewMovementType;
		params.IndependentAndLeaderProperties = IndependentAndLeaderProperties;
		params.FollowerProperties = FollowerProperties;
		params.NewSplineActor = NewSplineActor;
		params.NewEndPoints = NewEndPoints;
		params.NewFollowerPushables = NewFollowerPushables;
		params.TimeToComplete = TimeToComplete;
		params.TravelSpeedToNewSpline = TravelSpeedToNewSpline;
		params.LatentInfo = LatentInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642F80
	 * 		Name   -> Function TBL.PushableComponent.PushableMoveDelegateComplete
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UPushableComponent::PushableMoveDelegateComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.PushableMoveDelegateComplete");
		
		UPushableComponent_PushableMoveDelegateComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642E90
	 * 		Name   -> Function TBL.PushableComponent.ProceedToNextEndPoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UPushableComponent::ProceedToNextEndPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.ProceedToNextEndPoint");
		
		UPushableComponent_ProceedToNextEndPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642E70
	 * 		Name   -> Function TBL.PushableComponent.OnRep_ReplicatedSplineActor
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_ReplicatedSplineActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_ReplicatedSplineActor");
		
		UPushableComponent_OnRep_ReplicatedSplineActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642E30
	 * 		Name   -> Function TBL.PushableComponent.OnRep_ReplicatedMovementState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_ReplicatedMovementState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_ReplicatedMovementState");
		
		UPushableComponent_OnRep_ReplicatedMovementState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642DF0
	 * 		Name   -> Function TBL.PushableComponent.OnRep_PushableProgressAuthority
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_PushableProgressAuthority()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_PushableProgressAuthority");
		
		UPushableComponent_OnRep_PushableProgressAuthority_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.PushableComponent.OnRep_PushableMovementType
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_PushableMovementType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_PushableMovementType");
		
		UPushableComponent_OnRep_PushableMovementType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.PushableComponent.OnRep_PushableEndPoints
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_PushableEndPoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_PushableEndPoints");
		
		UPushableComponent_OnRep_PushableEndPoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642DD0
	 * 		Name   -> Function TBL.PushableComponent.OnRep_PushableComponentProperties
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_PushableComponentProperties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_PushableComponentProperties");
		
		UPushableComponent_OnRep_PushableComponentProperties_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642DB0
	 * 		Name   -> Function TBL.PushableComponent.OnRep_PushableActive
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_PushableActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_PushableActive");
		
		UPushableComponent_OnRep_PushableActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.PushableComponent.OnRep_FollowerPushables
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_FollowerPushables()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_FollowerPushables");
		
		UPushableComponent_OnRep_FollowerPushables_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642050
	 * 		Name   -> Function TBL.PushableComponent.OnRep_FollowerPushableComponentProperties
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_FollowerPushableComponentProperties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_FollowerPushableComponentProperties");
		
		UPushableComponent_OnRep_FollowerPushableComponentProperties_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642D70
	 * 		Name   -> Function TBL.PushableComponent.OnRep_CurrentEndPoint
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPushableComponent::OnRep_CurrentEndPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnRep_CurrentEndPoint");
		
		UPushableComponent_OnRep_CurrentEndPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642A80
	 * 		Name   -> Function TBL.PushableComponent.OnPlayersInCaptureVolumeChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		TArray<class ATBLCharacter*>                       Players                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::OnPlayersInCaptureVolumeChanged(TArray<class ATBLCharacter*> Players)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnPlayersInCaptureVolumeChanged");
		
		UPushableComponent_OnPlayersInCaptureVolumeChanged_Params params {};
		params.Players = Players;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642A00
	 * 		Name   -> Function TBL.PushableComponent.OnOwningTeamHasChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLTeam*                                    OwningTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::OnOwningTeamHasChanged(class ATBLTeam* OwningTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnOwningTeamHasChanged");
		
		UPushableComponent_OnOwningTeamHasChanged_Params params {};
		params.OwningTeam = OwningTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016428F0
	 * 		Name   -> Function TBL.PushableComponent.OnHealthChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::OnHealthChanged(float Amount, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnHealthChanged");
		
		UPushableComponent_OnHealthChanged_Params params {};
		params.Amount = Amount;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F1B0
	 * 		Name   -> Function TBL.PushableComponent.OnControllingTeamHasChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLTeam*                                    ControllingTeam                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::OnControllingTeamHasChanged(class ATBLTeam* ControllingTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnControllingTeamHasChanged");
		
		UPushableComponent_OnControllingTeamHasChanged_Params params {};
		params.ControllingTeam = ControllingTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642750
	 * 		Name   -> Function TBL.PushableComponent.OnCaptureStateChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_ETeamCapturePointComponentState                CaptureState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::OnCaptureStateChanged(TBL_ETeamCapturePointComponentState CaptureState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.OnCaptureStateChanged");
		
		UPushableComponent_OnCaptureStateChanged_Params params {};
		params.CaptureState = CaptureState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC110
	 * 		Name   -> Function TBL.PushableComponent.IsPushableActive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UPushableComponent::IsPushableActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.IsPushableActive");
		
		UPushableComponent_IsPushableActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642720
	 * 		Name   -> Function TBL.PushableComponent.IsLeader
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UPushableComponent::IsLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.IsLeader");
		
		UPushableComponent_IsLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016426F0
	 * 		Name   -> Function TBL.PushableComponent.IsIndependent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UPushableComponent::IsIndependent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.IsIndependent");
		
		UPushableComponent_IsIndependent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016426C0
	 * 		Name   -> Function TBL.PushableComponent.IsFollower
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UPushableComponent::IsFollower()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.IsFollower");
		
		UPushableComponent_IsFollower_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016425C0
	 * 		Name   -> Function TBL.PushableComponent.GetSplineActor
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 */
	class APushableSplineActor* UPushableComponent::GetSplineActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.GetSplineActor");
		
		UPushableComponent_GetSplineActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PushableComponent.GetSimulatingPhysicsComponents
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	TArray<class UPrimitiveComponent*> UPushableComponent::GetSimulatingPhysicsComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.GetSimulatingPhysicsComponents");
		
		UPushableComponent_GetSimulatingPhysicsComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016424F0
	 * 		Name   -> Function TBL.PushableComponent.GetPushingCollisionComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UPrimitiveComponent* UPushableComponent::GetPushingCollisionComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.GetPushingCollisionComponent");
		
		UPushableComponent_GetPushingCollisionComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642350
	 * 		Name   -> Function TBL.PushableComponent.GetPushableProgressSummary
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Progress                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPushableEndPoint                           OutCurrentEndPoint                                         (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		float                                              ProgressPercent                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::GetPushableProgressSummary(float* Progress, struct FPushableEndPoint* OutCurrentEndPoint, float* ProgressPercent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.GetPushableProgressSummary");
		
		UPushableComponent_GetPushableProgressSummary_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Progress != nullptr)
			*Progress = params.Progress;
		if (OutCurrentEndPoint != nullptr)
			*OutCurrentEndPoint = params.OutCurrentEndPoint;
		if (ProgressPercent != nullptr)
			*ProgressPercent = params.ProgressPercent;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642250
	 * 		Name   -> Function TBL.PushableComponent.GetProgressToNextPoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UPushableComponent::GetProgressToNextPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.GetProgressToNextPoint");
		
		UPushableComponent_GetProgressToNextPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642050
	 * 		Name   -> Function TBL.PushableComponent.FollowerPushableMovementTypeUpdated
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UPushableComponent::FollowerPushableMovementTypeUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.FollowerPushableMovementTypeUpdated");
		
		UPushableComponent_FollowerPushableMovementTypeUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641F20
	 * 		Name   -> Function TBL.PushableComponent.CheckForBlockingItemCollision
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UPushableComponent::CheckForBlockingItemCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.CheckForBlockingItemCollision");
		
		UPushableComponent_CheckForBlockingItemCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641EA0
	 * 		Name   -> Function TBL.PushableComponent.AddPushableAuthorityProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Progress                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::AddPushableAuthorityProgress(float Progress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.AddPushableAuthorityProgress");
		
		UPushableComponent_AddPushableAuthorityProgress_Params params {};
		params.Progress = Progress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641D30
	 * 		Name   -> Function TBL.PushableComponent.ActivatePushable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Active                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushableComponent::ActivatePushable(bool Active)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableComponent.ActivatePushable");
		
		UPushableComponent_ActivatePushable_Params params {};
		params.Active = Active;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPushableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPushableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PushableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643CC0
	 * 		Name   -> Function TBL.PushableSiegeActor.UpdateSkeletalMesh
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void APushableSiegeActor::UpdateSkeletalMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.UpdateSkeletalMesh");
		
		APushableSiegeActor_UpdateSkeletalMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PushableSiegeActor.SiegeStateAnimationUpdated
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		TBL_ESiegeActorState                               NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APushableSiegeActor::SiegeStateAnimationUpdated(TBL_ESiegeActorState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.SiegeStateAnimationUpdated");
		
		APushableSiegeActor_SiegeStateAnimationUpdated_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016439C0
	 * 		Name   -> Function TBL.PushableSiegeActor.SetSiegeState
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ESiegeActorState                               NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APushableSiegeActor::SetSiegeState(TBL_ESiegeActorState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.SetSiegeState");
		
		APushableSiegeActor_SetSiegeState_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643530
	 * 		Name   -> Function TBL.PushableSiegeActor.SetAvoidanceEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APushableSiegeActor::SetAvoidanceEnabled(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.SetAvoidanceEnabled");
		
		APushableSiegeActor_SetAvoidanceEnabled_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642E50
	 * 		Name   -> Function TBL.PushableSiegeActor.OnRep_ReplicatedSiegeState
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void APushableSiegeActor::OnRep_ReplicatedSiegeState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.OnRep_ReplicatedSiegeState");
		
		APushableSiegeActor_OnRep_ReplicatedSiegeState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642BE0
	 * 		Name   -> Function TBL.PushableSiegeActor.OnPushableReachedEndPoint
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		int                                                EndPointNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPushableEndPoint                           EndPoint                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		bool                                               IsLastEndPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APushableSiegeActor::OnPushableReachedEndPoint(int EndPointNum, const struct FPushableEndPoint& EndPoint, bool IsLastEndPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.OnPushableReachedEndPoint");
		
		APushableSiegeActor_OnPushableReachedEndPoint_Params params {};
		params.EndPointNum = EndPointNum;
		params.EndPoint = EndPoint;
		params.IsLastEndPoint = IsLastEndPoint;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642BC0
	 * 		Name   -> Function TBL.PushableSiegeActor.OnPushableCompleted
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void APushableSiegeActor::OnPushableCompleted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.OnPushableCompleted");
		
		APushableSiegeActor_OnPushableCompleted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642B30
	 * 		Name   -> Function TBL.PushableSiegeActor.OnPushableActivated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bIsActive                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APushableSiegeActor::OnPushableActivated(bool bIsActive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.OnPushableActivated");
		
		APushableSiegeActor_OnPushableActivated_Params params {};
		params.bIsActive = bIsActive;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016429E0
	 * 		Name   -> Function TBL.PushableSiegeActor.OnMeshLODChanged
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void APushableSiegeActor::OnMeshLODChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.OnMeshLODChanged");
		
		APushableSiegeActor_OnMeshLODChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641DC0
	 * 		Name   -> Function TBL.PushableSiegeActor.AddLogEntry
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      LogEntry                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void APushableSiegeActor::AddLogEntry(const class FString& LogEntry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushableSiegeActor.AddLogEntry");
		
		APushableSiegeActor_AddLogEntry_Params params {};
		params.LogEntry = LogEntry;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction APushableSiegeActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APushableSiegeActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PushableSiegeActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643C40
	 * 		Name   -> Function TBL.PushingComponent.UpdatePushingWhileFalling
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushingComponent::UpdatePushingWhileFalling(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.UpdatePushingWhileFalling");
		
		UPushingComponent_UpdatePushingWhileFalling_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643B70
	 * 		Name   -> Function TBL.PushingComponent.UpdatePushing
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OldLocation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushingComponent::UpdatePushing(float DeltaSeconds, const struct FVector& OldLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.UpdatePushing");
		
		UPushingComponent_UpdatePushing_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		params.OldLocation = OldLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643AF0
	 * 		Name   -> Function TBL.PushingComponent.UpdatePushed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushingComponent::UpdatePushed(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.UpdatePushed");
		
		UPushingComponent_UpdatePushed_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643A40
	 * 		Name   -> Function TBL.PushingComponent.ShouldPush
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPushingComponent::ShouldPush(class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.ShouldPush");
		
		UPushingComponent_ShouldPush_Params params {};
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643940
	 * 		Name   -> Function TBL.PushingComponent.SetPushingDirection
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EPushingDirection                              Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushingComponent::SetPushingDirection(TBL_EPushingDirection Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.SetPushingDirection");
		
		UPushingComponent_SetPushingDirection_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01643830
	 * 		Name   -> Function TBL.PushingComponent.SetPushedVelocity
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     PushVel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushingComponent::SetPushedVelocity(const struct FVector& PushVel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.SetPushedVelocity");
		
		UPushingComponent_SetPushedVelocity_Params params {};
		params.PushVel = PushVel;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642EB0
	 * 		Name   -> Function TBL.PushingComponent.PushActor
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PushVel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushingComponent::PushActor(class AActor* Actor, const struct FVector& PushVel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.PushActor");
		
		UPushingComponent_PushActor_Params params {};
		params.Actor = Actor;
		params.PushVel = PushVel;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642E10
	 * 		Name   -> Function TBL.PushingComponent.OnRep_PushingPriority
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPushingComponent::OnRep_PushingPriority()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.OnRep_PushingPriority");
		
		UPushingComponent_OnRep_PushingPriority_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642D90
	 * 		Name   -> Function TBL.PushingComponent.OnRep_DesiredPushedVelocity
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPushingComponent::OnRep_DesiredPushedVelocity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.OnRep_DesiredPushedVelocity");
		
		UPushingComponent_OnRep_DesiredPushedVelocity_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016427D0
	 * 		Name   -> Function TBL.PushingComponent.OnCharacterMovementUpdated
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OldLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OldVelocity                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPushingComponent::OnCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.OnCharacterMovementUpdated");
		
		UPushingComponent_OnCharacterMovementUpdated_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		params.OldLocation = OldLocation;
		params.OldVelocity = OldVelocity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642630
	 * 		Name   -> Function TBL.PushingComponent.HasEqualPriority
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPushingComponent::HasEqualPriority(class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.HasEqualPriority");
		
		UPushingComponent_HasEqualPriority_Params params {};
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642280
	 * 		Name   -> Function TBL.PushingComponent.GetPushVelocity
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      PushingActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UPushingComponent::GetPushVelocity(class AActor* PushingActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.GetPushVelocity");
		
		UPushingComponent_GetPushVelocity_Params params {};
		params.PushingActor = PushingActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642520
	 * 		Name   -> Function TBL.PushingComponent.GetPushingRadius
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UPushingComponent::GetPushingRadius(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.GetPushingRadius");
		
		UPushingComponent_GetPushingRadius_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642210
	 * 		Name   -> Function TBL.PushingComponent.GetOwnerVelocity
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 */
	struct FVector UPushingComponent::GetOwnerVelocity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.GetOwnerVelocity");
		
		UPushingComponent_GetOwnerVelocity_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016420F0
	 * 		Name   -> Function TBL.PushingComponent.GetFallingPushDirection
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      PushingActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UPushingComponent::GetFallingPushDirection(class AActor* PushingActor, class AActor* OtherActor, float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.GetFallingPushDirection");
		
		UPushingComponent_GetFallingPushDirection_Params params {};
		params.PushingActor = PushingActor;
		params.OtherActor = OtherActor;
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01642070
	 * 		Name   -> Function TBL.PushingComponent.GetCollisionComponents
	 * 		Flags  -> (Final, Native, Protected)
	 */
	TArray<class UPrimitiveComponent*> UPushingComponent::GetCollisionComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.GetCollisionComponents");
		
		UPushingComponent_GetCollisionComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641F40
	 * 		Name   -> Function TBL.PushingComponent.FindOverlappingCharacters
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		TArray<class ATBLCharacterBase*>                   OutCharacters                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UPushingComponent::FindOverlappingCharacters(TArray<class ATBLCharacterBase*>* OutCharacters, const struct FVector& Offset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PushingComponent.FindOverlappingCharacters");
		
		UPushingComponent_FindOverlappingCharacters_Params params {};
		params.Offset = Offset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCharacters != nullptr)
			*OutCharacters = params.OutCharacters;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPushingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPushingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PushingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648FD0
	 * 		Name   -> Function TBL.RallyPoint.IsAllowedPawnClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ARallyPoint::IsAllowedPawnClass(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.RallyPoint.IsAllowedPawnClass");
		
		ARallyPoint_IsAllowedPawnClass_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648F90
	 * 		Name   -> Function TBL.RallyPoint.HasPawnClassFilters
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ARallyPoint::HasPawnClassFilters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.RallyPoint.HasPawnClassFilters");
		
		ARallyPoint_HasPawnClassFilters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ARallyPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ARallyPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.RallyPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E97050
	 * 		Name   -> Function TBL.InteractableComponent.Use
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableComponent::Use(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.Use");
		
		UInteractableComponent_Use_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016156A0
	 * 		Name   -> Function TBL.InteractableComponent.StopRechargeTimer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UInteractableComponent::StopRechargeTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.StopRechargeTimer");
		
		UInteractableComponent_StopRechargeTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615600
	 * 		Name   -> Function TBL.InteractableComponent.SetUseableByTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       EFaction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableComponent::SetUseableByTeam(TBL_EFaction EFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.SetUseableByTeam");
		
		UInteractableComponent_SetUseableByTeam_Params params {};
		params.EFaction = EFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615500
	 * 		Name   -> Function TBL.InteractableComponent.SetRechargeRule
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInteractableRechargeRule                      InRechargeRule                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableComponent::SetRechargeRule(TBL_EInteractableRechargeRule InRechargeRule)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.SetRechargeRule");
		
		UInteractableComponent_SetRechargeRule_Params params {};
		params.InRechargeRule = InRechargeRule;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615470
	 * 		Name   -> Function TBL.InteractableComponent.SetOnlyAllowOwningPlayer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bInOnlyAllowOwningPlayer                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableComponent::SetOnlyAllowOwningPlayer(bool bInOnlyAllowOwningPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.SetOnlyAllowOwningPlayer");
		
		UInteractableComponent_SetOnlyAllowOwningPlayer_Params params {};
		params.bInOnlyAllowOwningPlayer = bInOnlyAllowOwningPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016153F0
	 * 		Name   -> Function TBL.InteractableComponent.SetInteractionType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInteractionType                               InInteractionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableComponent::SetInteractionType(TBL_EInteractionType InInteractionType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.SetInteractionType");
		
		UInteractableComponent_SetInteractionType_Params params {};
		params.InInteractionType = InInteractionType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615370
	 * 		Name   -> Function TBL.InteractableComponent.SetInitiateUseDuration
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InInitiateUseDuration                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableComponent::SetInitiateUseDuration(float InInitiateUseDuration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.SetInitiateUseDuration");
		
		UInteractableComponent_SetInitiateUseDuration_Params params {};
		params.InInitiateUseDuration = InInitiateUseDuration;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016152A0
	 * 		Name   -> Function TBL.InteractableComponent.SetEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Enabled                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bForceClient                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableComponent::SetEnabled(bool Enabled, bool bForceClient)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.SetEnabled");
		
		UInteractableComponent_SetEnabled_Params params {};
		params.Enabled = Enabled;
		params.bForceClient = bForceClient;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615260
	 * 		Name   -> Function TBL.InteractableComponent.RestartRechargeTimer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UInteractableComponent::RestartRechargeTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.RestartRechargeTimer");
		
		UInteractableComponent_RestartRechargeTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FA10
	 * 		Name   -> Function TBL.InteractableComponent.OnRep_Uses
	 * 		Flags  -> (Native, Public)
	 */
	void UInteractableComponent::OnRep_Uses()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.OnRep_Uses");
		
		UInteractableComponent_OnRep_Uses_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.InteractableComponent.OnRep_RechargeRule
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UInteractableComponent::OnRep_RechargeRule()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.OnRep_RechargeRule");
		
		UInteractableComponent_OnRep_RechargeRule_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615240
	 * 		Name   -> Function TBL.InteractableComponent.OnRep_InteractionType
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UInteractableComponent::OnRep_InteractionType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.OnRep_InteractionType");
		
		UInteractableComponent_OnRep_InteractionType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615220
	 * 		Name   -> Function TBL.InteractableComponent.OnRep_InitiateUseDuration
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UInteractableComponent::OnRep_InitiateUseDuration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.OnRep_InitiateUseDuration");
		
		UInteractableComponent_OnRep_InitiateUseDuration_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615200
	 * 		Name   -> Function TBL.InteractableComponent.OnRep_Enabled
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UInteractableComponent::OnRep_Enabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.OnRep_Enabled");
		
		UInteractableComponent_OnRep_Enabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016151E0
	 * 		Name   -> Function TBL.InteractableComponent.OnRep_CurrentUsingPawn
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UInteractableComponent::OnRep_CurrentUsingPawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.OnRep_CurrentUsingPawn");
		
		UInteractableComponent_OnRep_CurrentUsingPawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615150
	 * 		Name   -> Function TBL.InteractableComponent.IsValidCollisionComponent
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UInteractableComponent::IsValidCollisionComponent(class UPrimitiveComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.IsValidCollisionComponent");
		
		UInteractableComponent_IsValidCollisionComponent_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614B00
	 * 		Name   -> Function TBL.InteractableComponent.GetValidCollisionComponents
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TArray<class UPrimitiveComponent*> UInteractableComponent::GetValidCollisionComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.GetValidCollisionComponents");
		
		UInteractableComponent_GetValidCollisionComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614AE0
	 * 		Name   -> Function TBL.InteractableComponent.GetUses
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int UInteractableComponent::GetUses()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.GetUses");
		
		UInteractableComponent_GetUses_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614AC0
	 * 		Name   -> Function TBL.InteractableComponent.GetUseableByTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EFaction UInteractableComponent::GetUseableByTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.GetUseableByTeam");
		
		UInteractableComponent_GetUseableByTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614960
	 * 		Name   -> Function TBL.InteractableComponent.GetRechargeRule
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EInteractableRechargeRule UInteractableComponent::GetRechargeRule()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.GetRechargeRule");
		
		UInteractableComponent_GetRechargeRule_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614910
	 * 		Name   -> Function TBL.InteractableComponent.GetInteractionType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EInteractionType UInteractableComponent::GetInteractionType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.GetInteractionType");
		
		UInteractableComponent_GetInteractionType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016148E0
	 * 		Name   -> Function TBL.InteractableComponent.GetInteractableComponent
	 * 		Flags  -> (Final, Native, Public)
	 */
	class UInteractableComponent* UInteractableComponent::GetInteractableComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.GetInteractableComponent");
		
		UInteractableComponent_GetInteractableComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614890
	 * 		Name   -> Function TBL.InteractableComponent.GetEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UInteractableComponent::GetEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.GetEnabled");
		
		UInteractableComponent_GetEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016145B0
	 * 		Name   -> Function TBL.InteractableComponent.CanShowUI
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UInteractableComponent::CanShowUI(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableComponent.CanShowUI");
		
		UInteractableComponent_CanShowUI_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInteractableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InteractableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URepairableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URepairableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.RepairableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649D50
	 * 		Name   -> Function TBL.ReplicatedCollisionActor.SetReplicatedCollision
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AReplicatedCollisionActor::SetReplicatedCollision(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ReplicatedCollisionActor.SetReplicatedCollision");
		
		AReplicatedCollisionActor_SetReplicatedCollision_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649630
	 * 		Name   -> Function TBL.ReplicatedCollisionActor.OnRep_ReplicatedCollision
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AReplicatedCollisionActor::OnRep_ReplicatedCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ReplicatedCollisionActor.OnRep_ReplicatedCollision");
		
		AReplicatedCollisionActor_OnRep_ReplicatedCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.ReplicatedCollisionActor.OnCollisionChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AReplicatedCollisionActor::OnCollisionChanged(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ReplicatedCollisionActor.OnCollisionChanged");
		
		AReplicatedCollisionActor_OnCollisionChanged_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648E30
	 * 		Name   -> Function TBL.ReplicatedCollisionActor.GetReplicatedCollision
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool AReplicatedCollisionActor::GetReplicatedCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ReplicatedCollisionActor.GetReplicatedCollision");
		
		AReplicatedCollisionActor_GetReplicatedCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AReplicatedCollisionActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AReplicatedCollisionActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ReplicatedCollisionActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UReplicatedSubobjectInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UReplicatedSubobjectInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ReplicatedSubobjectInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649650
	 * 		Name   -> Function TBL.RevivalWorker.OnRevivedOtherPlayer
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URevivalWorker::OnRevivedOtherPlayer(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.RevivalWorker.OnRevivedOtherPlayer");
		
		URevivalWorker_OnRevivedOtherPlayer_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649430
	 * 		Name   -> Function TBL.RevivalWorker.OnPlayerRevived
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void URevivalWorker::OnPlayerRevived(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.RevivalWorker.OnPlayerRevived");
		
		URevivalWorker_OnPlayerRevived_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URevivalWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URevivalWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.RevivalWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URewardTable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URewardTable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.RewardTable");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.RichTextEmbeddedWidgetInterface.OnReceivedEmbedInfo
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		struct FRichTextEmbedInfo                          Info                                                       (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void URichTextEmbeddedWidgetInterface::OnReceivedEmbedInfo(const struct FRichTextEmbedInfo& Info)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.RichTextEmbeddedWidgetInterface.OnReceivedEmbedInfo");
		
		URichTextEmbeddedWidgetInterface_OnReceivedEmbedInfo_Params params {};
		params.Info = Info;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URichTextEmbeddedWidgetInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URichTextEmbeddedWidgetInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.RichTextEmbeddedWidgetInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URoundBasedSpawnQueuer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URoundBasedSpawnQueuer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.RoundBasedSpawnQueuer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UScrollWheelCapture.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UScrollWheelCapture::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ScrollWheelCapture");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E750
	 * 		Name   -> Function TBL.Spawner.StartSpawning
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSpawnWaveParamOverrides                    InSpawnWaveParams                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class ASpawnWave* ASpawner::StartSpawning(TBL_EFaction Faction, const struct FSpawnWaveParamOverrides& InSpawnWaveParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.StartSpawning");
		
		ASpawner_StartSpawning_Params params {};
		params.Faction = Faction;
		params.InSpawnWaveParams = InSpawnWaveParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E5F0
	 * 		Name   -> Function TBL.Spawner.StartForwardSpawning
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class APawn*>                               PawnsAllowedToSpawn                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSpawnWaveParamOverrides                    InSpawnWaveParams                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class AForwardSpawnWave* ASpawner::StartForwardSpawning(TArray<class APawn*> PawnsAllowedToSpawn, const struct FSpawnWaveParamOverrides& InSpawnWaveParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.StartForwardSpawning");
		
		ASpawner_StartForwardSpawning_Params params {};
		params.PawnsAllowedToSpawn = PawnsAllowedToSpawn;
		params.InSpawnWaveParams = InSpawnWaveParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E4A0
	 * 		Name   -> Function TBL.Spawner.StartForcedSpawning
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 SpawnController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSpawnWaveParamOverrides                    InSpawnWaveParams                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class AForcedRespawnSpawnWave* ASpawner::StartForcedSpawning(class AController* SpawnController, const struct FSpawnWaveParamOverrides& InSpawnWaveParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.StartForcedSpawning");
		
		ASpawner_StartForcedSpawning_Params params {};
		params.SpawnController = SpawnController;
		params.InSpawnWaveParams = InSpawnWaveParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E340
	 * 		Name   -> Function TBL.Spawner.SpawnCharacter
	 * 		Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FTransform                                  SpawnTransform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLCharacter* ASpawner::SpawnCharacter(const struct FTransform& SpawnTransform, class UClass* Class, class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.SpawnCharacter");
		
		ASpawner_SpawnCharacter_Params params {};
		params.SpawnTransform = SpawnTransform;
		params.Class = Class;
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.Spawner.SetupComponentsArray
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ASpawner::SetupComponentsArray()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.SetupComponentsArray");
		
		ASpawner_SetupComponentsArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E2A0
	 * 		Name   -> Function TBL.Spawner.RequestSpawnQueueSlot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ASpawner::RequestSpawnQueueSlot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.RequestSpawnQueueSlot");
		
		ASpawner_RequestSpawnQueueSlot_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E92310
	 * 		Name   -> Function TBL.Spawner.RequestSpawnerScoreUpdate
	 * 		Flags  -> (Native, Protected)
	 */
	void ASpawner::RequestSpawnerScoreUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.RequestSpawnerScoreUpdate");
		
		ASpawner_RequestSpawnerScoreUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Spawner.OnSpawnedCharacter
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               NewCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USceneComponent*                             SpawnComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawner::OnSpawnedCharacter(class ATBLCharacter* NewCharacter, class USceneComponent* SpawnComp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.OnSpawnedCharacter");
		
		ASpawner_OnSpawnedCharacter_Params params {};
		params.NewCharacter = NewCharacter;
		params.SpawnComp = SpawnComp;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Spawner.OnPossessedCharacter
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawner::OnPossessedCharacter(class ATBLCharacter* Character, class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.OnPossessedCharacter");
		
		ASpawner_OnPossessedCharacter_Params params {};
		params.Character = Character;
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164DAA0
	 * 		Name   -> Function TBL.Spawner.LockingWaveDestroyed
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      DestroyedSpawnWave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawner::LockingWaveDestroyed(class AActor* DestroyedSpawnWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.LockingWaveDestroyed");
		
		ASpawner_LockingWaveDestroyed_Params params {};
		params.DestroyedSpawnWave = DestroyedSpawnWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164DA80
	 * 		Name   -> Function TBL.Spawner.IsWaveLocked
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ASpawner::IsWaveLocked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.IsWaveLocked");
		
		ASpawner_IsWaveLocked_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D960
	 * 		Name   -> Function TBL.Spawner.IsValidSpawnLocation
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FTransform                                  OutTransform                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      PawnClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASpawner::IsValidSpawnLocation(const struct FTransform& OutTransform, class UClass* PawnClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.IsValidSpawnLocation");
		
		ASpawner_IsValidSpawnLocation_Params params {};
		params.OutTransform = OutTransform;
		params.PawnClass = PawnClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D860
	 * 		Name   -> Function TBL.Spawner.IsThereAPlayerTooClose
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                LocationIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsSpawningIn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int ASpawner::IsThereAPlayerTooClose(TBL_EFaction Faction, int LocationIndex, bool bIsSpawningIn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.IsThereAPlayerTooClose");
		
		ASpawner_IsThereAPlayerTooClose_Params params {};
		params.Faction = Faction;
		params.LocationIndex = LocationIndex;
		params.bIsSpawningIn = bIsSpawningIn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D820
	 * 		Name   -> Function TBL.Spawner.IsPendingLock
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ASpawner::IsPendingLock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.IsPendingLock");
		
		ASpawner_IsPendingLock_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D7D0
	 * 		Name   -> Function TBL.Spawner.HandleOnCustomizationJobsEmptied
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASpawner::HandleOnCustomizationJobsEmptied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.HandleOnCustomizationJobsEmptied");
		
		ASpawner_HandleOnCustomizationJobsEmptied_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D730
	 * 		Name   -> Function TBL.Spawner.HandleAddedReservation
	 * 		Flags  -> (Native, Event, Protected, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FSpawnerSpawnReservation                    Reservation                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASpawner::HandleAddedReservation(const struct FSpawnerSpawnReservation& Reservation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.HandleAddedReservation");
		
		ASpawner_HandleAddedReservation_Params params {};
		params.Reservation = Reservation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D700
	 * 		Name   -> Function TBL.Spawner.GetTotalReservations
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int ASpawner::GetTotalReservations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetTotalReservations");
		
		ASpawner_GetTotalReservations_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D2C0
	 * 		Name   -> Function TBL.Spawner.GetSpawnWave
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class ASpawnWave* ASpawner::GetSpawnWave()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetSpawnWave");
		
		ASpawner_GetSpawnWave_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D0F0
	 * 		Name   -> Function TBL.Spawner.GetSpawnLocationAndComponent
	 * 		Flags  -> (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 * Parameters:
	 * 		int                                                Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  OutTransform                                               (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              SpawnRadius                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SpawnHalfHeight                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USceneComponent* ASpawner::GetSpawnLocationAndComponent(int Index, struct FTransform* OutTransform, float* SpawnRadius, float* SpawnHalfHeight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetSpawnLocationAndComponent");
		
		ASpawner_GetSpawnLocationAndComponent_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTransform != nullptr)
			*OutTransform = params.OutTransform;
		if (SpawnRadius != nullptr)
			*SpawnRadius = params.SpawnRadius;
		if (SpawnHalfHeight != nullptr)
			*SpawnHalfHeight = params.SpawnHalfHeight;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D670
	 * 		Name   -> Function TBL.Spawner.GetSpawnerScoreForFaction
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ASpawner::GetSpawnerScoreForFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetSpawnerScoreForFaction");
		
		ASpawner_GetSpawnerScoreForFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D640
	 * 		Name   -> Function TBL.Spawner.GetSpawnerScoreForAllPlayers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float ASpawner::GetSpawnerScoreForAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetSpawnerScoreForAllPlayers");
		
		ASpawner_GetSpawnerScoreForAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D2F0
	 * 		Name   -> Function TBL.Spawner.GetSpawnedCharacters
	 * 		Flags  -> (Native, Public)
	 */
	TArray<class ATBLCharacter*> ASpawner::GetSpawnedCharacters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetSpawnedCharacters");
		
		ASpawner_GetSpawnedCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D0C0
	 * 		Name   -> Function TBL.Spawner.GetRemainingReservations
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int ASpawner::GetRemainingReservations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetRemainingReservations");
		
		ASpawner_GetRemainingReservations_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D090
	 * 		Name   -> Function TBL.Spawner.GetMinPlayerCount
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	int ASpawner::GetMinPlayerCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetMinPlayerCount");
		
		ASpawner_GetMinPlayerCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D060
	 * 		Name   -> Function TBL.Spawner.GetMaxPlayerCount
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	int ASpawner::GetMaxPlayerCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetMaxPlayerCount");
		
		ASpawner_GetMaxPlayerCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CFD0
	 * 		Name   -> Function TBL.Spawner.GetEquippedCarryableForController
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ASpawner::GetEquippedCarryableForController(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GetEquippedCarryableForController");
		
		ASpawner_GetEquippedCarryableForController_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.Spawner.GenerateSpawnComponents
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASpawner::GenerateSpawnComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.GenerateSpawnComponents");
		
		ASpawner_GenerateSpawnComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FC90
	 * 		Name   -> Function TBL.Spawner.ConditionalStopSpawning
	 * 		Flags  -> (Native, Public)
	 */
	void ASpawner::ConditionalStopSpawning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.ConditionalStopSpawning");
		
		ASpawner_ConditionalStopSpawning_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E93080
	 * 		Name   -> Function TBL.Spawner.Cinematics_StartAllowingControl
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawner::Cinematics_StartAllowingControl(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.Cinematics_StartAllowingControl");
		
		ASpawner_Cinematics_StartAllowingControl_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CEC0
	 * 		Name   -> Function TBL.Spawner.Cinematics_ControllerPossessedPawn
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLPlayerController*                        Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawner::Cinematics_ControllerPossessedPawn(class ATBLPlayerController* Controller, class ATBLCharacter* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.Cinematics_ControllerPossessedPawn");
		
		ASpawner_Cinematics_ControllerPossessedPawn_Params params {};
		params.Controller = Controller;
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Spawner.Cinematics_BecameNextSpawner
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLPlayerController*                        Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawner::Cinematics_BecameNextSpawner(class ATBLPlayerController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.Cinematics_BecameNextSpawner");
		
		ASpawner_Cinematics_BecameNextSpawner_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CC10
	 * 		Name   -> Function TBL.Spawner.ActualStopSpawning
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ASpawner::ActualStopSpawning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Spawner.ActualStopSpawning");
		
		ASpawner_ActualStopSpawning_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ASpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Spawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ASeatSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASeatSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SeatSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSeverBrowserEntryRowStyle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSeverBrowserEntryRowStyle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSeverBrowserEntryRowStyle");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164A1A0
	 * 		Name   -> Function TBL.ServerBrowserList.UseSavedSort
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UServerBrowserList::UseSavedSort()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.UseSavedSort");
		
		UServerBrowserList_UseSavedSort_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164A0B0
	 * 		Name   -> Function TBL.ServerBrowserList.SortServersByServerType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Descending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::SortServersByServerType(bool Descending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SortServersByServerType");
		
		UServerBrowserList_SortServersByServerType_Params params {};
		params.Descending = Descending;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164A020
	 * 		Name   -> Function TBL.ServerBrowserList.SortServersByServerName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Descending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::SortServersByServerName(bool Descending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SortServersByServerName");
		
		UServerBrowserList_SortServersByServerName_Params params {};
		params.Descending = Descending;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649F90
	 * 		Name   -> Function TBL.ServerBrowserList.SortServersByPlayerNumbers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Descending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::SortServersByPlayerNumbers(bool Descending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SortServersByPlayerNumbers");
		
		UServerBrowserList_SortServersByPlayerNumbers_Params params {};
		params.Descending = Descending;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649F00
	 * 		Name   -> Function TBL.ServerBrowserList.SortServersByPing
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Descending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::SortServersByPing(bool Descending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SortServersByPing");
		
		UServerBrowserList_SortServersByPing_Params params {};
		params.Descending = Descending;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649E70
	 * 		Name   -> Function TBL.ServerBrowserList.SortServersByMapName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Descending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::SortServersByMapName(bool Descending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SortServersByMapName");
		
		UServerBrowserList_SortServersByMapName_Params params {};
		params.Descending = Descending;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649DE0
	 * 		Name   -> Function TBL.ServerBrowserList.SortServersByGameMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Descending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::SortServersByGameMode(bool Descending)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SortServersByGameMode");
		
		UServerBrowserList_SortServersByGameMode_Params params {};
		params.Descending = Descending;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649C30
	 * 		Name   -> Function TBL.ServerBrowserList.SelectWidget
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Item                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::SelectWidget(const struct FBlueprintSessionResult& Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SelectWidget");
		
		UServerBrowserList_SelectWidget_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649C10
	 * 		Name   -> Function TBL.ServerBrowserList.SelectFirstWidget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UServerBrowserList::SelectFirstWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.SelectFirstWidget");
		
		UServerBrowserList_SelectFirstWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649B90
	 * 		Name   -> Function TBL.ServerBrowserList.RefreshServerList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EServerListType                                ListType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::RefreshServerList(TBL_EServerListType ListType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.RefreshServerList");
		
		UServerBrowserList_RefreshServerList_Params params {};
		params.ListType = ListType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649AB0
	 * 		Name   -> Function TBL.ServerBrowserList.RefreshServerEntry
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     SessionResult                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::RefreshServerEntry(const struct FBlueprintSessionResult& SessionResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.RefreshServerEntry");
		
		UServerBrowserList_RefreshServerEntry_Params params {};
		params.SessionResult = SessionResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649570
	 * 		Name   -> Function TBL.ServerBrowserList.OnRefreshCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EServerListType                                ListType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::OnRefreshCompleted(bool bSuccess, TBL_EServerListType ListType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.OnRefreshCompleted");
		
		UServerBrowserList_OnRefreshCompleted_Params params {};
		params.bSuccess = bSuccess;
		params.ListType = ListType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016494B0
	 * 		Name   -> Function TBL.ServerBrowserList.OnQueryCompleted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EServerListType                                ListType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::OnQueryCompleted(bool bSuccess, TBL_EServerListType ListType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.OnQueryCompleted");
		
		UServerBrowserList_OnQueryCompleted_Params params {};
		params.bSuccess = bSuccess;
		params.ListType = ListType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649350
	 * 		Name   -> Function TBL.ServerBrowserList.OnPingServerComplete
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     PingedSession                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::OnPingServerComplete(const struct FBlueprintSessionResult& PingedSession)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.OnPingServerComplete");
		
		UServerBrowserList_OnPingServerComplete_Params params {};
		params.PingedSession = PingedSession;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648F30
	 * 		Name   -> Function TBL.ServerBrowserList.GetSelectedWidget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UWidget* UServerBrowserList::GetSelectedWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.GetSelectedWidget");
		
		UServerBrowserList_GetSelectedWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648E60
	 * 		Name   -> Function TBL.ServerBrowserList.GetSelectedSession
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Out                                                        (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::GetSelectedSession(struct FBlueprintSessionResult* Out)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.GetSelectedSession");
		
		UServerBrowserList_GetSelectedSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Out != nullptr)
			*Out = params.Out;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648DA0
	 * 		Name   -> Function TBL.ServerBrowserList.GetCurrentFilteredItemsCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	int UServerBrowserList::GetCurrentFilteredItemsCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.GetCurrentFilteredItemsCount");
		
		UServerBrowserList_GetCurrentFilteredItemsCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648CC0
	 * 		Name   -> Function TBL.ServerBrowserList.FetchFilteredList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UServerBrowserList::FetchFilteredList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.FetchFilteredList");
		
		UServerBrowserList_FetchFilteredList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016489A0
	 * 		Name   -> Function TBL.ServerBrowserList.CreateFakeServers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NumberOfServers                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              ServerNames                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              MapNamesAndGameModes                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<int>                                        ListOfPossibleMaxPlayers                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UServerBrowserList::CreateFakeServers(int NumberOfServers, TArray<class FString> ServerNames, TArray<class FString> MapNamesAndGameModes, TArray<int> ListOfPossibleMaxPlayers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ServerBrowserList.CreateFakeServers");
		
		UServerBrowserList_CreateFakeServers_Params params {};
		params.NumberOfServers = NumberOfServers;
		params.ServerNames = ServerNames;
		params.MapNamesAndGameModes = MapNamesAndGameModes;
		params.ListOfPossibleMaxPlayers = ListOfPossibleMaxPlayers;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UServerBrowserList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UServerBrowserList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ServerBrowserList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USGComponent_TargetLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USGComponent_TargetLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SGComponent_TargetLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E920
	 * 		Name   -> Function TBL.SiegeMountPoint.UsePressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APawn*                                       InPawn                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InInteractable                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::UsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.UsePressed");
		
		USiegeMountPoint_UsePressed_Params params {};
		params.InPawn = InPawn;
		params.InInteractable = InInteractable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E8A0
	 * 		Name   -> Function TBL.SiegeMountPoint.UpdateInterpToMountLocation
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::UpdateInterpToMountLocation(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.UpdateInterpToMountLocation");
		
		USiegeMountPoint_UpdateInterpToMountLocation_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E2C0
	 * 		Name   -> Function TBL.SiegeMountPoint.SetInteractableComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::SetInteractableComponent(class UInteractableComponent* Interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.SetInteractableComponent");
		
		USiegeMountPoint_SetInteractableComponent_Params params {};
		params.Interactable = Interactable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164DCF0
	 * 		Name   -> Function TBL.SiegeMountPoint.OnCombatStateChanged
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.OnCombatStateChanged");
		
		USiegeMountPoint_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164DC10
	 * 		Name   -> Function TBL.SiegeMountPoint.OnCharacterKilledDuringInterp
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::OnCharacterKilledDuringInterp(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.OnCharacterKilledDuringInterp");
		
		USiegeMountPoint_OnCharacterKilledDuringInterp_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164DB30
	 * 		Name   -> Function TBL.SiegeMountPoint.OnCharacterKilled
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::OnCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.OnCharacterKilled");
		
		USiegeMountPoint_OnCharacterKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CFB0
	 * 		Name   -> Function TBL.SiegeMountPoint.DismountPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void USiegeMountPoint::DismountPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.DismountPressed");
		
		USiegeMountPoint_DismountPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CE30
	 * 		Name   -> Function TBL.SiegeMountPoint.CanMount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USiegeMountPoint::CanMount(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.CanMount");
		
		USiegeMountPoint_CanMount_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CD40
	 * 		Name   -> Function TBL.SiegeMountPoint.BroadcastPendingSpawn
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		bool                                               bNewPendingSpawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::BroadcastPendingSpawn(bool bNewPendingSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.BroadcastPendingSpawn");
		
		USiegeMountPoint_BroadcastPendingSpawn_Params params {};
		params.bNewPendingSpawn = bNewPendingSpawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CCB0
	 * 		Name   -> Function TBL.SiegeMountPoint.BroadcastInterpToMountLocation
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::BroadcastInterpToMountLocation(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.BroadcastInterpToMountLocation");
		
		USiegeMountPoint_BroadcastInterpToMountLocation_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164CC30
	 * 		Name   -> Function TBL.SiegeMountPoint.BroadcastDismount
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeMountPoint::BroadcastDismount(TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeMountPoint.BroadcastDismount");
		
		USiegeMountPoint_BroadcastDismount_Params params {};
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USiegeMountPoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USiegeMountPoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SiegeMountPoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USignificanceInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USignificanceInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SignificanceInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ASimpleSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASimpleSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SimpleSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFEF0
	 * 		Name   -> Function TBL.SingleTargetMethod.DelayFinish
	 * 		Flags  -> (Final, Native, Public)
	 */
	void USingleTargetMethod::DelayFinish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SingleTargetMethod.DelayFinish");
		
		USingleTargetMethod_DelayFinish_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USingleTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USingleTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SingleTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USourceType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USourceType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SourceType");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpawnLocationComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnLocationComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpawnLocationComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164D370
	 * 		Name   -> Function TBL.SpawnerScoreMethod.GetSpawnerScore
	 * 		Flags  -> (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
	 * Parameters:
	 * 		TMap<TBL_EFaction, float>                          ScoreResult                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     SpawnLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCharacterInfo>                      CharacterList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSpawnScoringConfig                         Config                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USpawnerScoreMethod::GetSpawnerScore(TMap<TBL_EFaction, float>* ScoreResult, const struct FVector& SpawnLocation, TArray<struct FCharacterInfo> CharacterList, const struct FSpawnScoringConfig& Config)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnerScoreMethod.GetSpawnerScore");
		
		USpawnerScoreMethod_GetSpawnerScore_Params params {};
		params.SpawnLocation = SpawnLocation;
		params.CharacterList = CharacterList;
		params.Config = Config;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ScoreResult != nullptr)
			*ScoreResult = params.ScoreResult;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpawnerScoreMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnerScoreMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpawnerScoreMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpawnerScoreMethod_FFA.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnerScoreMethod_FFA::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpawnerScoreMethod_FFA");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpawnQueuerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpawnQueuerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpawnQueuerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01653320
	 * 		Name   -> Function TBL.SpawnSequence.StartNextWave
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ASpawnSequence::StartNextWave()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.StartNextWave");
		
		ASpawnSequence_StartNextWave_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01653130
	 * 		Name   -> Function TBL.SpawnSequence.SetSpawnerList
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class ASpawner*>                            SpawnerList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::SetSpawnerList(TArray<class ASpawner*> SpawnerList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.SetSpawnerList");
		
		ASpawnSequence_SetSpawnerList_Params params {};
		params.SpawnerList = SpawnerList;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016530B0
	 * 		Name   -> Function TBL.SpawnSequence.SetSecondsBetweenWaves
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InSecondsBetweenWaves                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::SetSecondsBetweenWaves(float InSecondsBetweenWaves)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.SetSecondsBetweenWaves");
		
		ASpawnSequence_SetSecondsBetweenWaves_Params params {};
		params.InSecondsBetweenWaves = InSecondsBetweenWaves;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652FB0
	 * 		Name   -> Function TBL.SpawnSequence.RemoveSpawner
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ASpawner*                                    Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::RemoveSpawner(class ASpawner* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.RemoveSpawner");
		
		ASpawnSequence_RemoveSpawner_Params params {};
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652F30
	 * 		Name   -> Function TBL.SpawnSequence.PushSpawner
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ASpawner*                                    Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::PushSpawner(class ASpawner* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.PushSpawner");
		
		ASpawnSequence_PushSpawner_Params params {};
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652250
	 * 		Name   -> Function TBL.SpawnSequence.Initialize
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSpawnSequenceProperties                    Properties                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::Initialize(const struct FSpawnSequenceProperties& Properties)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.Initialize");
		
		ASpawnSequence_Initialize_Params params {};
		params.Properties = Properties;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652180
	 * 		Name   -> Function TBL.SpawnSequence.HandleSpawnWaveNotJoinable
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class ASpawnWave*                                  SpawnWave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::HandleSpawnWaveNotJoinable(class ASpawnWave* SpawnWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.HandleSpawnWaveNotJoinable");
		
		ASpawnSequence_HandleSpawnWaveNotJoinable_Params params {};
		params.SpawnWave = SpawnWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652100
	 * 		Name   -> Function TBL.SpawnSequence.HandleSpawnWaveDestroyed
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class AActor*                                      SpawnWave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::HandleSpawnWaveDestroyed(class AActor* SpawnWave)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.HandleSpawnWaveDestroyed");
		
		ASpawnSequence_HandleSpawnWaveDestroyed_Params params {};
		params.SpawnWave = SpawnWave;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016516D0
	 * 		Name   -> Function TBL.SpawnSequence.ForceSpawnController
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::ForceSpawnController(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.ForceSpawnController");
		
		ASpawnSequence_ForceSpawnController_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651660
	 * 		Name   -> Function TBL.SpawnSequence.EmptySpawnerList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ASpawnSequence::EmptySpawnerList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.EmptySpawnerList");
		
		ASpawnSequence_EmptySpawnerList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651620
	 * 		Name   -> Function TBL.SpawnSequence.Deactivate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ASpawnSequence::Deactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.Deactivate");
		
		ASpawnSequence_Deactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651560
	 * 		Name   -> Function TBL.SpawnSequence.AddSpawner
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ASpawner*                                    Spawner                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::AddSpawner(class ASpawner* Spawner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.AddSpawner");
		
		ASpawnSequence_AddSpawner_Params params {};
		params.Spawner = Spawner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016514E0
	 * 		Name   -> Function TBL.SpawnSequence.ActivateDeactivate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ESpawnSequenceActivateDeactivateAction         Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnSequence::ActivateDeactivate(TBL_ESpawnSequenceActivateDeactivateAction Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.ActivateDeactivate");
		
		ASpawnSequence_ActivateDeactivate_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016514B0
	 * 		Name   -> Function TBL.SpawnSequence.Activate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ASpawnSequence::Activate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnSequence.Activate");
		
		ASpawnSequence_Activate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ASpawnSequence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASpawnSequence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpawnSequence");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCarryableSpawnSpec.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCarryableSpawnSpec::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CarryableSpawnSpec");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651FC0
	 * 		Name   -> Function TBL.RandomCarryableSpawnLoadout.GetRandomCarryable
	 * 		Flags  -> (Final, Native, Public)
	 */
	class UClass* URandomCarryableSpawnLoadout::GetRandomCarryable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.RandomCarryableSpawnLoadout.GetRandomCarryable");
		
		URandomCarryableSpawnLoadout_GetRandomCarryable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction URandomCarryableSpawnLoadout.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URandomCarryableSpawnLoadout::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.RandomCarryableSpawnLoadout");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652560
	 * 		Name   -> Function TBL.SpecialSpawnSpec.IsAllowedClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USpecialSpawnSpec::IsAllowedClass(class UClass* CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.IsAllowedClass");
		
		USpecialSpawnSpec_IsAllowedClass_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652200
	 * 		Name   -> Function TBL.SpecialSpawnSpec.HasAllowedClassList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool USpecialSpawnSpec::HasAllowedClassList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.HasAllowedClassList");
		
		USpecialSpawnSpec_HasAllowedClassList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652000
	 * 		Name   -> Function TBL.SpecialSpawnSpec.GetRandomClassLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UClass* USpecialSpawnSpec::GetRandomClassLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.GetRandomClassLoadout");
		
		USpecialSpawnSpec_GetRandomClassLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651830
	 * 		Name   -> Function TBL.SpecialSpawnSpec.GetAllowedClassLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* USpecialSpawnSpec::GetAllowedClassLoadout(class UClass* CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.GetAllowedClassLoadout");
		
		USpecialSpawnSpec_GetAllowedClassLoadout_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016519E0
	 * 		Name   -> Function TBL.SpecialSpawnSpec.GetAllowedClassesSet
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLPlayerController*                        TargetController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpecialSpawnSpec::GetAllowedClassesSet(class ATBLPlayerController* TargetController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.GetAllowedClassesSet");
		
		USpecialSpawnSpec_GetAllowedClassesSet_Params params {};
		params.TargetController = TargetController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016518F0
	 * 		Name   -> Function TBL.SpecialSpawnSpec.GetAllowedClassesList
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TArray<class UClass*>                              AllowedClassesList                                         (Parm, OutParm, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerController*                        TargetController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpecialSpawnSpec::GetAllowedClassesList(TArray<class UClass*>* AllowedClassesList, class ATBLPlayerController* TargetController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.GetAllowedClassesList");
		
		USpecialSpawnSpec_GetAllowedClassesList_Params params {};
		params.TargetController = TargetController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (AllowedClassesList != nullptr)
			*AllowedClassesList = params.AllowedClassesList;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016518C0
	 * 		Name   -> Function TBL.SpecialSpawnSpec.GetAllowedClasses
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TMap<class UClass*, class UClass*> USpecialSpawnSpec::GetAllowedClasses()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.GetAllowedClasses");
		
		USpecialSpawnSpec_GetAllowedClasses_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016516A0
	 * 		Name   -> Function TBL.SpecialSpawnSpec.ForceBotsUseLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool USpecialSpawnSpec::ForceBotsUseLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialSpawnSpec.ForceBotsUseLoadout");
		
		USpecialSpawnSpec_ForceBotsUseLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpecialSpawnSpec.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpecialSpawnSpec::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpecialSpawnSpec");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.SpecialItemAbility.OnUseItem
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void USpecialItemAbility::OnUseItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnUseItem");
		
		USpecialItemAbility_OnUseItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652DA0
	 * 		Name   -> Function TBL.SpecialItemAbility.OnStartHeal
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      HealedActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpecialItemAbility::OnStartHeal(class AActor* HealedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnStartHeal");
		
		USpecialItemAbility_OnStartHeal_Params params {};
		params.HealedActor = HealedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652D40
	 * 		Name   -> Function TBL.SpecialItemAbility.OnRechargeTimer
	 * 		Flags  -> (Final, Native, Public)
	 */
	void USpecialItemAbility::OnRechargeTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnRechargeTimer");
		
		USpecialItemAbility_OnRechargeTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652C80
	 * 		Name   -> Function TBL.SpecialItemAbility.OnPawnRevived
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       RevivedPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       RevivorPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpecialItemAbility::OnPawnRevived(class APawn* RevivedPlayer, class APawn* RevivorPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnPawnRevived");
		
		USpecialItemAbility_OnPawnRevived_Params params {};
		params.RevivedPlayer = RevivedPlayer;
		params.RevivorPlayer = RevivorPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652AF0
	 * 		Name   -> Function TBL.SpecialItemAbility.OnParrySuccess
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               ThisCharacter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OtherCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventState                            ParryEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USpecialItemAbility::OnParrySuccess(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnParrySuccess");
		
		USpecialItemAbility_OnParrySuccess_Params params {};
		params.ThisCharacter = ThisCharacter;
		params.OtherCharacter = OtherCharacter;
		params.ParryEventState = ParryEventState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652A10
	 * 		Name   -> Function TBL.SpecialItemAbility.OnKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USpecialItemAbility::OnKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnKilled");
		
		USpecialItemAbility_OnKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652950
	 * 		Name   -> Function TBL.SpecialItemAbility.OnItemStackChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpecialItemAbility::OnItemStackChanged(class AInventoryItem* Item, int Delta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnItemStackChanged");
		
		USpecialItemAbility_OnItemStackChanged_Params params {};
		params.Item = Item;
		params.Delta = Delta;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652930
	 * 		Name   -> Function TBL.SpecialItemAbility.OnEquippedItemsChanged
	 * 		Flags  -> (Final, Native, Public)
	 */
	void USpecialItemAbility::OnEquippedItemsChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnEquippedItemsChanged");
		
		USpecialItemAbility_OnEquippedItemsChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652880
	 * 		Name   -> Function TBL.SpecialItemAbility.OnDamageTaken
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USpecialItemAbility::OnDamageTaken(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnDamageTaken");
		
		USpecialItemAbility_OnDamageTaken_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016527D0
	 * 		Name   -> Function TBL.SpecialItemAbility.OnDamageCaused
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USpecialItemAbility::OnDamageCaused(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.OnDamageCaused");
		
		USpecialItemAbility_OnDamageCaused_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652230
	 * 		Name   -> Function TBL.SpecialItemAbility.IncreaseStackCount
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void USpecialItemAbility::IncreaseStackCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.IncreaseStackCount");
		
		USpecialItemAbility_IncreaseStackCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651F90
	 * 		Name   -> Function TBL.SpecialItemAbility.GetPerkBonus
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int USpecialItemAbility::GetPerkBonus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.GetPerkBonus");
		
		USpecialItemAbility_GetPerkBonus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651F60
	 * 		Name   -> Function TBL.SpecialItemAbility.GetMaxCharge
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float USpecialItemAbility::GetMaxCharge()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.GetMaxCharge");
		
		USpecialItemAbility_GetMaxCharge_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651C50
	 * 		Name   -> Function TBL.SpecialItemAbility.GetCurrentCharge
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float USpecialItemAbility::GetCurrentCharge()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.GetCurrentCharge");
		
		USpecialItemAbility_GetCurrentCharge_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651640
	 * 		Name   -> Function TBL.SpecialItemAbility.DecreaseStackCount
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void USpecialItemAbility::DecreaseStackCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.DecreaseStackCount");
		
		USpecialItemAbility_DecreaseStackCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.SpecialItemAbility.BattlecryAbilityStart
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void USpecialItemAbility::BattlecryAbilityStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.BattlecryAbilityStart");
		
		USpecialItemAbility_BattlecryAbilityStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.SpecialItemAbility.BattlecryAbilityEnd
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void USpecialItemAbility::BattlecryAbilityEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.BattlecryAbilityEnd");
		
		USpecialItemAbility_BattlecryAbilityEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016515E0
	 * 		Name   -> Function TBL.SpecialItemAbility.ApplyHelperBonus
	 * 		Flags  -> (Final, Native, Public)
	 */
	void USpecialItemAbility::ApplyHelperBonus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpecialItemAbility.ApplyHelperBonus");
		
		USpecialItemAbility_ApplyHelperBonus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpecialItemAbility.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpecialItemAbility::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpecialItemAbility");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657510
	 * 		Name   -> Function TBL.SphereTargetMethod.GetSphereCenter
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FVector                                     SphereCenter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  ControllerTransform                                        (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USphereTargetMethod::GetSphereCenter(struct FVector* SphereCenter, struct FTransform* ControllerTransform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SphereTargetMethod.GetSphereCenter");
		
		USphereTargetMethod_GetSphereCenter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SphereCenter != nullptr)
			*SphereCenter = params.SphereCenter;
		if (ControllerTransform != nullptr)
			*ControllerTransform = params.ControllerTransform;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFEF0
	 * 		Name   -> Function TBL.SphereTargetMethod.DelayFinish
	 * 		Flags  -> (Final, Native, Public)
	 */
	void USphereTargetMethod::DelayFinish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SphereTargetMethod.DelayFinish");
		
		USphereTargetMethod_DelayFinish_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USphereTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USphereTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SphereTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016583F0
	 * 		Name   -> Function TBL.SpinBoxInt.SetValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::SetValue(int NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.SetValue");
		
		USpinBoxInt_SetValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01658370
	 * 		Name   -> Function TBL.SpinBoxInt.SetMinValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::SetMinValue(int NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.SetMinValue");
		
		USpinBoxInt_SetMinValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016582F0
	 * 		Name   -> Function TBL.SpinBoxInt.SetMinSliderValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::SetMinSliderValue(int NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.SetMinSliderValue");
		
		USpinBoxInt_SetMinSliderValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01658270
	 * 		Name   -> Function TBL.SpinBoxInt.SetMaxValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::SetMaxValue(int NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.SetMaxValue");
		
		USpinBoxInt_SetMaxValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016581F0
	 * 		Name   -> Function TBL.SpinBoxInt.SetMaxSliderValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                NewValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::SetMaxSliderValue(int NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.SetMaxSliderValue");
		
		USpinBoxInt_SetMaxSliderValue_Params params {};
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01658100
	 * 		Name   -> Function TBL.SpinBoxInt.SetForegroundColor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSlateColor                                 InForegroundColor                                          (Parm, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::SetForegroundColor(const struct FSlateColor& InForegroundColor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.SetForegroundColor");
		
		USpinBoxInt_SetForegroundColor_Params params {};
		params.InForegroundColor = InForegroundColor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.SpinBoxInt.OnSpinBoxValueCommittedEvent__DelegateSignature
	 * 		Flags  -> (MulticastDelegate, Public, Delegate)
	 * Parameters:
	 * 		int                                                InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		SlateCore_ETextCommit                              CommitMethod                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::OnSpinBoxValueCommittedEvent__DelegateSignature(int InValue, SlateCore_ETextCommit CommitMethod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.SpinBoxInt.OnSpinBoxValueCommittedEvent__DelegateSignature");
		
		USpinBoxInt_OnSpinBoxValueCommittedEvent__DelegateSignature_Params params {};
		params.InValue = InValue;
		params.CommitMethod = CommitMethod;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.SpinBoxInt.OnSpinBoxValueChangedEvent__DelegateSignature
	 * 		Flags  -> (MulticastDelegate, Public, Delegate)
	 * Parameters:
	 * 		int                                                InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USpinBoxInt::OnSpinBoxValueChangedEvent__DelegateSignature(int InValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.SpinBoxInt.OnSpinBoxValueChangedEvent__DelegateSignature");
		
		USpinBoxInt_OnSpinBoxValueChangedEvent__DelegateSignature_Params params {};
		params.InValue = InValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.SpinBoxInt.OnSpinBoxBeginSliderMovement__DelegateSignature
	 * 		Flags  -> (MulticastDelegate, Public, Delegate)
	 */
	void USpinBoxInt::OnSpinBoxBeginSliderMovement__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.SpinBoxInt.OnSpinBoxBeginSliderMovement__DelegateSignature");
		
		USpinBoxInt_OnSpinBoxBeginSliderMovement__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657770
	 * 		Name   -> Function TBL.SpinBoxInt.GetValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int USpinBoxInt::GetValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.GetValue");
		
		USpinBoxInt_GetValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016574E0
	 * 		Name   -> Function TBL.SpinBoxInt.GetMinValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int USpinBoxInt::GetMinValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.GetMinValue");
		
		USpinBoxInt_GetMinValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016574B0
	 * 		Name   -> Function TBL.SpinBoxInt.GetMinSliderValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int USpinBoxInt::GetMinSliderValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.GetMinSliderValue");
		
		USpinBoxInt_GetMinSliderValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657480
	 * 		Name   -> Function TBL.SpinBoxInt.GetMaxValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int USpinBoxInt::GetMaxValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.GetMaxValue");
		
		USpinBoxInt_GetMaxValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657450
	 * 		Name   -> Function TBL.SpinBoxInt.GetMaxSliderValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int USpinBoxInt::GetMaxSliderValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.GetMaxSliderValue");
		
		USpinBoxInt_GetMaxSliderValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016571E0
	 * 		Name   -> Function TBL.SpinBoxInt.ClearMinValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void USpinBoxInt::ClearMinValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.ClearMinValue");
		
		USpinBoxInt_ClearMinValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016571C0
	 * 		Name   -> Function TBL.SpinBoxInt.ClearMinSliderValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void USpinBoxInt::ClearMinSliderValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.ClearMinSliderValue");
		
		USpinBoxInt_ClearMinSliderValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016571A0
	 * 		Name   -> Function TBL.SpinBoxInt.ClearMaxValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void USpinBoxInt::ClearMaxValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.ClearMaxValue");
		
		USpinBoxInt_ClearMaxValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657180
	 * 		Name   -> Function TBL.SpinBoxInt.ClearMaxSliderValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void USpinBoxInt::ClearMaxSliderValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpinBoxInt.ClearMaxSliderValue");
		
		USpinBoxInt_ClearMaxSliderValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USpinBoxInt.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USpinBoxInt::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpinBoxInt");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StagedLevelBlueprintInterface.GetFirstStage
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UStagedLevelBlueprintInterface::GetFirstStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StagedLevelBlueprintInterface.GetFirstStage");
		
		UStagedLevelBlueprintInterface_GetFirstStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStagedLevelBlueprintInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStagedLevelBlueprintInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StagedLevelBlueprintInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StageInterface.StartStage
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UStageInterface::StartStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StageInterface.StartStage");
		
		UStageInterface_StartStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StageInterface.IsStageReadyToComplete
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	bool UStageInterface::IsStageReadyToComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StageInterface.IsStageReadyToComplete");
		
		UStageInterface_IsStageReadyToComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StageInterface.GetTimeRemainingPercent
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	float UStageInterface::GetTimeRemainingPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StageInterface.GetTimeRemainingPercent");
		
		UStageInterface_GetTimeRemainingPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StageInterface.GetTimeRemaining
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	float UStageInterface::GetTimeRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StageInterface.GetTimeRemaining");
		
		UStageInterface_GetTimeRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StageInterface.GetStageIdNum
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	int UStageInterface::GetStageIdNum()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StageInterface.GetStageIdNum");
		
		UStageInterface_GetStageIdNum_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StageInterface.GetStageCommander
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* UStageInterface::GetStageCommander(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StageInterface.GetStageCommander");
		
		UStageInterface_GetStageCommander_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.StageInterface.CompleteStage
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UStageInterface::CompleteStage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StageInterface.CompleteStage");
		
		UStageInterface_CompleteStage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStageInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStageInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StageInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStandardDamage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStandardDamage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StandardDamage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStartJump.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStartJump::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StartJump");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657A30
	 * 		Name   -> Function TBL.StartMovement.OnStartMovement
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UStartMovement::OnStartMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StartMovement.OnStartMovement");
		
		UStartMovement_OnStartMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016579B0
	 * 		Name   -> Function TBL.StartMovement.OnFinishMovement
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UStartMovement::OnFinishMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StartMovement.OnFinishMovement");
		
		UStartMovement_OnFinishMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStartMovement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStartMovement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StartMovement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016586C0
	 * 		Name   -> Function TBL.StatsComponent.UndoDisableRegeneration
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::UndoDisableRegeneration(int ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.UndoDisableRegeneration");
		
		UStatsComponent_UndoDisableRegeneration_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01658470
	 * 		Name   -> Function TBL.StatsComponent.StartHealOverTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Speed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCurveFloat*                                 Curve                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Healer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             InstigatorPlayerState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               AwardHealingScore                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOverheal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHealingSource                                 HealingSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::StartHealOverTime(float Amount, float Speed, class UCurveFloat* Curve, class ATBLCharacter* Healer, class ATBLPlayerState* InstigatorPlayerState, bool AwardHealingScore, bool bOverheal, TBL_EHealingSource HealingSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.StartHealOverTime");
		
		UStatsComponent_StartHealOverTime_Params params {};
		params.Amount = Amount;
		params.Speed = Speed;
		params.Curve = Curve;
		params.Healer = Healer;
		params.InstigatorPlayerState = InstigatorPlayerState;
		params.AwardHealingScore = AwardHealingScore;
		params.bOverheal = bOverheal;
		params.HealingSource = HealingSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657FF0
	 * 		Name   -> Function TBL.StatsComponent.SetBase
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCanOverCharge                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::SetBase(TBL_EStat Stat, float Value, bool bCanOverCharge)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.SetBase");
		
		UStatsComponent_SetBase_Params params {};
		params.Stat = Stat;
		params.Value = Value;
		params.bCanOverCharge = bCanOverCharge;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657F70
	 * 		Name   -> Function TBL.StatsComponent.SetAllowedDamagingFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       InFaction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::SetAllowedDamagingFaction(TBL_EFaction InFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.SetAllowedDamagingFaction");
		
		UStatsComponent_SetAllowedDamagingFaction_Params params {};
		params.InFaction = InFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657E70
	 * 		Name   -> Function TBL.StatsComponent.ServerDebugSetBase
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ServerDebugSetBase(TBL_EStat Stat, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ServerDebugSetBase");
		
		UStatsComponent_ServerDebugSetBase_Params params {};
		params.Stat = Stat;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657D70
	 * 		Name   -> Function TBL.StatsComponent.ServerDebugApplyDamage
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ServerDebugApplyDamage(float Damage, class UDamageSource* DamageSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ServerDebugApplyDamage");
		
		UStatsComponent_ServerDebugApplyDamage_Params params {};
		params.Damage = Damage;
		params.DamageSource = DamageSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657C70
	 * 		Name   -> Function TBL.StatsComponent.ServerDebugApplyBonus
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ServerDebugApplyBonus(TBL_EStat Stat, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ServerDebugApplyBonus");
		
		UStatsComponent_ServerDebugApplyBonus_Params params {};
		params.Stat = Stat;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657B60
	 * 		Name   -> Function TBL.StatsComponent.ReceiveHealthChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      InitiatorActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ReceiveHealthChanged(float Amount, class UDamageSource* DamageSource, class AActor* InitiatorActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ReceiveHealthChanged");
		
		UStatsComponent_ReceiveHealthChanged_Params params {};
		params.Amount = Amount;
		params.DamageSource = DamageSource;
		params.InitiatorActor = InitiatorActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657A50
	 * 		Name   -> Function TBL.StatsComponent.ReceiveExperienceChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      InitiatorActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ReceiveExperienceChanged(float Amount, class UDamageSource* DamageSource, class AActor* InitiatorActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ReceiveExperienceChanged");
		
		UStatsComponent_ReceiveExperienceChanged_Params params {};
		params.Amount = Amount;
		params.DamageSource = DamageSource;
		params.InitiatorActor = InitiatorActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657A10
	 * 		Name   -> Function TBL.StatsComponent.OnRep_Stamina
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UStatsComponent::OnRep_Stamina()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.OnRep_Stamina");
		
		UStatsComponent_OnRep_Stamina_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016579F0
	 * 		Name   -> Function TBL.StatsComponent.OnRep_MaxHealth
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UStatsComponent::OnRep_MaxHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.OnRep_MaxHealth");
		
		UStatsComponent_OnRep_MaxHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016579D0
	 * 		Name   -> Function TBL.StatsComponent.OnRep_Health
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UStatsComponent::OnRep_Health()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.OnRep_Health");
		
		UStatsComponent_OnRep_Health_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657920
	 * 		Name   -> Function TBL.StatsComponent.IsRegenerationDisabled
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UStatsComponent::IsRegenerationDisabled(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.IsRegenerationDisabled");
		
		UStatsComponent_IsRegenerationDisabled_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016578F0
	 * 		Name   -> Function TBL.StatsComponent.IsDead
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UStatsComponent::IsDead()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.IsDead");
		
		UStatsComponent_IsDead_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657860
	 * 		Name   -> Function TBL.StatsComponent.HasMod
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EMod                                           Mod                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UStatsComponent::HasMod(TBL_EMod Mod)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.HasMod");
		
		UStatsComponent_HasMod_Params params {};
		params.Mod = Mod;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016577D0
	 * 		Name   -> Function TBL.StatsComponent.HasHealOverTimeOfSource
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EHealingSource                                 HealingSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UStatsComponent::HasHealOverTimeOfSource(TBL_EHealingSource HealingSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.HasHealOverTimeOfSource");
		
		UStatsComponent_HasHealOverTimeOfSource_Params params {};
		params.HealingSource = HealingSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016577A0
	 * 		Name   -> Function TBL.StatsComponent.HasHealOverTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UStatsComponent::HasHealOverTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.HasHealOverTime");
		
		UStatsComponent_HasHealOverTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016576E0
	 * 		Name   -> Function TBL.StatsComponent.GetStatChangedDelegate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStatsDelegateObject* UStatsComponent::GetStatChangedDelegate(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.GetStatChangedDelegate");
		
		UStatsComponent_GetStatChangedDelegate_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657630
	 * 		Name   -> Function TBL.StatsComponent.GetStat
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FStatEntry UStatsComponent::GetStat(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.GetStat");
		
		UStatsComponent_GetStat_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657420
	 * 		Name   -> Function TBL.StatsComponent.GetHealthPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UStatsComponent::GetHealthPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.GetHealthPercent");
		
		UStatsComponent_GetHealthPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016573F0
	 * 		Name   -> Function TBL.StatsComponent.GetHealOverTimeLeft
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UStatsComponent::GetHealOverTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.GetHealOverTimeLeft");
		
		UStatsComponent_GetHealOverTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016573C0
	 * 		Name   -> Function TBL.StatsComponent.GetExperienceLevel
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int UStatsComponent::GetExperienceLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.GetExperienceLevel");
		
		UStatsComponent_GetExperienceLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016573A0
	 * 		Name   -> Function TBL.StatsComponent.GetAllowedDamagingFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TBL_EFaction UStatsComponent::GetAllowedDamagingFaction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.GetAllowedDamagingFaction");
		
		UStatsComponent_GetAllowedDamagingFaction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657320
	 * 		Name   -> Function TBL.StatsComponent.DrainStamina
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::DrainStamina(float Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.DrainStamina");
		
		UStatsComponent_DrainStamina_Params params {};
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657290
	 * 		Name   -> Function TBL.StatsComponent.DisableRegeneration
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UStatsComponent::DisableRegeneration(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.DisableRegeneration");
		
		UStatsComponent_DisableRegeneration_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657200
	 * 		Name   -> Function TBL.StatsComponent.Current
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UStatsComponent::Current(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.Current");
		
		UStatsComponent_Current_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01657080
	 * 		Name   -> Function TBL.StatsComponent.BroadcastKilled
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		TArray<class AActor*>                              Killers                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBroadcastKilledParams                      Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::BroadcastKilled(TArray<class AActor*> Killers, const struct FBroadcastKilledParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.BroadcastKilled");
		
		UStatsComponent_BroadcastKilled_Params params {};
		params.Killers = Killers;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656EC0
	 * 		Name   -> Function TBL.StatsComponent.BroadcastHealOverTime
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Speed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCurveFloat*                                 Curve                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             InstigatorPlayerState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOverheal                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHealingSource                                 HealingSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::BroadcastHealOverTime(float Amount, float Speed, class UCurveFloat* Curve, class ATBLPlayerState* InstigatorPlayerState, bool bOverheal, TBL_EHealingSource HealingSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.BroadcastHealOverTime");
		
		UStatsComponent_BroadcastHealOverTime_Params params {};
		params.Amount = Amount;
		params.Speed = Speed;
		params.Curve = Curve;
		params.InstigatorPlayerState = InstigatorPlayerState;
		params.bOverheal = bOverheal;
		params.HealingSource = HealingSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656D50
	 * 		Name   -> Function TBL.StatsComponent.BroadcastDamageTaken
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		struct FDamageTakenEventCompressed                 Event                                                      (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		int                                                InvocationId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::BroadcastDamageTaken(const struct FDamageTakenEventCompressed& Event, int InvocationId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.BroadcastDamageTaken");
		
		UStatsComponent_BroadcastDamageTaken_Params params {};
		params.Event = Event;
		params.InvocationId = InvocationId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656CC0
	 * 		Name   -> Function TBL.StatsComponent.BonusPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UStatsComponent::BonusPercent(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.BonusPercent");
		
		UStatsComponent_BonusPercent_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656C30
	 * 		Name   -> Function TBL.StatsComponent.Bonus
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UStatsComponent::Bonus(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.Bonus");
		
		UStatsComponent_Bonus_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656BA0
	 * 		Name   -> Function TBL.StatsComponent.base
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UStatsComponent::base(TBL_EStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.base");
		
		UStatsComponent_base_Params params {};
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656AE0
	 * 		Name   -> Function TBL.StatsComponent.ApplyPlayerCountHealthScalingCurve
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCurveFloat*                                 OverrideCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UStatsComponent::STATIC_ApplyPlayerCountHealthScalingCurve(class UObject* Target, class UCurveFloat* OverrideCurve)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ApplyPlayerCountHealthScalingCurve");
		
		UStatsComponent_ApplyPlayerCountHealthScalingCurve_Params params {};
		params.Target = Target;
		params.OverrideCurve = OverrideCurve;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656A20
	 * 		Name   -> Function TBL.StatsComponent.ApplyModDelta
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EMod                                           Mod                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ApplyModDelta(TBL_EMod Mod, int Delta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ApplyModDelta");
		
		UStatsComponent_ApplyModDelta_Params params {};
		params.Mod = Mod;
		params.Delta = Delta;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656910
	 * 		Name   -> Function TBL.StatsComponent.ApplyBonusPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCanOverCharge                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ApplyBonusPercent(TBL_EStat Stat, float Value, bool bCanOverCharge)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ApplyBonusPercent");
		
		UStatsComponent_ApplyBonusPercent_Params params {};
		params.Stat = Stat;
		params.Value = Value;
		params.bCanOverCharge = bCanOverCharge;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656800
	 * 		Name   -> Function TBL.StatsComponent.ApplyBonus
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCanOverCharge                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::ApplyBonus(TBL_EStat Stat, float Value, bool bCanOverCharge)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.ApplyBonus");
		
		UStatsComponent_ApplyBonus_Params params {};
		params.Stat = Stat;
		params.Value = Value;
		params.bCanOverCharge = bCanOverCharge;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01656780
	 * 		Name   -> Function TBL.StatsComponent.AddStamina
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UStatsComponent::AddStamina(float Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.StatsComponent.AddStamina");
		
		UStatsComponent_AddStamina_Params params {};
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStatsComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStatsComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StatsComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStatsDelegateObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStatsDelegateObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StatsDelegateObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UStoreOffersList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UStoreOffersList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.StoreOffersList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAchievementSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAchievementSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAchievementSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLAchievementSubsystem.ResetAchievements
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void UTBLAchievementSubsystem::ResetAchievements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAchievementSubsystem.ResetAchievements");
		
		UTBLAchievementSubsystem_ResetAchievements_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CA50
	 * 		Name   -> Function TBL.TBLAchievementSubsystem.OnWorldDestroy
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAchievementSubsystem::OnWorldDestroy(class UWorld* World)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAchievementSubsystem.OnWorldDestroy");
		
		UTBLAchievementSubsystem_OnWorldDestroy_Params params {};
		params.World = World;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C9D0
	 * 		Name   -> Function TBL.TBLAchievementSubsystem.OnWorldCreation
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAchievementSubsystem::OnWorldCreation(class UWorld* World)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAchievementSubsystem.OnWorldCreation");
		
		UTBLAchievementSubsystem_OnWorldCreation_Params params {};
		params.World = World;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAchievementSubsystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAchievementSubsystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAchievementSubsystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C8C0
	 * 		Name   -> Function TBL.TBLActivitySubsystem.OnWorldCleanup
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSessionEnded                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCleanupResources                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLActivitySubsystem::OnWorldCleanup(class UWorld* World, bool bSessionEnded, bool bCleanupResources)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLActivitySubsystem.OnWorldCleanup");
		
		UTBLActivitySubsystem_OnWorldCleanup_Params params {};
		params.World = World;
		params.bSessionEnded = bSessionEnded;
		params.bCleanupResources = bCleanupResources;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C840
	 * 		Name   -> Function TBL.TBLActivitySubsystem.OnPostLoadMap
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UWorld*                                      LoadedWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLActivitySubsystem::OnPostLoadMap(class UWorld* LoadedWorld)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLActivitySubsystem.OnPostLoadMap");
		
		UTBLActivitySubsystem_OnPostLoadMap_Params params {};
		params.LoadedWorld = LoadedWorld;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BDD0
	 * 		Name   -> Function TBL.TBLActivitySubsystem.HandleStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FName                                        CurrentState                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLActivitySubsystem::HandleStateChanged(const class FName& CurrentState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLActivitySubsystem.HandleStateChanged");
		
		UTBLActivitySubsystem_HandleStateChanged_Params params {};
		params.CurrentState = CurrentState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLActivitySubsystem.HandleOnTitleDataUpdated
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLActivitySubsystem::HandleOnTitleDataUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLActivitySubsystem.HandleOnTitleDataUpdated");
		
		UTBLActivitySubsystem_HandleOnTitleDataUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLActivitySubsystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLActivitySubsystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLActivitySubsystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCharacterCustomization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCustomization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CharacterCustomization");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDefaultCharacterCustomization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDefaultCharacterCustomization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DefaultCharacterCustomization");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDefaultWeaponCustomization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDefaultWeaponCustomization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DefaultWeaponCustomization");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCustomizationDebugPresetSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCustomizationDebugPresetSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CustomizationDebugPresetSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8F70
	 * 		Name   -> Function TBL.DamagerInterface.ShouldDealTeamDamageAgainst
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      TargetTeammate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UDamagerInterface::ShouldDealTeamDamageAgainst(class AActor* TargetTeammate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DamagerInterface.ShouldDealTeamDamageAgainst");
		
		UDamagerInterface_ShouldDealTeamDamageAgainst_Params params {};
		params.TargetTeammate = TargetTeammate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDamagerInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamagerInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DamagerInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDamageSource.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDamageSource::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DamageSource");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDelay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDelay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Delay");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8AF0
	 * 		Name   -> Function TBL.DelegateWrapper_ActorDestroyed.OnExecute
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDelegateWrapper_ActorDestroyed::OnExecute(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DelegateWrapper_ActorDestroyed.OnExecute");
		
		UDelegateWrapper_ActorDestroyed_OnExecute_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDelegateWrapper_ActorDestroyed.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDelegateWrapper_ActorDestroyed::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DelegateWrapper_ActorDestroyed");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.DemoList.RefreshDemoList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UDemoList::RefreshDemoList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DemoList.RefreshDemoList");
		
		UDemoList_RefreshDemoList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDemoList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDemoList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DemoList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01602070
	 * 		Name   -> Function TBL.FollowMasterSkeletalMeshComponent.SetPoseOffset
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                Offset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFollowMasterSkeletalMeshComponent::SetPoseOffset(int Offset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FollowMasterSkeletalMeshComponent.SetPoseOffset");
		
		UFollowMasterSkeletalMeshComponent_SetPoseOffset_Params params {};
		params.Offset = Offset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFollowMasterSkeletalMeshComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFollowMasterSkeletalMeshComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FollowMasterSkeletalMeshComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8F530
	 * 		Name   -> Function TBL.SpawnWave.StartPrespawning
	 * 		Flags  -> (Native, Protected)
	 */
	void ASpawnWave::StartPrespawning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.StartPrespawning");
		
		ASpawnWave_StartPrespawning_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01653290
	 * 		Name   -> Function TBL.SpawnWave.StartCleanupTimer
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bRestart                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnWave::StartCleanupTimer(bool bRestart)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.StartCleanupTimer");
		
		ASpawnWave_StartCleanupTimer_Params params {};
		params.bRestart = bRestart;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01653210
	 * 		Name   -> Function TBL.SpawnWave.SpawnController
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnWave::SpawnController(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.SpawnController");
		
		ASpawnWave_SpawnController_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016531E0
	 * 		Name   -> Function TBL.SpawnWave.ShouldShowSpawnPrompt
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ASpawnWave::ShouldShowSpawnPrompt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.ShouldShowSpawnPrompt");
		
		ASpawnWave_ShouldShowSpawnPrompt_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01653030
	 * 		Name   -> Function TBL.SpawnWave.SetClientJoinTime
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              InClientJoinWorldTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnWave::SetClientJoinTime(float InClientJoinWorldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.SetClientJoinTime");
		
		ASpawnWave_SetClientJoinTime_Params params {};
		params.InClientJoinWorldTime = InClientJoinWorldTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652F10
	 * 		Name   -> Function TBL.SpawnWave.Public_StartSpawning
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void ASpawnWave::Public_StartSpawning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.Public_StartSpawning");
		
		ASpawnWave_Public_StartSpawning_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652E20
	 * 		Name   -> Function TBL.SpawnWave.ProcessInitiallySpawnedCharacters
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ASpawner*                                    InstigatorSpawner                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class ATBLCharacter*>                       Characters                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnWave::ProcessInitiallySpawnedCharacters(class ASpawner* InstigatorSpawner, TArray<class ATBLCharacter*> Characters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.ProcessInitiallySpawnedCharacters");
		
		ASpawnWave_ProcessInitiallySpawnedCharacters_Params params {};
		params.InstigatorSpawner = InstigatorSpawner;
		params.Characters = Characters;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652D80
	 * 		Name   -> Function TBL.SpawnWave.OnRep_WaveState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASpawnWave::OnRep_WaveState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.OnRep_WaveState");
		
		ASpawnWave_OnRep_WaveState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652D60
	 * 		Name   -> Function TBL.SpawnWave.OnRep_ReplJoinedPlayers
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ASpawnWave::OnRep_ReplJoinedPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.OnRep_ReplJoinedPlayers");
		
		ASpawnWave_OnRep_ReplJoinedPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F1B0
	 * 		Name   -> Function TBL.SpawnWave.OnControllerPossessedPawn
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       NewPawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnWave::OnControllerPossessedPawn(class APawn* NewPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.OnControllerPossessedPawn");
		
		ASpawnWave_OnControllerPossessedPawn_Params params {};
		params.NewPawn = NewPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016527B0
	 * 		Name   -> Function TBL.SpawnWave.NotifyPendingDeferredSpawnPerformed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASpawnWave::NotifyPendingDeferredSpawnPerformed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.NotifyPendingDeferredSpawnPerformed");
		
		ASpawnWave_NotifyPendingDeferredSpawnPerformed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652790
	 * 		Name   -> Function TBL.SpawnWave.NotifyPendingDeferredSpawn
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASpawnWave::NotifyPendingDeferredSpawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.NotifyPendingDeferredSpawn");
		
		ASpawnWave_NotifyPendingDeferredSpawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652760
	 * 		Name   -> Function TBL.SpawnWave.NeedsCleanup
	 * 		Flags  -> (Native, Public, Const)
	 */
	bool ASpawnWave::NeedsCleanup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.NeedsCleanup");
		
		ASpawnWave_NeedsCleanup_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016526C0
	 * 		Name   -> Function TBL.SpawnWave.LeaveSpawn
	 * 		Flags  -> (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASpawnWave::LeaveSpawn(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.LeaveSpawn");
		
		ASpawnWave_LeaveSpawn_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652620
	 * 		Name   -> Function TBL.SpawnWave.JoinSpawn
	 * 		Flags  -> (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASpawnWave::JoinSpawn(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.JoinSpawn");
		
		ASpawnWave_JoinSpawn_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016525F0
	 * 		Name   -> Function TBL.SpawnWave.IsSpecialSpawn
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ASpawnWave::IsSpecialSpawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.IsSpecialSpawn");
		
		ASpawnWave_IsSpecialSpawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622490
	 * 		Name   -> Function TBL.SpawnWave.IsJoinableBy
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASpawnWave::IsJoinableBy(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.IsJoinableBy");
		
		ASpawnWave_IsJoinableBy_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622460
	 * 		Name   -> Function TBL.SpawnWave.HasPendingDeferredSpawnsRemaining
	 * 		Flags  -> (Native, Public, Const)
	 */
	bool ASpawnWave::HasPendingDeferredSpawnsRemaining()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.HasPendingDeferredSpawnsRemaining");
		
		ASpawnWave_HasPendingDeferredSpawnsRemaining_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016520E0
	 * 		Name   -> Function TBL.SpawnWave.HandleNoLongerJoinable
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASpawnWave::HandleNoLongerJoinable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.HandleNoLongerJoinable");
		
		ASpawnWave_HandleNoLongerJoinable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01652040
	 * 		Name   -> Function TBL.SpawnWave.GetTimeLeft
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class AController*                                 Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ASpawnWave::GetTimeLeft(class AController* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.GetTimeLeft");
		
		ASpawnWave_GetTimeLeft_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651C80
	 * 		Name   -> Function TBL.SpawnWave.GetDisplayInfo
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TMap<class UClass*, class UClass*>                 AllowedClasses                                             (Parm, OutParm, UObjectWrapper, NativeAccessSpecifierPublic)
	 * 		class UTexture2D*                                  SpawnWaveIcon                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        SpawnWaveName                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		bool                                               SpawnWithHorse                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASpawnWave::GetDisplayInfo(TMap<class UClass*, class UClass*>* AllowedClasses, class UTexture2D** SpawnWaveIcon, class FText* SpawnWaveName, bool* SpawnWithHorse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.GetDisplayInfo");
		
		ASpawnWave_GetDisplayInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (AllowedClasses != nullptr)
			*AllowedClasses = params.AllowedClasses;
		if (SpawnWaveIcon != nullptr)
			*SpawnWaveIcon = params.SpawnWaveIcon;
		if (SpawnWaveName != nullptr)
			*SpawnWaveName = params.SpawnWaveName;
		if (SpawnWithHorse != nullptr)
			*SpawnWithHorse = params.SpawnWithHorse;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651BC0
	 * 		Name   -> Function TBL.SpawnWave.GetAllowedLoadoutSelection
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      RequestedClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ASpawnWave::GetAllowedLoadoutSelection(class UClass* RequestedClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.GetAllowedLoadoutSelection");
		
		ASpawnWave_GetAllowedLoadoutSelection_Params params {};
		params.RequestedClass = RequestedClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651750
	 * 		Name   -> Function TBL.SpawnWave.GetAllowedCharacterClasses
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        TargetController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class UClass*> ASpawnWave::GetAllowedCharacterClasses(class ATBLPlayerController* TargetController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.GetAllowedCharacterClasses");
		
		ASpawnWave_GetAllowedCharacterClasses_Params params {};
		params.TargetController = TargetController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651680
	 * 		Name   -> Function TBL.SpawnWave.FireEarly
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void ASpawnWave::FireEarly()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.FireEarly");
		
		ASpawnWave_FireEarly_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x009BF4A0
	 * 		Name   -> Function TBL.SpawnWave.End
	 * 		Flags  -> (Native, Public)
	 */
	void ASpawnWave::End()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.End");
		
		ASpawnWave_End_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01651600
	 * 		Name   -> Function TBL.SpawnWave.AttemptCleanup
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ASpawnWave::AttemptCleanup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.AttemptCleanup");
		
		ASpawnWave_AttemptCleanup_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x009BDAA0
	 * 		Name   -> Function TBL.SpawnWave.AllowFullPlayerControl
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void ASpawnWave::AllowFullPlayerControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SpawnWave.AllowFullPlayerControl");
		
		ASpawnWave_AllowFullPlayerControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ASpawnWave.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASpawnWave::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SpawnWave");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01600FD0
	 * 		Name   -> Function TBL.ForcedRespawnSpawnWave.ForceSpawnController
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AForcedRespawnSpawnWave::ForceSpawnController(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForcedRespawnSpawnWave.ForceSpawnController");
		
		AForcedRespawnSpawnWave_ForceSpawnController_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AForcedRespawnSpawnWave.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AForcedRespawnSpawnWave::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ForcedRespawnSpawnWave");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01602180
	 * 		Name   -> Function TBL.ForwardSpawnWave.SpawnOutOfCombatCharacters
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AForwardSpawnWave::SpawnOutOfCombatCharacters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.SpawnOutOfCombatCharacters");
		
		AForwardSpawnWave_SpawnOutOfCombatCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016020F0
	 * 		Name   -> Function TBL.ForwardSpawnWave.ShouldResetCombatTimerFor
	 * 		Flags  -> (Final, Native, Protected, Const)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AForwardSpawnWave::ShouldResetCombatTimerFor(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.ShouldResetCombatTimerFor");
		
		AForwardSpawnWave_ShouldResetCombatTimerFor_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601F90
	 * 		Name   -> Function TBL.ForwardSpawnWave.SetPawnsAllowedToForwardSpawn
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TArray<class APawn*>                               InPawnsAllowedToForwardSpawn                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AForwardSpawnWave::SetPawnsAllowedToForwardSpawn(TArray<class APawn*> InPawnsAllowedToForwardSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.SetPawnsAllowedToForwardSpawn");
		
		AForwardSpawnWave_SetPawnsAllowedToForwardSpawn_Params params {};
		params.InPawnsAllowedToForwardSpawn = InPawnsAllowedToForwardSpawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601DF0
	 * 		Name   -> Function TBL.ForwardSpawnWave.SetAwaitingCombatTimer
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AForwardSpawnWave::SetAwaitingCombatTimer(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.SetAwaitingCombatTimer");
		
		AForwardSpawnWave_SetAwaitingCombatTimer_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601D70
	 * 		Name   -> Function TBL.ForwardSpawnWave.ResetCombatTimerFor
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AForwardSpawnWave::ResetCombatTimerFor(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.ResetCombatTimerFor");
		
		AForwardSpawnWave_ResetCombatTimerFor_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601AD0
	 * 		Name   -> Function TBL.ForwardSpawnWave.OnRep_PawnsAllowedToForwardSpawn
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AForwardSpawnWave::OnRep_PawnsAllowedToForwardSpawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.OnRep_PawnsAllowedToForwardSpawn");
		
		AForwardSpawnWave_OnRep_PawnsAllowedToForwardSpawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601A20
	 * 		Name   -> Function TBL.ForwardSpawnWave.OnQueuedPlayerTakeDamage
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AForwardSpawnWave::OnQueuedPlayerTakeDamage(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.OnQueuedPlayerTakeDamage");
		
		AForwardSpawnWave_OnQueuedPlayerTakeDamage_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601890
	 * 		Name   -> Function TBL.ForwardSpawnWave.OnQueuedPlayerParryEvent
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               B                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventState                            ParryEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AForwardSpawnWave::OnQueuedPlayerParryEvent(class ATBLCharacter* A, class ATBLCharacter* B, const struct FParryEventState& ParryEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.OnQueuedPlayerParryEvent");
		
		AForwardSpawnWave_OnQueuedPlayerParryEvent_Params params {};
		params.A = A;
		params.B = B;
		params.ParryEventState = ParryEventState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016017E0
	 * 		Name   -> Function TBL.ForwardSpawnWave.OnQueuedPlayerCauseDamage
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AForwardSpawnWave::OnQueuedPlayerCauseDamage(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.OnQueuedPlayerCauseDamage");
		
		AForwardSpawnWave_OnQueuedPlayerCauseDamage_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601250
	 * 		Name   -> Function TBL.ForwardSpawnWave.IsControllerRecentlyInCombat
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AForwardSpawnWave::IsControllerRecentlyInCombat(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.IsControllerRecentlyInCombat");
		
		AForwardSpawnWave_IsControllerRecentlyInCombat_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601050
	 * 		Name   -> Function TBL.ForwardSpawnWave.ForwardSpawnController
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AForwardSpawnWave::ForwardSpawnController(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ForwardSpawnWave.ForwardSpawnController");
		
		AForwardSpawnWave_ForwardSpawnController_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AForwardSpawnWave.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AForwardSpawnWave::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ForwardSpawnWave");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01600C90
	 * 		Name   -> Function TBL.FrameThrottledCinematicActor.AttemptThrottledCall
	 * 		Flags  -> (Final, Native, Static, Private, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFrameThrottleBranch                           Branches                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFrameThrottledCinematicActor::STATIC_AttemptThrottledCall(TBL_EFrameThrottleBranch* Branches)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FrameThrottledCinematicActor.AttemptThrottledCall");
		
		AFrameThrottledCinematicActor_AttemptThrottledCall_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Branches != nullptr)
			*Branches = params.Branches;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AFrameThrottledCinematicActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFrameThrottledCinematicActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FrameThrottledCinematicActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601E70
	 * 		Name   -> Function TBL.FriendsAndPartyList.SetPartyInviteSettings
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bAllowInvites                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bJoinViaPresence                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bJoinViaPresenceFriendsOnly                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFriendsAndPartyList::SetPartyInviteSettings(bool bAllowInvites, bool bJoinViaPresence, bool bJoinViaPresenceFriendsOnly)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FriendsAndPartyList.SetPartyInviteSettings");
		
		UFriendsAndPartyList_SetPartyInviteSettings_Params params {};
		params.bAllowInvites = bAllowInvites;
		params.bJoinViaPresence = bJoinViaPresence;
		params.bJoinViaPresenceFriendsOnly = bJoinViaPresenceFriendsOnly;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601D50
	 * 		Name   -> Function TBL.FriendsAndPartyList.RefreshItemsList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UFriendsAndPartyList::RefreshItemsList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FriendsAndPartyList.RefreshItemsList");
		
		UFriendsAndPartyList_RefreshItemsList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601CC0
	 * 		Name   -> Function TBL.FriendsAndPartyList.RefreshFriendsList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               ShouldRead                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFriendsAndPartyList::RefreshFriendsList(bool ShouldRead)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FriendsAndPartyList.RefreshFriendsList");
		
		UFriendsAndPartyList_RefreshFriendsList_Params params {};
		params.ShouldRead = ShouldRead;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601AF0
	 * 		Name   -> Function TBL.FriendsAndPartyList.OnUsersChanged
	 * 		Flags  -> (Final, Native, Private, HasOutParms)
	 */
	void UFriendsAndPartyList::OnUsersChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FriendsAndPartyList.OnUsersChanged");
		
		UFriendsAndPartyList_OnUsersChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01600D10
	 * 		Name   -> Function TBL.FriendsAndPartyList.BP_NavigateToItem
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        Item                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UFriendsAndPartyList::BP_NavigateToItem(const struct FBlueprintOnlineUser& Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FriendsAndPartyList.BP_NavigateToItem");
		
		UFriendsAndPartyList_BP_NavigateToItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFriendsAndPartyList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFriendsAndPartyList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FriendsAndPartyList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.BlueprintOnlineUserListEntry.OnListItemSet
	 * 		Flags  -> (Event, Protected, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        ListItemObject                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UBlueprintOnlineUserListEntry::OnListItemSet(const struct FBlueprintOnlineUser& ListItemObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.BlueprintOnlineUserListEntry.OnListItemSet");
		
		UBlueprintOnlineUserListEntry_OnListItemSet_Params params {};
		params.ListItemObject = ListItemObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UBlueprintOnlineUserListEntry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBlueprintOnlineUserListEntry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.BlueprintOnlineUserListEntry");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxActor.OnTornOff
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void AFxActor::OnTornOff()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxActor.OnTornOff");
		
		AFxActor_OnTornOff_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601700
	 * 		Name   -> Function TBL.FxActor.OnKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AFxActor::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxActor.OnKilled");
		
		AFxActor_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01600F50
	 * 		Name   -> Function TBL.FxActor.DisableAndDestroy
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              LifeSpan                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFxActor::DisableAndDestroy(float LifeSpan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxActor.DisableAndDestroy");
		
		AFxActor_DisableAndDestroy_Params params {};
		params.LifeSpan = LifeSpan;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01600ED0
	 * 		Name   -> Function TBL.FxActor.CleanupAbilityActorsInternal
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AFxActor::CleanupAbilityActorsInternal(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxActor.CleanupAbilityActorsInternal");
		
		AFxActor_CleanupAbilityActorsInternal_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxActor.CleanupAbilityActors
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void AFxActor::CleanupAbilityActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxActor.CleanupAbilityActors");
		
		AFxActor_CleanupAbilityActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AFxActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFxActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FxActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601C40
	 * 		Name   -> Function TBL.FxComponent.PushMaterialOverride
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UMaterialInterface*                          Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxComponent::PushMaterialOverride(class UMaterialInterface* Material)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxComponent.PushMaterialOverride");
		
		UFxComponent_PushMaterialOverride_Params params {};
		params.Material = Material;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601C20
	 * 		Name   -> Function TBL.FxComponent.PopMaterialOverride
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UFxComponent::PopMaterialOverride()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxComponent.PopMaterialOverride");
		
		UFxComponent_PopMaterialOverride_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01601150
	 * 		Name   -> Function TBL.FxComponent.GetFXInstanceFromActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Blueprint                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCreateIfNeeded                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFxInstance* UFxComponent::STATIC_GetFXInstanceFromActor(class AActor* Actor, class UClass* Blueprint, bool bCreateIfNeeded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxComponent.GetFXInstanceFromActor");
		
		UFxComponent_GetFXInstanceFromActor_Params params {};
		params.Actor = Actor;
		params.Blueprint = Blueprint;
		params.bCreateIfNeeded = bCreateIfNeeded;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016010D0
	 * 		Name   -> Function TBL.FxComponent.GetFXComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UFxComponent* UFxComponent::STATIC_GetFXComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxComponent.GetFXComponent");
		
		UFxComponent_GetFXComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFxComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFxComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FxComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.ProjectileStopped
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::ProjectileStopped(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.ProjectileStopped");
		
		UFxEventListener_ProjectileStopped_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.ProjectileStarted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::ProjectileStarted(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.ProjectileStarted");
		
		UFxEventListener_ProjectileStarted_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnWorldHit
	 * 		Flags  -> (Event, Public, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPhysicalMaterial*                           PhysMaterial                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnWorldHit(class AActor* Actor, const struct FVector& Location, class UPhysicalMaterial* PhysMaterial)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnWorldHit");
		
		UFxEventListener_OnWorldHit_Params params {};
		params.Actor = Actor;
		params.Location = Location;
		params.PhysMaterial = PhysMaterial;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnWasParried
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               ThisCharacter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OtherCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventState                            ParryEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnWasParried(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnWasParried");
		
		UFxEventListener_OnWasParried_Params params {};
		params.ThisCharacter = ThisCharacter;
		params.OtherCharacter = OtherCharacter;
		params.ParryEventState = ParryEventState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnTargetMethodEvent
	 * 		Flags  -> (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TargetMethodName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ETargetMethodEvent                             Event                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAbilityInvocation*                          Invocation                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              HitTargets                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnTargetMethodEvent(class AActor* Initiator, const class FName& TargetMethodName, TBL_ETargetMethodEvent Event, class AAbilityInvocation* Invocation, const struct FVector& Location, TArray<class AActor*> HitTargets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnTargetMethodEvent");
		
		UFxEventListener_OnTargetMethodEvent_Params params {};
		params.Initiator = Initiator;
		params.TargetMethodName = TargetMethodName;
		params.Event = Event;
		params.Invocation = Invocation;
		params.Location = Location;
		params.HitTargets = HitTargets;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnSuicide
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Suicider                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageTakenEvent                           DamageTakenEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnSuicide(class AActor* Suicider, const struct FDamageTakenEvent& DamageTakenEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnSuicide");
		
		UFxEventListener_OnSuicide_Params params {};
		params.Suicider = Suicider;
		params.DamageTakenEvent = DamageTakenEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnStatChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EStat                                          Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FStatEntry                                  Stat                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnStatChanged(class AActor* Actor, TBL_EStat Type, const struct FStatEntry& Stat, float DeltaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnStatChanged");
		
		UFxEventListener_OnStatChanged_Params params {};
		params.Actor = Actor;
		params.Type = Type;
		params.Stat = Stat;
		params.DeltaValue = DeltaValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnStartedFalling
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnStartedFalling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnStartedFalling");
		
		UFxEventListener_OnStartedFalling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnStaminaCostFailed
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Event                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnStaminaCostFailed(const class FName& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnStaminaCostFailed");
		
		UFxEventListener_OnStaminaCostFailed_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnSetThirdPersonDeathCamera
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnSetThirdPersonDeathCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnSetThirdPersonDeathCamera");
		
		UFxEventListener_OnSetThirdPersonDeathCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnSetRagdollPhysics
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnSetRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnSetRagdollPhysics");
		
		UFxEventListener_OnSetRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnSetOnFire
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnSetOnFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnSetOnFire");
		
		UFxEventListener_OnSetOnFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnSetOffFire
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnSetOffFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnSetOffFire");
		
		UFxEventListener_OnSetOffFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnSetFirstPersonDeathCamera
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnSetFirstPersonDeathCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnSetFirstPersonDeathCamera");
		
		UFxEventListener_OnSetFirstPersonDeathCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnRemoveCondition
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnRemoveCondition(class AActor* Actor, TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnRemoveCondition");
		
		UFxEventListener_OnRemoveCondition_Params params {};
		params.Actor = Actor;
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnRagdollHit
	 * 		Flags  -> (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      HitTaker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      HitCauser                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitDirection                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Projectile                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnRagdollHit(class AActor* HitTaker, class AActor* HitCauser, class AInventoryItem* Weapon, const struct FHitResult& HitResult, const struct FVector& HitDirection, float Damage, class UDamageSource* DamageSource, class AActor* Projectile, const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnRagdollHit");
		
		UFxEventListener_OnRagdollHit_Params params {};
		params.HitTaker = HitTaker;
		params.HitCauser = HitCauser;
		params.Weapon = Weapon;
		params.HitResult = HitResult;
		params.HitDirection = HitDirection;
		params.Damage = Damage;
		params.DamageSource = DamageSource;
		params.Projectile = Projectile;
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnPossessed
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnPossessed(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnPossessed");
		
		UFxEventListener_OnPossessed_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnPlayerMeshChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class USkeletalMeshComponent*                      OldMesh                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USkeletalMeshComponent*                      NewMesh                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnPlayerMeshChanged(class USkeletalMeshComponent* OldMesh, class USkeletalMeshComponent* NewMesh)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnPlayerMeshChanged");
		
		UFxEventListener_OnPlayerMeshChanged_Params params {};
		params.OldMesh = OldMesh;
		params.NewMesh = NewMesh;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnPlayerKilled
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FDeathEvent                                 DeathEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnPlayerKilled(const struct FDeathEvent& DeathEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnPlayerKilled");
		
		UFxEventListener_OnPlayerKilled_Params params {};
		params.DeathEvent = DeathEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnParrySuccess
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               ThisCharacter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OtherCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventState                            ParryEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnParrySuccess(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnParrySuccess");
		
		UFxEventListener_OnParrySuccess_Params params {};
		params.ThisCharacter = ThisCharacter;
		params.OtherCharacter = OtherCharacter;
		params.ParryEventState = ParryEventState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnMountSiegeEngine
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ASiegeEngine*                                SiegeEngine                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnMountSiegeEngine(class ASiegeEngine* SiegeEngine)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnMountSiegeEngine");
		
		UFxEventListener_OnMountSiegeEngine_Params params {};
		params.SiegeEngine = SiegeEngine;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnKilled
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnKilled");
		
		UFxEventListener_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnInvocationActorCreated
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnInvocationActorCreated(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnInvocationActorCreated");
		
		UFxEventListener_OnInvocationActorCreated_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnInventoryProjectileHitPassiveShield
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Shield                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              Projectile                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnInventoryProjectileHitPassiveShield(class AInventoryItem* Shield, class AInventoryItem* Projectile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnInventoryProjectileHitPassiveShield");
		
		UFxEventListener_OnInventoryProjectileHitPassiveShield_Params params {};
		params.Shield = Shield;
		params.Projectile = Projectile;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnInventoryItemDamageStateChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EInventoryItemDamagedState                     DamagedState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnInventoryItemDamageStateChanged(class AInventoryItem* Item, TBL_EInventoryItemDamagedState DamagedState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnInventoryItemDamageStateChanged");
		
		UFxEventListener_OnInventoryItemDamageStateChanged_Params params {};
		params.Item = Item;
		params.DamagedState = DamagedState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnInventoryItemDamaged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInventoryItemDamagedParams                 Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnInventoryItemDamaged(class AInventoryItem* Item, const struct FInventoryItemDamagedParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnInventoryItemDamaged");
		
		UFxEventListener_OnInventoryItemDamaged_Params params {};
		params.Item = Item;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnInventoryActionFailed
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EFailedInventoryAction                         Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnInventoryActionFailed(TBL_EFailedInventoryAction Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnInventoryActionFailed");
		
		UFxEventListener_OnInventoryActionFailed_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnHorseFxEvent
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EventScale                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                EventTags                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnHorseFxEvent(const class FName& EventName, float EventScale, TArray<class FName> EventTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnHorseFxEvent");
		
		UFxEventListener_OnHorseFxEvent_Params params {};
		params.EventName = EventName;
		params.EventScale = EventScale;
		params.EventTags = EventTags;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnHealOverTimeStart
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EHealingSource                                 HealingSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             InstigatingPlayerState                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnHealOverTimeStart(TBL_EHealingSource HealingSource, class ATBLPlayerState* InstigatingPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnHealOverTimeStart");
		
		UFxEventListener_OnHealOverTimeStart_Params params {};
		params.HealingSource = HealingSource;
		params.InstigatingPlayerState = InstigatingPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnHealOverTimeEnd
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnHealOverTimeEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnHealOverTimeEnd");
		
		UFxEventListener_OnHealOverTimeEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnHealOverTimeAdded
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EHealingSource                                 HealingSource                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             InstigatingPlayerState                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnHealOverTimeAdded(TBL_EHealingSource HealingSource, class ATBLPlayerState* InstigatingPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnHealOverTimeAdded");
		
		UFxEventListener_OnHealOverTimeAdded_Params params {};
		params.HealingSource = HealingSource;
		params.InstigatingPlayerState = InstigatingPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnExperienceLevelChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NewLevel                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnExperienceLevelChanged(class AActor* Actor, int NewLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnExperienceLevelChanged");
		
		UFxEventListener_OnExperienceLevelChanged_Params params {};
		params.Actor = Actor;
		params.NewLevel = NewLevel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnEpicEndGame
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FEpicEndGameState                           EpicEndGameState                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnEpicEndGame(const struct FEpicEndGameState& EpicEndGameState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnEpicEndGame");
		
		UFxEventListener_OnEpicEndGame_Params params {};
		params.EpicEndGameState = EpicEndGameState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnDismountSiegeEngine
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ASiegeEngine*                                SiegeEngine                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Forced                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnDismountSiegeEngine(class ASiegeEngine* SiegeEngine, bool Forced)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnDismountSiegeEngine");
		
		UFxEventListener_OnDismountSiegeEngine_Params params {};
		params.SiegeEngine = SiegeEngine;
		params.Forced = Forced;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnDamageTaken
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnDamageTaken(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnDamageTaken");
		
		UFxEventListener_OnDamageTaken_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnDamageCaused
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnDamageCaused(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnDamageCaused");
		
		UFxEventListener_OnDamageCaused_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnCrowdControlNoDamage
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      OwningActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCrowdControlParams                         CrowdControlParams                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnCrowdControlNoDamage(class AActor* OwningActor, const class FName& CombatState, const struct FCrowdControlParams& CrowdControlParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnCrowdControlNoDamage");
		
		UFxEventListener_OnCrowdControlNoDamage_Params params {};
		params.OwningActor = OwningActor;
		params.CombatState = CombatState;
		params.CrowdControlParams = CrowdControlParams;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnConstruct
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnConstruct(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnConstruct");
		
		UFxEventListener_OnConstruct_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnCombatStateEvent
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnCombatStateEvent(class AActor* Actor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnCombatStateEvent");
		
		UFxEventListener_OnCombatStateEvent_Params params {};
		params.Actor = Actor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnCombatStateEnd
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnCombatStateEnd(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnCombatStateEnd");
		
		UFxEventListener_OnCombatStateEnd_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnCombatStateChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnCombatStateChanged");
		
		UFxEventListener_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnCombatStateBegin
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnCombatStateBegin(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnCombatStateBegin");
		
		UFxEventListener_OnCombatStateBegin_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnClash
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               InitiatorCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               TargetCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FClashEventState                            ClashEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnClash(class ATBLCharacter* InitiatorCharacter, class ATBLCharacter* TargetCharacter, const struct FClashEventState& ClashEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnClash");
		
		UFxEventListener_OnClash_Params params {};
		params.InitiatorCharacter = InitiatorCharacter;
		params.TargetCharacter = TargetCharacter;
		params.ClashEventState = ClashEventState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnCharacterLanded
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FLandedResult                               LandedResult                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnCharacterLanded(const struct FLandedResult& LandedResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnCharacterLanded");
		
		UFxEventListener_OnCharacterLanded_Params params {};
		params.LandedResult = LandedResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnApplyCondition
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnApplyCondition(class AActor* Actor, TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnApplyCondition");
		
		UFxEventListener_OnApplyCondition_Params params {};
		params.Actor = Actor;
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnAnimNotifyStepEvent
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnAnimNotifyStepEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnAnimNotifyStepEvent");
		
		UFxEventListener_OnAnimNotifyStepEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnAmmoInitialize
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UFxEventListener::OnAmmoInitialize()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnAmmoInitialize");
		
		UFxEventListener_OnAmmoInitialize_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnAbilityOnCooldown
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAbility                                    Ability                                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              RemainingTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              InventoryItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnAbilityOnCooldown(const struct FAbility& Ability, float RemainingTime, class AInventoryItem* InventoryItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnAbilityOnCooldown");
		
		UFxEventListener_OnAbilityOnCooldown_Params params {};
		params.Ability = Ability;
		params.RemainingTime = RemainingTime;
		params.InventoryItem = InventoryItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxEventListener.OnAbilityError
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EResultCode                                    Code                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAbilityInvocation*                          Invocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxEventListener::OnAbilityError(class AActor* Initiator, TBL_EResultCode Code, class AAbilityInvocation* Invocation, const class FName& AttackName, class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxEventListener.OnAbilityError");
		
		UFxEventListener_OnAbilityError_Params params {};
		params.Initiator = Initiator;
		params.Code = Code;
		params.Invocation = Invocation;
		params.AttackName = AttackName;
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFxEventListener.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFxEventListener::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FxEventListener");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016066C0
	 * 		Name   -> Function TBL.FxInstance.SetCharacterPostProcessMID
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class UMaterialInstanceDynamic*                    InCharacterPostProcessMID                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxInstance::SetCharacterPostProcessMID(class UMaterialInstanceDynamic* InCharacterPostProcessMID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.SetCharacterPostProcessMID");
		
		UFxInstance_SetCharacterPostProcessMID_Params params {};
		params.InCharacterPostProcessMID = InCharacterPostProcessMID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01606690
	 * 		Name   -> Function TBL.FxInstance.ResetCharacterPostProcessMID
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UFxInstance::ResetCharacterPostProcessMID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.ResetCharacterPostProcessMID");
		
		UFxInstance_ResetCharacterPostProcessMID_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01606390
	 * 		Name   -> Function TBL.FxInstance.PlayWeaponCombatStateSound
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      SoundActor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousCombatState                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewCombatState                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 AttackInfo                                                 (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxInstance::PlayWeaponCombatStateSound(class AActor* SoundActor, const class FName& PreviousCombatState, const class FName& NewCombatState, const struct FAttackInfo& AttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.PlayWeaponCombatStateSound");
		
		UFxInstance_PlayWeaponCombatStateSound_Params params {};
		params.SoundActor = SoundActor;
		params.PreviousCombatState = PreviousCombatState;
		params.NewCombatState = NewCombatState;
		params.AttackInfo = AttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01606090
	 * 		Name   -> Function TBL.FxInstance.PlayCharacterCombatStateSound
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      SoundActor                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousCombatState                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewCombatState                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 AttackInfo                                                 (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFxInstance::PlayCharacterCombatStateSound(class AActor* SoundActor, const class FName& PreviousCombatState, const class FName& NewCombatState, const struct FAttackInfo& AttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.PlayCharacterCombatStateSound");
		
		UFxInstance_PlayCharacterCombatStateSound_Params params {};
		params.SoundActor = SoundActor;
		params.PreviousCombatState = PreviousCombatState;
		params.NewCombatState = NewCombatState;
		params.AttackInfo = AttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605F90
	 * 		Name   -> Function TBL.FxInstance.OnKilledInternal
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxInstance::OnKilledInternal(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.OnKilledInternal");
		
		UFxInstance_OnKilledInternal_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605D30
	 * 		Name   -> Function TBL.FxInstance.OnCombatStateChangedInternal
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      InActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UFxInstance::OnCombatStateChangedInternal(class AActor* InActor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.OnCombatStateChangedInternal");
		
		UFxInstance_OnCombatStateChangedInternal_Params params {};
		params.InActor = InActor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605D10
	 * 		Name   -> Function TBL.FxInstance.OnActorPreAbilityInitiate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UFxInstance::OnActorPreAbilityInitiate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.OnActorPreAbilityInitiate");
		
		UFxInstance_OnActorPreAbilityInitiate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016057B0
	 * 		Name   -> Function TBL.FxInstance.GetCharacterPostProcessMID
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
	 */
	class UMaterialInstanceDynamic* UFxInstance::GetCharacterPostProcessMID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.GetCharacterPostProcessMID");
		
		UFxInstance_GetCharacterPostProcessMID_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605400
	 * 		Name   -> Function TBL.FxInstance.Cleanup
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UFxInstance::Cleanup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.Cleanup");
		
		UFxInstance_Cleanup_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FxInstance.BP_ResetPostProcess
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 */
	void UFxInstance::BP_ResetPostProcess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FxInstance.BP_ResetPostProcess");
		
		UFxInstance_BP_ResetPostProcess_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFxInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFxInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FxInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGameModeConfig.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameModeConfig::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GameModeConfig");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AGameModeModifier.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGameModeModifier::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GameModeModifier");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016067D0
	 * 		Name   -> Function TBL.GameplayRules.UpdateAimPenalty
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FAimPenalty>                         AimPenalties                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGameplayRules::UpdateAimPenalty(float DeltaSeconds, TArray<struct FAimPenalty> AimPenalties)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.UpdateAimPenalty");
		
		UGameplayRules_UpdateAimPenalty_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		params.AimPenalties = AimPenalties;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.TutorialCanDamage
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               InitiatorCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      TargetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::TutorialCanDamage(class ATBLCharacter* InitiatorCharacter, class AActor* TargetActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.TutorialCanDamage");
		
		UGameplayRules_TutorialCanDamage_Params params {};
		params.InitiatorCharacter = InitiatorCharacter;
		params.TargetActor = TargetActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldStartProjectileCounterWindow
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldStartProjectileCounterWindow(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldStartProjectileCounterWindow");
		
		UGameplayRules_ShouldStartProjectileCounterWindow_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldStartCounterWindow
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldStartCounterWindow(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldStartCounterWindow");
		
		UGameplayRules_ShouldStartCounterWindow_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldStartActiveRiposteWindow
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldStartActiveRiposteWindow(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldStartActiveRiposteWindow");
		
		UGameplayRules_ShouldStartActiveRiposteWindow_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldScoreKill
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AController*                                 Killer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Killed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldScoreKill(class AController* Killer, class AController* Killed, const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldScoreKill");
		
		UGameplayRules_ShouldScoreKill_Params params {};
		params.Killer = Killer;
		params.Killed = Killed;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldPlayDamageTaken
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageTakenEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldPlayDamageTaken(const struct FDamageTakenEvent& DamageTakenEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldPlayDamageTaken");
		
		UGameplayRules_ShouldPlayDamageTaken_Params params {};
		params.DamageTakenEvent = DamageTakenEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldGotoDowned
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AbilityName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              InventoryItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageTakenEvent                           DamageTakenEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldGotoDowned(class AActor* Target, class AActor* Initiator, const class FName& AbilityName, class AInventoryItem* InventoryItem, class UDamageSource* DamageType, const struct FDamageTakenEvent& DamageTakenEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldGotoDowned");
		
		UGameplayRules_ShouldGotoDowned_Params params {};
		params.Target = Target;
		params.Initiator = Initiator;
		params.AbilityName = AbilityName;
		params.InventoryItem = InventoryItem;
		params.DamageType = DamageType;
		params.DamageTakenEvent = DamageTakenEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldComboCancelQueue
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 Attack                                                     (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldComboCancelQueue(const class FName& CombatState, const struct FAttackInfo& Attack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldComboCancelQueue");
		
		UGameplayRules_ShouldComboCancelQueue_Params params {};
		params.CombatState = CombatState;
		params.Attack = Attack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldBlockSameAttack
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               DefendingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldBlockSameAttack(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldBlockSameAttack");
		
		UGameplayRules_ShouldBlockSameAttack_Params params {};
		params.AttackingCharacter = AttackingCharacter;
		params.DefendingCharacter = DefendingCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ShouldAttackBeCountered
	 * 		Flags  -> (Event, Public, BlueprintEvent, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               HitCharacter                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              AttackingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              DefenderItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ShouldAttackBeCountered(class ATBLCharacter* HitCharacter, class ATBLCharacter* AttackingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefenderItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ShouldAttackBeCountered");
		
		UGameplayRules_ShouldAttackBeCountered_Params params {};
		params.HitCharacter = HitCharacter;
		params.AttackingCharacter = AttackingCharacter;
		params.AttackingItem = AttackingItem;
		params.DefenderItem = DefenderItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.OnProjectileHit
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EOnProjectileHitEffect                         OutHitEffect                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutBounceVelocityModifier                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              Projectile                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnProjectileHitEffect                         InHitEffect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  InHitResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              InBounceVelocityModifier                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameplayRules::OnProjectileHit(TBL_EOnProjectileHitEffect* OutHitEffect, float* OutBounceVelocityModifier, class AInventoryItem* Projectile, TBL_EOnProjectileHitEffect InHitEffect, const struct FHitResult& InHitResult, float InBounceVelocityModifier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.OnProjectileHit");
		
		UGameplayRules_OnProjectileHit_Params params {};
		params.Projectile = Projectile;
		params.InHitEffect = InHitEffect;
		params.InHitResult = InHitResult;
		params.InBounceVelocityModifier = InBounceVelocityModifier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHitEffect != nullptr)
			*OutHitEffect = params.OutHitEffect;
		if (OutBounceVelocityModifier != nullptr)
			*OutBounceVelocityModifier = params.OutBounceVelocityModifier;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.OnParryBreak
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               DefendingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              AttackingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              DefendingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::OnParryBreak(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefendingItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.OnParryBreak");
		
		UGameplayRules_OnParryBreak_Params params {};
		params.AttackingCharacter = AttackingCharacter;
		params.DefendingCharacter = DefendingCharacter;
		params.AttackingItem = AttackingItem;
		params.DefendingItem = DefendingItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.OnDamageTaken
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EOnHitEffect                                   OutHitEffect                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           OutCrowdControlVariant                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnHitEffect                                   InHitEffect                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           InCrowdControlVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              AttackingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAttackType*                                 AttackType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameplayRules::OnDamageTaken(TBL_EOnHitEffect* OutHitEffect, TBL_ECrowdControlVariant* OutCrowdControlVariant, TBL_EOnHitEffect InHitEffect, TBL_ECrowdControlVariant InCrowdControlVariant, class AActor* HitActor, const struct FDamageTakenEvent& DamageEvent, const class FName& AttackName, class AInventoryItem* AttackingItem, class UAttackType* AttackType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.OnDamageTaken");
		
		UGameplayRules_OnDamageTaken_Params params {};
		params.InHitEffect = InHitEffect;
		params.InCrowdControlVariant = InCrowdControlVariant;
		params.HitActor = HitActor;
		params.DamageEvent = DamageEvent;
		params.AttackName = AttackName;
		params.AttackingItem = AttackingItem;
		params.AttackType = AttackType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHitEffect != nullptr)
			*OutHitEffect = params.OutHitEffect;
		if (OutCrowdControlVariant != nullptr)
			*OutCrowdControlVariant = params.OutCrowdControlVariant;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.IsValidSelfInflictedDamageSource
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
	 * Parameters:
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::IsValidSelfInflictedDamageSource(class UDamageSource* DamageSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.IsValidSelfInflictedDamageSource");
		
		UGameplayRules_IsValidSelfInflictedDamageSource_Params params {};
		params.DamageSource = DamageSource;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.IsBlocking
	 * 		Flags  -> (Event, Public, BlueprintEvent, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::IsBlocking(class ATBLCharacter* Character, const class FName& AttackName, const class FName& CombatState, class ATBLCharacter* AttackingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.IsBlocking");
		
		UGameplayRules_IsBlocking_Params params {};
		params.Character = Character;
		params.AttackName = AttackName;
		params.CombatState = CombatState;
		params.AttackingCharacter = AttackingCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605B70
	 * 		Name   -> Function TBL.GameplayRules.GetRangedInaccuracy
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Projectile                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGameplayRules::GetRangedInaccuracy(class AInventoryItem* Projectile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.GetRangedInaccuracy");
		
		UGameplayRules_GetRangedInaccuracy_Params params {};
		params.Projectile = Projectile;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.GetGoreEventOnDamage
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageTakenEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsRagdollHit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bShouldApplyConditions                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FTBL_FGoreEvent UGameplayRules::GetGoreEventOnDamage(const struct FDamageTakenEvent& DamageTakenEvent, bool bIsRagdollHit, bool bShouldApplyConditions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.GetGoreEventOnDamage");
		
		UGameplayRules_GetGoreEventOnDamage_Params params {};
		params.DamageTakenEvent = DamageTakenEvent;
		params.bIsRagdollHit = bIsRagdollHit;
		params.bShouldApplyConditions = bShouldApplyConditions;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.GetDisarmImpulse
	 * 		Flags  -> (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 * Parameters:
	 * 		class AInventoryItem*                              AttackerItem                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitDirection                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UGameplayRules::GetDisarmImpulse(class AInventoryItem* AttackerItem, const struct FVector& HitDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.GetDisarmImpulse");
		
		UGameplayRules_GetDisarmImpulse_Params params {};
		params.AttackerItem = AttackerItem;
		params.HitDirection = HitDirection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.GetDefenderBlockedPolicy
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bShouldDisarm                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDefenderBlockedPolicy                         InDefenderBlockedPolicy                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               DefendingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              AttackingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              DefendingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bProjectileAttack                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSameAttackClash                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasBlockedWithParryForgivenessWindow                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EDefenderBlockedPolicy UGameplayRules::GetDefenderBlockedPolicy(bool* bShouldDisarm, TBL_EDefenderBlockedPolicy InDefenderBlockedPolicy, class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefendingItem, bool bProjectileAttack, bool bSameAttackClash, bool bWasBlockedWithParryForgivenessWindow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.GetDefenderBlockedPolicy");
		
		UGameplayRules_GetDefenderBlockedPolicy_Params params {};
		params.InDefenderBlockedPolicy = InDefenderBlockedPolicy;
		params.AttackingCharacter = AttackingCharacter;
		params.DefendingCharacter = DefendingCharacter;
		params.AttackingItem = AttackingItem;
		params.DefendingItem = DefendingItem;
		params.bProjectileAttack = bProjectileAttack;
		params.bSameAttackClash = bSameAttackClash;
		params.bWasBlockedWithParryForgivenessWindow = bWasBlockedWithParryForgivenessWindow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bShouldDisarm != nullptr)
			*bShouldDisarm = params.bShouldDisarm;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.GetCrowdControlVariant
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_ECrowdControlVariant                           InCrowdControlVariant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      InventoryItemClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AbilityName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAttackType*                                 AttackType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsOnHorse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_ECrowdControlVariant UGameplayRules::GetCrowdControlVariant(TBL_ECrowdControlVariant InCrowdControlVariant, class AActor* HitActor, const class FName& CombatState, class UClass* InventoryItemClass, const class FName& AbilityName, class UAttackType* AttackType, bool IsOnHorse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.GetCrowdControlVariant");
		
		UGameplayRules_GetCrowdControlVariant_Params params {};
		params.InCrowdControlVariant = InCrowdControlVariant;
		params.HitActor = HitActor;
		params.CombatState = CombatState;
		params.InventoryItemClass = InventoryItemClass;
		params.AbilityName = AbilityName;
		params.AttackType = AttackType;
		params.IsOnHorse = IsOnHorse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.GetComboTimingPolicy
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EComboTimingPolicy                             InComboTimingPolicy                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 PrevAttack                                                 (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 NextAttack                                                 (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	TBL_EComboTimingPolicy UGameplayRules::GetComboTimingPolicy(TBL_EComboTimingPolicy InComboTimingPolicy, class ATBLCharacter* Character, const class FName& CombatState, const struct FAttackInfo& PrevAttack, const struct FAttackInfo& NextAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.GetComboTimingPolicy");
		
		UGameplayRules_GetComboTimingPolicy_Params params {};
		params.InComboTimingPolicy = InComboTimingPolicy;
		params.Character = Character;
		params.CombatState = CombatState;
		params.PrevAttack = PrevAttack;
		params.NextAttack = NextAttack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.GetAttackerBlockedPolicy
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EAttackerBlockedPolicy                         InAttackerBlockedPolicy                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               DefendingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              AttackingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              DefendingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSameAttackClash                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EAttackerBlockedPolicy UGameplayRules::GetAttackerBlockedPolicy(TBL_EAttackerBlockedPolicy InAttackerBlockedPolicy, class ATBLCharacter* AttackingCharacter, class ATBLCharacter* DefendingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefendingItem, bool bSameAttackClash)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.GetAttackerBlockedPolicy");
		
		UGameplayRules_GetAttackerBlockedPolicy_Params params {};
		params.InAttackerBlockedPolicy = InAttackerBlockedPolicy;
		params.AttackingCharacter = AttackingCharacter;
		params.DefendingCharacter = DefendingCharacter;
		params.AttackingItem = AttackingItem;
		params.DefendingItem = DefendingItem;
		params.bSameAttackClash = bSameAttackClash;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameplayRules.ApplyDamageConditions
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UGameplayRules::ApplyDamageConditions(class AActor* HitActor, const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameplayRules.ApplyDamageConditions");
		
		UGameplayRules_ApplyDamageConditions_Params params {};
		params.HitActor = HitActor;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGameplayRules.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameplayRules::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GameplayRules");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameProgressInterface.BroadcastTeamUpdated
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLTeam*                                    Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameProgressInterface::BroadcastTeamUpdated(class ATBLTeam* Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameProgressInterface.BroadcastTeamUpdated");
		
		UGameProgressInterface_BroadcastTeamUpdated_Params params {};
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameProgressInterface.BroadcastSetActive
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               Active                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameProgressInterface::BroadcastSetActive(bool Active)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameProgressInterface.BroadcastSetActive");
		
		UGameProgressInterface_BroadcastSetActive_Params params {};
		params.Active = Active;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.GameProgressInterface.BroadcastProgressUpdated
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              Progress                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLTeam*                                    Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGameProgressInterface::BroadcastProgressUpdated(float Progress, class ATBLTeam* Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameProgressInterface.BroadcastProgressUpdated");
		
		UGameProgressInterface_BroadcastProgressUpdated_Params params {};
		params.Progress = Progress;
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGameProgressInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameProgressInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GameProgressInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605C10
	 * 		Name   -> Function TBL.GameSparksLibrary.GetXp
	 * 		Flags  -> (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerState*                             InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UGameSparksLibrary::STATIC_GetXp(class ATBLPlayerState* InPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameSparksLibrary.GetXp");
		
		UGameSparksLibrary_GetXp_Params params {};
		params.InPlayerState = InPlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605B40
	 * 		Name   -> Function TBL.GameSparksLibrary.GetOnlineConfig
	 * 		Flags  -> (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
	 */
	class UOnlineConfig* UGameSparksLibrary::STATIC_GetOnlineConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameSparksLibrary.GetOnlineConfig");
		
		UGameSparksLibrary_GetOnlineConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605A00
	 * 		Name   -> Function TBL.GameSparksLibrary.GetLevelStats
	 * 		Flags  -> (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerState*                             InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Level                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FLevelStats UGameSparksLibrary::STATIC_GetLevelStats(class ATBLPlayerState* InPlayerState, int Level)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameSparksLibrary.GetLevelStats");
		
		UGameSparksLibrary_GetLevelStats_Params params {};
		params.InPlayerState = InPlayerState;
		params.Level = Level;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016057F0
	 * 		Name   -> Function TBL.GameSparksLibrary.GetDaysSinceLive
	 * 		Flags  -> (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerState*                             InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVirtualGoodAnnouncement*                    InAnnouncement                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UGameSparksLibrary::STATIC_GetDaysSinceLive(class ATBLPlayerState* InPlayerState, class UVirtualGoodAnnouncement* InAnnouncement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameSparksLibrary.GetDaysSinceLive");
		
		UGameSparksLibrary_GetDaysSinceLive_Params params {};
		params.InPlayerState = InPlayerState;
		params.InAnnouncement = InAnnouncement;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605420
	 * 		Name   -> Function TBL.GameSparksLibrary.ConvertIntToRomanNumeral
	 * 		Flags  -> (Final, Native, Static, Private, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                InNumber                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UGameSparksLibrary::STATIC_ConvertIntToRomanNumeral(int InNumber)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GameSparksLibrary.ConvertIntToRomanNumeral");
		
		UGameSparksLibrary_ConvertIntToRomanNumeral_Params params {};
		params.InNumber = InNumber;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGameSparksLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGameSparksLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GameSparksLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01606740
	 * 		Name   -> Function TBL.GateComponent.SetIsGateOpened
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               InGateOpened                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGateComponent::SetIsGateOpened(bool InGateOpened)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GateComponent.SetIsGateOpened");
		
		UGateComponent_SetIsGateOpened_Params params {};
		params.InGateOpened = InGateOpened;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01606070
	 * 		Name   -> Function TBL.GateComponent.OnRep_IsGateOpened
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UGateComponent::OnRep_IsGateOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GateComponent.OnRep_IsGateOpened");
		
		UGateComponent_OnRep_IsGateOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016059D0
	 * 		Name   -> Function TBL.GateComponent.GetIsGatedOpened
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UGateComponent::GetIsGatedOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GateComponent.GetIsGatedOpened");
		
		UGateComponent_GetIsGatedOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGateComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGateComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GateComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605C90
	 * 		Name   -> Function TBL.GoreFXLibrary.KnockoffHelmet
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* UGoreFXLibrary::STATIC_KnockoffHelmet(class ATBLCharacter* Char)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GoreFXLibrary.KnockoffHelmet");
		
		UGoreFXLibrary_KnockoffHelmet_Params params {};
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016058B0
	 * 		Name   -> Function TBL.GoreFXLibrary.GetGoreActionFromAttack
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AInventoryItem*                              InIventoryItem                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InAttackName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FWeaponGoreSlot                             GoreAction                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UGoreFXLibrary::STATIC_GetGoreActionFromAttack(class AInventoryItem* InIventoryItem, const class FName& InAttackName, struct FWeaponGoreSlot* GoreAction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GoreFXLibrary.GetGoreActionFromAttack");
		
		UGoreFXLibrary_GetGoreActionFromAttack_Params params {};
		params.InIventoryItem = InIventoryItem;
		params.InAttackName = InAttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (GoreAction != nullptr)
			*GoreAction = params.GoreAction;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016055E0
	 * 		Name   -> Function TBL.GoreFXLibrary.FindClosestBoneFromGiven
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class USkinnedMeshComponent*                       InSkinnedMesh                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UBoneList*                                   InBreakableBones                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     InTestLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutBoneLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              OutClosestDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UGoreFXLibrary::STATIC_FindClosestBoneFromGiven(class USkinnedMeshComponent* InSkinnedMesh, class UBoneList* InBreakableBones, const struct FVector& InTestLocation, struct FVector* OutBoneLocation, float* OutClosestDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GoreFXLibrary.FindClosestBoneFromGiven");
		
		UGoreFXLibrary_FindClosestBoneFromGiven_Params params {};
		params.InSkinnedMesh = InSkinnedMesh;
		params.InBreakableBones = InBreakableBones;
		params.InTestLocation = InTestLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBoneLocation != nullptr)
			*OutBoneLocation = params.OutBoneLocation;
		if (OutClosestDistance != nullptr)
			*OutClosestDistance = params.OutClosestDistance;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605500
	 * 		Name   -> Function TBL.GoreFXLibrary.FillUpComponentSpaceTransformsRefPose
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class USkeletalMeshComponent*                      SKM                                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FTransform>                          ComponentSpaceTransforms                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UGoreFXLibrary::STATIC_FillUpComponentSpaceTransformsRefPose(class USkeletalMeshComponent* SKM, TArray<struct FTransform>* ComponentSpaceTransforms)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GoreFXLibrary.FillUpComponentSpaceTransformsRefPose");
		
		UGoreFXLibrary_FillUpComponentSpaceTransformsRefPose_Params params {};
		params.SKM = SKM;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ComponentSpaceTransforms != nullptr)
			*ComponentSpaceTransforms = params.ComponentSpaceTransforms;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01605250
	 * 		Name   -> Function TBL.GoreFXLibrary.BreakAtBone
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class ACharacter*                                  Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Impulse                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitLocation                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSpawnedItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UGoreFXLibrary::STATIC_BreakAtBone(class ACharacter* Char, const class FName& BoneName, const struct FVector& Impulse, const struct FVector& HitLocation, bool bSpawnedItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.GoreFXLibrary.BreakAtBone");
		
		UGoreFXLibrary_BreakAtBone_Params params {};
		params.Char = Char;
		params.BoneName = BoneName;
		params.Impulse = Impulse;
		params.HitLocation = HitLocation;
		params.bSpawnedItem = bSpawnedItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGoreFXLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGoreFXLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GoreFXLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AGroupSpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AGroupSpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GroupSpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGroupSpawnQueuer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGroupSpawnQueuer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GroupSpawnQueuer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C730
	 * 		Name   -> Function TBL.HeadlookComponent.SetTargetActor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHeadlookComponent::SetTargetActor(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HeadlookComponent.SetTargetActor");
		
		UHeadlookComponent_SetTargetActor_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A910
	 * 		Name   -> Function TBL.HeadlookComponent.GetHeadlookLocation
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FVector                                     OutHeadlookLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutIsHeadlook                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHeadlookComponent::GetHeadlookLocation(struct FVector* OutHeadlookLocation, bool* OutIsHeadlook)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HeadlookComponent.GetHeadlookLocation");
		
		UHeadlookComponent_GetHeadlookLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutHeadlookLocation != nullptr)
			*OutHeadlookLocation = params.OutHeadlookLocation;
		if (OutIsHeadlook != nullptr)
			*OutIsHeadlook = params.OutIsHeadlook;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHeadlookComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHeadlookComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HeadlookComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHeraldryAssetUserData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHeraldryAssetUserData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HeraldryAssetUserData");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C7D0
	 * 		Name   -> Function TBL.Horse.WantsToGallop
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bWantsToGallop                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::WantsToGallop(bool bWantsToGallop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.WantsToGallop");
		
		AHorse_WantsToGallop_Params params {};
		params.bWantsToGallop = bWantsToGallop;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.ShouldPushBackOnTurnAgainstWall
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	bool AHorse::ShouldPushBackOnTurnAgainstWall()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.ShouldPushBackOnTurnAgainstWall");
		
		AHorse_ShouldPushBackOnTurnAgainstWall_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.RiderToWorldImpact
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AHorse::RiderToWorldImpact(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.RiderToWorldImpact");
		
		AHorse_RiderToWorldImpact_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C540
	 * 		Name   -> Function TBL.Horse.PostHorseFxEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EventScale                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                EventTags                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::PostHorseFxEvent(const class FName& EventName, float EventScale, TArray<class FName> EventTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.PostHorseFxEvent");
		
		AHorse_PostHorseFxEvent_Params params {};
		params.EventName = EventName;
		params.EventScale = EventScale;
		params.EventTags = EventTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C3C0
	 * 		Name   -> Function TBL.Horse.OnProcessPlayerInput
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AHorse::OnProcessPlayerInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.OnProcessPlayerInput");
		
		AHorse_OnProcessPlayerInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C300
	 * 		Name   -> Function TBL.Horse.OnPlayerMeshChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class USkeletalMeshComponent*                      OldMesh                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USkeletalMeshComponent*                      NewMesh                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::OnPlayerMeshChanged(class USkeletalMeshComponent* OldMesh, class USkeletalMeshComponent* NewMesh)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.OnPlayerMeshChanged");
		
		AHorse_OnPlayerMeshChanged_Params params {};
		params.OldMesh = OldMesh;
		params.NewMesh = NewMesh;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C220
	 * 		Name   -> Function TBL.Horse.OnKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AHorse::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.OnKilled");
		
		AHorse_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160BC00
	 * 		Name   -> Function TBL.Horse.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.OnCombatStateChanged");
		
		AHorse_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160BB70
	 * 		Name   -> Function TBL.Horse.OnCinematicControlRestricted
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::OnCinematicControlRestricted(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.OnCinematicControlRestricted");
		
		AHorse_OnCinematicControlRestricted_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160BAE0
	 * 		Name   -> Function TBL.Horse.OnCinematicControlAllowed
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::OnCinematicControlAllowed(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.OnCinematicControlAllowed");
		
		AHorse_OnCinematicControlAllowed_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B8C0
	 * 		Name   -> Function TBL.Horse.KnockRiderOffHorse
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AHorse::KnockRiderOffHorse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.KnockRiderOffHorse");
		
		AHorse_KnockRiderOffHorse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B8A0
	 * 		Name   -> Function TBL.Horse.KickNoDriver
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AHorse::KickNoDriver()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.KickNoDriver");
		
		AHorse_KickNoDriver_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B690
	 * 		Name   -> Function TBL.Horse.IsExhausted
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool AHorse::IsExhausted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.IsExhausted");
		
		AHorse_IsExhausted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.HorseToWorldImpact
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		TBL_EHorseImpactLocation                           ImpactLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHorseToWorldImpactType                        ImpactType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ImpactCombatState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ImpactSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::HorseToWorldImpact(const struct FHitResult& Hit, TBL_EHorseImpactLocation ImpactLocation, TBL_EHorseToWorldImpactType ImpactType, const class FName& ImpactCombatState, float ImpactSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.HorseToWorldImpact");
		
		AHorse_HorseToWorldImpact_Params params {};
		params.Hit = Hit;
		params.ImpactLocation = ImpactLocation;
		params.ImpactType = ImpactType;
		params.ImpactCombatState = ImpactCombatState;
		params.ImpactSpeed = ImpactSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.HorseToHorseImpact
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AHorse*                                      TargetHorse                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHorseImpactLocation                           ImpactLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHorseToHorseImpactType                        ImpactType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ImpactCombatState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ImpactSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::HorseToHorseImpact(class AHorse* TargetHorse, TBL_EHorseImpactLocation ImpactLocation, TBL_EHorseToHorseImpactType ImpactType, const class FName& ImpactCombatState, float ImpactSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.HorseToHorseImpact");
		
		AHorse_HorseToHorseImpact_Params params {};
		params.TargetHorse = TargetHorse;
		params.ImpactLocation = ImpactLocation;
		params.ImpactType = ImpactType;
		params.ImpactCombatState = ImpactCombatState;
		params.ImpactSpeed = ImpactSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.HorseToCharacterImpact
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               TargetCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHorseImpactLocation                           ImpactLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHorseToCharacterImpactType                    ImpactType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ImpactCombatState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ImpactSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::HorseToCharacterImpact(class ATBLCharacter* TargetCharacter, TBL_EHorseImpactLocation ImpactLocation, TBL_EHorseToCharacterImpactType ImpactType, const class FName& ImpactCombatState, float ImpactSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.HorseToCharacterImpact");
		
		AHorse_HorseToCharacterImpact_Params params {};
		params.TargetCharacter = TargetCharacter;
		params.ImpactLocation = ImpactLocation;
		params.ImpactType = ImpactType;
		params.ImpactCombatState = ImpactCombatState;
		params.ImpactSpeed = ImpactSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B1A0
	 * 		Name   -> Function TBL.Horse.Horse_ClientAdjustPosition
	 * 		Flags  -> (Net, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		float                                              Timestamp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NewLoc                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NewVel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         NewBase                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewBaseBoneName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasBase                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bBaseRelativePosition                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      ServerMovementMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHorseMovementCorrection                    HorseCorrection                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AHorse::Horse_ClientAdjustPosition(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const class FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, unsigned char ServerMovementMode, const struct FHorseMovementCorrection& HorseCorrection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.Horse_ClientAdjustPosition");
		
		AHorse_Horse_ClientAdjustPosition_Params params {};
		params.Timestamp = Timestamp;
		params.NewLoc = NewLoc;
		params.NewVel = NewVel;
		params.NewBase = NewBase;
		params.NewBaseBoneName = NewBaseBoneName;
		params.bHasBase = bHasBase;
		params.bBaseRelativePosition = bBaseRelativePosition;
		params.ServerMovementMode = ServerMovementMode;
		params.HorseCorrection = HorseCorrection;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B110
	 * 		Name   -> Function TBL.Horse.HasStaminaForAttack
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AHorse::HasStaminaForAttack(const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.HasStaminaForAttack");
		
		AHorse_HasStaminaForAttack_Params params {};
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.GetWorldCollisionRider
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	class UCapsuleComponent* AHorse::GetWorldCollisionRider()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.GetWorldCollisionRider");
		
		AHorse_GetWorldCollisionRider_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.GetWorldCollisionLegs
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class UCapsuleComponent*                           FrontLegs                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCapsuleComponent*                           BackLegs                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::GetWorldCollisionLegs(class UCapsuleComponent** FrontLegs, class UCapsuleComponent** BackLegs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.GetWorldCollisionLegs");
		
		AHorse_GetWorldCollisionLegs_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (FrontLegs != nullptr)
			*FrontLegs = params.FrontLegs;
		if (BackLegs != nullptr)
			*BackLegs = params.BackLegs;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.GetWorldCollisionFront
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	TArray<class UPrimitiveComponent*> AHorse::GetWorldCollisionFront()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.GetWorldCollisionFront");
		
		AHorse_GetWorldCollisionFront_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.GetWorldCollisionBack
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	TArray<class UPrimitiveComponent*> AHorse::GetWorldCollisionBack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.GetWorldCollisionBack");
		
		AHorse_GetWorldCollisionBack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B0D0
	 * 		Name   -> Function TBL.Horse.GetThirdPersonCameraAttachPoint
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 */
	struct FVector AHorse::GetThirdPersonCameraAttachPoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.GetThirdPersonCameraAttachPoint");
		
		AHorse_GetThirdPersonCameraAttachPoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.GetRiderToWorldCollision
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	Engine_ECollisionResponse AHorse::GetRiderToWorldCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.GetRiderToWorldCollision");
		
		AHorse_GetRiderToWorldCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Horse.GetPushingCollision
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	TArray<class UPrimitiveComponent*> AHorse::GetPushingCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.GetPushingCollision");
		
		AHorse_GetPushingCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A800
	 * 		Name   -> Function TBL.Horse.ForceRun
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::ForceRun(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.ForceRun");
		
		AHorse_ForceRun_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015CFF60
	 * 		Name   -> Function TBL.Horse.EventUsePressed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       InPawn                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InInteractable                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::EventUsePressed(class APawn* InPawn, class UInteractableComponent* InInteractable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.EventUsePressed");
		
		AHorse_EventUsePressed_Params params {};
		params.InPawn = InPawn;
		params.InInteractable = InInteractable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A3F0
	 * 		Name   -> Function TBL.Horse.BroadcastSetFaction
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::BroadcastSetFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.BroadcastSetFaction");
		
		AHorse_BroadcastSetFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A360
	 * 		Name   -> Function TBL.Horse.BroadcastRandomSeed
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		int                                                Seed                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::BroadcastRandomSeed(int Seed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.BroadcastRandomSeed");
		
		AHorse_BroadcastRandomSeed_Params params {};
		params.Seed = Seed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A240
	 * 		Name   -> Function TBL.Horse.BroadcastPostHorseFxEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EventScale                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                EventTags                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::BroadcastPostHorseFxEvent(const class FName& EventName, float EventScale, TArray<class FName> EventTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.BroadcastPostHorseFxEvent");
		
		AHorse_BroadcastPostHorseFxEvent_Params params {};
		params.EventName = EventName;
		params.EventScale = EventScale;
		params.EventTags = EventTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A1B0
	 * 		Name   -> Function TBL.Horse.BroadcastPlayDismountAnimation
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AHorse::BroadcastPlayDismountAnimation(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Horse.BroadcastPlayDismountAnimation");
		
		AHorse_BroadcastPlayDismountAnimation_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AHorse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHorse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Horse");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687720
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.SetAllowPositionError
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               InAllowPositionError                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::SetAllowPositionError(bool InAllowPositionError)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.SetAllowPositionError");
		
		UTBLCharacterMovementBaseComponent_SetAllowPositionError_Params params {};
		params.InAllowPositionError = InAllowPositionError;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687620
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.ServerAckMovement
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		unsigned char                                      SyncMovementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::ServerAckMovement(unsigned char SyncMovementId, float ClientTimeStamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.ServerAckMovement");
		
		UTBLCharacterMovementBaseComponent_ServerAckMovement_Params params {};
		params.SyncMovementId = SyncMovementId;
		params.ClientTimeStamp = ClientTimeStamp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686AE0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.OnRep_MovementAnimationEvent
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovementBaseComponent::OnRep_MovementAnimationEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.OnRep_MovementAnimationEvent");
		
		UTBLCharacterMovementBaseComponent_OnRep_MovementAnimationEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686AC0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.OnRep_AutorunParams
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovementBaseComponent::OnRep_AutorunParams()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.OnRep_AutorunParams");
		
		UTBLCharacterMovementBaseComponent_OnRep_AutorunParams_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686A80
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.OnAutorunParamsChanged
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovementBaseComponent::OnAutorunParamsChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.OnAutorunParamsChanged");
		
		UTBLCharacterMovementBaseComponent_OnAutorunParamsChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686A60
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.NoStopAutorunExpired
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLCharacterMovementBaseComponent::NoStopAutorunExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.NoStopAutorunExpired");
		
		UTBLCharacterMovementBaseComponent_NoStopAutorunExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686970
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.LockForcedAutorun
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bLock                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::LockForcedAutorun(bool bLock)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.LockForcedAutorun");
		
		UTBLCharacterMovementBaseComponent_LockForcedAutorun_Params params {};
		params.bLock = bLock;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016868E0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.IsInitialAutorun
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLCharacterMovementBaseComponent::IsInitialAutorun()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.IsInitialAutorun");
		
		UTBLCharacterMovementBaseComponent_IsInitialAutorun_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686780
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.InitialAutorunExpired
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLCharacterMovementBaseComponent::InitialAutorunExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.InitialAutorunExpired");
		
		UTBLCharacterMovementBaseComponent_InitialAutorunExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016864D0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.HasMovementAction
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UMovementSequence*                           Sequence                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLCharacterMovementBaseComponent::HasMovementAction(class UMovementSequence* Sequence)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.HasMovementAction");
		
		UTBLCharacterMovementBaseComponent_HasMovementAction_Params params {};
		params.Sequence = Sequence;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686190
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.GetMovementMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	Engine_EMovementMode UTBLCharacterMovementBaseComponent::GetMovementMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.GetMovementMode");
		
		UTBLCharacterMovementBaseComponent_GetMovementMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686170
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.GetAutorunStartTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UTBLCharacterMovementBaseComponent::GetAutorunStartTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.GetAutorunStartTime");
		
		UTBLCharacterMovementBaseComponent_GetAutorunStartTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685B70
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.DidHitBottomOfCapsule
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UTBLCharacterMovementBaseComponent::DidHitBottomOfCapsule(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.DidHitBottomOfCapsule");
		
		UTBLCharacterMovementBaseComponent_DidHitBottomOfCapsule_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685A30
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.ClientStopForcedAutorun
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		unsigned char                                      SyncMovementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::ClientStopForcedAutorun(unsigned char SyncMovementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.ClientStopForcedAutorun");
		
		UTBLCharacterMovementBaseComponent_ClientStopForcedAutorun_Params params {};
		params.SyncMovementId = SyncMovementId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685940
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.ClientStartMovement
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		struct FMovementActionInitiationParams             InitParams                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      SyncMovementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::ClientStartMovement(const struct FMovementActionInitiationParams& InitParams, unsigned char SyncMovementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.ClientStartMovement");
		
		UTBLCharacterMovementBaseComponent_ClientStartMovement_Params params {};
		params.InitParams = InitParams;
		params.SyncMovementId = SyncMovementId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685840
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.ClientStartForcedAutorun
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		struct FAutorunParams                              Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      SyncMovementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::ClientStartForcedAutorun(const struct FAutorunParams& Params, unsigned char SyncMovementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.ClientStartForcedAutorun");
		
		UTBLCharacterMovementBaseComponent_ClientStartForcedAutorun_Params params {};
		params.Params = Params;
		params.SyncMovementId = SyncMovementId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685780
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.ClientSetAutorunMovementMode
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		TBL_EAutorunMovementMode                           InMovementMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      SyncMovementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::ClientSetAutorunMovementMode(TBL_EAutorunMovementMode InMovementMode, unsigned char SyncMovementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.ClientSetAutorunMovementMode");
		
		UTBLCharacterMovementBaseComponent_ClientSetAutorunMovementMode_Params params {};
		params.InMovementMode = InMovementMode;
		params.SyncMovementId = SyncMovementId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016856E0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.ClientCinematicRestrictControl
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		unsigned char                                      SyncMovementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::ClientCinematicRestrictControl(unsigned char SyncMovementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.ClientCinematicRestrictControl");
		
		UTBLCharacterMovementBaseComponent_ClientCinematicRestrictControl_Params params {};
		params.SyncMovementId = SyncMovementId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685660
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.ClientCinematicAllowControl
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		unsigned char                                      SyncMovementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::ClientCinematicAllowControl(unsigned char SyncMovementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.ClientCinematicAllowControl");
		
		UTBLCharacterMovementBaseComponent_ClientCinematicAllowControl_Params params {};
		params.SyncMovementId = SyncMovementId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016854B0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.BroadcastStopMovement
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class UMovementSequence*                           Sequence                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bExecuteClientFirst                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::BroadcastStopMovement(class UMovementSequence* Sequence, bool bExecuteClientFirst)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.BroadcastStopMovement");
		
		UTBLCharacterMovementBaseComponent_BroadcastStopMovement_Params params {};
		params.Sequence = Sequence;
		params.bExecuteClientFirst = bExecuteClientFirst;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685400
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.BroadcastStartMovement
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		struct FMovementActionInitiationParams             InitParams                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::BroadcastStartMovement(const struct FMovementActionInitiationParams& InitParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.BroadcastStartMovement");
		
		UTBLCharacterMovementBaseComponent_BroadcastStartMovement_Params params {};
		params.InitParams = InitParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685370
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.BroadcastSetDowned
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		bool                                               bDowned                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::BroadcastSetDowned(bool bDowned)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.BroadcastSetDowned");
		
		UTBLCharacterMovementBaseComponent_BroadcastSetDowned_Params params {};
		params.bDowned = bDowned;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016852E0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.BroadcastPlaySpawnAnimation
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class FName                                        Animation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::BroadcastPlaySpawnAnimation(const class FName& Animation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.BroadcastPlaySpawnAnimation");
		
		UTBLCharacterMovementBaseComponent_BroadcastPlaySpawnAnimation_Params params {};
		params.Animation = Animation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90E30
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.AuthorityStopForcedAutorun
	 * 		Flags  -> (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovementBaseComponent::AuthorityStopForcedAutorun()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.AuthorityStopForcedAutorun");
		
		UTBLCharacterMovementBaseComponent_AuthorityStopForcedAutorun_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684AB0
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.AuthoritySetAutorunMovementMode
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAutorunMovementMode                           InMovementMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::AuthoritySetAutorunMovementMode(TBL_EAutorunMovementMode InMovementMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.AuthoritySetAutorunMovementMode");
		
		UTBLCharacterMovementBaseComponent_AuthoritySetAutorunMovementMode_Params params {};
		params.InMovementMode = InMovementMode;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684990
	 * 		Name   -> Function TBL.TBLCharacterMovementBaseComponent.AuthorityForceAutorun
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FAutorunParams                              Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacterBase*                           Leader                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovementBaseComponent::AuthorityForceAutorun(const struct FAutorunParams& Params, class ATBLCharacterBase* Leader)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovementBaseComponent.AuthorityForceAutorun");
		
		UTBLCharacterMovementBaseComponent_AuthorityForceAutorun_Params params {};
		params.Params = Params;
		params.Leader = Leader;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCharacterMovementBaseComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCharacterMovementBaseComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterMovementBaseComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E0D0
	 * 		Name   -> Function TBL.SiegeEngineMovement.OnDriverMount
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Driver                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeEngineMovement::OnDriverMount(class ATBLCharacter* Driver)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngineMovement.OnDriverMount");
		
		USiegeEngineMovement_OnDriverMount_Params params {};
		params.Driver = Driver;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0164E000
	 * 		Name   -> Function TBL.SiegeEngineMovement.OnDriverDismount
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Driver                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USiegeEngineMovement::OnDriverDismount(class ATBLCharacter* Driver, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.SiegeEngineMovement.OnDriverDismount");
		
		USiegeEngineMovement_OnDriverDismount_Params params {};
		params.Driver = Driver;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USiegeEngineMovement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USiegeEngineMovement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SiegeEngineMovement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C7B0
	 * 		Name   -> Function TBL.HorseMovement.StartJump
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UHorseMovement::StartJump()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.StartJump");
		
		UHorseMovement_StartJump_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C670
	 * 		Name   -> Function TBL.HorseMovement.ServerSetLeanDirection
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ServerSetLeanDirection(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ServerSetLeanDirection");
		
		UHorseMovement_ServerSetLeanDirection_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C520
	 * 		Name   -> Function TBL.HorseMovement.OnRep_TargetSpeed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UHorseMovement::OnRep_TargetSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.OnRep_TargetSpeed");
		
		UHorseMovement_OnRep_TargetSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C500
	 * 		Name   -> Function TBL.HorseMovement.OnRep_CurrentTurnRateAccel
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UHorseMovement::OnRep_CurrentTurnRateAccel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.OnRep_CurrentTurnRateAccel");
		
		UHorseMovement_OnRep_CurrentTurnRateAccel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C4E0
	 * 		Name   -> Function TBL.HorseMovement.OnRep_CurrentTurnRate
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UHorseMovement::OnRep_CurrentTurnRate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.OnRep_CurrentTurnRate");
		
		UHorseMovement_OnRep_CurrentTurnRate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C4C0
	 * 		Name   -> Function TBL.HorseMovement.OnRep_CurrentForwardSpeed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UHorseMovement::OnRep_CurrentForwardSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.OnRep_CurrentForwardSpeed");
		
		UHorseMovement_OnRep_CurrentForwardSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160C3E0
	 * 		Name   -> Function TBL.HorseMovement.OnPushingOverlap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		TArray<class ATBLCharacterBase*>                   Overlaps                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::OnPushingOverlap(TArray<class ATBLCharacterBase*> Overlaps)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.OnPushingOverlap");
		
		UHorseMovement_OnPushingOverlap_Params params {};
		params.Overlaps = Overlaps;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160BF10
	 * 		Name   -> Function TBL.HorseMovement.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.OnCombatStateChanged");
		
		UHorseMovement_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160BA20
	 * 		Name   -> Function TBL.HorseMovement.ModifyTurnRateScale
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InterpSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ModifyTurnRateScale(float Target, float InterpSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ModifyTurnRateScale");
		
		UHorseMovement_ModifyTurnRateScale_Params params {};
		params.Target = Target;
		params.InterpSpeed = InterpSpeed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B9A0
	 * 		Name   -> Function TBL.HorseMovement.ModifyTargetSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ModifyTargetSpeed(float Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ModifyTargetSpeed");
		
		UHorseMovement_ModifyTargetSpeed_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B8E0
	 * 		Name   -> Function TBL.HorseMovement.ModifyAccelerationScale
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InterpSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ModifyAccelerationScale(float Target, float InterpSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ModifyAccelerationScale");
		
		UHorseMovement_ModifyAccelerationScale_Params params {};
		params.Target = Target;
		params.InterpSpeed = InterpSpeed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B870
	 * 		Name   -> Function TBL.HorseMovement.IsStrafing
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UHorseMovement::IsStrafing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.IsStrafing");
		
		UHorseMovement_IsStrafing_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B7E0
	 * 		Name   -> Function TBL.HorseMovement.IsMovementStateLessThanEqual
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UHorseMovement::IsMovementStateLessThanEqual(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.IsMovementStateLessThanEqual");
		
		UHorseMovement_IsMovementStateLessThanEqual_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B750
	 * 		Name   -> Function TBL.HorseMovement.IsMovementStateGreaterThan
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UHorseMovement::IsMovementStateGreaterThan(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.IsMovementStateGreaterThan");
		
		UHorseMovement_IsMovementStateGreaterThan_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B6C0
	 * 		Name   -> Function TBL.HorseMovement.IsMovementStateEqual
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UHorseMovement::IsMovementStateEqual(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.IsMovementStateEqual");
		
		UHorseMovement_IsMovementStateEqual_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B5D0
	 * 		Name   -> Function TBL.HorseMovement.ImpactTurn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ImpactTurn(float Delta, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ImpactTurn");
		
		UHorseMovement_ImpactTurn_Params params {};
		params.Delta = Delta;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B510
	 * 		Name   -> Function TBL.HorseMovement.ImpactSlowdown
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ImpactSlowdown(float Delta, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ImpactSlowdown");
		
		UHorseMovement_ImpactSlowdown_Params params {};
		params.Delta = Delta;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B450
	 * 		Name   -> Function TBL.HorseMovement.ImpactMaxSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              MaxSpeed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ImpactMaxSpeed(float MaxSpeed, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ImpactMaxSpeed");
		
		UHorseMovement_ImpactMaxSpeed_Params params {};
		params.MaxSpeed = MaxSpeed;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160B000
	 * 		Name   -> Function TBL.HorseMovement.GetSpeedInState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Percent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovement::GetSpeedInState(const class FName& State, float Percent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetSpeedInState");
		
		UHorseMovement_GetSpeedInState_Params params {};
		params.State = State;
		params.Percent = Percent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160AF60
	 * 		Name   -> Function TBL.HorseMovement.GetSettleSpeedInState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovement::GetSettleSpeedInState(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetSettleSpeedInState");
		
		UHorseMovement_GetSettleSpeedInState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160AEC0
	 * 		Name   -> Function TBL.HorseMovement.GetMovementStateFromSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              Speed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UHorseMovement::GetMovementStateFromSpeed(float Speed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetMovementStateFromSpeed");
		
		UHorseMovement_GetMovementStateFromSpeed_Params params {};
		params.Speed = Speed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160AE20
	 * 		Name   -> Function TBL.HorseMovement.GetMinSpeedInState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovement::GetMinSpeedInState(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetMinSpeedInState");
		
		UHorseMovement_GetMinSpeedInState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160AD80
	 * 		Name   -> Function TBL.HorseMovement.GetMaxSpeedInState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovement::GetMaxSpeedInState(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetMaxSpeedInState");
		
		UHorseMovement_GetMaxSpeedInState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160ACA0
	 * 		Name   -> Function TBL.HorseMovement.GetInputTurn
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              InputTurn                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::GetInputTurn(float* InputTurn, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetInputTurn");
		
		UHorseMovement_GetInputTurn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InputTurn != nullptr)
			*InputTurn = params.InputTurn;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160ABC0
	 * 		Name   -> Function TBL.HorseMovement.GetInputStrafe
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              InputStrafe                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::GetInputStrafe(float* InputStrafe, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetInputStrafe");
		
		UHorseMovement_GetInputStrafe_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InputStrafe != nullptr)
			*InputStrafe = params.InputStrafe;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160AAE0
	 * 		Name   -> Function TBL.HorseMovement.GetInputForward
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              InputForward                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::GetInputForward(float* InputForward, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetInputForward");
		
		UHorseMovement_GetInputForward_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InputForward != nullptr)
			*InputForward = params.InputForward;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160AA00
	 * 		Name   -> Function TBL.HorseMovement.GetInputDirection
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EHorseMovementInput                            Direction                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::GetInputDirection(TBL_EHorseMovementInput* Direction, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetInputDirection");
		
		UHorseMovement_GetInputDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Direction != nullptr)
			*Direction = params.Direction;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A8E0
	 * 		Name   -> Function TBL.HorseMovement.GetCurrentForwardSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float UHorseMovement::GetCurrentForwardSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetCurrentForwardSpeed");
		
		UHorseMovement_GetCurrentForwardSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A8B0
	 * 		Name   -> Function TBL.HorseMovement.GetControlMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UHorseMovement::GetControlMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetControlMode");
		
		UHorseMovement_GetControlMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A880
	 * 		Name   -> Function TBL.HorseMovement.GetBoostMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UHorseMovement::GetBoostMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.GetBoostMode");
		
		UHorseMovement_GetBoostMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A730
	 * 		Name   -> Function TBL.HorseMovement.ClientImpactTurn
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		float                                              Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ClientImpactTurn(float Delta, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ClientImpactTurn");
		
		UHorseMovement_ClientImpactTurn_Params params {};
		params.Delta = Delta;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A660
	 * 		Name   -> Function TBL.HorseMovement.ClientImpactSlowdown
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		float                                              Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ClientImpactSlowdown(float Delta, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ClientImpactSlowdown");
		
		UHorseMovement_ClientImpactSlowdown_Params params {};
		params.Delta = Delta;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A590
	 * 		Name   -> Function TBL.HorseMovement.ClientImpactMaxSpeed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		float                                              MaxSpeed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovement::ClientImpactMaxSpeed(float MaxSpeed, float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ClientImpactMaxSpeed");
		
		UHorseMovement_ClientImpactMaxSpeed_Params params {};
		params.MaxSpeed = MaxSpeed;
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A500
	 * 		Name   -> Function TBL.HorseMovement.ClampMovementState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UHorseMovement::ClampMovementState(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.ClampMovementState");
		
		UHorseMovement_ClampMovementState_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0160A470
	 * 		Name   -> Function TBL.HorseMovement.CheckHorseCollisionFromIdle
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UHorseMovement::CheckHorseCollisionFromIdle(float Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovement.CheckHorseCollisionFromIdle");
		
		UHorseMovement_CheckHorseCollisionFromIdle_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHorseMovement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHorseMovement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HorseMovement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HorseMovementState.UpdateMovement
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHorseMovementState::UpdateMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.UpdateMovement");
		
		UHorseMovementState_UpdateMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HorseMovementState.StrafeGearUp
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHorseMovementState::StrafeGearUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.StrafeGearUp");
		
		UHorseMovementState_StrafeGearUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HorseMovementState.StrafeGearDown
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHorseMovementState::StrafeGearDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.StrafeGearDown");
		
		UHorseMovementState_StrafeGearDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01611150
	 * 		Name   -> Function TBL.HorseMovementState.ModifyTurnRateScale
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InterpSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovementState::ModifyTurnRateScale(float Target, float InterpSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.ModifyTurnRateScale");
		
		UHorseMovementState_ModifyTurnRateScale_Params params {};
		params.Target = Target;
		params.InterpSpeed = InterpSpeed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016110D0
	 * 		Name   -> Function TBL.HorseMovementState.ModifyTargetSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovementState::ModifyTargetSpeed(float Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.ModifyTargetSpeed");
		
		UHorseMovementState_ModifyTargetSpeed_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01611010
	 * 		Name   -> Function TBL.HorseMovementState.ModifyAccelerationScale
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InterpSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovementState::ModifyAccelerationScale(float Target, float InterpSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.ModifyAccelerationScale");
		
		UHorseMovementState_ModifyAccelerationScale_Params params {};
		params.Target = Target;
		params.InterpSpeed = InterpSpeed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HorseMovementState.GetTurnInputScale
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EHorseTurnInput                                TurnInput                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovementState::GetTurnInputScale(TBL_EHorseTurnInput TurnInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetTurnInputScale");
		
		UHorseMovementState_GetTurnInputScale_Params params {};
		params.TurnInput = TurnInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610F20
	 * 		Name   -> Function TBL.HorseMovementState.GetSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Percent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovementState::GetSpeed(const class FName& State, float Percent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetSpeed");
		
		UHorseMovementState_GetSpeed_Params params {};
		params.State = State;
		params.Percent = Percent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610E80
	 * 		Name   -> Function TBL.HorseMovementState.GetSettleSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovementState::GetSettleSpeed(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetSettleSpeed");
		
		UHorseMovementState_GetSettleSpeed_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610DC0
	 * 		Name   -> Function TBL.HorseMovementState.GetMinSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovementState::GetMinSpeed(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetMinSpeed");
		
		UHorseMovementState_GetMinSpeed_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610D20
	 * 		Name   -> Function TBL.HorseMovementState.GetMaxSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHorseMovementState::GetMaxSpeed(const class FName& State)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetMaxSpeed");
		
		UHorseMovementState_GetMaxSpeed_Params params {};
		params.State = State;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610C40
	 * 		Name   -> Function TBL.HorseMovementState.GetInputTurn
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              InputTurn                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovementState::GetInputTurn(float* InputTurn, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetInputTurn");
		
		UHorseMovementState_GetInputTurn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InputTurn != nullptr)
			*InputTurn = params.InputTurn;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610B60
	 * 		Name   -> Function TBL.HorseMovementState.GetInputStrafe
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              InputStrafe                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovementState::GetInputStrafe(float* InputStrafe, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetInputStrafe");
		
		UHorseMovementState_GetInputStrafe_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InputStrafe != nullptr)
			*InputStrafe = params.InputStrafe;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610A80
	 * 		Name   -> Function TBL.HorseMovementState.GetInputForward
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              InputForwardOut                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovementState::GetInputForward(float* InputForwardOut, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetInputForward");
		
		UHorseMovementState_GetInputForward_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InputForwardOut != nullptr)
			*InputForwardOut = params.InputForwardOut;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016109A0
	 * 		Name   -> Function TBL.HorseMovementState.GetInputDirection
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EHorseMovementInput                            Direction                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeldTime                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHorseMovementState::GetInputDirection(TBL_EHorseMovementInput* Direction, float* HeldTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetInputDirection");
		
		UHorseMovementState_GetInputDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Direction != nullptr)
			*Direction = params.Direction;
		if (HeldTime != nullptr)
			*HeldTime = params.HeldTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610970
	 * 		Name   -> Function TBL.HorseMovementState.GetHorseMovement
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UHorseMovement* UHorseMovementState::GetHorseMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetHorseMovement");
		
		UHorseMovementState_GetHorseMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016107D0
	 * 		Name   -> Function TBL.HorseMovementState.GetCurrentForwardSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float UHorseMovementState::GetCurrentForwardSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetCurrentForwardSpeed");
		
		UHorseMovementState_GetCurrentForwardSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016107A0
	 * 		Name   -> Function TBL.HorseMovementState.GetControlMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UHorseMovementState::GetControlMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetControlMode");
		
		UHorseMovementState_GetControlMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610770
	 * 		Name   -> Function TBL.HorseMovementState.GetBoostMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UHorseMovementState::GetBoostMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GetBoostMode");
		
		UHorseMovementState_GetBoostMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HorseMovementState.GearUp
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHorseMovementState::GearUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GearUp");
		
		UHorseMovementState_GearUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HorseMovementState.GearDown
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHorseMovementState::GearDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HorseMovementState.GearDown");
		
		UHorseMovementState_GearDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHorseMovementState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHorseMovementState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HorseMovementState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF330
	 * 		Name   -> Function TBL.TBLUserWidget.SetSelfAsRadioGroupSelection
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Group                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUserWidget::SetSelfAsRadioGroupSelection(const class FName& Group)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.SetSelfAsRadioGroupSelection");
		
		UTBLUserWidget_SetSelfAsRadioGroupSelection_Params params {};
		params.Group = Group;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FECF0
	 * 		Name   -> Function TBL.TBLUserWidget.PlayInterruptableAnimation
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidgetAnimation*                            InAnimation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StartAtTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NumLoopsToPlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InterruptGroup                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPlayInReverse                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReverseExisting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUserWidget::PlayInterruptableAnimation(class UWidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, const class FName& InterruptGroup, bool bPlayInReverse, bool bReverseExisting)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.PlayInterruptableAnimation");
		
		UTBLUserWidget_PlayInterruptableAnimation_Params params {};
		params.InAnimation = InAnimation;
		params.StartAtTime = StartAtTime;
		params.NumLoopsToPlay = NumLoopsToPlay;
		params.InterruptGroup = InterruptGroup;
		params.bPlayInReverse = bPlayInReverse;
		params.bReverseExisting = bReverseExisting;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE9E0
	 * 		Name   -> Function TBL.TBLUserWidget.PlayAdvancedAnimation
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidgetAnimation*                            InAnimation                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCurveFloat*                                 InterpolationCurve                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StartAtTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LoopBackToTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EndAtTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsNormalizedCurve                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AnimationSpeed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NumLoopsToPlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bResumeFromLastTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxDuration                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUserWidget::PlayAdvancedAnimation(class UWidgetAnimation* InAnimation, class UCurveFloat* InterpolationCurve, float StartAtTime, float LoopBackToTime, float EndAtTime, bool bIsNormalizedCurve, float AnimationSpeed, int NumLoopsToPlay, bool bResumeFromLastTime, float Duration, float MaxDuration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.PlayAdvancedAnimation");
		
		UTBLUserWidget_PlayAdvancedAnimation_Params params {};
		params.InAnimation = InAnimation;
		params.InterpolationCurve = InterpolationCurve;
		params.StartAtTime = StartAtTime;
		params.LoopBackToTime = LoopBackToTime;
		params.EndAtTime = EndAtTime;
		params.bIsNormalizedCurve = bIsNormalizedCurve;
		params.AnimationSpeed = AnimationSpeed;
		params.NumLoopsToPlay = NumLoopsToPlay;
		params.bResumeFromLastTime = bResumeFromLastTime;
		params.Duration = Duration;
		params.MaxDuration = MaxDuration;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE700
	 * 		Name   -> Function TBL.TBLUserWidget.NativeUnhighlight
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 */
	void UTBLUserWidget::NativeUnhighlight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.NativeUnhighlight");
		
		UTBLUserWidget_NativeUnhighlight_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE6E0
	 * 		Name   -> Function TBL.TBLUserWidget.NativeHighlight
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 */
	void UTBLUserWidget::NativeHighlight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.NativeHighlight");
		
		UTBLUserWidget_NativeHighlight_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLUserWidget.K2_Unhighlight
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLUserWidget::K2_Unhighlight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.K2_Unhighlight");
		
		UTBLUserWidget_K2_Unhighlight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLUserWidget.K2_OnFocusChanging
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLUserWidget::K2_OnFocusChanging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.K2_OnFocusChanging");
		
		UTBLUserWidget_K2_OnFocusChanging_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLUserWidget.K2_Highlight
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLUserWidget::K2_Highlight()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.K2_Highlight");
		
		UTBLUserWidget_K2_Highlight_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE410
	 * 		Name   -> Function TBL.TBLUserWidget.IsWidgetEnabled
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EWidgetDisableType                             Result                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUserWidget::IsWidgetEnabled(TBL_EWidgetDisableType* Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.IsWidgetEnabled");
		
		UTBLUserWidget_IsWidgetEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Result != nullptr)
			*Result = params.Result;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE3E0
	 * 		Name   -> Function TBL.TBLUserWidget.IsWidgetDisabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLUserWidget::IsWidgetDisabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.IsWidgetDisabled");
		
		UTBLUserWidget_IsWidgetDisabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE240
	 * 		Name   -> Function TBL.TBLUserWidget.HandleGamepadNavigationModeChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EGamepadNavigationMode                         Mode                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUserWidget::HandleGamepadNavigationModeChanged(TBL_EGamepadNavigationMode Mode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.HandleGamepadNavigationModeChanged");
		
		UTBLUserWidget_HandleGamepadNavigationModeChanged_Params params {};
		params.Mode = Mode;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE110
	 * 		Name   -> Function TBL.TBLUserWidget.GetScreenManager
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UTBLScreenManager* UTBLUserWidget::GetScreenManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.GetScreenManager");
		
		UTBLUserWidget_GetScreenManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FDF40
	 * 		Name   -> Function TBL.TBLUserWidget.GetRadioGroupSelection
	 * 		Flags  -> (BlueprintCosmetic, Native, Protected, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        Group                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTBLUserWidget* UTBLUserWidget::GetRadioGroupSelection(const class FName& Group)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUserWidget.GetRadioGroupSelection");
		
		UTBLUserWidget_GetRadioGroupSelection_Params params {};
		params.Group = Group;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLUserWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLUserWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLUserWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerWidget.Update
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDContainerWidget::Update()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerWidget.Update");
		
		UHUDContainerWidget_Update_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerWidget.SubwidgetReturnToPool
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class UHUDContainerSubWidget*                      SubWidget                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDContainerWidget::SubwidgetReturnToPool(class UHUDContainerSubWidget* SubWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerWidget.SubwidgetReturnToPool");
		
		UHUDContainerWidget_SubwidgetReturnToPool_Params params {};
		params.SubWidget = SubWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerWidget.SubwidgetInitFromPool
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class UHUDContainerSubWidget*                      SubWidget                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDContainerWidget::SubwidgetInitFromPool(class UHUDContainerSubWidget* SubWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerWidget.SubwidgetInitFromPool");
		
		UHUDContainerWidget_SubwidgetInitFromPool_Params params {};
		params.SubWidget = SubWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerWidget.RemoveSubwidget
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class UHUDContainerSubWidget*                      SubWidget                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDContainerWidget::RemoveSubwidget(class UHUDContainerSubWidget* SubWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerWidget.RemoveSubwidget");
		
		UHUDContainerWidget_RemoveSubwidget_Params params {};
		params.SubWidget = SubWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610FF0
	 * 		Name   -> Function TBL.HUDContainerWidget.ManuallyUpdate
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UHUDContainerWidget::ManuallyUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerWidget.ManuallyUpdate");
		
		UHUDContainerWidget_ManuallyUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerWidget.AddSubwidget
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class UHUDContainerSubWidget*                      SubWidget                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDContainerWidget::AddSubwidget(class UHUDContainerSubWidget* SubWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerWidget.AddSubwidget");
		
		UHUDContainerWidget_AddSubwidget_Params params {};
		params.SubWidget = SubWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHUDContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHUDCrosshairContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDCrosshairContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDCrosshairContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerSubWidget.K2_UpdateFocusParams
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              InAlpha                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InScale                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDContainerSubWidget::K2_UpdateFocusParams(float InAlpha, float InScale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerSubWidget.K2_UpdateFocusParams");
		
		UHUDContainerSubWidget_K2_UpdateFocusParams_Params params {};
		params.InAlpha = InAlpha;
		params.InScale = InScale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerSubWidget.K2_OnReturnedToPool
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDContainerSubWidget::K2_OnReturnedToPool()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerSubWidget.K2_OnReturnedToPool");
		
		UHUDContainerSubWidget_K2_OnReturnedToPool_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerSubWidget.K2_OnFocusedChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bInIsFocused                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDContainerSubWidget::K2_OnFocusedChanged(bool bInIsFocused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerSubWidget.K2_OnFocusedChanged");
		
		UHUDContainerSubWidget_K2_OnFocusedChanged_Params params {};
		params.bInIsFocused = bInIsFocused;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDContainerSubWidget.K2_OnAssignedToActor
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDContainerSubWidget::K2_OnAssignedToActor(class AActor* Actor, class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerSubWidget.K2_OnAssignedToActor");
		
		UHUDContainerSubWidget_K2_OnAssignedToActor_Params params {};
		params.Actor = Actor;
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610730
	 * 		Name   -> Function TBL.HUDContainerSubWidget.GetAssignedActor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class AActor* UHUDContainerSubWidget::GetAssignedActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDContainerSubWidget.GetAssignedActor");
		
		UHUDContainerSubWidget_GetAssignedActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHUDContainerSubWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDContainerSubWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDContainerSubWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610E60
	 * 		Name   -> Function TBL.HUDMarkerActor.GetObjectiveStatusComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UObjectiveStatusDisplayComponent* AHUDMarkerActor::GetObjectiveStatusComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerActor.GetObjectiveStatusComponent");
		
		AHUDMarkerActor_GetObjectiveStatusComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610800
	 * 		Name   -> Function TBL.HUDMarkerActor.GetHUDMarkerComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UHudMarkerDisplayComponent* AHUDMarkerActor::GetHUDMarkerComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerActor.GetHUDMarkerComponent");
		
		AHUDMarkerActor_GetHUDMarkerComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610710
	 * 		Name   -> Function TBL.HUDMarkerActor.GetActorInfoComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UActorInfoDisplayComponent* AHUDMarkerActor::GetActorInfoComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerActor.GetActorInfoComponent");
		
		AHUDMarkerActor_GetActorInfoComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AHUDMarkerActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHUDMarkerActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDMarkerActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHUDMarkerContainerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDMarkerContainerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDMarkerContainerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDMarkerContainerSubWidget.K2_OnUnPinned
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDMarkerContainerSubWidget::K2_OnUnPinned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerContainerSubWidget.K2_OnUnPinned");
		
		UHUDMarkerContainerSubWidget_K2_OnUnPinned_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDMarkerContainerSubWidget.K2_OnUnHovered
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDMarkerContainerSubWidget::K2_OnUnHovered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerContainerSubWidget.K2_OnUnHovered");
		
		UHUDMarkerContainerSubWidget_K2_OnUnHovered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDMarkerContainerSubWidget.K2_OnUnClamped
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDMarkerContainerSubWidget::K2_OnUnClamped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerContainerSubWidget.K2_OnUnClamped");
		
		UHUDMarkerContainerSubWidget_K2_OnUnClamped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDMarkerContainerSubWidget.K2_OnPinned
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDMarkerContainerSubWidget::K2_OnPinned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerContainerSubWidget.K2_OnPinned");
		
		UHUDMarkerContainerSubWidget_K2_OnPinned_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDMarkerContainerSubWidget.K2_OnHovered
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDMarkerContainerSubWidget::K2_OnHovered()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerContainerSubWidget.K2_OnHovered");
		
		UHUDMarkerContainerSubWidget_K2_OnHovered_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.HUDMarkerContainerSubWidget.K2_OnClamped
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UHUDMarkerContainerSubWidget::K2_OnClamped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerContainerSubWidget.K2_OnClamped");
		
		UHUDMarkerContainerSubWidget_K2_OnClamped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHUDMarkerContainerSubWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDMarkerContainerSubWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDMarkerContainerSubWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610680
	 * 		Name   -> Function TBL.HUDMarkerContainerPlayerWidget.AttemptThrottledCombatStateChangeCall
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFrameThrottleBranch                           Branches                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHUDMarkerContainerPlayerWidget::AttemptThrottledCombatStateChangeCall(TBL_EFrameThrottleBranch* Branches)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerContainerPlayerWidget.AttemptThrottledCombatStateChangeCall");
		
		UHUDMarkerContainerPlayerWidget_AttemptThrottledCombatStateChangeCall_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Branches != nullptr)
			*Branches = params.Branches;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHUDMarkerContainerPlayerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDMarkerContainerPlayerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDMarkerContainerPlayerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016108D0
	 * 		Name   -> Function TBL.HUDMarkerInterface.GetHUDMarkerProgress
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UHUDMarkerInterface::GetHUDMarkerProgress(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerInterface.GetHUDMarkerProgress");
		
		UHUDMarkerInterface_GetHUDMarkerProgress_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610820
	 * 		Name   -> Function TBL.HUDMarkerInterface.GetHUDMarkerLocation
	 * 		Flags  -> (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UHUDMarkerInterface::GetHUDMarkerLocation(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HUDMarkerInterface.GetHUDMarkerLocation");
		
		UHUDMarkerInterface_GetHUDMarkerLocation_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHUDMarkerInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHUDMarkerInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HUDMarkerInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AHudVisibilityVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AHudVisibilityVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HudVisibilityVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C760
	 * 		Name   -> Function TBL.UtilityAI_InputAxis.ScaleToRange
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		float                                              X                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UUtilityAI_InputAxis::ScaleToRange(float X)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_InputAxis.ScaleToRange");
		
		UUtilityAI_InputAxis_ScaleToRange_Params params {};
		params.X = X;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170B8B0
	 * 		Name   -> Function TBL.UtilityAI_InputAxis.CalculateValue
	 * 		Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	float UUtilityAI_InputAxis::CalculateValue(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_InputAxis.CalculateValue");
		
		UUtilityAI_InputAxis_CalculateValue_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_InputAxis.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_InputAxis::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_InputAxis");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_Blackboard_IsSet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_Blackboard_IsSet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_Blackboard_IsSet");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_BlackboardValue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_BlackboardValue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_BlackboardValue");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_CanTargetPawn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_CanTargetPawn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_CanTargetPawn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_CanUseInteractable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_CanUseInteractable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_CanUseInteractable");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_CompareForwardness.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_CompareForwardness::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_CompareForwardness");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_Distance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_Distance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_Distance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_DistanceRankAmongBotsTargettingActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_DistanceRankAmongBotsTargettingActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_DistanceRankAmongBotsTargettingActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_DistanceToCollision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_DistanceToCollision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_DistanceToCollision");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_DotMyCharacterToTarget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_DotMyCharacterToTarget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_DotMyCharacterToTarget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_DotTargetToMyCharacter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_DotTargetToMyCharacter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_DotTargetToMyCharacter");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_HasAITag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_HasAITag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_HasAITag");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_HaveLOSTo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_HaveLOSTo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_HaveLOSTo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_HowLongHaveIBeenDoingBehavior.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_HowLongHaveIBeenDoingBehavior::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_HowLongHaveIBeenDoingBehavior");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_IncomingAttackIs.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_IncomingAttackIs::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_IncomingAttackIs");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_Influence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_Influence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_Influence");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_InfluenceCurrent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_InfluenceCurrent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_InfluenceCurrent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_InfluenceVsCurrent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_InfluenceVsCurrent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_InfluenceVsCurrent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_MatchingBehaviour.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_MatchingBehaviour::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_MatchingBehaviour");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_MatchingLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_MatchingLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_MatchingLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_MatchingWeapon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_MatchingWeapon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_MatchingWeapon");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_NumActorsWithAITag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_NumActorsWithAITag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_NumActorsWithAITag");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_NumBotsTargettingActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_NumBotsTargettingActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_NumBotsTargettingActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_ObjectiveTimeRemaining.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_ObjectiveTimeRemaining::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_ObjectiveTimeRemaining");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_PathExists.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_PathExists::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_PathExists");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_PathLength.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_PathLength::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_PathLength");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_Random.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_Random::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_Random");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_RecentlyReceivedDamageFrom.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_RecentlyReceivedDamageFrom::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_RecentlyReceivedDamageFrom");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_StatCurrent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_StatCurrent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_StatCurrent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_TargetIsAIAndTargettingMe.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_TargetIsAIAndTargettingMe::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_TargetIsAIAndTargettingMe");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_TargetIsHuman.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_TargetIsHuman::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_TargetIsHuman");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_TimeSinceLastDidBehavior.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_TimeSinceLastDidBehavior::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_TimeSinceLastDidBehavior");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_TimeUntilIDieFromBeingOutOfCombat.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_TimeUntilIDieFromBeingOutOfCombat::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_TimeUntilIDieFromBeingOutOfCombat");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UI_VerticalDistance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UI_VerticalDistance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.I_VerticalDistance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInputReplay.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInputReplay::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InputReplay");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016156C0
	 * 		Name   -> Function TBL.InputReplayComponent.UpdateReplay
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::UpdateReplay(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.UpdateReplay");
		
		UInputReplayComponent_UpdateReplay_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615580
	 * 		Name   -> Function TBL.InputReplayComponent.SetReplayState
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		TBL_EInputReplayState                              NewReplayState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::SetReplayState(TBL_EInputReplayState NewReplayState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.SetReplayState");
		
		UInputReplayComponent_SetReplayState_Params params {};
		params.NewReplayState = NewReplayState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615280
	 * 		Name   -> Function TBL.InputReplayComponent.SaveAutoInputRecord
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UInputReplayComponent::SaveAutoInputRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.SaveAutoInputRecord");
		
		UInputReplayComponent_SaveAutoInputRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615130
	 * 		Name   -> Function TBL.InputReplayComponent.InputStop
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UInputReplayComponent::InputStop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.InputStop");
		
		UInputReplayComponent_InputStop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01615050
	 * 		Name   -> Function TBL.InputReplayComponent.InputRec
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ReplayName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::InputRec(const class FString& ReplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.InputRec");
		
		UInputReplayComponent_InputRec_Params params {};
		params.ReplayName = ReplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614F70
	 * 		Name   -> Function TBL.InputReplayComponent.InputPlay
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ReplayName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::InputPlay(const class FString& ReplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.InputPlay");
		
		UInputReplayComponent_InputPlay_Params params {};
		params.ReplayName = ReplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614E90
	 * 		Name   -> Function TBL.InputReplayComponent.InputCopyToOtherChars
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ReplayName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::InputCopyToOtherChars(const class FString& ReplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.InputCopyToOtherChars");
		
		UInputReplayComponent_InputCopyToOtherChars_Params params {};
		params.ReplayName = ReplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614D20
	 * 		Name   -> Function TBL.InputReplayComponent.InputAppend
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ReplayName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ReplayName2                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::InputAppend(const class FString& ReplayName, const class FString& ReplayName2)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.InputAppend");
		
		UInputReplayComponent_InputAppend_Params params {};
		params.ReplayName = ReplayName;
		params.ReplayName2 = ReplayName2;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614A20
	 * 		Name   -> Function TBL.InputReplayComponent.GetRelativeLocation
	 * 		Flags  -> (Final, Native, Protected, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UInputReplayComponent::GetRelativeLocation(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.GetRelativeLocation");
		
		UInputReplayComponent_GetRelativeLocation_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614980
	 * 		Name   -> Function TBL.InputReplayComponent.GetRelativeFacingAngle
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UInputReplayComponent::GetRelativeFacingAngle(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.GetRelativeFacingAngle");
		
		UInputReplayComponent_GetRelativeFacingAngle_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614930
	 * 		Name   -> Function TBL.InputReplayComponent.GetNumFrames
	 * 		Flags  -> (Final, Native, Protected)
	 */
	int UInputReplayComponent::GetNumFrames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.GetNumFrames");
		
		UInputReplayComponent_GetNumFrames_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016148B0
	 * 		Name   -> Function TBL.InputReplayComponent.GetInputReplay
	 * 		Flags  -> (Final, Native, Protected)
	 */
	class UInputReplay* UInputReplayComponent::GetInputReplay()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.GetInputReplay");
		
		UInputReplayComponent_GetInputReplay_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614860
	 * 		Name   -> Function TBL.InputReplayComponent.GetCurrentFrame
	 * 		Flags  -> (Final, Native, Protected)
	 */
	int UInputReplayComponent::GetCurrentFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.GetCurrentFrame");
		
		UInputReplayComponent_GetCurrentFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016147B0
	 * 		Name   -> Function TBL.InputReplayComponent.GetCharacterState
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FReplayCharacterState UInputReplayComponent::GetCharacterState(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.GetCharacterState");
		
		UInputReplayComponent_GetCharacterState_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016146F0
	 * 		Name   -> Function TBL.InputReplayComponent.DoKeyEvent
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		unsigned char                                      KeyBind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		Engine_EInputEvent                                 KeyEvent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::DoKeyEvent(unsigned char KeyBind, Engine_EInputEvent KeyEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.DoKeyEvent");
		
		UInputReplayComponent_DoKeyEvent_Params params {};
		params.KeyBind = KeyBind;
		params.KeyEvent = KeyEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614670
	 * 		Name   -> Function TBL.InputReplayComponent.DoFrame
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInputReplayComponent::DoFrame(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.DoFrame");
		
		UInputReplayComponent_DoFrame_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614650
	 * 		Name   -> Function TBL.InputReplayComponent.ClearInput
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UInputReplayComponent::ClearInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.ClearInput");
		
		UInputReplayComponent_ClearInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614590
	 * 		Name   -> Function TBL.InputReplayComponent.AutoInputRec
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UInputReplayComponent::AutoInputRec()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.AutoInputRec");
		
		UInputReplayComponent_AutoInputRec_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01614570
	 * 		Name   -> Function TBL.InputReplayComponent.AdvanceFrame
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UInputReplayComponent::AdvanceFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InputReplayComponent.AdvanceFrame");
		
		UInputReplayComponent_AdvanceFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInputReplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInputReplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InputReplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInstancedObjectContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInstancedObjectContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InstancedObjectContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InteractableInterface.OnUse
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableInterface::OnUse(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableInterface.OnUse");
		
		UInteractableInterface_OnUse_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InteractableInterface.OnInteractableUnreachable
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableInterface::OnInteractableUnreachable(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableInterface.OnInteractableUnreachable");
		
		UInteractableInterface_OnInteractableUnreachable_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InteractableInterface.OnInteractableCaptured
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInteractableInterface::OnInteractableCaptured(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InteractableInterface.OnInteractableCaptured");
		
		UInteractableInterface_OnInteractableCaptured_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInteractableInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInteractableInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InteractableInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622790
	 * 		Name   -> Function TBL.Inventory.UnequipCustomizationItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UInventory::UnequipCustomizationItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.UnequipCustomizationItem");
		
		UInventory_UnequipCustomizationItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016226C0
	 * 		Name   -> Function TBL.Inventory.UnequipAllItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bImmediately                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPlayUnequip                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::UnequipAllItems(bool bImmediately, bool bPlayUnequip)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.UnequipAllItems");
		
		UInventory_UnequipAllItems_Params params {};
		params.bImmediately = bImmediately;
		params.bPlayUnequip = bPlayUnequip;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622640
	 * 		Name   -> Function TBL.Inventory.SwitchToBrokenItem
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::SwitchToBrokenItem(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.SwitchToBrokenItem");
		
		UInventory_SwitchToBrokenItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622620
	 * 		Name   -> Function TBL.Inventory.SwitchInventoryItem
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::SwitchInventoryItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.SwitchInventoryItem");
		
		UInventory_SwitchInventoryItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622580
	 * 		Name   -> Function TBL.Inventory.StabPressed
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::StabPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.StabPressed");
		
		UInventory_StabPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622560
	 * 		Name   -> Function TBL.Inventory.SlashPressed
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::SlashPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.SlashPressed");
		
		UInventory_SlashPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622530
	 * 		Name   -> Function TBL.Inventory.ShowBandageRefillActors
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UInventory::ShowBandageRefillActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.ShowBandageRefillActors");
		
		UInventory_ShowBandageRefillActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621FF0
	 * 		Name   -> Function TBL.Inventory.SetObjectForItemLoad
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::SetObjectForItemLoad(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.SetObjectForItemLoad");
		
		UInventory_SetObjectForItemLoad_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621D80
	 * 		Name   -> Function TBL.Inventory.ServerSetObjectForItemLoad
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::ServerSetObjectForItemLoad(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.ServerSetObjectForItemLoad");
		
		UInventory_ServerSetObjectForItemLoad_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621CC0
	 * 		Name   -> Function TBL.Inventory.ServerDebugSetAmmo
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		int                                                Ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::ServerDebugSetAmmo(int Ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.ServerDebugSetAmmo");
		
		UInventory_ServerDebugSetAmmo_Params params {};
		params.Ammo = Ammo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621AE0
	 * 		Name   -> Function TBL.Inventory.RemoveItem
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEndAttack                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UInventory::RemoveItem(TBL_EInventoryItemSlot Slot, bool bEndAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.RemoveItem");
		
		UInventory_RemoveItem_Params params {};
		params.Slot = Slot;
		params.bEndAttack = bEndAttack;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621830
	 * 		Name   -> Function TBL.Inventory.RefillItems
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class AInventoryItem*>                      OutGrantedItems                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              ItemsToRefill                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               RefillAllAmmoItems                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               UseStackCountFromItem                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                StacksToAdd                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EPickupEquipOptions                            EquipOptions                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::RefillItems(TArray<class AInventoryItem*>* OutGrantedItems, TArray<class UClass*> ItemsToRefill, bool RefillAllAmmoItems, bool UseStackCountFromItem, int StacksToAdd, TBL_EPickupEquipOptions EquipOptions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.RefillItems");
		
		UInventory_RefillItems_Params params {};
		params.ItemsToRefill = ItemsToRefill;
		params.RefillAllAmmoItems = RefillAllAmmoItems;
		params.UseStackCountFromItem = UseStackCountFromItem;
		params.StacksToAdd = StacksToAdd;
		params.EquipOptions = EquipOptions;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutGrantedItems != nullptr)
			*OutGrantedItems = params.OutGrantedItems;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621810
	 * 		Name   -> Function TBL.Inventory.QueueWeaponFlourish
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UInventory::QueueWeaponFlourish()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.QueueWeaponFlourish");
		
		UInventory_QueueWeaponFlourish_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621500
	 * 		Name   -> Function TBL.Inventory.PickupTornOffItem
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::PickupTornOffItem(class UClass* ItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.PickupTornOffItem");
		
		UInventory_PickupTornOffItem_Params params {};
		params.ItemClass = ItemClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621340
	 * 		Name   -> Function TBL.Inventory.PickupItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                StackCountToAdd                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EPickupEquipOptions                            EquipOptions                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIgnoreStateCheck                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGiveWeapon                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::PickupItem(class AInventoryItem* Item, int StackCountToAdd, TBL_EPickupEquipOptions EquipOptions, class AActor* Initiator, bool bIgnoreStateCheck, bool bGiveWeapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.PickupItem");
		
		UInventory_PickupItem_Params params {};
		params.Item = Item;
		params.StackCountToAdd = StackCountToAdd;
		params.EquipOptions = EquipOptions;
		params.Initiator = Initiator;
		params.bIgnoreStateCheck = bIgnoreStateCheck;
		params.bGiveWeapon = bGiveWeapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621320
	 * 		Name   -> Function TBL.Inventory.OverheadPressed
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::OverheadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OverheadPressed");
		
		UInventory_OverheadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620C00
	 * 		Name   -> Function TBL.Inventory.OnRep_IsUnequippingOnMount
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UInventory::OnRep_IsUnequippingOnMount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnRep_IsUnequippingOnMount");
		
		UInventory_OnRep_IsUnequippingOnMount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620BC0
	 * 		Name   -> Function TBL.Inventory.OnRep_InventorySlots
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UInventory::OnRep_InventorySlots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnRep_InventorySlots");
		
		UInventory_OnRep_InventorySlots_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620B60
	 * 		Name   -> Function TBL.Inventory.OnRep_AmmoItems
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UInventory::OnRep_AmmoItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnRep_AmmoItems");
		
		UInventory_OnRep_AmmoItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620A80
	 * 		Name   -> Function TBL.Inventory.OnRemoveCondition
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::OnRemoveCondition(class AActor* Actor, TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnRemoveCondition");
		
		UInventory_OnRemoveCondition_Params params {};
		params.Actor = Actor;
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016201A0
	 * 		Name   -> Function TBL.Inventory.OnKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UInventory::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnKilled");
		
		UInventory_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161FB70
	 * 		Name   -> Function TBL.Inventory.OnCombatStateEvent
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UInventory::OnCombatStateEvent(class AActor* Actor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnCombatStateEvent");
		
		UInventory_OnCombatStateEvent_Params params {};
		params.Actor = Actor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F8A0
	 * 		Name   -> Function TBL.Inventory.OnCombatStateEnd
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::OnCombatStateEnd(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnCombatStateEnd");
		
		UInventory_OnCombatStateEnd_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F5D0
	 * 		Name   -> Function TBL.Inventory.OnCombatStateBegin
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::OnCombatStateBegin(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnCombatStateBegin");
		
		UInventory_OnCombatStateBegin_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F330
	 * 		Name   -> Function TBL.Inventory.OnApplyCondition
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::OnApplyCondition(class AActor* Actor, TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.OnApplyCondition");
		
		UInventory_OnApplyCondition_Params params {};
		params.Actor = Actor;
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F0B0
	 * 		Name   -> Function TBL.Inventory.IsShieldEquipped
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UInventory::IsShieldEquipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.IsShieldEquipped");
		
		UInventory_IsShieldEquipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F030
	 * 		Name   -> Function TBL.Inventory.InventoryPrimary
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::InventoryPrimary()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.InventoryPrimary");
		
		UInventory_InventoryPrimary_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F010
	 * 		Name   -> Function TBL.Inventory.InventoryPrevious
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::InventoryPrevious()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.InventoryPrevious");
		
		UInventory_InventoryPrevious_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EFF0
	 * 		Name   -> Function TBL.Inventory.InventoryNext
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::InventoryNext()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.InventoryNext");
		
		UInventory_InventoryNext_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EF70
	 * 		Name   -> Function TBL.Inventory.InventoryKeyPressed
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::InventoryKeyPressed(TBL_EInventoryItemSlot Slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.InventoryKeyPressed");
		
		UInventory_InventoryKeyPressed_Params params {};
		params.Slot = Slot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EDA0
	 * 		Name   -> Function TBL.Inventory.HorseBattleCryPressed
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UInventory::HorseBattleCryPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.HorseBattleCryPressed");
		
		UInventory_HorseBattleCryPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161ECE0
	 * 		Name   -> Function TBL.Inventory.HasMissingItemsToRefill
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TArray<class UClass*>                              ItemsToRefill                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UInventory::HasMissingItemsToRefill(TArray<class UClass*> ItemsToRefill)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.HasMissingItemsToRefill");
		
		UInventory_HasMissingItemsToRefill_Params params {};
		params.ItemsToRefill = ItemsToRefill;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161ECB0
	 * 		Name   -> Function TBL.Inventory.GetTimeSinceLastTriedBandage
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UInventory::GetTimeSinceLastTriedBandage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetTimeSinceLastTriedBandage");
		
		UInventory_GetTimeSinceLastTriedBandage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E910
	 * 		Name   -> Function TBL.Inventory.GetRefillItemsToGrant
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TMap<class UClass*, int>                           ItemsToGrant                                               (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              ItemsToRefill                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               RefillAllAmmoItems                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               UseStackCountFromItem                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                StacksToAdd                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::GetRefillItemsToGrant(TMap<class UClass*, int>* ItemsToGrant, TArray<class UClass*> ItemsToRefill, bool RefillAllAmmoItems, bool UseStackCountFromItem, int StacksToAdd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetRefillItemsToGrant");
		
		UInventory_GetRefillItemsToGrant_Params params {};
		params.ItemsToRefill = ItemsToRefill;
		params.RefillAllAmmoItems = RefillAllAmmoItems;
		params.UseStackCountFromItem = UseStackCountFromItem;
		params.StacksToAdd = StacksToAdd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ItemsToGrant != nullptr)
			*ItemsToGrant = params.ItemsToGrant;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E870
	 * 		Name   -> Function TBL.Inventory.GetNoveltyItemClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UClass* UInventory::GetNoveltyItemClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetNoveltyItemClass");
		
		UInventory_GetNoveltyItemClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E690
	 * 		Name   -> Function TBL.Inventory.GetKeybindName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UInventory::GetKeybindName(TBL_EInventoryItemSlot Slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetKeybindName");
		
		UInventory_GetKeybindName_Params params {};
		params.Slot = Slot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E5C0
	 * 		Name   -> Function TBL.Inventory.GetInventoryItemsBySlot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AInventoryItem*> UInventory::GetInventoryItemsBySlot(TBL_EInventoryItemSlot Slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetInventoryItemsBySlot");
		
		UInventory_GetInventoryItemsBySlot_Params params {};
		params.Slot = Slot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E530
	 * 		Name   -> Function TBL.Inventory.GetInventoryItemBySlot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UInventory::GetInventoryItemBySlot(TBL_EInventoryItemSlot Slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetInventoryItemBySlot");
		
		UInventory_GetInventoryItemBySlot_Params params {};
		params.Slot = Slot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E4A0
	 * 		Name   -> Function TBL.Inventory.GetEquippedWeapon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class AInventoryItem* UInventory::GetEquippedWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetEquippedWeapon");
		
		UInventory_GetEquippedWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E420
	 * 		Name   -> Function TBL.Inventory.GetEquippedItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TArray<class AInventoryItem*> UInventory::GetEquippedItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetEquippedItems");
		
		UInventory_GetEquippedItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E390
	 * 		Name   -> Function TBL.Inventory.GetEquippedItemByHand
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EEquippedHand                                  Hand                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UInventory::GetEquippedItemByHand(TBL_EEquippedHand Hand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetEquippedItemByHand");
		
		UInventory_GetEquippedItemByHand_Params params {};
		params.Hand = Hand;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E070
	 * 		Name   -> Function TBL.Inventory.GetBattleCryHeldProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	float UInventory::GetBattleCryHeldProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetBattleCryHeldProgress");
		
		UInventory_GetBattleCryHeldProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DDC0
	 * 		Name   -> Function TBL.Inventory.GetAmmoItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UInventory::GetAmmoItem(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetAmmoItem");
		
		UInventory_GetAmmoItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DD90
	 * 		Name   -> Function TBL.Inventory.GetAmmoInventoryItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TArray<class AInventoryItem*> UInventory::GetAmmoInventoryItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.GetAmmoInventoryItems");
		
		UInventory_GetAmmoInventoryItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DBD0
	 * 		Name   -> Function TBL.Inventory.EquipCustomizationItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::EquipCustomizationItem(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.EquipCustomizationItem");
		
		UInventory_EquipCustomizationItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DA30
	 * 		Name   -> Function TBL.Inventory.DropItemOnKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UInventory::DropItemOnKilled(class AInventoryItem* Item, const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.DropItemOnKilled");
		
		UInventory_DropItemOnKilled_Params params {};
		params.Item = Item;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D8D0
	 * 		Name   -> Function TBL.Inventory.DropItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDropItemParams                             Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bDuringParryEvent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::DropItem(TBL_EInventoryItemSlot Slot, const struct FDropItemParams& Params, bool bDuringParryEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.DropItem");
		
		UInventory_DropItem_Params params {};
		params.Slot = Slot;
		params.Params = Params;
		params.bDuringParryEvent = bDuringParryEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D8B0
	 * 		Name   -> Function TBL.Inventory.DropAllItems
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UInventory::DropAllItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.DropAllItems");
		
		UInventory_DropAllItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D890
	 * 		Name   -> Function TBL.Inventory.DoBattlecryAbility
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UInventory::DoBattlecryAbility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.DoBattlecryAbility");
		
		UInventory_DoBattlecryAbility_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D870
	 * 		Name   -> Function TBL.Inventory.DoBattlecry
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UInventory::DoBattlecry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.DoBattlecry");
		
		UInventory_DoBattlecry_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E97050
	 * 		Name   -> Function TBL.Inventory.ClientUsedItem
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::ClientUsedItem(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.ClientUsedItem");
		
		UInventory_ClientUsedItem_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D710
	 * 		Name   -> Function TBL.Inventory.ClientIsUnequippingOnMount
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		bool                                               OnMount                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::ClientIsUnequippingOnMount(bool OnMount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.ClientIsUnequippingOnMount");
		
		UInventory_ClientIsUnequippingOnMount_Params params {};
		params.OnMount = OnMount;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D5D0
	 * 		Name   -> Function TBL.Inventory.CanSwitchInventoryItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        KeyBind                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UInventory::CanSwitchInventoryItem(const class FName& KeyBind)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.CanSwitchInventoryItem");
		
		UInventory_CanSwitchInventoryItem_Params params {};
		params.KeyBind = KeyBind;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D460
	 * 		Name   -> Function TBL.Inventory.BroadcastProjectileHitPassiveShield
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Shield                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              Projectile                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::BroadcastProjectileHitPassiveShield(class AInventoryItem* Shield, class AInventoryItem* Projectile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.BroadcastProjectileHitPassiveShield");
		
		UInventory_BroadcastProjectileHitPassiveShield_Params params {};
		params.Shield = Shield;
		params.Projectile = Projectile;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D370
	 * 		Name   -> Function TBL.Inventory.BroadcastInventoryItemDamaged
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInventoryItemDamagedParams                 Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UInventory::BroadcastInventoryItemDamaged(class AInventoryItem* Item, const struct FInventoryItemDamagedParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.BroadcastInventoryItemDamaged");
		
		UInventory_BroadcastInventoryItemDamaged_Params params {};
		params.Item = Item;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161CEA0
	 * 		Name   -> Function TBL.Inventory.ApplyBlockedDamage
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FInventoryItemDamagedParams                 Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              BlockingItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UInventory::ApplyBlockedDamage(const struct FInventoryItemDamagedParams& Params, class AInventoryItem* BlockingItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Inventory.ApplyBlockedDamage");
		
		UInventory_ApplyBlockedDamage_Params params {};
		params.Params = Params;
		params.BlockingItem = BlockingItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInventory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInventory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Inventory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.UpdateVisualization
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::UpdateVisualization(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.UpdateVisualization");
		
		AInventoryItem_UpdateVisualization_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016225A0
	 * 		Name   -> Function TBL.InventoryItem.StartSimulatedProjectile
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                AttackID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::StartSimulatedProjectile(int AttackID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.StartSimulatedProjectile");
		
		AInventoryItem_StartSimulatedProjectile_Params params {};
		params.AttackID = AttackID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.ShouldDropOnDowned
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	bool AInventoryItem::ShouldDropOnDowned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ShouldDropOnDowned");
		
		AInventoryItem_ShouldDropOnDowned_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622490
	 * 		Name   -> Function TBL.InventoryItem.ShouldCustomizePlacedInWorldItem
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               OwningCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AInventoryItem::ShouldCustomizePlacedInWorldItem(class ATBLCharacter* OwningCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ShouldCustomizePlacedInWorldItem");
		
		AInventoryItem_ShouldCustomizePlacedInWorldItem_Params params {};
		params.OwningCharacter = OwningCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622460
	 * 		Name   -> Function TBL.InventoryItem.ShouldAttachRagdoll
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	bool AInventoryItem::ShouldAttachRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ShouldAttachRagdoll");
		
		AInventoryItem_ShouldAttachRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016223E0
	 * 		Name   -> Function TBL.InventoryItem.SetupHapticsForPS5OnSpawningAttachment
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AController*                                 InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetupHapticsForPS5OnSpawningAttachment(class AController* InController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetupHapticsForPS5OnSpawningAttachment");
		
		AInventoryItem_SetupHapticsForPS5OnSpawningAttachment_Params params {};
		params.InController = InController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016223C0
	 * 		Name   -> Function TBL.InventoryItem.SetUnequipped
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::SetUnequipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetUnequipped");
		
		AInventoryItem_SetUnequipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622340
	 * 		Name   -> Function TBL.InventoryItem.SetStackCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetStackCount(int Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetStackCount");
		
		AInventoryItem_SetStackCount_Params params {};
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622210
	 * 		Name   -> Function TBL.InventoryItem.SetRecentAttackReleaseWeaponActionSwitch
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSoundSwitchEntry                           Entry                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetRecentAttackReleaseWeaponActionSwitch(const struct FSoundSwitchEntry& Entry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetRecentAttackReleaseWeaponActionSwitch");
		
		AInventoryItem_SetRecentAttackReleaseWeaponActionSwitch_Params params {};
		params.Entry = Entry;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622180
	 * 		Name   -> Function TBL.InventoryItem.SetPendingHiddenInGame
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bPendingHiddenInGame                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetPendingHiddenInGame(bool bPendingHiddenInGame)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetPendingHiddenInGame");
		
		AInventoryItem_SetPendingHiddenInGame_Params params {};
		params.bPendingHiddenInGame = bPendingHiddenInGame;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016220B0
	 * 		Name   -> Function TBL.InventoryItem.SetOverrideLifeSpan
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               EnableOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              NewOverrideLifespan                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetOverrideLifeSpan(bool EnableOverride, float NewOverrideLifespan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetOverrideLifeSpan");
		
		AInventoryItem_SetOverrideLifeSpan_Params params {};
		params.EnableOverride = EnableOverride;
		params.NewOverrideLifespan = NewOverrideLifespan;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622090
	 * 		Name   -> Function TBL.InventoryItem.SetOnFire
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AInventoryItem::SetOnFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetOnFire");
		
		AInventoryItem_SetOnFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01622070
	 * 		Name   -> Function TBL.InventoryItem.SetOffFire
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AInventoryItem::SetOffFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetOffFire");
		
		AInventoryItem_SetOffFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621FD0
	 * 		Name   -> Function TBL.InventoryItem.SetInactive
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void AInventoryItem::SetInactive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetInactive");
		
		AInventoryItem_SetInactive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621F50
	 * 		Name   -> Function TBL.InventoryItem.SetHealth
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Health                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetHealth(float Health)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetHealth");
		
		AInventoryItem_SetHealth_Params params {};
		params.Health = Health;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621ED0
	 * 		Name   -> Function TBL.InventoryItem.SetDamagedState
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EInventoryItemDamagedState                     NewDamagedState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetDamagedState(TBL_EInventoryItemDamagedState NewDamagedState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetDamagedState");
		
		AInventoryItem_SetDamagedState_Params params {};
		params.NewDamagedState = NewDamagedState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621E40
	 * 		Name   -> Function TBL.InventoryItem.SetAddedToInventory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               inAddedToInventory                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::SetAddedToInventory(bool inAddedToInventory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.SetAddedToInventory");
		
		AInventoryItem_SetAddedToInventory_Params params {};
		params.inAddedToInventory = inAddedToInventory;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621CA0
	 * 		Name   -> Function TBL.InventoryItem.ResetMaxStackCount
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::ResetMaxStackCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ResetMaxStackCount");
		
		AInventoryItem_ResetMaxStackCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621BB0
	 * 		Name   -> Function TBL.InventoryItem.ResetItemToTransform
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FTransform                                  Transform                                                  (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::ResetItemToTransform(const struct FTransform& Transform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ResetItemToTransform");
		
		AInventoryItem_ResetItemToTransform_Params params {};
		params.Transform = Transform;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621A60
	 * 		Name   -> Function TBL.InventoryItem.RemoveBlacklistedPawn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::RemoveBlacklistedPawn(class ATBLCharacter* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.RemoveBlacklistedPawn");
		
		AInventoryItem_RemoveBlacklistedPawn_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621A40
	 * 		Name   -> Function TBL.InventoryItem.ReloadThrownWeapon
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::ReloadThrownWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ReloadThrownWeapon");
		
		AInventoryItem_ReloadThrownWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016216E0
	 * 		Name   -> Function TBL.InventoryItem.PlayImpactEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSoundSwitchEntry                           SoundSwitch                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::PlayImpactEvent(const struct FSoundSwitchEntry& SoundSwitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.PlayImpactEvent");
		
		AInventoryItem_PlayImpactEvent_Params params {};
		params.SoundSwitch = SoundSwitch;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016216C0
	 * 		Name   -> Function TBL.InventoryItem.PlayEquipAnimation
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AInventoryItem::PlayEquipAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.PlayEquipAnimation");
		
		AInventoryItem_PlayEquipAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621580
	 * 		Name   -> Function TBL.InventoryItem.PlayActionEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSoundSwitchEntry                           SoundSwitch                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
	 */
	int AInventoryItem::PlayActionEvent(const struct FSoundSwitchEntry& SoundSwitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.PlayActionEvent");
		
		AInventoryItem_PlayActionEvent_Params params {};
		params.SoundSwitch = SoundSwitch;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OverridePickupEvent
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bGiveWeapon                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsAutoPickup                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AInventoryItem::OverridePickupEvent(class ATBLCharacter* Character, bool bGiveWeapon, bool bIsAutoPickup)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OverridePickupEvent");
		
		AInventoryItem_OverridePickupEvent_Params params {};
		params.Character = Character;
		params.bGiveWeapon = bGiveWeapon;
		params.bIsAutoPickup = bIsAutoPickup;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OnWasParried
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               ParryingCharacter                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnWasParried(class ATBLCharacter* ParryingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnWasParried");
		
		AInventoryItem_OnWasParried_Params params {};
		params.ParryingCharacter = ParryingCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01621050
	 * 		Name   -> Function TBL.InventoryItem.OnUseItemEnded
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatStateBP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnUseItemEnded(class AActor* Actor, const class FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnUseItemEnded");
		
		AInventoryItem_OnUseItemEnded_Params params {};
		params.Actor = Actor;
		params.CombatState = CombatState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatStateBP = CombatStateBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620FD0
	 * 		Name   -> Function TBL.InventoryItem.OnUnequipComplete
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnUnequipComplete(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnUnequipComplete");
		
		AInventoryItem_OnUnequipComplete_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620D00
	 * 		Name   -> Function TBL.InventoryItem.OnUnequipCombatStateEnd
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatStateBP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnUnequipCombatStateEnd(class AActor* Actor, const class FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnUnequipCombatStateEnd");
		
		AInventoryItem_OnUnequipCombatStateEnd_Params params {};
		params.Actor = Actor;
		params.CombatState = CombatState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatStateBP = CombatStateBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620CE0
	 * 		Name   -> Function TBL.InventoryItem.OnRep_UseFireAmmo
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::OnRep_UseFireAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_UseFireAmmo");
		
		AInventoryItem_OnRep_UseFireAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620CC0
	 * 		Name   -> Function TBL.InventoryItem.OnRep_TornOffName
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::OnRep_TornOffName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_TornOffName");
		
		AInventoryItem_OnRep_TornOffName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620CA0
	 * 		Name   -> Function TBL.InventoryItem.OnRep_State
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::OnRep_State()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_State");
		
		AInventoryItem_OnRep_State_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620C80
	 * 		Name   -> Function TBL.InventoryItem.OnRep_StackCount
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::OnRep_StackCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_StackCount");
		
		AInventoryItem_OnRep_StackCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620C60
	 * 		Name   -> Function TBL.InventoryItem.OnRep_ResetToTransform
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::OnRep_ResetToTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_ResetToTransform");
		
		AInventoryItem_OnRep_ResetToTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620C40
	 * 		Name   -> Function TBL.InventoryItem.OnRep_ProjectileHit
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::OnRep_ProjectileHit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_ProjectileHit");
		
		AInventoryItem_OnRep_ProjectileHit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620C20
	 * 		Name   -> Function TBL.InventoryItem.OnRep_MountedItemParent
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::OnRep_MountedItemParent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_MountedItemParent");
		
		AInventoryItem_OnRep_MountedItemParent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620BE0
	 * 		Name   -> Function TBL.InventoryItem.OnRep_IsOnFire
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::OnRep_IsOnFire()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_IsOnFire");
		
		AInventoryItem_OnRep_IsOnFire_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620BA0
	 * 		Name   -> Function TBL.InventoryItem.OnRep_HealthValue
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::OnRep_HealthValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_HealthValue");
		
		AInventoryItem_OnRep_HealthValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620B80
	 * 		Name   -> Function TBL.InventoryItem.OnRep_Drop
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::OnRep_Drop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_Drop");
		
		AInventoryItem_OnRep_Drop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620B40
	 * 		Name   -> Function TBL.InventoryItem.OnRep_AddedToInventory
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::OnRep_AddedToInventory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnRep_AddedToInventory");
		
		AInventoryItem_OnRep_AddedToInventory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016207B0
	 * 		Name   -> Function TBL.InventoryItem.OnReloadCombatStateEnd
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatStateBP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnReloadCombatStateEnd(class AActor* Actor, const class FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnReloadCombatStateEnd");
		
		AInventoryItem_OnReloadCombatStateEnd_Params params {};
		params.Actor = Actor;
		params.CombatState = CombatState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatStateBP = CombatStateBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OnProjectileHitTarget
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnProjectileHitTarget(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnProjectileHitTarget");
		
		AInventoryItem_OnProjectileHitTarget_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016206D0
	 * 		Name   -> Function TBL.InventoryItem.OnProjectileHit
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnProjectileHit(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnProjectileHit");
		
		AInventoryItem_OnProjectileHit_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OnProjectileBounce
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bParried                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnProjectileBounce(const struct FHitResult& Hit, bool bParried)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnProjectileBounce");
		
		AInventoryItem_OnProjectileBounce_Params params {};
		params.Hit = Hit;
		params.bParried = bParried;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620610
	 * 		Name   -> Function TBL.InventoryItem.OnPlayerMeshChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class USkeletalMeshComponent*                      OldMesh                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USkeletalMeshComponent*                      NewMesh                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnPlayerMeshChanged(class USkeletalMeshComponent* OldMesh, class USkeletalMeshComponent* NewMesh)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnPlayerMeshChanged");
		
		AInventoryItem_OnPlayerMeshChanged_Params params {};
		params.OldMesh = OldMesh;
		params.NewMesh = NewMesh;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OnPlayActionEvent
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FSoundSwitchEntry                           SoundSwitch                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnPlayActionEvent(const struct FSoundSwitchEntry& SoundSwitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnPlayActionEvent");
		
		AInventoryItem_OnPlayActionEvent_Params params {};
		params.SoundSwitch = SoundSwitch;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620340
	 * 		Name   -> Function TBL.InventoryItem.OnPickupEnded
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatStateBP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnPickupEnded(class AActor* Actor, const class FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnPickupEnded");
		
		AInventoryItem_OnPickupEnded_Params params {};
		params.Actor = Actor;
		params.CombatState = CombatState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatStateBP = CombatStateBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620320
	 * 		Name   -> Function TBL.InventoryItem.OnMovementStarted
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::OnMovementStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnMovementStarted");
		
		AInventoryItem_OnMovementStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620300
	 * 		Name   -> Function TBL.InventoryItem.OnMovementFinished
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::OnMovementFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnMovementFinished");
		
		AInventoryItem_OnMovementFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OnMeleeSuccess
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               DamagedCharacter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnMeleeSuccess(class ATBLCharacter* DamagedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnMeleeSuccess");
		
		AInventoryItem_OnMeleeSuccess_Params params {};
		params.DamagedCharacter = DamagedCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01620280
	 * 		Name   -> Function TBL.InventoryItem.OnLocalPlayerStateReplicated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnLocalPlayerStateReplicated(class APlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnLocalPlayerStateReplicated");
		
		AInventoryItem_OnLocalPlayerStateReplicated_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OnInitialize
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void AInventoryItem::OnInitialize()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnInitialize");
		
		AInventoryItem_OnInitialize_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016200C0
	 * 		Name   -> Function TBL.InventoryItem.OnFakeClientProjectileHit
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnFakeClientProjectileHit(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnFakeClientProjectileHit");
		
		AInventoryItem_OnFakeClientProjectileHit_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016200A0
	 * 		Name   -> Function TBL.InventoryItem.OnEquipComplete
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AInventoryItem::OnEquipComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnEquipComplete");
		
		AInventoryItem_OnEquipComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161FDD0
	 * 		Name   -> Function TBL.InventoryItem.OnEquipCombatStateEnd
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatStateBP                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnEquipCombatStateEnd(class AActor* Actor, const class FName& CombatState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatStateBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnEquipCombatStateEnd");
		
		AInventoryItem_OnEquipCombatStateEnd_Params params {};
		params.Actor = Actor;
		params.CombatState = CombatState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatStateBP = CombatStateBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.OnDamaged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FInventoryItemDamagedParams                 Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnDamaged(const struct FInventoryItemDamagedParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnDamaged");
		
		AInventoryItem_OnDamaged_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F550
	 * 		Name   -> Function TBL.InventoryItem.OnAttackInterrupted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                AttackID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnAttackInterrupted(int AttackID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnAttackInterrupted");
		
		AInventoryItem_OnAttackInterrupted_Params params {};
		params.AttackID = AttackID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F470
	 * 		Name   -> Function TBL.InventoryItem.OnAttachedActorKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnAttachedActorKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnAttachedActorKilled");
		
		AInventoryItem_OnAttachedActorKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F3F0
	 * 		Name   -> Function TBL.InventoryItem.OnAttachedActorDestroyed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnAttachedActorDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnAttachedActorDestroyed");
		
		AInventoryItem_OnAttachedActorDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F2B0
	 * 		Name   -> Function TBL.InventoryItem.OnAnimNotifyWeaponDetach
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UTBLCharacterAnimInstance*                   AnimBP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnAnimNotifyWeaponDetach(class UTBLCharacterAnimInstance* AnimBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnAnimNotifyWeaponDetach");
		
		AInventoryItem_OnAnimNotifyWeaponDetach_Params params {};
		params.AnimBP = AnimBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F230
	 * 		Name   -> Function TBL.InventoryItem.OnAnimNotifyWeaponAttach
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UTBLCharacterAnimInstance*                   AnimBP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnAnimNotifyWeaponAttach(class UTBLCharacterAnimInstance* AnimBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnAnimNotifyWeaponAttach");
		
		AInventoryItem_OnAnimNotifyWeaponAttach_Params params {};
		params.AnimBP = AnimBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F1B0
	 * 		Name   -> Function TBL.InventoryItem.OnAnimNotifyUseItem
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UTBLCharacterAnimInstance*                   AnimBP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::OnAnimNotifyUseItem(class UTBLCharacterAnimInstance* AnimBP)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.OnAnimNotifyUseItem");
		
		AInventoryItem_OnAnimNotifyUseItem_Params params {};
		params.AnimBP = AnimBP;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F190
	 * 		Name   -> Function TBL.InventoryItem.NetMulticastOnAddToInventoryItemPool
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 */
	void AInventoryItem::NetMulticastOnAddToInventoryItemPool()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.NetMulticastOnAddToInventoryItemPool");
		
		AInventoryItem_NetMulticastOnAddToInventoryItemPool_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F110
	 * 		Name   -> Function TBL.InventoryItem.NetMulticastFastSharedReplication
	 * 		Flags  -> (Net, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		struct FFastSharedProperties_InventoryItem         Properties                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::NetMulticastFastSharedReplication(const struct FFastSharedProperties_InventoryItem& Properties)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.NetMulticastFastSharedReplication");
		
		AInventoryItem_NetMulticastFastSharedReplication_Params params {};
		params.Properties = Properties;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F0E0
	 * 		Name   -> Function TBL.InventoryItem.IsSimulatingPhysics
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool AInventoryItem::IsSimulatingPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.IsSimulatingPhysics");
		
		AInventoryItem_IsSimulatingPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F080
	 * 		Name   -> Function TBL.InventoryItem.IsLowAmmo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool AInventoryItem::IsLowAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.IsLowAmmo");
		
		AInventoryItem_IsLowAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F050
	 * 		Name   -> Function TBL.InventoryItem.IsAddedToInventory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool AInventoryItem::IsAddedToInventory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.IsAddedToInventory");
		
		AInventoryItem_IsAddedToInventory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EEF0
	 * 		Name   -> Function TBL.InventoryItem.InitializeStackCountOnSpawn
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               CharacterOwner                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::InitializeStackCountOnSpawn(class ATBLCharacter* CharacterOwner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.InitializeStackCountOnSpawn");
		
		AInventoryItem_InitializeStackCountOnSpawn_Params params {};
		params.CharacterOwner = CharacterOwner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EDE0
	 * 		Name   -> Function TBL.InventoryItem.InitializeProjectileMovement
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InitialSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFakeClient                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::InitializeProjectileMovement(class AActor* Initiator, float InitialSpeed, bool bFakeClient)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.InitializeProjectileMovement");
		
		AInventoryItem_InitializeProjectileMovement_Params params {};
		params.Initiator = Initiator;
		params.InitialSpeed = InitialSpeed;
		params.bFakeClient = bFakeClient;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.InitializeGoreHead
	 * 		Flags  -> (Event, Public, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGoreHeadParams                             Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Impulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::InitializeGoreHead(class ATBLCharacter* Character, const struct FGoreHeadParams& Params, const struct FVector& Impulse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.InitializeGoreHead");
		
		AInventoryItem_InitializeGoreHead_Params params {};
		params.Character = Character;
		params.Params = Params;
		params.Impulse = Impulse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EDC0
	 * 		Name   -> Function TBL.InventoryItem.InitDebugPreviousLocation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::InitDebugPreviousLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.InitDebugPreviousLocation");
		
		AInventoryItem_InitDebugPreviousLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.GetTeamProjectileCollision
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	class UShapeComponent* AInventoryItem::GetTeamProjectileCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetTeamProjectileCollision");
		
		AInventoryItem_GetTeamProjectileCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EC90
	 * 		Name   -> Function TBL.InventoryItem.GetStackCount
	 * 		Flags  -> (Final, Native, Public)
	 */
	int AInventoryItem::GetStackCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetStackCount");
		
		AInventoryItem_GetStackCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161EBE0
	 * 		Name   -> Function TBL.InventoryItem.GetSpecialAttackWindupSwitchOverride
	 * 		Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FString                                      SwitchState                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::GetSpecialAttackWindupSwitchOverride(class FString* SwitchState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetSpecialAttackWindupSwitchOverride");
		
		AInventoryItem_GetSpecialAttackWindupSwitchOverride_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SwitchState != nullptr)
			*SwitchState = params.SwitchState;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.GetSkeletalMesh
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	class USkeletalMeshComponent* AInventoryItem::GetSkeletalMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetSkeletalMesh");
		
		AInventoryItem_GetSkeletalMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.GetShieldCollision
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	class UPrimitiveComponent* AInventoryItem::GetShieldCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetShieldCollision");
		
		AInventoryItem_GetShieldCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E8E0
	 * 		Name   -> Function TBL.InventoryItem.GetPhysicsMesh
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	class UPrimitiveComponent* AInventoryItem::GetPhysicsMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetPhysicsMesh");
		
		AInventoryItem_GetPhysicsMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E8B0
	 * 		Name   -> Function TBL.InventoryItem.GetOwningPawn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class ATBLCharacter* AInventoryItem::GetOwningPawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetOwningPawn");
		
		AInventoryItem_GetOwningPawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4090
	 * 		Name   -> Function TBL.InventoryItem.GetMesh
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UStaticMeshComponent* AInventoryItem::GetMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetMesh");
		
		AInventoryItem_GetMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E840
	 * 		Name   -> Function TBL.InventoryItem.GetMaxHealth
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float AInventoryItem::GetMaxHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetMaxHealth");
		
		AInventoryItem_GetMaxHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E720
	 * 		Name   -> Function TBL.InventoryItem.GetMaterialByWeaponAction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsAttacking                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsDefending                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EWeaponMaterial AInventoryItem::GetMaterialByWeaponAction(bool IsAttacking, bool IsDefending, const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetMaterialByWeaponAction");
		
		AInventoryItem_GetMaterialByWeaponAction_Params params {};
		params.IsAttacking = IsAttacking;
		params.IsDefending = IsDefending;
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E500
	 * 		Name   -> Function TBL.InventoryItem.GetHealthPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float AInventoryItem::GetHealthPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetHealthPercent");
		
		AInventoryItem_GetHealthPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E4D0
	 * 		Name   -> Function TBL.InventoryItem.GetHealth
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float AInventoryItem::GetHealth()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetHealth");
		
		AInventoryItem_GetHealth_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E230
	 * 		Name   -> Function TBL.InventoryItem.GetDisplayInfoForFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FInventoryItemDisplayInfo AInventoryItem::GetDisplayInfoForFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetDisplayInfoForFaction");
		
		AInventoryItem_GetDisplayInfoForFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E200
	 * 		Name   -> Function TBL.InventoryItem.GetDamageSourcePenetration
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float AInventoryItem::GetDamageSourcePenetration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetDamageSourcePenetration");
		
		AInventoryItem_GetDamageSourcePenetration_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E0E0
	 * 		Name   -> Function TBL.InventoryItem.GetDamageSourceName
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FText                                        NameText                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	class FString AInventoryItem::GetDamageSourceName(class FText* NameText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetDamageSourceName");
		
		AInventoryItem_GetDamageSourceName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (NameText != nullptr)
			*NameText = params.NameText;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161E0A0
	 * 		Name   -> Function TBL.InventoryItem.GetCarriedCharacter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class ATBLCharacterBase* AInventoryItem::GetCarriedCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetCarriedCharacter");
		
		AInventoryItem_GetCarriedCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DE80
	 * 		Name   -> Function TBL.InventoryItem.GetAttachRagdollParams
	 * 		Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAttachRagdollParams                        AttachRagdollParams                                        (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::GetAttachRagdollParams(struct FAttachRagdollParams* AttachRagdollParams, class ATBLCharacter* Character, const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetAttachRagdollParams");
		
		AInventoryItem_GetAttachRagdollParams_Params params {};
		params.Character = Character;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (AttachRagdollParams != nullptr)
			*AttachRagdollParams = params.AttachRagdollParams;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DE50
	 * 		Name   -> Function TBL.InventoryItem.GetAttachRagdollComponent
	 * 		Flags  -> (Final, Native, Protected)
	 */
	class USceneComponent* AInventoryItem::GetAttachRagdollComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.GetAttachRagdollComponent");
		
		AInventoryItem_GetAttachRagdollComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DD10
	 * 		Name   -> Function TBL.InventoryItem.FinishUnequippingOnAnimNotify
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::FinishUnequippingOnAnimNotify(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.FinishUnequippingOnAnimNotify");
		
		AInventoryItem_FinishUnequippingOnAnimNotify_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DC50
	 * 		Name   -> Function TBL.InventoryItem.EventUsePressed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InteractableComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::EventUsePressed(class APawn* Pawn, class UInteractableComponent* InteractableComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.EventUsePressed");
		
		AInventoryItem_EventUsePressed_Params params {};
		params.Pawn = Pawn;
		params.InteractableComponent = InteractableComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161DB50
	 * 		Name   -> Function TBL.InventoryItem.EnableCollisionForFakeClient
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacterBase*                           Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::EnableCollisionForFakeClient(class ATBLCharacterBase* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.EnableCollisionForFakeClient");
		
		AInventoryItem_EnableCollisionForFakeClient_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D850
	 * 		Name   -> Function TBL.InventoryItem.DisableCollisionForFakeClient
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AInventoryItem::DisableCollisionForFakeClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.DisableCollisionForFakeClient");
		
		AInventoryItem_DisableCollisionForFakeClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D830
	 * 		Name   -> Function TBL.InventoryItem.DestroyFakeClient
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AInventoryItem::DestroyFakeClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.DestroyFakeClient");
		
		AInventoryItem_DestroyFakeClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00BCFB90
	 * 		Name   -> Function TBL.InventoryItem.ClientToBeEquipped
	 * 		Flags  -> (Net, Native, Event, Public, NetClient)
	 */
	void AInventoryItem::ClientToBeEquipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ClientToBeEquipped");
		
		AInventoryItem_ClientToBeEquipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00BCFB70
	 * 		Name   -> Function TBL.InventoryItem.ClientOnItemUnequipped
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 */
	void AInventoryItem::ClientOnItemUnequipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ClientOnItemUnequipped");
		
		AInventoryItem_ClientOnItemUnequipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D7A0
	 * 		Name   -> Function TBL.InventoryItem.ClientOnItemEquipped
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class AActor*                                      NewOwner                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::ClientOnItemEquipped(class AActor* NewOwner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ClientOnItemEquipped");
		
		AInventoryItem_ClientOnItemEquipped_Params params {};
		params.NewOwner = NewOwner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D690
	 * 		Name   -> Function TBL.InventoryItem.CheckStickPlayersToWall
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               KilledChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::CheckStickPlayersToWall(class ATBLCharacter* KilledChar)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.CheckStickPlayersToWall");
		
		AInventoryItem_CheckStickPlayersToWall_Params params {};
		params.KilledChar = KilledChar;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D660
	 * 		Name   -> Function TBL.InventoryItem.CanUseItem
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	bool AInventoryItem::CanUseItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.CanUseItem");
		
		AInventoryItem_CanUseItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D530
	 * 		Name   -> Function TBL.InventoryItem.CanPickup
	 * 		Flags  -> (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AInventoryItem::CanPickup(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.CanPickup");
		
		AInventoryItem_CanPickup_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.InventoryItem.CannotAutoPickup
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AInventoryItem::CannotAutoPickup(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.CannotAutoPickup");
		
		AInventoryItem_CannotAutoPickup_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D2E0
	 * 		Name   -> Function TBL.InventoryItem.BroadcastAttachRagdoll
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     AttachLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::BroadcastAttachRagdoll(const struct FVector& AttachLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.BroadcastAttachRagdoll");
		
		AInventoryItem_BroadcastAttachRagdoll_Params params {};
		params.AttachLocation = AttachLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D170
	 * 		Name   -> Function TBL.InventoryItem.BounceOnProjectileHit
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              BlockingItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InBounceVelocityModifier                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::BounceOnProjectileHit(const struct FHitResult& HitResult, class AInventoryItem* BlockingItem, float InBounceVelocityModifier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.BounceOnProjectileHit");
		
		AInventoryItem_BounceOnProjectileHit_Params params {};
		params.HitResult = HitResult;
		params.BlockingItem = BlockingItem;
		params.InBounceVelocityModifier = InBounceVelocityModifier;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D090
	 * 		Name   -> Function TBL.InventoryItem.AttachSimulatedProjectileOnKill
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::AttachSimulatedProjectileOnKill(const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.AttachSimulatedProjectileOnKill");
		
		AInventoryItem_AttachSimulatedProjectileOnKill_Params params {};
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D000
	 * 		Name   -> Function TBL.InventoryItem.ApplyImpulseToGoreHead
	 * 		Flags  -> (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		struct FVector                                     Impulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::ApplyImpulseToGoreHead(const struct FVector& Impulse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ApplyImpulseToGoreHead");
		
		AInventoryItem_ApplyImpulseToGoreHead_Params params {};
		params.Impulse = Impulse;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161CF80
	 * 		Name   -> Function TBL.InventoryItem.ApplyDamage
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InDamage                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::ApplyDamage(float InDamage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.ApplyDamage");
		
		AInventoryItem_ApplyDamage_Params params {};
		params.InDamage = InDamage;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161CE20
	 * 		Name   -> Function TBL.InventoryItem.AddToStackCount
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::AddToStackCount(int Delta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.AddToStackCount");
		
		AInventoryItem_AddToStackCount_Params params {};
		params.Delta = Delta;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161CDA0
	 * 		Name   -> Function TBL.InventoryItem.AddIgnoreActors
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::AddIgnoreActors(class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.AddIgnoreActors");
		
		AInventoryItem_AddIgnoreActors_Params params {};
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161CD20
	 * 		Name   -> Function TBL.InventoryItem.AddBlacklistedPawn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AInventoryItem::AddBlacklistedPawn(class ATBLCharacter* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InventoryItem.AddBlacklistedPawn");
		
		AInventoryItem_AddBlacklistedPawn_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AInventoryItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AInventoryItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InventoryItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627C20
	 * 		Name   -> Function TBL.InvocationActorComponent.OnRep_Info
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UInvocationActorComponent::OnRep_Info()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.InvocationActorComponent.OnRep_Info");
		
		UInvocationActorComponent_OnRep_Info_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInvocationActorComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInvocationActorComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InvocationActorComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UInvocationComponentInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UInvocationComponentInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.InvocationComponentInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsActiveRiposte.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsActiveRiposte::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsActiveRiposte");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsAlive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsAlive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsAlive");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsAttackType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsAttackType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsAttackType");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsCombatState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsCombatState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsCombatState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsCounter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsCounter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsCounter");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsCounterSuccess.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsCounterSuccess::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsCounterSuccess");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsCrouched.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsCrouched::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsCrouched");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsEnemy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsEnemy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsEnemy");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsHorseMovementState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsHorseMovementState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsHorseMovementState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsLookingDown.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsLookingDown::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsLookingDown");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsMovementDirection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsMovementDirection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsMovementDirection");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsMovementMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsMovementMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsMovementMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsMoving.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsMoving::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsMoving");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsNot.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsNot::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsNot");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsRiposte.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsRiposte::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsRiposte");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsSelf.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsSelf::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsSelf");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsStat.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsStat::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsStat");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UIsType.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIsType::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.IsType");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.ItemPreVisualizationInterface.EnablePreVisualization
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UItemPreVisualizationInterface::EnablePreVisualization()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ItemPreVisualizationInterface.EnablePreVisualization");
		
		UItemPreVisualizationInterface_EnablePreVisualization_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.ItemPreVisualizationInterface.DisablePreVisualization
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UItemPreVisualizationInterface::DisablePreVisualization()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ItemPreVisualizationInterface.DisablePreVisualization");
		
		UItemPreVisualizationInterface_DisablePreVisualization_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UItemPreVisualizationInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemPreVisualizationInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ItemPreVisualizationInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627E80
	 * 		Name   -> Function TBL.ItemPreVisualizationInterfaceHelper.RemoveItemVisualizerListener
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     NewListener                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemPreVisualizationInterfaceHelper::RemoveItemVisualizerListener(class UObject* WorldContextObject, class UObject* NewListener)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ItemPreVisualizationInterfaceHelper.RemoveItemVisualizerListener");
		
		UItemPreVisualizationInterfaceHelper_RemoveItemVisualizerListener_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.NewListener = NewListener;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627E00
	 * 		Name   -> Function TBL.ItemPreVisualizationInterfaceHelper.PlayerPossessedPawn
	 * 		Flags  -> (Final, Native, Private)
	 * Parameters:
	 * 		class APawn*                                       NewPawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemPreVisualizationInterfaceHelper::PlayerPossessedPawn(class APawn* NewPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ItemPreVisualizationInterfaceHelper.PlayerPossessedPawn");
		
		UItemPreVisualizationInterfaceHelper_PlayerPossessedPawn_Params params {};
		params.NewPawn = NewPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627970
	 * 		Name   -> Function TBL.ItemPreVisualizationInterfaceHelper.OnKilled
	 * 		Flags  -> (Final, Native, Private, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UItemPreVisualizationInterfaceHelper::OnKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ItemPreVisualizationInterfaceHelper.OnKilled");
		
		UItemPreVisualizationInterfaceHelper_OnKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627720
	 * 		Name   -> Function TBL.ItemPreVisualizationInterfaceHelper.CharacterEquippedItemsChanged
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UItemPreVisualizationInterfaceHelper::CharacterEquippedItemsChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ItemPreVisualizationInterfaceHelper.CharacterEquippedItemsChanged");
		
		UItemPreVisualizationInterfaceHelper_CharacterEquippedItemsChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627380
	 * 		Name   -> Function TBL.ItemPreVisualizationInterfaceHelper.AddItemVisualizerListener
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     NewListener                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UItemPreVisualizationInterfaceHelper::AddItemVisualizerListener(class UObject* WorldContextObject, class UObject* NewListener, class UClass* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ItemPreVisualizationInterfaceHelper.AddItemVisualizerListener");
		
		UItemPreVisualizationInterfaceHelper_AddItemVisualizerListener_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.NewListener = NewListener;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UItemPreVisualizationInterfaceHelper.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemPreVisualizationInterfaceHelper::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ItemPreVisualizationInterfaceHelper");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UItemReward.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemReward::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ItemReward");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UItemTableReward.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemTableReward::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ItemTableReward");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UItemTableRewardByAppId.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UItemTableRewardByAppId::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ItemTableRewardByAppId");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.KeybindingWidgetInterface.SetKeybinding
	 * 		Flags  -> (Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   IconSize                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKeybindingWidgetInterface::SetKeybinding(const struct FKey& Key, float Height, const struct FVector2D& IconSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.KeybindingWidgetInterface.SetKeybinding");
		
		UKeybindingWidgetInterface_SetKeybinding_Params params {};
		params.Key = Key;
		params.Height = Height;
		params.IconSize = IconSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKeybindingWidgetInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKeybindingWidgetInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KeybindingWidgetInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.KeyboardFocusInterface.K2_GetFocusWidget
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	class UWidget* UKeyboardFocusInterface::K2_GetFocusWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.KeyboardFocusInterface.K2_GetFocusWidget");
		
		UKeyboardFocusInterface_K2_GetFocusWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKeyboardFocusInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKeyboardFocusInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KeyboardFocusInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.ProjectDestinationListToNavMesh
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ADestinationGeneratorVolume::ProjectDestinationListToNavMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.ProjectDestinationListToNavMesh");
		
		ADestinationGeneratorVolume_ProjectDestinationListToNavMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8780
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.GetRandomDestination
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FVector ADestinationGeneratorVolume::GetRandomDestination()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.GetRandomDestination");
		
		ADestinationGeneratorVolume_GetRandomDestination_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F86A0
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.GetDestinationsInGridDistance
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FVector                                     QueryLocation                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                GridDistance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FVector> ADestinationGeneratorVolume::GetDestinationsInGridDistance(const struct FVector& QueryLocation, int GridDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.GetDestinationsInGridDistance");
		
		ADestinationGeneratorVolume_GetDestinationsInGridDistance_Params params {};
		params.QueryLocation = QueryLocation;
		params.GridDistance = GridDistance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8670
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.GetDestinationList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TArray<struct FVector> ADestinationGeneratorVolume::GetDestinationList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.GetDestinationList");
		
		ADestinationGeneratorVolume_GetDestinationList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F85B0
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.GetDestinationByIndex
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		int                                                Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector ADestinationGeneratorVolume::GetDestinationByIndex(int Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.GetDestinationByIndex");
		
		ADestinationGeneratorVolume_GetDestinationByIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.GeneratePoints
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ADestinationGeneratorVolume::GeneratePoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.GeneratePoints");
		
		ADestinationGeneratorVolume_GeneratePoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F7F30
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.Deactivate
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void ADestinationGeneratorVolume::Deactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.Deactivate");
		
		ADestinationGeneratorVolume_Deactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F7F10
	 * 		Name   -> Function TBL.DestinationGeneratorVolume.Activate
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void ADestinationGeneratorVolume::Activate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestinationGeneratorVolume.Activate");
		
		ADestinationGeneratorVolume_Activate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ADestinationGeneratorVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ADestinationGeneratorVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DestinationGeneratorVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDestinationRenderingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDestinationRenderingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DestinationRenderingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.DestroyableByPushableInterface.OnPushableBeginOverlap
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class UPushableComponent*                          Pushable                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDestroyableByPushableInterface::OnPushableBeginOverlap(class UPushableComponent* Pushable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DestroyableByPushableInterface.OnPushableBeginOverlap");
		
		UDestroyableByPushableInterface_OnPushableBeginOverlap_Params params {};
		params.Pushable = Pushable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDestroyableByPushableInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDestroyableByPushableInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DestroyableByPushableInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDestroyableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDestroyableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DestroyableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCA70
	 * 		Name   -> Function TBL.DieFromFireWorker.OnTakenDamage
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UDieFromFireWorker::OnTakenDamage(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DieFromFireWorker.OnTakenDamage");
		
		UDieFromFireWorker_OnTakenDamage_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDieFromFireWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDieFromFireWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DieFromFireWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FBF30
	 * 		Name   -> Function TBL.DisplayComponent.GetFactionFromRelevantFactionStatic
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFactionOrAttackerDefender                     RelevantFaction                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EFaction UDisplayComponent::STATIC_GetFactionFromRelevantFactionStatic(class UObject* WorldContextObject, TBL_EFactionOrAttackerDefender RelevantFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DisplayComponent.GetFactionFromRelevantFactionStatic");
		
		UDisplayComponent_GetFactionFromRelevantFactionStatic_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.RelevantFaction = RelevantFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FBEA0
	 * 		Name   -> Function TBL.DisplayComponent.GetFactionFromRelevantFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFactionOrAttackerDefender                     RelevantFaction                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EFaction UDisplayComponent::GetFactionFromRelevantFaction(TBL_EFactionOrAttackerDefender RelevantFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DisplayComponent.GetFactionFromRelevantFaction");
		
		UDisplayComponent_GetFactionFromRelevantFaction_Params params {};
		params.RelevantFaction = RelevantFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCF30
	 * 		Name   -> Function TBL.ActorInfoDisplayComponent.SetPerTeamDisplayInfo
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FActorDisplayInfo>                   InPerTeamDisplayInfo                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UActorInfoDisplayComponent::SetPerTeamDisplayInfo(TArray<struct FActorDisplayInfo> InPerTeamDisplayInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ActorInfoDisplayComponent.SetPerTeamDisplayInfo");
		
		UActorInfoDisplayComponent_SetPerTeamDisplayInfo_Params params {};
		params.InPerTeamDisplayInfo = InPerTeamDisplayInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC150
	 * 		Name   -> Function TBL.ActorInfoDisplayComponent.GetRelevantDisplayInfo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFlip                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FActorDisplayInfo UActorInfoDisplayComponent::GetRelevantDisplayInfo(TBL_EFaction Faction, bool bFlip)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ActorInfoDisplayComponent.GetRelevantDisplayInfo");
		
		UActorInfoDisplayComponent_GetRelevantDisplayInfo_Params params {};
		params.Faction = Faction;
		params.bFlip = bFlip;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UActorInfoDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UActorInfoDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ActorInfoDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FD0A0
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.SetProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UObjectiveStatusDisplayComponent::SetProgress(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.SetProgress");
		
		UObjectiveStatusDisplayComponent_SetProgress_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCE80
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.SetOwningTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UObjectiveStatusDisplayComponent::SetOwningTeam(TBL_EFaction Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.SetOwningTeam");
		
		UObjectiveStatusDisplayComponent_SetOwningTeam_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCCD0
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.SetObjectiveStateText
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Value                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	void UObjectiveStatusDisplayComponent::SetObjectiveStateText(TBL_EFaction Faction, const class FText& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.SetObjectiveStateText");
		
		UObjectiveStatusDisplayComponent_SetObjectiveStateText_Params params {};
		params.Faction = Faction;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCC50
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.SetObjectiveState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EObjectiveState                                Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UObjectiveStatusDisplayComponent::SetObjectiveState(TBL_EObjectiveState Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.SetObjectiveState");
		
		UObjectiveStatusDisplayComponent_SetObjectiveState_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCB20
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.SetActiveIcon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UMaterialInstance*                           NewIcon                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UObjectiveStatusDisplayComponent::SetActiveIcon(class UMaterialInstance* NewIcon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.SetActiveIcon");
		
		UObjectiveStatusDisplayComponent_SetActiveIcon_Params params {};
		params.NewIcon = NewIcon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCA50
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.OnRep_Progress
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UObjectiveStatusDisplayComponent::OnRep_Progress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.OnRep_Progress");
		
		UObjectiveStatusDisplayComponent_OnRep_Progress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCA30
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.OnRep_OwningTeam
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UObjectiveStatusDisplayComponent::OnRep_OwningTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.OnRep_OwningTeam");
		
		UObjectiveStatusDisplayComponent_OnRep_OwningTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCA10
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.OnRep_ObjectiveStateText
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UObjectiveStatusDisplayComponent::OnRep_ObjectiveStateText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.OnRep_ObjectiveStateText");
		
		UObjectiveStatusDisplayComponent_OnRep_ObjectiveStateText_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC9F0
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.OnRep_ObjectiveState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UObjectiveStatusDisplayComponent::OnRep_ObjectiveState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.OnRep_ObjectiveState");
		
		UObjectiveStatusDisplayComponent_OnRep_ObjectiveState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC130
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.GetProgress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UObjectiveStatusDisplayComponent::GetProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.GetProgress");
		
		UObjectiveStatusDisplayComponent_GetProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC110
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.GetOwningTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TBL_EFaction UObjectiveStatusDisplayComponent::GetOwningTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.GetOwningTeam");
		
		UObjectiveStatusDisplayComponent_GetOwningTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC010
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.GetObjectiveStateText
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UObjectiveStatusDisplayComponent::GetObjectiveStateText(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.GetObjectiveStateText");
		
		UObjectiveStatusDisplayComponent_GetObjectiveStateText_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FBFF0
	 * 		Name   -> Function TBL.ObjectiveStatusDisplayComponent.GetObjectiveState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TBL_EObjectiveState UObjectiveStatusDisplayComponent::GetObjectiveState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectiveStatusDisplayComponent.GetObjectiveState");
		
		UObjectiveStatusDisplayComponent_GetObjectiveState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UObjectiveStatusDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectiveStatusDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ObjectiveStatusDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USimpleDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USimpleDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SimpleDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UZoneDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UZoneDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ZoneDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FD2C0
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.ShouldClampToScreen
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UHudMarkerDisplayComponent::ShouldClampToScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.ShouldClampToScreen");
		
		UHudMarkerDisplayComponent_ShouldClampToScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FD240
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.SetWidgetVisibilityComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidgetVisibilityComponent*                  InWidgetVisibilityComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudMarkerDisplayComponent::SetWidgetVisibilityComponent(class UWidgetVisibilityComponent* InWidgetVisibilityComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.SetWidgetVisibilityComponent");
		
		UHudMarkerDisplayComponent_SetWidgetVisibilityComponent_Params params {};
		params.InWidgetVisibilityComponent = InWidgetVisibilityComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FD1B0
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.SetVisible
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudMarkerDisplayComponent::SetVisible(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.SetVisible");
		
		UHudMarkerDisplayComponent_SetVisible_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FCBA0
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.SetActorToDisplayInfoFor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UHudMarkerDisplayComponent::SetActorToDisplayInfoFor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.SetActorToDisplayInfoFor");
		
		UHudMarkerDisplayComponent_SetActorToDisplayInfoFor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC4E0
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.IsVisibleFor
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCheckVisiblityComponent                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UHudMarkerDisplayComponent::IsVisibleFor(class APlayerController* PlayerController, bool bCheckVisiblityComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.IsVisibleFor");
		
		UHudMarkerDisplayComponent_IsVisibleFor_Params params {};
		params.PlayerController = PlayerController;
		params.bCheckVisiblityComponent = bCheckVisiblityComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC490
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.IsVisible
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UHudMarkerDisplayComponent::IsVisible()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.IsVisible");
		
		UHudMarkerDisplayComponent_IsVisible_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC430
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.GetWidgetVisibilityComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class UWidgetVisibilityComponent* UHudMarkerDisplayComponent::GetWidgetVisibilityComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.GetWidgetVisibilityComponent");
		
		UHudMarkerDisplayComponent_GetWidgetVisibilityComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC410
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.GetVisible
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UHudMarkerDisplayComponent::GetVisible()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.GetVisible");
		
		UHudMarkerDisplayComponent_GetVisible_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC260
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.GetScreenLocation
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   WidgetSize                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsOnScreen                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasClamped                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UHudMarkerDisplayComponent::GetScreenLocation(class APlayerController* PlayerController, const struct FVector2D& WidgetSize, bool* bIsOnScreen, bool* bWasClamped)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.GetScreenLocation");
		
		UHudMarkerDisplayComponent_GetScreenLocation_Params params {};
		params.PlayerController = PlayerController;
		params.WidgetSize = WidgetSize;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bIsOnScreen != nullptr)
			*bIsOnScreen = params.bIsOnScreen;
		if (bWasClamped != nullptr)
			*bWasClamped = params.bWasClamped;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FBE80
	 * 		Name   -> Function TBL.HudMarkerDisplayComponent.GetActorToDisplayInfoFor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class AActor* UHudMarkerDisplayComponent::GetActorToDisplayInfoFor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.HudMarkerDisplayComponent.GetActorToDisplayInfoFor");
		
		UHudMarkerDisplayComponent_GetActorToDisplayInfoFor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UHudMarkerDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UHudMarkerDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.HudMarkerDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUnderCrosshairDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUnderCrosshairDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UnderCrosshairDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction USubObjectiveZoneDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USubObjectiveZoneDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.SubObjectiveZoneDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UObjectiveZoneDisplayComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectiveZoneDisplayComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ObjectiveZoneDisplayComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FD120
	 * 		Name   -> Function TBL.WidgetVisibilityComponent.SetVisibile
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bInVisibility                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWidgetVisibilityComponent::SetVisibile(bool bInVisibility)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WidgetVisibilityComponent.SetVisibile");
		
		UWidgetVisibilityComponent_SetVisibile_Params params {};
		params.bInVisibility = bInVisibility;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC5B0
	 * 		Name   -> Function TBL.WidgetVisibilityComponent.NotifyWidgetCompletedFadeOut
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bInCompletedFadeOut                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWidgetVisibilityComponent::NotifyWidgetCompletedFadeOut(bool bInCompletedFadeOut)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WidgetVisibilityComponent.NotifyWidgetCompletedFadeOut");
		
		UWidgetVisibilityComponent_NotifyWidgetCompletedFadeOut_Params params {};
		params.bInCompletedFadeOut = bInCompletedFadeOut;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC4C0
	 * 		Name   -> Function TBL.WidgetVisibilityComponent.IsVisible
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UWidgetVisibilityComponent::IsVisible()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WidgetVisibilityComponent.IsVisible");
		
		UWidgetVisibilityComponent_IsVisible_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC470
	 * 		Name   -> Function TBL.WidgetVisibilityComponent.HasWidgetCompletedFadeOut
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UWidgetVisibilityComponent::HasWidgetCompletedFadeOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WidgetVisibilityComponent.HasWidgetCompletedFadeOut");
		
		UWidgetVisibilityComponent_HasWidgetCompletedFadeOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.WidgetVisibilityComponent.ErrorNotifyTimer
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UWidgetVisibilityComponent::ErrorNotifyTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WidgetVisibilityComponent.ErrorNotifyTimer");
		
		UWidgetVisibilityComponent_ErrorNotifyTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWidgetVisibilityComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWidgetVisibilityComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WidgetVisibilityComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDisplayComponentInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDisplayComponentInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DisplayComponentInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDisplayDebugFileWriter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDisplayDebugFileWriter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DisplayDebugFileWriter");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC910
	 * 		Name   -> Function TBL.DrainStamina.OnKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UDrainStamina::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DrainStamina.OnKilled");
		
		UDrainStamina_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC890
	 * 		Name   -> Function TBL.DrainStamina.OnDestroyed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UDrainStamina::OnDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DrainStamina.OnDestroyed");
		
		UDrainStamina_OnDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015FC630
	 * 		Name   -> Function TBL.DrainStamina.OnCombatStateEvent
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      InActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UDrainStamina::OnCombatStateEvent(class AActor* InActor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.DrainStamina.OnCombatStateEvent");
		
		UDrainStamina_OnCombatStateEvent_Params params {};
		params.InActor = InActor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDrainStamina.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDrainStamina::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DrainStamina");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDropItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDropItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DropItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnableInteractableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnableInteractableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EnableInteractableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnvQueryGen_DestinationVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnvQueryGen_DestinationVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EnvQueryGen_DestinationVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnvQueryTest_InCombatArea.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnvQueryTest_InCombatArea::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EnvQueryTest_InCombatArea");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnvQueryTest_IsAlive.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnvQueryTest_IsAlive::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EnvQueryTest_IsAlive");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnvQueryTest_IsEnemy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnvQueryTest_IsEnemy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EnvQueryTest_IsEnemy");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnvQueryTest_OtherBotsTargetting.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnvQueryTest_OtherBotsTargetting::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EnvQueryTest_OtherBotsTargetting");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEnvQueryTest_TimesTargettedBy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEnvQueryTest_TimesTargettedBy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EnvQueryTest_TimesTargettedBy");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017077C0
	 * 		Name   -> Function TBL.TriggeredAction.OnInvocationComplete
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AAbilityInvocation*                          Invocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAbilitySpec*                                AbilitySpec                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTriggeredAction::OnInvocationComplete(class AAbilityInvocation* Invocation, class UAbilitySpec* AbilitySpec)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TriggeredAction.OnInvocationComplete");
		
		UTriggeredAction_OnInvocationComplete_Params params {};
		params.Invocation = Invocation;
		params.AbilitySpec = AbilitySpec;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTriggeredAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTriggeredAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TriggeredAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016012E0
	 * 		Name   -> Function TBL.EventCombatStateChanged.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UEventCombatStateChanged::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.EventCombatStateChanged.OnCombatStateChanged");
		
		UEventCombatStateChanged_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UEventCombatStateChanged.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEventCombatStateChanged::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.EventCombatStateChanged");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016015F0
	 * 		Name   -> Function TBL.FireArrowsWorker.OnCombatStateEnd
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class FName                                        State                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              AttackingWeapon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFireArrowsWorker::OnCombatStateEnd(const class FName& State, class AInventoryItem* AttackingWeapon, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FireArrowsWorker.OnCombatStateEnd");
		
		UFireArrowsWorker_OnCombatStateEnd_Params params {};
		params.State = State;
		params.AttackingWeapon = AttackingWeapon;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFireArrowsWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFireArrowsWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FireArrowsWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.FireSourceComponent.OnLookAtFireSource
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFireSourceComponent::OnLookAtFireSource(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FireSourceComponent.OnLookAtFireSource");
		
		UFireSourceComponent_OnLookAtFireSource_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFireSourceComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFireSourceComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FireSourceComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AFirstPersonCineCameraActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFirstPersonCineCameraActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FirstPersonCineCameraActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFirstPersonCineCameraComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFirstPersonCineCameraComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FirstPersonCineCameraComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLStaticMeshComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLStaticMeshComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLStaticMeshComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01600E40
	 * 		Name   -> Function TBL.FlammableStaticMeshComponent.BurningApplied
	 * 		Flags  -> (Native, Event, Public, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		struct FVector                                     HitRelativeLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UFlammableStaticMeshComponent::BurningApplied(const struct FVector& HitRelativeLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.FlammableStaticMeshComponent.BurningApplied");
		
		UFlammableStaticMeshComponent_BurningApplied_Params params {};
		params.HitRelativeLocation = HitRelativeLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFlammableStaticMeshComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFlammableStaticMeshComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FlammableStaticMeshComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillWithWeaponWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillWithWeaponWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillWithWeaponWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627B50
	 * 		Name   -> Function TBL.KillLowHealthWorker.OnPawnHealthChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillLowHealthWorker::OnPawnHealthChanged(float Amount, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.KillLowHealthWorker.OnPawnHealthChanged");
		
		UKillLowHealthWorker_OnPawnHealthChanged_Params params {};
		params.Amount = Amount;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627AD0
	 * 		Name   -> Function TBL.KillLowHealthWorker.OnPawnChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UKillLowHealthWorker::OnPawnChanged(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.KillLowHealthWorker.OnPawnChanged");
		
		UKillLowHealthWorker_OnPawnChanged_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillLowHealthWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillLowHealthWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillLowHealthWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillXAsClassWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillXAsClassWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillXAsClassWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillXFromDistanceWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillXFromDistanceWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillXFromDistanceWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillXInMatchWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillXInMatchWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillXInMatchWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillXSiegeWeaponWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillXSiegeWeaponWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillXSiegeWeaponWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CE90
	 * 		Name   -> Function TBL.TBLAIController.UseInteractable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHold                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::UseInteractable(class UInteractableComponent* Interactable, bool bHold)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.UseInteractable");
		
		ATBLAIController_UseInteractable_Params params {};
		params.Interactable = Interactable;
		params.bHold = bHold;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CE70
	 * 		Name   -> Function TBL.TBLAIController.Suicide
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAIController::Suicide()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.Suicide");
		
		ATBLAIController_Suicide_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CD90
	 * 		Name   -> Function TBL.TBLAIController.StopUsingInteractable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAIController::StopUsingInteractable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.StopUsingInteractable");
		
		ATBLAIController_StopUsingInteractable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CD10
	 * 		Name   -> Function TBL.TBLAIController.SetTargetMaxDistance
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              MaxDistance                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::SetTargetMaxDistance(float MaxDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.SetTargetMaxDistance");
		
		ATBLAIController_SetTargetMaxDistance_Params params {};
		params.MaxDistance = MaxDistance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CC80
	 * 		Name   -> Function TBL.TBLAIController.SetNullBot
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bNull                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::SetNullBot(bool bNull)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.SetNullBot");
		
		ATBLAIController_SetNullBot_Params params {};
		params.bNull = bNull;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CBF0
	 * 		Name   -> Function TBL.TBLAIController.SetDummyBot
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bDummy                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::SetDummyBot(bool bDummy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.SetDummyBot");
		
		ATBLAIController_SetDummyBot_Params params {};
		params.bDummy = bDummy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CB70
	 * 		Name   -> Function TBL.TBLAIController.SetBackfillBot
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bBackfill                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::SetBackfillBot(bool bBackfill)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.SetBackfillBot");
		
		ATBLAIController_SetBackfillBot_Params params {};
		params.bBackfill = bBackfill;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CAF0
	 * 		Name   -> Function TBL.TBLAIController.ResetError
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        ErrorType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::ResetError(const class FName& ErrorType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.ResetError");
		
		ATBLAIController_ResetError_Params params {};
		params.ErrorType = ErrorType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C4D0
	 * 		Name   -> Function TBL.TBLAIController.MoveToTargetLocation
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLAIController::MoveToTargetLocation(const struct FVector& Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.MoveToTargetLocation");
		
		ATBLAIController_MoveToTargetLocation_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C3F0
	 * 		Name   -> Function TBL.TBLAIController.MoveToNavMesh
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FVector                                     PathGoal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      PathGoalActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLAIController::MoveToNavMesh(const struct FVector& PathGoal, class AActor* PathGoalActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.MoveToNavMesh");
		
		ATBLAIController_MoveToNavMesh_Params params {};
		params.PathGoal = PathGoal;
		params.PathGoalActor = PathGoalActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C2E0
	 * 		Name   -> Function TBL.TBLAIController.MoveInput
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FVector2D                                   InputDir                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bAllowPathing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::MoveInput(const struct FVector2D& InputDir, float Time, bool bAllowPathing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.MoveInput");
		
		ATBLAIController_MoveInput_Params params {};
		params.InputDir = InputDir;
		params.Time = Time;
		params.bAllowPathing = bAllowPathing;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C170
	 * 		Name   -> Function TBL.TBLAIController.LogEvent
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DebugStr                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::LogEvent(const class FName& EventName, class AActor* Target, const class FString& DebugStr)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.LogEvent");
		
		ATBLAIController_LogEvent_Params params {};
		params.EventName = EventName;
		params.Target = Target;
		params.DebugStr = DebugStr;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C000
	 * 		Name   -> Function TBL.TBLAIController.LogError
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        ErrorType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bError                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::LogError(const class FName& ErrorType, const class FString& Message, bool bError)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.LogError");
		
		ATBLAIController_LogError_Params params {};
		params.ErrorType = ErrorType;
		params.Message = Message;
		params.bError = bError;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BFE0
	 * 		Name   -> Function TBL.TBLAIController.Jump
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAIController::Jump()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.Jump");
		
		ATBLAIController_Jump_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BFB0
	 * 		Name   -> Function TBL.TBLAIController.IsOnNavMesh
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLAIController::IsOnNavMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.IsOnNavMesh");
		
		ATBLAIController_IsOnNavMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BF80
	 * 		Name   -> Function TBL.TBLAIController.IsLevelSpawnedBot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLAIController::IsLevelSpawnedBot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.IsLevelSpawnedBot");
		
		ATBLAIController_IsLevelSpawnedBot_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BF50
	 * 		Name   -> Function TBL.TBLAIController.IsDummyBot
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLAIController::IsDummyBot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.IsDummyBot");
		
		ATBLAIController_IsDummyBot_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BF30
	 * 		Name   -> Function TBL.TBLAIController.IsBackfillBot
	 * 		Flags  -> (Final, Native, Public)
	 */
	bool ATBLAIController::IsBackfillBot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.IsBackfillBot");
		
		ATBLAIController_IsBackfillBot_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BCA0
	 * 		Name   -> Function TBL.TBLAIController.GiveWeapon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::GiveWeapon(const class FName& Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.GiveWeapon");
		
		ATBLAIController_GiveWeapon_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BC70
	 * 		Name   -> Function TBL.TBLAIController.GetTargetMaxDistance
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float ATBLAIController::GetTargetMaxDistance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.GetTargetMaxDistance");
		
		ATBLAIController_GetTargetMaxDistance_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BC40
	 * 		Name   -> Function TBL.TBLAIController.GetTarget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class AActor* ATBLAIController::GetTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.GetTarget");
		
		ATBLAIController_GetTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B780
	 * 		Name   -> Function TBL.TBLAIController.Dismount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAIController::Dismount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.Dismount");
		
		ATBLAIController_Dismount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B630
	 * 		Name   -> Function TBL.TBLAIController.DestroyControllerAndPawn
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       TargetPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::STATIC_DestroyControllerAndPawn(class AController* Controller, class APawn* TargetPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.DestroyControllerAndPawn");
		
		ATBLAIController_DestroyControllerAndPawn_Params params {};
		params.Controller = Controller;
		params.TargetPawn = TargetPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B5C0
	 * 		Name   -> Function TBL.TBLAIController.DestroyController
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAIController::STATIC_DestroyController(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.DestroyController");
		
		ATBLAIController_DestroyController_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B590
	 * 		Name   -> Function TBL.TBLAIController.CanPathFollow
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLAIController::CanPathFollow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAIController.CanPathFollow");
		
		ATBLAIController_CanPathFollow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CDB0
	 * 		Name   -> Function TBL.TBLAICombatController.StrafeAndKeepDistance
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAiCombatDistance                              Distance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAiCombatStrafing                              Strafing                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::StrafeAndKeepDistance(TBL_EAiCombatDistance Distance, TBL_EAiCombatStrafing Strafing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.StrafeAndKeepDistance");
		
		ATBLAICombatController_StrafeAndKeepDistance_Params params {};
		params.Distance = Distance;
		params.Strafing = Strafing;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165CAD0
	 * 		Name   -> Function TBL.TBLAICombatController.ReleaseBlock
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAICombatController::ReleaseBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.ReleaseBlock");
		
		ATBLAICombatController_ReleaseBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165C570
	 * 		Name   -> Function TBL.TBLAICombatController.OnCombatStateBegin
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::OnCombatStateBegin(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.OnCombatStateBegin");
		
		ATBLAICombatController_OnCombatStateBegin_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BF10
	 * 		Name   -> Function TBL.TBLAICombatController.HoldBlock
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAICombatController::HoldBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.HoldBlock");
		
		ATBLAICombatController_HoldBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BE60
	 * 		Name   -> Function TBL.TBLAICombatController.HandleTookDamage
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::HandleTookDamage(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.HandleTookDamage");
		
		ATBLAICombatController_HandleTookDamage_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BD20
	 * 		Name   -> Function TBL.TBLAICombatController.HandleDamageCaused
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::HandleDamageCaused(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.HandleDamageCaused");
		
		ATBLAICombatController_HandleDamageCaused_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BC10
	 * 		Name   -> Function TBL.TBLAICombatController.GetMeleeCombatMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EAiMeleeCombatMode ATBLAICombatController::GetMeleeCombatMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.GetMeleeCombatMode");
		
		ATBLAICombatController_GetMeleeCombatMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165BB50
	 * 		Name   -> Function TBL.TBLAICombatController.Engage
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FEngageParams                               InEngageParams                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::Engage(const struct FEngageParams& InEngageParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.Engage");
		
		ATBLAICombatController_Engage_Params params {};
		params.InEngageParams = InEngageParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B880
	 * 		Name   -> Function TBL.TBLAICombatController.EnemyOnCombatStateBegin
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::EnemyOnCombatStateBegin(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.EnemyOnCombatStateBegin");
		
		ATBLAICombatController_EnemyOnCombatStateBegin_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B7A0
	 * 		Name   -> Function TBL.TBLAICombatController.Dodge
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<TBL_EMovementDirection>                     AllowedDirections                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::Dodge(TArray<TBL_EMovementDirection> AllowedDirections)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.Dodge");
		
		ATBLAICombatController_Dodge_Params params {};
		params.AllowedDirections = AllowedDirections;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B6E0
	 * 		Name   -> Function TBL.TBLAICombatController.Disengage
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FDisengageParams                            InDisengageParams                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::Disengage(const struct FDisengageParams& InDisengageParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.Disengage");
		
		ATBLAICombatController_Disengage_Params params {};
		params.InDisengageParams = InDisengageParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0165B3F0
	 * 		Name   -> Function TBL.TBLAICombatController.Attack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FCombatAiAttackParams                       InParams                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLAICombatController::Attack(const struct FCombatAiAttackParams& InParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAICombatController.Attack");
		
		ATBLAICombatController_Attack_Params params {};
		params.InParams = InParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLAICombatController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLAICombatController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAICombatController");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662AE0
	 * 		Name   -> Function TBL.TBLAILibrary.SpawnTBLAIFromClass
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ControllerClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UBehaviorTree*                               BehaviorTree                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bNoCollisionFail                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLCharacter* UTBLAILibrary::STATIC_SpawnTBLAIFromClass(class UObject* WorldContextObject, class UClass* CharacterClass, TBL_EFaction Faction, class UClass* ControllerClass, class UBehaviorTree* BehaviorTree, const struct FVector& Location, const struct FRotator& Rotation, bool bNoCollisionFail)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.SpawnTBLAIFromClass");
		
		UTBLAILibrary_SpawnTBLAIFromClass_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.CharacterClass = CharacterClass;
		params.Faction = Faction;
		params.ControllerClass = ControllerClass;
		params.BehaviorTree = BehaviorTree;
		params.Location = Location;
		params.Rotation = Rotation;
		params.bNoCollisionFail = bNoCollisionFail;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662930
	 * 		Name   -> Function TBL.TBLAILibrary.SpawnTBLAIControllerFromClass
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ControllerClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      NextSpawnCharacterClass                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UBehaviorTree*                               BehaviorTree                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsPlayerBot                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLAIController* UTBLAILibrary::STATIC_SpawnTBLAIControllerFromClass(class UObject* WorldContextObject, TBL_EFaction Faction, class UClass* ControllerClass, class UClass* NextSpawnCharacterClass, class UBehaviorTree* BehaviorTree, bool IsPlayerBot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.SpawnTBLAIControllerFromClass");
		
		UTBLAILibrary_SpawnTBLAIControllerFromClass_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		params.ControllerClass = ControllerClass;
		params.NextSpawnCharacterClass = NextSpawnCharacterClass;
		params.BehaviorTree = BehaviorTree;
		params.IsPlayerBot = IsPlayerBot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662880
	 * 		Name   -> Function TBL.TBLAILibrary.PlayEmote
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EmoteName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_PlayEmote(class ATBLCharacter* Character, const class FName& EmoteName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.PlayEmote");
		
		UTBLAILibrary_PlayEmote_Params params {};
		params.Character = Character;
		params.EmoteName = EmoteName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662520
	 * 		Name   -> Function TBL.TBLAILibrary.InfluenceAtLocation
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      InfluenceInput                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AAIController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLAILibrary::STATIC_InfluenceAtLocation(class UClass* InfluenceInput, class AAIController* Controller, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.InfluenceAtLocation");
		
		UTBLAILibrary_InfluenceAtLocation_Params params {};
		params.InfluenceInput = InfluenceInput;
		params.Controller = Controller;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662370
	 * 		Name   -> Function TBL.TBLAILibrary.GetPerceivedLocationOfActor
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AAIController*                               Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OutVector                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLAILibrary::STATIC_GetPerceivedLocationOfActor(class AAIController* Controller, class AActor* Actor, struct FVector* OutVector)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.GetPerceivedLocationOfActor");
		
		UTBLAILibrary_GetPerceivedLocationOfActor_Params params {};
		params.Controller = Controller;
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutVector != nullptr)
			*OutVector = params.OutVector;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661C50
	 * 		Name   -> Function TBL.TBLAILibrary.GetActorsByAITag
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTag                                Tag                                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_GetActorsByAITag(class UObject* WorldContextObject, const struct FGameplayTag& Tag, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.GetActorsByAITag");
		
		UTBLAILibrary_GetActorsByAITag_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Tag = Tag;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661B60
	 * 		Name   -> Function TBL.TBLAILibrary.GetActorAITags
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FGameplayTagContainer UTBLAILibrary::STATIC_GetActorAITags(class AActor* Actor, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.GetActorAITags");
		
		UTBLAILibrary_GetActorAITags_Params params {};
		params.Actor = Actor;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661AB0
	 * 		Name   -> Function TBL.TBLAILibrary.ClearAllAITagsForFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_ClearAllAITagsForFaction(class UObject* WorldContextObject, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.ClearAllAITagsForFaction");
		
		UTBLAILibrary_ClearAllAITagsForFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661910
	 * 		Name   -> Function TBL.TBLAILibrary.AIUntagManyActors
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class AActor*>                              Actor                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTagContainer                       TagsToRemove                                               (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_AIUntagManyActors(TArray<class AActor*> Actor, const struct FGameplayTagContainer& TagsToRemove, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.AIUntagManyActors");
		
		UTBLAILibrary_AIUntagManyActors_Params params {};
		params.Actor = Actor;
		params.TagsToRemove = TagsToRemove;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016617D0
	 * 		Name   -> Function TBL.TBLAILibrary.AIUntagAllActorsForFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTagContainer                       TagsToRemove                                               (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_AIUntagAllActorsForFaction(class UObject* WorldContextObject, const struct FGameplayTagContainer& TagsToRemove, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.AIUntagAllActorsForFaction");
		
		UTBLAILibrary_AIUntagAllActorsForFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.TagsToRemove = TagsToRemove;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661690
	 * 		Name   -> Function TBL.TBLAILibrary.AIUntagActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTagContainer                       TagsToRemove                                               (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_AIUntagActor(class AActor* Actor, const struct FGameplayTagContainer& TagsToRemove, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.AIUntagActor");
		
		UTBLAILibrary_AIUntagActor_Params params {};
		params.Actor = Actor;
		params.TagsToRemove = TagsToRemove;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016614B0
	 * 		Name   -> Function TBL.TBLAILibrary.AITagManyActors
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class AActor*>                              Actors                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTagContainer                       TagsToAdd                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUntagWhenActorDies                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_AITagManyActors(TArray<class AActor*> Actors, const struct FGameplayTagContainer& TagsToAdd, TBL_EFaction Faction, bool bUntagWhenActorDies)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.AITagManyActors");
		
		UTBLAILibrary_AITagManyActors_Params params {};
		params.Actors = Actors;
		params.TagsToAdd = TagsToAdd;
		params.Faction = Faction;
		params.bUntagWhenActorDies = bUntagWhenActorDies;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661330
	 * 		Name   -> Function TBL.TBLAILibrary.AITagActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTagContainer                       TagsToAdd                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUntagWhenActorDies                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAILibrary::STATIC_AITagActor(class AActor* Actor, const struct FGameplayTagContainer& TagsToAdd, TBL_EFaction Faction, bool bUntagWhenActorDies)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAILibrary.AITagActor");
		
		UTBLAILibrary_AITagActor_Params params {};
		params.Actor = Actor;
		params.TagsToAdd = TagsToAdd;
		params.Faction = Faction;
		params.bUntagWhenActorDies = bUntagWhenActorDies;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAILibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAILibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAILibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016627C0
	 * 		Name   -> Function TBL.TBLAISystem.OnPlayerPossessed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAISystem::OnPlayerPossessed(class AController* Controller, class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.OnPlayerPossessed");
		
		UTBLAISystem_OnPlayerPossessed_Params params {};
		params.Controller = Controller;
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016626F0
	 * 		Name   -> Function TBL.TBLAISystem.NotifyControllerTargetLocation
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLAIController*                            Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NewTargetLocation                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAISystem::NotifyControllerTargetLocation(class ATBLAIController* Controller, const struct FVector& NewTargetLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.NotifyControllerTargetLocation");
		
		UTBLAISystem_NotifyControllerTargetLocation_Params params {};
		params.Controller = Controller;
		params.NewTargetLocation = NewTargetLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662630
	 * 		Name   -> Function TBL.TBLAISystem.NotifyControllerTarget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLAIController*                            Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      NewTarget                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAISystem::NotifyControllerTarget(class ATBLAIController* Controller, class AActor* NewTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.NotifyControllerTarget");
		
		UTBLAISystem_NotifyControllerTarget_Params params {};
		params.Controller = Controller;
		params.NewTarget = NewTarget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662480
	 * 		Name   -> Function TBL.TBLAISystem.GetSpawnCenter
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTBLAISystem::GetSpawnCenter(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetSpawnCenter");
		
		UTBLAISystem_GetSpawnCenter_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016622E0
	 * 		Name   -> Function TBL.TBLAISystem.GetNumControllersWithWeapon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UClass*                                      Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLAISystem::GetNumControllersWithWeapon(class UClass* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetNumControllersWithWeapon");
		
		UTBLAISystem_GetNumControllersWithWeapon_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662250
	 * 		Name   -> Function TBL.TBLAISystem.GetNumControllersWithBehaviour
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UClass*                                      Behaviour                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLAISystem::GetNumControllersWithBehaviour(class UClass* Behaviour)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetNumControllersWithBehaviour");
		
		UTBLAISystem_GetNumControllersWithBehaviour_Params params {};
		params.Behaviour = Behaviour;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016621B0
	 * 		Name   -> Function TBL.TBLAISystem.GetNumControllersTargettingLocation
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FVector                                     TargetLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLAISystem::GetNumControllersTargettingLocation(const struct FVector& TargetLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetNumControllersTargettingLocation");
		
		UTBLAISystem_GetNumControllersTargettingLocation_Params params {};
		params.TargetLocation = TargetLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662120
	 * 		Name   -> Function TBL.TBLAISystem.GetNumControllersTargetting
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLAISystem::GetNumControllersTargetting(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetNumControllersTargetting");
		
		UTBLAISystem_GetNumControllersTargetting_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01662090
	 * 		Name   -> Function TBL.TBLAISystem.GetNumControllersRegistered
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLAISystem::GetNumControllersRegistered(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetNumControllersRegistered");
		
		UTBLAISystem_GetNumControllersRegistered_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661FF0
	 * 		Name   -> Function TBL.TBLAISystem.GetControllersWithWeapon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UClass*                                      Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAISystem::GetControllersWithWeapon(class UClass* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetControllersWithWeapon");
		
		UTBLAISystem_GetControllersWithWeapon_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661F50
	 * 		Name   -> Function TBL.TBLAISystem.GetControllersWithBehaviour
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UClass*                                      Behaviour                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAISystem::GetControllersWithBehaviour(class UClass* Behaviour)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetControllersWithBehaviour");
		
		UTBLAISystem_GetControllersWithBehaviour_Params params {};
		params.Behaviour = Behaviour;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661EA0
	 * 		Name   -> Function TBL.TBLAISystem.GetControllersTargettingLocation
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FVector                                     TargetLocation                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAISystem::GetControllersTargettingLocation(const struct FVector& TargetLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetControllersTargettingLocation");
		
		UTBLAISystem_GetControllersTargettingLocation_Params params {};
		params.TargetLocation = TargetLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01661E00
	 * 		Name   -> Function TBL.TBLAISystem.GetControllersTargetting
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAISystem::GetControllersTargetting(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAISystem.GetControllersTargetting");
		
		UTBLAISystem_GetControllersTargetting_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAISystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAISystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAISystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672400
	 * 		Name   -> Function TBL.TBLAnimal.StopPanicking
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLAnimal::StopPanicking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.StopPanicking");
		
		ATBLAnimal_StopPanicking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672300
	 * 		Name   -> Function TBL.TBLAnimal.StartPanicking
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAnimal::StartPanicking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.StartPanicking");
		
		ATBLAnimal_StartPanicking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670ED0
	 * 		Name   -> Function TBL.TBLAnimal.Ragdoll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLAnimal::Ragdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.Ragdoll");
		
		ATBLAnimal_Ragdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670420
	 * 		Name   -> Function TBL.TBLAnimal.OnRep_bPanicking
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLAnimal::OnRep_bPanicking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.OnRep_bPanicking");
		
		ATBLAnimal_OnRep_bPanicking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670000
	 * 		Name   -> Function TBL.TBLAnimal.OnKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLAnimal::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.OnKilled");
		
		ATBLAnimal_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166FE20
	 * 		Name   -> Function TBL.TBLAnimal.OnDamageTaken
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLAnimal::OnDamageTaken(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.OnDamageTaken");
		
		ATBLAnimal_OnDamageTaken_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLAnimal.K2_TornOff
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLAnimal::K2_TornOff()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.K2_TornOff");
		
		ATBLAnimal_K2_TornOff_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AF30
	 * 		Name   -> Function TBL.TBLAnimal.CarryableAnimalEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               ParentCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLAnimal::CarryableAnimalEvent(const class FName& EventName, class ATBLCharacter* ParentCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimal.CarryableAnimalEvent");
		
		ATBLAnimal_CarryableAnimalEvent_Params params {};
		params.EventName = EventName;
		params.ParentCharacter = ParentCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLAnimal.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLAnimal::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAnimal");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671CF0
	 * 		Name   -> Function TBL.TBLAnimInstance.SetLODLevel
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                NewLodLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAnimInstance::SetLODLevel(int NewLodLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.SetLODLevel");
		
		UTBLAnimInstance_SetLODLevel_Params params {};
		params.NewLodLevel = NewLodLevel;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671C40
	 * 		Name   -> Function TBL.TBLAnimInstance.SetIsFarFromCamera
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bIsFar                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAnimInstance::SetIsFarFromCamera(bool bIsFar)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.SetIsFarFromCamera");
		
		UTBLAnimInstance_SetIsFarFromCamera_Params params {};
		params.bIsFar = bIsFar;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E8B0
	 * 		Name   -> Function TBL.TBLAnimInstance.Montage_StopAll
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InBlendOutTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAnimInstance::Montage_StopAll(float InBlendOutTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.Montage_StopAll");
		
		UTBLAnimInstance_Montage_StopAll_Params params {};
		params.InBlendOutTime = InBlendOutTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E6F0
	 * 		Name   -> Function TBL.TBLAnimInstance.Montage_PlaySection
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UAnimMontage*                                MontageToPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        StartingSection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InPlayRate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StartSectionPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InBlendTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		Engine_EMontagePlayReturnType                      ReturnValueType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLAnimInstance::Montage_PlaySection(class UAnimMontage* MontageToPlay, const class FName& StartingSection, float InPlayRate, float StartSectionPercent, float InBlendTime, Engine_EMontagePlayReturnType ReturnValueType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.Montage_PlaySection");
		
		UTBLAnimInstance_Montage_PlaySection_Params params {};
		params.MontageToPlay = MontageToPlay;
		params.StartingSection = StartingSection;
		params.InPlayRate = InPlayRate;
		params.StartSectionPercent = StartSectionPercent;
		params.InBlendTime = InBlendTime;
		params.ReturnValueType = ReturnValueType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D240
	 * 		Name   -> Function TBL.TBLAnimInstance.GetDebugNodeVisit_Blend
	 * 		Flags  -> (Final, Native, Protected)
	 */
	TArray<class FString> UTBLAnimInstance::GetDebugNodeVisit_Blend()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.GetDebugNodeVisit_Blend");
		
		UTBLAnimInstance_GetDebugNodeVisit_Blend_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D200
	 * 		Name   -> Function TBL.TBLAnimInstance.GetDebugNodeVisit
	 * 		Flags  -> (Final, Native, Protected)
	 */
	TArray<class FString> UTBLAnimInstance::GetDebugNodeVisit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.GetDebugNodeVisit");
		
		UTBLAnimInstance_GetDebugNodeVisit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D170
	 * 		Name   -> Function TBL.TBLAnimInstance.GetDebugMontageInstances
	 * 		Flags  -> (Final, Native, Public)
	 */
	TArray<struct FAnimDebugMontageInstance> UTBLAnimInstance::GetDebugMontageInstances()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.GetDebugMontageInstances");
		
		UTBLAnimInstance_GetDebugMontageInstances_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C900
	 * 		Name   -> Function TBL.TBLAnimInstance.GatherDebugNodeVisit
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLAnimInstance::GatherDebugNodeVisit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.GatherDebugNodeVisit");
		
		UTBLAnimInstance_GatherDebugNodeVisit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLAnimInstance.EventOnLODLevelChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLAnimInstance::EventOnLODLevelChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.EventOnLODLevelChanged");
		
		UTBLAnimInstance_EventOnLODLevelChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLAnimInstance.EventFarFromCameraChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLAnimInstance::EventFarFromCameraChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.EventFarFromCameraChanged");
		
		UTBLAnimInstance_EventFarFromCameraChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C8C0
	 * 		Name   -> Function TBL.TBLAnimInstance.DumpAnimationInfoToFile
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLAnimInstance::DumpAnimationInfoToFile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.DumpAnimationInfoToFile");
		
		UTBLAnimInstance_DumpAnimationInfoToFile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A620
	 * 		Name   -> Function TBL.TBLAnimInstance.AnimNotify_EndWeaponTracers
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLAnimInstance::AnimNotify_EndWeaponTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.AnimNotify_EndWeaponTracers");
		
		UTBLAnimInstance_AnimNotify_EndWeaponTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A600
	 * 		Name   -> Function TBL.TBLAnimInstance.AnimNotify_ActivateAbility
	 * 		Flags  -> (Native, Public)
	 */
	void UTBLAnimInstance::AnimNotify_ActivateAbility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimInstance.AnimNotify_ActivateAbility");
		
		UTBLAnimInstance_AnimNotify_ActivateAbility_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EA40
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.OnAnimationSetChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UClass*                                      AnimationSet                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLAnimalAnimInstance::OnAnimationSetChanged(class UClass* AnimationSet)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.OnAnimationSetChanged");
		
		UTBLAnimalAnimInstance_OnAnimationSetChanged_Params params {};
		params.AnimationSet = AnimationSet;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EA20
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.NotifyTookDamage
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLAnimalAnimInstance::NotifyTookDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.NotifyTookDamage");
		
		UTBLAnimalAnimInstance_NotifyTookDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EA00
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.NotifyStartedPanicking
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLAnimalAnimInstance::NotifyStartedPanicking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.NotifyStartedPanicking");
		
		UTBLAnimalAnimInstance_NotifyStartedPanicking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E9E0
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.NotifyLanded
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLAnimalAnimInstance::NotifyLanded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.NotifyLanded");
		
		UTBLAnimalAnimInstance_NotifyLanded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E9C0
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.NotifyKilled
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLAnimalAnimInstance::NotifyKilled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.NotifyKilled");
		
		UTBLAnimalAnimInstance_NotifyKilled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.EventOnTookDamage
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLAnimalAnimInstance::EventOnTookDamage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.EventOnTookDamage");
		
		UTBLAnimalAnimInstance_EventOnTookDamage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.EventOnStartedPanicking
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLAnimalAnimInstance::EventOnStartedPanicking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.EventOnStartedPanicking");
		
		UTBLAnimalAnimInstance_EventOnStartedPanicking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.EventOnLanded
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLAnimalAnimInstance::EventOnLanded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.EventOnLanded");
		
		UTBLAnimalAnimInstance_EventOnLanded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLAnimalAnimInstance.EventOnKilled
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLAnimalAnimInstance::EventOnKilled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLAnimalAnimInstance.EventOnKilled");
		
		UTBLAnimalAnimInstance_EventOnKilled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAnimalAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAnimalAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAnimalAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLAssetManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLAssetManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAssetManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627D20
	 * 		Name   -> Function TBL.KillXWithDamage.PlayerCausedFallDamage
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DeathEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UKillXWithDamage::PlayerCausedFallDamage(const struct FDeathDamageTakenEvent& DeathEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.KillXWithDamage.PlayerCausedFallDamage");
		
		UKillXWithDamage_PlayerCausedFallDamage_Params params {};
		params.DeathEvent = DeathEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillXWithDamage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillXWithDamage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillXWithDamage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKillXWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKillXWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KillXWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627F40
	 * 		Name   -> Function TBL.Ladder.UsePressed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InteractableComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadder::UsePressed(class APawn* Pawn, class UInteractableComponent* InteractableComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.UsePressed");
		
		ALadder_UsePressed_Params params {};
		params.Pawn = Pawn;
		params.InteractableComponent = InteractableComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627C60
	 * 		Name   -> Function TBL.Ladder.OnUseSyncFailed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InteractableComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadder::OnUseSyncFailed(class APawn* Pawn, class UInteractableComponent* InteractableComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.OnUseSyncFailed");
		
		ALadder_OnUseSyncFailed_Params params {};
		params.Pawn = Pawn;
		params.InteractableComponent = InteractableComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627C40
	 * 		Name   -> Function TBL.Ladder.OnRep_LadderEnabled
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ALadder::OnRep_LadderEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.OnRep_LadderEnabled");
		
		ALadder_OnRep_LadderEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627A50
	 * 		Name   -> Function TBL.Ladder.OnMovementChangedInJumpCollider
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        MovementState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadder::OnMovementChangedInJumpCollider(const class FName& MovementState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.OnMovementChangedInJumpCollider");
		
		ALadder_OnMovementChangedInJumpCollider_Params params {};
		params.MovementState = MovementState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016278A0
	 * 		Name   -> Function TBL.Ladder.MountLadder
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsJumping                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadder::MountLadder(class APawn* Pawn, bool bIsJumping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.MountLadder");
		
		ALadder_MountLadder_Params params {};
		params.Pawn = Pawn;
		params.bIsJumping = bIsJumping;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627880
	 * 		Name   -> Function TBL.Ladder.IsLadderEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ALadder::IsLadderEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.IsLadderEnabled");
		
		ALadder_IsLadderEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.Ladder.EventMountLadder
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadder::EventMountLadder(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.EventMountLadder");
		
		ALadder_EventMountLadder_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627740
	 * 		Name   -> Function TBL.Ladder.EndJumpOverlap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALadder::EndJumpOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.EndJumpOverlap");
		
		ALadder_EndJumpOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00BCF920
	 * 		Name   -> Function TBL.Ladder.EnableLadder
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void ALadder::EnableLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.EnableLadder");
		
		ALadder_EnableLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90DF0
	 * 		Name   -> Function TBL.Ladder.DisableLadder
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void ALadder::DisableLadder()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.DisableLadder");
		
		ALadder_DisableLadder_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627690
	 * 		Name   -> Function TBL.Ladder.CanMountLadder
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ALadder::CanMountLadder(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.CanMountLadder");
		
		ALadder_CanMountLadder_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01627480
	 * 		Name   -> Function TBL.Ladder.BeginJumpOverlap
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OverlapInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ALadder::BeginJumpOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.Ladder.BeginJumpOverlap");
		
		ALadder_BeginJumpOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.OverlapInfo = OverlapInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ALadder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALadder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Ladder");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ULineTracers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULineTracers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LineTracers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ULoadItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULoadItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LoadItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.LoadItemInterface.OnLoadItem
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULoadItemInterface::OnLoadItem(class AInventoryItem* Item, class ATBLCharacter* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadItemInterface.OnLoadItem");
		
		ULoadItemInterface_OnLoadItem_Params params {};
		params.Item = Item;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ULoadItemInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULoadItemInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LoadItemInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C390
	 * 		Name   -> Function TBL.LoadoutSelection.GetRandomItemForSlot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ULoadoutSelection::GetRandomItemForSlot(TBL_EInventoryItemSlot Slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadoutSelection.GetRandomItemForSlot");
		
		ULoadoutSelection_GetRandomItemForSlot_Params params {};
		params.Slot = Slot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C280
	 * 		Name   -> Function TBL.LoadoutSelection.GetItemSelectionBySlot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnPickup                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class UClass*> ULoadoutSelection::GetItemSelectionBySlot(TBL_EInventoryItemSlot Slot, bool bOnPickup)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadoutSelection.GetItemSelectionBySlot");
		
		ULoadoutSelection_GetItemSelectionBySlot_Params params {};
		params.Slot = Slot;
		params.bOnPickup = bOnPickup;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C1B0
	 * 		Name   -> Function TBL.LoadoutSelection.GetItemForSlot
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ULoadoutSelection::GetItemForSlot(TBL_EInventoryItemSlot Slot, int Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadoutSelection.GetItemForSlot");
		
		ULoadoutSelection_GetItemForSlot_Params params {};
		params.Slot = Slot;
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C0C0
	 * 		Name   -> Function TBL.LoadoutSelection.GetAllItemWeaponTagsFromLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<TBL_EWeaponTag> ULoadoutSelection::GetAllItemWeaponTagsFromLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadoutSelection.GetAllItemWeaponTagsFromLoadout");
		
		ULoadoutSelection_GetAllItemWeaponTagsFromLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ULoadoutSelection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULoadoutSelection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LoadoutSelection");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DCE0
	 * 		Name   -> Function TBL.LoadoutVolume.SetActive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Active                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALoadoutVolume::SetActive(bool Active)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadoutVolume.SetActive");
		
		ALoadoutVolume_SetActive_Params params {};
		params.Active = Active;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162CED0
	 * 		Name   -> Function TBL.LoadoutVolume.OnIsActiveChanged
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ALoadoutVolume::OnIsActiveChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadoutVolume.OnIsActiveChanged");
		
		ALoadoutVolume_OnIsActiveChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C560
	 * 		Name   -> Function TBL.LoadoutVolume.LocalPCPossessedPawn
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       NewPawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ALoadoutVolume::LocalPCPossessedPawn(class APawn* NewPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LoadoutVolume.LocalPCPossessedPawn");
		
		ALoadoutVolume_LocalPCPossessedPawn_Params params {};
		params.NewPawn = NewPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ALoadoutVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALoadoutVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LoadoutVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D170
	 * 		Name   -> Function TBL.LockTurnAngle.OnRootMotionChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bRootMotion                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULockTurnAngle::OnRootMotionChanged(bool bRootMotion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LockTurnAngle.OnRootMotionChanged");
		
		ULockTurnAngle_OnRootMotionChanged_Params params {};
		params.bRootMotion = bRootMotion;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162CE50
	 * 		Name   -> Function TBL.LockTurnAngle.OnEndTimer
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULockTurnAngle::OnEndTimer(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LockTurnAngle.OnEndTimer");
		
		ULockTurnAngle_OnEndTimer_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162CDD0
	 * 		Name   -> Function TBL.LockTurnAngle.OnDelayTimer
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULockTurnAngle::OnDelayTimer(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LockTurnAngle.OnDelayTimer");
		
		ULockTurnAngle_OnDelayTimer_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C910
	 * 		Name   -> Function TBL.LockTurnAngle.OnCombatStateEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      InActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ULockTurnAngle::OnCombatStateEvent(class AActor* InActor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LockTurnAngle.OnCombatStateEvent");
		
		ULockTurnAngle_OnCombatStateEvent_Params params {};
		params.InActor = InActor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C600
	 * 		Name   -> Function TBL.LockTurnAngle.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ULockTurnAngle::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LockTurnAngle.OnCombatStateChanged");
		
		ULockTurnAngle_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ULockTurnAngle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULockTurnAngle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LockTurnAngle");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D2A0
	 * 		Name   -> Function TBL.LTSGameMode.PlayRoundStartCommanderVO
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ALTSGameMode::PlayRoundStartCommanderVO()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LTSGameMode.PlayRoundStartCommanderVO");
		
		ALTSGameMode_PlayRoundStartCommanderVO_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ALTSGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALTSGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LTSGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ULTSGameModeSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULTSGameModeSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LTSGameModeSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D130
	 * 		Name   -> Function TBL.LTSGameState.OnRep_LTSHudMarkerComponentClass
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ALTSGameState::OnRep_LTSHudMarkerComponentClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.LTSGameState.OnRep_LTSHudMarkerComponentClass");
		
		ALTSGameState_OnRep_LTSHudMarkerComponentClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ALTSGameState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ALTSGameState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LTSGameState");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMatchStateListenerInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMatchStateListenerInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MatchStateListenerInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMatchStateListenerInterfaceHelpers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMatchStateListenerInterfaceHelpers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MatchStateListenerInterfaceHelpers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D200
	 * 		Name   -> Function TBL.MatchWinWorker.OnVictory
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_EFaction                                       InVictor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMatchWinWorker::OnVictory(TBL_EFaction InVictor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MatchWinWorker.OnVictory");
		
		UMatchWinWorker_OnVictory_Params params {};
		params.InVictor = InVictor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMatchWinWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMatchWinWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MatchWinWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162CFB0
	 * 		Name   -> Function TBL.MeleeTargetMethod.OnRagdollHitEventCosmetic
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      HitTaker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      HitCauser                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UMeleeTargetMethod::OnRagdollHitEventCosmetic(class AActor* HitTaker, class AActor* HitCauser, class AInventoryItem* Weapon, const struct FHitResult& HitResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MeleeTargetMethod.OnRagdollHitEventCosmetic");
		
		UMeleeTargetMethod_OnRagdollHitEventCosmetic_Params params {};
		params.HitTaker = HitTaker;
		params.HitCauser = HitCauser;
		params.Weapon = Weapon;
		params.HitResult = HitResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162CB70
	 * 		Name   -> Function TBL.MeleeTargetMethod.OnCombatStateEventCosmetic
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UMeleeTargetMethod::OnCombatStateEventCosmetic(class AActor* Actor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MeleeTargetMethod.OnCombatStateEventCosmetic");
		
		UMeleeTargetMethod_OnCombatStateEventCosmetic_Params params {};
		params.Actor = Actor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMeleeTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeleeTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MeleeTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMovementAction.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMovementAction::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MovementAction");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630DE0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.SetMarkedActors
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class AActor*>                              InMarkedActors                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::SetMarkedActors(TArray<class AActor*> InMarkedActors)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.SetMarkedActors");
		
		AMultiActorHUDMarkerBase_SetMarkedActors_Params params {};
		params.InMarkedActors = InMarkedActors;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00BCF940
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.RemoveMarkedActor
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::RemoveMarkedActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.RemoveMarkedActor");
		
		AMultiActorHUDMarkerBase_RemoveMarkedActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630C90
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.OnRep_ReplicatedActorList
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AMultiActorHUDMarkerBase::OnRep_ReplicatedActorList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.OnRep_ReplicatedActorList");
		
		AMultiActorHUDMarkerBase_OnRep_ReplicatedActorList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630CB0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.OnRep_bIsEnabled
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AMultiActorHUDMarkerBase::OnRep_bIsEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.OnRep_bIsEnabled");
		
		AMultiActorHUDMarkerBase_OnRep_bIsEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630C00
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.OnPlayerEnteredZoneChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bLocalPlayerInsideZone                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::OnPlayerEnteredZoneChanged(bool bLocalPlayerInsideZone)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.OnPlayerEnteredZoneChanged");
		
		AMultiActorHUDMarkerBase_OnPlayerEnteredZoneChanged_Params params {};
		params.bLocalPlayerInsideZone = bLocalPlayerInsideZone;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630B80
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.OnPawnPossessed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::OnPawnPossessed(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.OnPawnPossessed");
		
		AMultiActorHUDMarkerBase_OnPawnPossessed_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630B60
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.OnInitialVisibilityExpired
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AMultiActorHUDMarkerBase::OnInitialVisibilityExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.OnInitialVisibilityExpired");
		
		AMultiActorHUDMarkerBase_OnInitialVisibilityExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630B40
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.OnExtraMarkerDisplayExpired
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AMultiActorHUDMarkerBase::OnExtraMarkerDisplayExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.OnExtraMarkerDisplayExpired");
		
		AMultiActorHUDMarkerBase_OnExtraMarkerDisplayExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016305D0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.OnAuthorityAddedActorDestroyed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::OnAuthorityAddedActorDestroyed(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.OnAuthorityAddedActorDestroyed");
		
		AMultiActorHUDMarkerBase_OnAuthorityAddedActorDestroyed_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.K2_ShouldIgnoreMarkedActor
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AMultiActorHUDMarkerBase::K2_ShouldIgnoreMarkedActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.K2_ShouldIgnoreMarkedActor");
		
		AMultiActorHUDMarkerBase_K2_ShouldIgnoreMarkedActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016308C0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.IsVisible
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool AMultiActorHUDMarkerBase::IsVisible()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.IsVisible");
		
		AMultiActorHUDMarkerBase_IsVisible_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016308A0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.IsActive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool AMultiActorHUDMarkerBase::IsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.IsActive");
		
		AMultiActorHUDMarkerBase_IsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630780
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.GetWidgetVisibilityComponents
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	TArray<class UWidgetVisibilityComponent*> AMultiActorHUDMarkerBase::GetWidgetVisibilityComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.GetWidgetVisibilityComponents");
		
		AMultiActorHUDMarkerBase_GetWidgetVisibilityComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630760
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.GetObjectiveStatusComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UObjectiveStatusDisplayComponent* AMultiActorHUDMarkerBase::GetObjectiveStatusComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.GetObjectiveStatusComponent");
		
		AMultiActorHUDMarkerBase_GetObjectiveStatusComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016306E0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.GetMarkedActorHUDMarkerComponents
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	TArray<class UHudMarkerDisplayComponent*> AMultiActorHUDMarkerBase::GetMarkedActorHUDMarkerComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.GetMarkedActorHUDMarkerComponents");
		
		AMultiActorHUDMarkerBase_GetMarkedActorHUDMarkerComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015C6E10
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.GetHUDMarkerComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UHudMarkerDisplayComponent* AMultiActorHUDMarkerBase::GetHUDMarkerComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.GetHUDMarkerComponent");
		
		AMultiActorHUDMarkerBase_GetHUDMarkerComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630690
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.GetActorInfoComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UActorInfoDisplayComponent* AMultiActorHUDMarkerBase::GetActorInfoComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.GetActorInfoComponent");
		
		AMultiActorHUDMarkerBase_GetActorInfoComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630670
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.DeactivateMarker
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AMultiActorHUDMarkerBase::DeactivateMarker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.DeactivateMarker");
		
		AMultiActorHUDMarkerBase_DeactivateMarker_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630650
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.BindToObjectiveZone
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void AMultiActorHUDMarkerBase::BindToObjectiveZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.BindToObjectiveZone");
		
		AMultiActorHUDMarkerBase_BindToObjectiveZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016305D0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.AuthorityRemoveMarkedActor
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::AuthorityRemoveMarkedActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.AuthorityRemoveMarkedActor");
		
		AMultiActorHUDMarkerBase_AuthorityRemoveMarkedActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630550
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.AuthorityAddMarkedActor
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::AuthorityAddMarkedActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.AuthorityAddMarkedActor");
		
		AMultiActorHUDMarkerBase_AuthorityAddMarkedActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016304C0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.AddMarkedActor
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AMultiActorHUDMarkerBase::AddMarkedActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.AddMarkedActor");
		
		AMultiActorHUDMarkerBase_AddMarkedActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016304A0
	 * 		Name   -> Function TBL.MultiActorHUDMarkerBase.ActivateMarker
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AMultiActorHUDMarkerBase::ActivateMarker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MultiActorHUDMarkerBase.ActivateMarker");
		
		AMultiActorHUDMarkerBase_ActivateMarker_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AMultiActorHUDMarkerBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMultiActorHUDMarkerBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MultiActorHUDMarkerBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AMultiActorHUDMarkerInteractable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMultiActorHUDMarkerInteractable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MultiActorHUDMarkerInteractable");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DE70
	 * 		Name   -> Function TBL.MovementDebugger.ToggleRecord
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::ToggleRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ToggleRecord");
		
		UMovementDebugger_ToggleRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DE50
	 * 		Name   -> Function TBL.MovementDebugger.ToggleDrawServer
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::ToggleDrawServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ToggleDrawServer");
		
		UMovementDebugger_ToggleDrawServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DE30
	 * 		Name   -> Function TBL.MovementDebugger.ToggleDrawClient
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::ToggleDrawClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ToggleDrawClient");
		
		UMovementDebugger_ToggleDrawClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DE10
	 * 		Name   -> Function TBL.MovementDebugger.StopRecord
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::StopRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.StopRecord");
		
		UMovementDebugger_StopRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DDF0
	 * 		Name   -> Function TBL.MovementDebugger.StartRecord
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::StartRecord()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.StartRecord");
		
		UMovementDebugger_StartRecord_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DD70
	 * 		Name   -> Function TBL.MovementDebugger.SetTargetCharacter
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::SetTargetCharacter(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.SetTargetCharacter");
		
		UMovementDebugger_SetTargetCharacter_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DC20
	 * 		Name   -> Function TBL.MovementDebugger.ServerSetTargetCharacter
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class ATBLCharacter*                               DebugTarget                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::ServerSetTargetCharacter(class ATBLCharacter* DebugTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ServerSetTargetCharacter");
		
		UMovementDebugger_ServerSetTargetCharacter_Params params {};
		params.DebugTarget = DebugTarget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DB20
	 * 		Name   -> Function TBL.MovementDebugger.ServerSetClientTimeStamp
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::ServerSetClientTimeStamp(float ClientTimeStamp, int Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ServerSetClientTimeStamp");
		
		UMovementDebugger_ServerSetClientTimeStamp_Params params {};
		params.ClientTimeStamp = ClientTimeStamp;
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162DA60
	 * 		Name   -> Function TBL.MovementDebugger.ServerSetClientIndex
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		int                                                Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::ServerSetClientIndex(int Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ServerSetClientIndex");
		
		UMovementDebugger_ServerSetClientIndex_Params params {};
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D9A0
	 * 		Name   -> Function TBL.MovementDebugger.ServerSaveToFile
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::ServerSaveToFile(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ServerSaveToFile");
		
		UMovementDebugger_ServerSaveToFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D8C0
	 * 		Name   -> Function TBL.MovementDebugger.SaveToFile
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::SaveToFile(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.SaveToFile");
		
		UMovementDebugger_SaveToFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D760
	 * 		Name   -> Function TBL.MovementDebugger.RecordPose
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FDebugDrawShapes                            DebugDraw                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class ACharacter*                                  Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::RecordPose(struct FDebugDrawShapes* DebugDraw, class ACharacter* Pawn, const struct FColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.RecordPose");
		
		UMovementDebugger_RecordPose_Params params {};
		params.Pawn = Pawn;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (DebugDraw != nullptr)
			*DebugDraw = params.DebugDraw;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D5D0
	 * 		Name   -> Function TBL.MovementDebugger.RecordOtherCharacter
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FMovementDebugSimualated                    OtherCharacter                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacterBase*                           OtherChar                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UNetConnection*                              Connection                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::RecordOtherCharacter(struct FMovementDebugSimualated* OtherCharacter, class ATBLCharacterBase* OtherChar, class UNetConnection* Connection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.RecordOtherCharacter");
		
		UMovementDebugger_RecordOtherCharacter_Params params {};
		params.OtherChar = OtherChar;
		params.Connection = Connection;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OtherCharacter != nullptr)
			*OtherCharacter = params.OtherCharacter;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D490
	 * 		Name   -> Function TBL.MovementDebugger.RecordCapsule
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FMovementDebugFrame                         DebugFrame                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class ACharacter*                                  Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::RecordCapsule(struct FMovementDebugFrame* DebugFrame, class ACharacter* Pawn, const struct FColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.RecordCapsule");
		
		UMovementDebugger_RecordCapsule_Params params {};
		params.Pawn = Pawn;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (DebugFrame != nullptr)
			*DebugFrame = params.DebugFrame;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D2E0
	 * 		Name   -> Function TBL.MovementDebugger.RecordBoneChain
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FDebugDrawShapes                            DebugDraw                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class ACharacter*                                  Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoneName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::RecordBoneChain(struct FDebugDrawShapes* DebugDraw, class ACharacter* Pawn, const class FName& BoneName, const struct FColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.RecordBoneChain");
		
		UMovementDebugger_RecordBoneChain_Params params {};
		params.Pawn = Pawn;
		params.BoneName = BoneName;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (DebugDraw != nullptr)
			*DebugDraw = params.DebugDraw;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D2C0
	 * 		Name   -> Function TBL.MovementDebugger.PreviousCharacter
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::PreviousCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.PreviousCharacter");
		
		UMovementDebugger_PreviousCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D280
	 * 		Name   -> Function TBL.MovementDebugger.PlayReleased
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::PlayReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.PlayReleased");
		
		UMovementDebugger_PlayReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162D150
	 * 		Name   -> Function TBL.MovementDebugger.OnRep_Recording
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::OnRep_Recording()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.OnRep_Recording");
		
		UMovementDebugger_OnRep_Recording_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161F1B0
	 * 		Name   -> Function TBL.MovementDebugger.OnPossessed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       NewPawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::OnPossessed(class APawn* NewPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.OnPossessed");
		
		UMovementDebugger_OnPossessed_Params params {};
		params.NewPawn = NewPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162CEF0
	 * 		Name   -> Function TBL.MovementDebugger.OnMovementSync
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::OnMovementSync(float ClientTimeStamp, float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.OnMovementSync");
		
		UMovementDebugger_OnMovementSync_Params params {};
		params.ClientTimeStamp = ClientTimeStamp;
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C5E0
	 * 		Name   -> Function TBL.MovementDebugger.NextCharacter
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::NextCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.NextCharacter");
		
		UMovementDebugger_NextCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C480
	 * 		Name   -> Function TBL.MovementDebugger.LoadFromFile
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::LoadFromFile(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.LoadFromFile");
		
		UMovementDebugger_LoadFromFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C460
	 * 		Name   -> Function TBL.MovementDebugger.IncreaseFrameOffset
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::IncreaseFrameOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.IncreaseFrameOffset");
		
		UMovementDebugger_IncreaseFrameOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C420
	 * 		Name   -> Function TBL.MovementDebugger.GetServerFrame
	 * 		Flags  -> (Final, Native, Public)
	 */
	struct FMovementDebugFrame UMovementDebugger::GetServerFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.GetServerFrame");
		
		UMovementDebugger_GetServerFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C180
	 * 		Name   -> Function TBL.MovementDebugger.GetClientIndex
	 * 		Flags  -> (Final, Native, Public)
	 */
	int UMovementDebugger::GetClientIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.GetClientIndex");
		
		UMovementDebugger_GetClientIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C140
	 * 		Name   -> Function TBL.MovementDebugger.GetClientFrame
	 * 		Flags  -> (Final, Native, Public)
	 */
	struct FMovementDebugFrame UMovementDebugger::GetClientFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.GetClientFrame");
		
		UMovementDebugger_GetClientFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162C0A0
	 * 		Name   -> Function TBL.MovementDebugger.ForwardPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::ForwardPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ForwardPressed");
		
		UMovementDebugger_ForwardPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162BDF0
	 * 		Name   -> Function TBL.MovementDebugger.FindServerFrame
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		TArray<struct FMovementDebugFrame>                 SearchFrames                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMovementDebugFrame                         ReturnFrame                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMovementDebugger::FindServerFrame(TArray<struct FMovementDebugFrame>* SearchFrames, struct FMovementDebugFrame* ReturnFrame, float ClientTimeStamp, int Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.FindServerFrame");
		
		UMovementDebugger_FindServerFrame_Params params {};
		params.ClientTimeStamp = ClientTimeStamp;
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SearchFrames != nullptr)
			*SearchFrames = params.SearchFrames;
		if (ReturnFrame != nullptr)
			*ReturnFrame = params.ReturnFrame;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162BCE0
	 * 		Name   -> Function TBL.MovementDebugger.DrawStatLine
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     Start                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     End                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::DrawStatLine(const struct FVector& Start, const struct FVector& End, const struct FColor& Clr)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DrawStatLine");
		
		UMovementDebugger_DrawStatLine_Params params {};
		params.Start = Start;
		params.End = End;
		params.Clr = Clr;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162BBB0
	 * 		Name   -> Function TBL.MovementDebugger.DrawPose
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FDebugDrawShapes                            DebugDraw                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::DrawPose(struct FDebugDrawShapes* DebugDraw, const struct FColor& Clr)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DrawPose");
		
		UMovementDebugger_DrawPose_Params params {};
		params.Clr = Clr;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (DebugDraw != nullptr)
			*DebugDraw = params.DebugDraw;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162BAB0
	 * 		Name   -> Function TBL.MovementDebugger.DrawFrame
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FMovementDebugFrame                         DebugFrame                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::DrawFrame(struct FMovementDebugFrame* DebugFrame, const struct FColor& Clr)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DrawFrame");
		
		UMovementDebugger_DrawFrame_Params params {};
		params.Clr = Clr;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (DebugFrame != nullptr)
			*DebugFrame = params.DebugFrame;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162BA20
	 * 		Name   -> Function TBL.MovementDebugger.DrawDebug
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class UCanvas*                                     Canvas                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::DrawDebug(class UCanvas* Canvas)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DrawDebug");
		
		UMovementDebugger_DrawDebug_Params params {};
		params.Canvas = Canvas;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162BA00
	 * 		Name   -> Function TBL.MovementDebugger.DisplayDebugScrollUp
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::DisplayDebugScrollUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DisplayDebugScrollUp");
		
		UMovementDebugger_DisplayDebugScrollUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B9E0
	 * 		Name   -> Function TBL.MovementDebugger.DisplayDebugScrollReleased
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::DisplayDebugScrollReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DisplayDebugScrollReleased");
		
		UMovementDebugger_DisplayDebugScrollReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B9C0
	 * 		Name   -> Function TBL.MovementDebugger.DisplayDebugScrollDown
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::DisplayDebugScrollDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DisplayDebugScrollDown");
		
		UMovementDebugger_DisplayDebugScrollDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B9A0
	 * 		Name   -> Function TBL.MovementDebugger.DecreaseFrameOffset
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::DecreaseFrameOffset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.DecreaseFrameOffset");
		
		UMovementDebugger_DecreaseFrameOffset_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B980
	 * 		Name   -> Function TBL.MovementDebugger.CloseDebugger
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::CloseDebugger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.CloseDebugger");
		
		UMovementDebugger_CloseDebugger_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B870
	 * 		Name   -> Function TBL.MovementDebugger.ClientSendFrame
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		struct FMovementDebugFrame                         DebugFrame                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		bool                                               bSyncTimeStamp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::ClientSendFrame(const struct FMovementDebugFrame& DebugFrame, bool bSyncTimeStamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ClientSendFrame");
		
		UMovementDebugger_ClientSendFrame_Params params {};
		params.DebugFrame = DebugFrame;
		params.bSyncTimeStamp = bSyncTimeStamp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B7D0
	 * 		Name   -> Function TBL.MovementDebugger.ClientLoadFromFile
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::ClientLoadFromFile(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.ClientLoadFromFile");
		
		UMovementDebugger_ClientLoadFromFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B7B0
	 * 		Name   -> Function TBL.MovementDebugger.BackwardPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UMovementDebugger::BackwardPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.BackwardPressed");
		
		UMovementDebugger_BackwardPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B680
	 * 		Name   -> Function TBL.MovementDebugger.AutoSaveToFile
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSendToServer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Directory                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::AutoSaveToFile(bool bSendToServer, const class FString& Directory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.AutoSaveToFile");
		
		UMovementDebugger_AutoSaveToFile_Params params {};
		params.bSendToServer = bSendToServer;
		params.Directory = Directory;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0162B600
	 * 		Name   -> Function TBL.MovementDebugger.Animate
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementDebugger::Animate(float Scale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementDebugger.Animate");
		
		UMovementDebugger_Animate_Params params {};
		params.Scale = Scale;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMovementDebugger.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMovementDebugger::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MovementDebugger");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630F20
	 * 		Name   -> Function TBL.MovementInstance.Stop
	 * 		Flags  -> (Native, Public)
	 */
	void UMovementInstance::Stop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementInstance.Stop");
		
		UMovementInstance_Stop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630E90
	 * 		Name   -> Function TBL.MovementInstance.StartMovement
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class UMovementSequence*                           MovementSeq                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementInstance::StartMovement(class UMovementSequence* MovementSeq)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementInstance.StartMovement");
		
		UMovementInstance_StartMovement_Params params {};
		params.MovementSeq = MovementSeq;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630CD0
	 * 		Name   -> Function TBL.MovementInstance.OnWallHit
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Owner                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HitAngle                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementInstance::OnWallHit(class AActor* Owner, class AActor* HitActor, float HitAngle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementInstance.OnWallHit");
		
		UMovementInstance_OnWallHit_Params params {};
		params.Owner = Owner;
		params.HitActor = HitActor;
		params.HitAngle = HitAngle;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630A80
	 * 		Name   -> Function TBL.MovementInstance.OnCharacterHit
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Owner                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementInstance::OnCharacterHit(class AActor* Owner, class ATBLCharacter* HitCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementInstance.OnCharacterHit");
		
		UMovementInstance_OnCharacterHit_Params params {};
		params.Owner = Owner;
		params.HitCharacter = HitCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016308F0
	 * 		Name   -> Function TBL.MovementInstance.OnActorHit
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      SelfActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UMovementInstance::OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementInstance.OnActorHit");
		
		UMovementInstance_OnActorHit_Params params {};
		params.SelfActor = SelfActor;
		params.OtherActor = OtherActor;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016306B0
	 * 		Name   -> Function TBL.MovementInstance.GetCharacterOwner
	 * 		Flags  -> (Native, Public, Const)
	 */
	class ATBLCharacterBase* UMovementInstance::GetCharacterOwner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementInstance.GetCharacterOwner");
		
		UMovementInstance_GetCharacterOwner_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMovementInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMovementInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MovementInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EA2730
	 * 		Name   -> Function TBL.MovementModifierComponent.RemoveModifier
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Modifier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementModifierComponent::RemoveModifier(const class FName& Modifier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementModifierComponent.RemoveModifier");
		
		UMovementModifierComponent_RemoveModifier_Params params {};
		params.Modifier = Modifier;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01630800
	 * 		Name   -> Function TBL.MovementModifierComponent.HasModifier
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Modifier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UMovementModifierComponent::HasModifier(const class FName& Modifier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementModifierComponent.HasModifier");
		
		UMovementModifierComponent_HasModifier_Params params {};
		params.Modifier = Modifier;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E96EF0
	 * 		Name   -> Function TBL.MovementModifierComponent.AddModifier
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Modifier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UMovementModifierComponent::AddModifier(const class FName& Modifier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.MovementModifierComponent.AddModifier");
		
		UMovementModifierComponent_AddModifier_Params params {};
		params.Modifier = Modifier;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMovementModifierComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMovementModifierComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MovementModifierComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMovementSequence.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMovementSequence::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MovementSequence");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AMultiActorHUDMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMultiActorHUDMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MultiActorHUDMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AMultiActorHUDMarkerBurnable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMultiActorHUDMarkerBurnable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MultiActorHUDMarkerBurnable");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AMultiActorHUDMarkerStatsComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMultiActorHUDMarkerStatsComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MultiActorHUDMarkerStatsComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AMultiActorHUDMarkerAmmoRefill.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AMultiActorHUDMarkerAmmoRefill::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MultiActorHUDMarkerAmmoRefill");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UMultiTargetMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMultiTargetMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.MultiTargetMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNameGenerator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNameGenerator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NameGenerator");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNativeAnimationSet_Base.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNativeAnimationSet_Base::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NativeAnimationSet_Base");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016350D0
	 * 		Name   -> Function TBL.NativeCombatState_Release.ShouldDelayCounter
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Delay                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DelayTime                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UNativeCombatState_Release::ShouldDelayCounter(bool* Delay, float* DelayTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.NativeCombatState_Release.ShouldDelayCounter");
		
		UNativeCombatState_Release_ShouldDelayCounter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Delay != nullptr)
			*Delay = params.Delay;
		if (DelayTime != nullptr)
			*DelayTime = params.DelayTime;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634D60
	 * 		Name   -> Function TBL.NativeCombatState_Release.OnAllowCounters
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              OverTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UNativeCombatState_Release::OnAllowCounters(float OverTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.NativeCombatState_Release.OnAllowCounters");
		
		UNativeCombatState_Release_OnAllowCounters_Params params {};
		params.OverTime = OverTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634B10
	 * 		Name   -> Function TBL.NativeCombatState_Release.HandleQueuedParryCounter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UNativeCombatState_Release::HandleQueuedParryCounter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.NativeCombatState_Release.HandleQueuedParryCounter");
		
		UNativeCombatState_Release_HandleQueuedParryCounter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634200
	 * 		Name   -> Function TBL.NativeCombatState_Release.AllowSprinting
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UNativeCombatState_Release::AllowSprinting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.NativeCombatState_Release.AllowSprinting");
		
		UNativeCombatState_Release_AllowSprinting_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNativeCombatState_Release.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNativeCombatState_Release::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NativeCombatState_Release");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNativePartyWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNativePartyWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NativePartyWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNavArea_Constricted.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNavArea_Constricted::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NavArea_Constricted");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNavArea_ForceDefault.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNavArea_ForceDefault::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NavArea_ForceDefault");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNavArea_Jump.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNavArea_Jump::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NavArea_Jump");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ANavBlockingVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ANavBlockingVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NavBlockingVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNetValidation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNetValidation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NetValidation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNewSpawnSystemQueuer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNewSpawnSystemQueuer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NewSpawnSystemQueuer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634F20
	 * 		Name   -> Function TBL.NPCReplicatedDataComponent.SetIsScared
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               InIsScared                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UNPCReplicatedDataComponent::SetIsScared(bool InIsScared)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.NPCReplicatedDataComponent.SetIsScared");
		
		UNPCReplicatedDataComponent_SetIsScared_Params params {};
		params.InIsScared = InIsScared;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UNPCReplicatedDataComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UNPCReplicatedDataComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NPCReplicatedDataComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ANPCSpawnManagerBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ANPCSpawnManagerBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.NPCSpawnManagerBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DDA90
	 * 		Name   -> Function TBL.AsyncActionNPCSpawnManagerBase.OnNPCSpawnManagerDestroyed
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAsyncActionNPCSpawnManagerBase::OnNPCSpawnManagerDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AsyncActionNPCSpawnManagerBase.OnNPCSpawnManagerDestroyed");
		
		UAsyncActionNPCSpawnManagerBase_OnNPCSpawnManagerDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD960
	 * 		Name   -> Function TBL.AsyncActionNPCSpawnManagerBase.BindToNPCSpawnManager
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class ANPCSpawnManagerBase*                        NPCSpawnManager                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAsyncActionNPCSpawnManagerBase::BindToNPCSpawnManager(class ANPCSpawnManagerBase* NPCSpawnManager)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AsyncActionNPCSpawnManagerBase.BindToNPCSpawnManager");
		
		UAsyncActionNPCSpawnManagerBase_BindToNPCSpawnManager_Params params {};
		params.NPCSpawnManager = NPCSpawnManager;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAsyncActionNPCSpawnManagerBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAsyncActionNPCSpawnManagerBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AsyncActionNPCSpawnManagerBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634CE0
	 * 		Name   -> Function TBL.AsyncActionNPCSpawnManagerBehaviourTree.NotifyBehaviorTreeStarted
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLAIController*                            Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UAsyncActionNPCSpawnManagerBehaviourTree::NotifyBehaviorTreeStarted(class ATBLAIController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AsyncActionNPCSpawnManagerBehaviourTree.NotifyBehaviorTreeStarted");
		
		UAsyncActionNPCSpawnManagerBehaviourTree_NotifyBehaviorTreeStarted_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634230
	 * 		Name   -> Function TBL.AsyncActionNPCSpawnManagerBehaviourTree.AsyncWaitForBehaviourTree
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ANPCSpawnManagerBase*                        NPCSpawnManager                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAsyncActionNPCSpawnManagerBehaviourTree* UAsyncActionNPCSpawnManagerBehaviourTree::STATIC_AsyncWaitForBehaviourTree(class UObject* WorldContextObject, class ANPCSpawnManagerBase* NPCSpawnManager)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.AsyncActionNPCSpawnManagerBehaviourTree.AsyncWaitForBehaviourTree");
		
		UAsyncActionNPCSpawnManagerBehaviourTree_AsyncWaitForBehaviourTree_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.NPCSpawnManager = NPCSpawnManager;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UAsyncActionNPCSpawnManagerBehaviourTree.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UAsyncActionNPCSpawnManagerBehaviourTree::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.AsyncActionNPCSpawnManagerBehaviourTree");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634DE0
	 * 		Name   -> Function TBL.ObjectsByClassList.RefreshList
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UObjectsByClassList::RefreshList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.ObjectsByClassList.RefreshList");
		
		UObjectsByClassList_RefreshList_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UObjectsByClassList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UObjectsByClassList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ObjectsByClassList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016346D0
	 * 		Name   -> Function TBL.OnlineConfig.GetTitleProgression
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                Level                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FTitleProgressionRow UOnlineConfig::GetTitleProgression(int Level)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OnlineConfig.GetTitleProgression");
		
		UOnlineConfig_GetTitleProgression_Params params {};
		params.Level = Level;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OnlineConfig.EventGetAchievementCategory
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
	 * Parameters:
	 * 		struct FAchievementProgress                        InAchievement                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FText                                        Category                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Subcategory                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		int                                                DisplayPriority                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOnlineConfig::EventGetAchievementCategory(const struct FAchievementProgress& InAchievement, class FText* Category, class FText* Subcategory, int* DisplayPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OnlineConfig.EventGetAchievementCategory");
		
		UOnlineConfig_EventGetAchievementCategory_Params params {};
		params.InAchievement = InAchievement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Category != nullptr)
			*Category = params.Category;
		if (Subcategory != nullptr)
			*Subcategory = params.Subcategory;
		if (DisplayPriority != nullptr)
			*DisplayPriority = params.DisplayPriority;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOnlineConfig.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOnlineConfig::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OnlineConfig");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOnOffActivationMethod.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOnOffActivationMethod::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OnOffActivationMethod");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDropDownListItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDropDownListItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DropDownListItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634FB0
	 * 		Name   -> Function TBL.OptionsDropDownList.SetItemSelection
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UDropDownListItem*                           InItem                                                     (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSelected                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		SlateCore_ESelectInfo                              Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOptionsDropDownList::SetItemSelection(class UDropDownListItem** InItem, bool bSelected, SlateCore_ESelectInfo Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsDropDownList.SetItemSelection");
		
		UOptionsDropDownList_SetItemSelection_Params params {};
		params.bSelected = bSelected;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InItem != nullptr)
			*InItem = params.InItem;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634E00
	 * 		Name   -> Function TBL.OptionsDropDownList.RemoveAllItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UOptionsDropDownList::RemoveAllItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsDropDownList.RemoveAllItems");
		
		UOptionsDropDownList_RemoveAllItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016345A0
	 * 		Name   -> Function TBL.OptionsDropDownList.GetSelectedWidget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UWidget* UOptionsDropDownList::GetSelectedWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsDropDownList.GetSelectedWidget");
		
		UOptionsDropDownList_GetSelectedWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016340D0
	 * 		Name   -> Function TBL.OptionsDropDownList.AddItem
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Text                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		int                                                Index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UOptionsDropDownList::AddItem(const class FText& Text, int Index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsDropDownList.AddItem");
		
		UOptionsDropDownList_AddItem_Params params {};
		params.Text = Text;
		params.Index = Index;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsDropDownList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsDropDownList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsDropDownList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634EA0
	 * 		Name   -> Function TBL.OptionsList.SetCategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UOptionsScreenCategory*                      InCategory                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOptionsList::SetCategory(class UOptionsScreenCategory* InCategory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsList.SetCategory");
		
		UOptionsList_SetCategory_Params params {};
		params.InCategory = InCategory;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634E20
	 * 		Name   -> Function TBL.OptionsList.SelectWidget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOptionsList::SelectWidget(class UObject* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsList.SelectWidget");
		
		UOptionsList_SelectWidget_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634BC0
	 * 		Name   -> Function TBL.OptionsList.IsFirstEntryInSubcategory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UOptionsList::IsFirstEntryInSubcategory(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsList.IsFirstEntryInSubcategory");
		
		UOptionsList_IsFirstEntryInSubcategory_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634B30
	 * 		Name   -> Function TBL.OptionsList.IsFirstEntry
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UOptionsList::IsFirstEntry(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsList.IsFirstEntry");
		
		UOptionsList_IsFirstEntry_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016345D0
	 * 		Name   -> Function TBL.OptionsList.GetSelectedWidget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UWidget* UOptionsList::GetSelectedWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsList.GetSelectedWidget");
		
		UOptionsList_GetSelectedWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OptionsListEntry.BP_OnSelected
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		SlateCore_ESelectInfo                              SelectInfo                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOptionsListEntry::BP_OnSelected(SlateCore_ESelectInfo SelectInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsListEntry.BP_OnSelected");
		
		UOptionsListEntry_BP_OnSelected_Params params {};
		params.SelectInfo = SelectInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsListEntry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsListEntry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsListEntry");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOrCondition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOrCondition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OrCondition");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016351B0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.StartForgivenessTimer
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTimerHandle                                TimerHandle                                                (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::StartForgivenessTimer(class ATBLCharacter* Character, struct FTimerHandle* TimerHandle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.StartForgivenessTimer");
		
		AOutOfCombatZoneAuthority_StartForgivenessTimer_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (TimerHandle != nullptr)
			*TimerHandle = params.TimerHandle;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D530
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.ShouldIgnoreCharacter
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AOutOfCombatZoneAuthority::ShouldIgnoreCharacter(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.ShouldIgnoreCharacter");
		
		AOutOfCombatZoneAuthority_ShouldIgnoreCharacter_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.OnLocalPlayerEndOverlap
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::OnLocalPlayerEndOverlap(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.OnLocalPlayerEndOverlap");
		
		AOutOfCombatZoneAuthority_OnLocalPlayerEndOverlap_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.OnLocalPlayerBeginOverlap
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::OnLocalPlayerBeginOverlap(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.OnLocalPlayerBeginOverlap");
		
		AOutOfCombatZoneAuthority_OnLocalPlayerBeginOverlap_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.OnForgivenessTimerElapsed
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::OnForgivenessTimerElapsed(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.OnForgivenessTimerElapsed");
		
		AOutOfCombatZoneAuthority_OnForgivenessTimerElapsed_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.OnEndOverlap
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::OnEndOverlap(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.OnEndOverlap");
		
		AOutOfCombatZoneAuthority_OnEndOverlap_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.OnBeginOverlap
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::OnBeginOverlap(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.OnBeginOverlap");
		
		AOutOfCombatZoneAuthority_OnBeginOverlap_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.OnActionTriggered
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::OnActionTriggered(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.OnActionTriggered");
		
		AOutOfCombatZoneAuthority_OnActionTriggered_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.K2_ShouldIgnoreCharacter
	 * 		Flags  -> (Event, Protected, BlueprintEvent, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AOutOfCombatZoneAuthority::K2_ShouldIgnoreCharacter(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.K2_ShouldIgnoreCharacter");
		
		AOutOfCombatZoneAuthority_K2_ShouldIgnoreCharacter_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634C50
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.IsInForgivenessTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AOutOfCombatZoneAuthority::IsInForgivenessTime(class ACharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.IsInForgivenessTime");
		
		AOutOfCombatZoneAuthority_IsInForgivenessTime_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016349E0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleOnPlayerKilled
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		struct FDeathEvent                                 DeathEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleOnPlayerKilled(const struct FDeathEvent& DeathEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleOnPlayerKilled");
		
		AOutOfCombatZoneAuthority_HandleOnPlayerKilled_Params params {};
		params.DeathEvent = DeathEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634960
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleOnArenaRoundWon
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		TBL_EFaction                                       Winner                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleOnArenaRoundWon(TBL_EFaction Winner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleOnArenaRoundWon");
		
		AOutOfCombatZoneAuthority_HandleOnArenaRoundWon_Params params {};
		params.Winner = Winner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016348D0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleLocalControllerPossessedPawn
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleLocalControllerPossessedPawn(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleLocalControllerPossessedPawn");
		
		AOutOfCombatZoneAuthority_HandleLocalControllerPossessedPawn_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0161D7A0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleLocalControllerPlayerStateReplicated
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class APlayerState*                                PS                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleLocalControllerPlayerStateReplicated(class APlayerState* PS)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleLocalControllerPlayerStateReplicated");
		
		AOutOfCombatZoneAuthority_HandleLocalControllerPlayerStateReplicated_Params params {};
		params.PS = PS;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634800
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleEndOverlap
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleEndOverlap");
		
		AOutOfCombatZoneAuthority_HandleEndOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E93080
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleCharacterSpawned
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleCharacterSpawned(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleCharacterSpawned");
		
		AOutOfCombatZoneAuthority_HandleCharacterSpawned_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634770
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleCharacterDestroyed
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleCharacterDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleCharacterDestroyed");
		
		AOutOfCombatZoneAuthority_HandleCharacterDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4200
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleBeginOverlap
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleBeginOverlap");
		
		AOutOfCombatZoneAuthority_HandleBeginOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015D4BF0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.HandleActionTimerFired
	 * 		Flags  -> (Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::HandleActionTimerFired(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.HandleActionTimerFired");
		
		AOutOfCombatZoneAuthority_HandleActionTimerFired_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634600
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.GetTimerDelaySeconds
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutIsInForgivenessTime                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AOutOfCombatZoneAuthority::GetTimerDelaySeconds(class ATBLCharacter* Character, bool* OutIsInForgivenessTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.GetTimerDelaySeconds");
		
		AOutOfCombatZoneAuthority_GetTimerDelaySeconds_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutIsInForgivenessTime != nullptr)
			*OutIsInForgivenessTime = params.OutIsInForgivenessTime;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634500
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.GetForgivenessTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AOutOfCombatZoneAuthority::GetForgivenessTime(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.GetForgivenessTime");
		
		AOutOfCombatZoneAuthority_GetForgivenessTime_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634400
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.GetCurrentLowestTimeLeft
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class AOutOfCombatZoneAuthority*>           Authorities                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float AOutOfCombatZoneAuthority::STATIC_GetCurrentLowestTimeLeft(TArray<class AOutOfCombatZoneAuthority*> Authorities, class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.GetCurrentLowestTimeLeft");
		
		AOutOfCombatZoneAuthority_GetCurrentLowestTimeLeft_Params params {};
		params.Authorities = Authorities;
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016342F0
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.CanHaveForgivenessTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AOutOfCombatZoneAuthority::CanHaveForgivenessTime(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.CanHaveForgivenessTime");
		
		AOutOfCombatZoneAuthority_CanHaveForgivenessTime_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01634380
	 * 		Name   -> Function TBL.OutOfCombatZoneAuthority.CancelForgivenessTimer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneAuthority::CancelForgivenessTimer(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneAuthority.CancelForgivenessTimer");
		
		AOutOfCombatZoneAuthority_CancelForgivenessTimer_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AOutOfCombatZoneAuthority.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AOutOfCombatZoneAuthority::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OutOfCombatZoneAuthority");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016392F0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.ResizeCombatZoneBasedOnNextThreshold
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AOutOfCombatZoneVolume::ResizeCombatZoneBasedOnNextThreshold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.ResizeCombatZoneBasedOnNextThreshold");
		
		AOutOfCombatZoneVolume_ResizeCombatZoneBasedOnNextThreshold_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016392D0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.ResetCombatZoneThreshold
	 * 		Flags  -> (Final, Native, Public)
	 */
	void AOutOfCombatZoneVolume::ResetCombatZoneThreshold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.ResetCombatZoneThreshold");
		
		AOutOfCombatZoneVolume_ResetCombatZoneThreshold_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.OnStateChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EOutOfCombatZoneVolumeActivateDeactivateAction StateChanged                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneVolume::OnStateChanged(TBL_EOutOfCombatZoneVolumeActivateDeactivateAction StateChanged)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.OnStateChanged");
		
		AOutOfCombatZoneVolume_OnStateChanged_Params params {};
		params.StateChanged = StateChanged;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638F60
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.OnRep_IsActive
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AOutOfCombatZoneVolume::OnRep_IsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.OnRep_IsActive");
		
		AOutOfCombatZoneVolume_OnRep_IsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638A20
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.IsInCombatZone
	 * 		Flags  -> (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FVector                                     Point                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AOutOfCombatZoneVolume::IsInCombatZone(const struct FVector& Point)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.IsInCombatZone");
		
		AOutOfCombatZoneVolume_IsInCombatZone_Params params {};
		params.Point = Point;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016389F0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.IsActive
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	bool AOutOfCombatZoneVolume::IsActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.IsActive");
		
		AOutOfCombatZoneVolume_IsActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016389B0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.InitCombatZoneThresholds
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AOutOfCombatZoneVolume::InitCombatZoneThresholds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.InitCombatZoneThresholds");
		
		AOutOfCombatZoneVolume_InitCombatZoneThresholds_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638800
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.GetNextZoneThreshold
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	struct FCombatZoneVolumeSizeParam AOutOfCombatZoneVolume::GetNextZoneThreshold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.GetNextZoneThreshold");
		
		AOutOfCombatZoneVolume_GetNextZoneThreshold_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638620
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.ClientSetVisualizationFade
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		class ATBLPlayerController*                        LocalController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bShouldFade                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneVolume::ClientSetVisualizationFade(class ATBLPlayerController* LocalController, bool bShouldFade)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.ClientSetVisualizationFade");
		
		AOutOfCombatZoneVolume_ClientSetVisualizationFade_Params params {};
		params.LocalController = LocalController;
		params.bShouldFade = bShouldFade;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638540
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.CanResizeToNextThreshold
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              NewPlayerRatio                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              NewTimeRatio                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AOutOfCombatZoneVolume::CanResizeToNextThreshold(float NewPlayerRatio, float NewTimeRatio)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.CanResizeToNextThreshold");
		
		AOutOfCombatZoneVolume_CanResizeToNextThreshold_Params params {};
		params.NewPlayerRatio = NewPlayerRatio;
		params.NewTimeRatio = NewTimeRatio;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016383B0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume.ActivateDeactivate
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EOutOfCombatZoneVolumeActivateDeactivateAction Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneVolume::ActivateDeactivate(TBL_EOutOfCombatZoneVolumeActivateDeactivateAction Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume.ActivateDeactivate");
		
		AOutOfCombatZoneVolume_ActivateDeactivate_Params params {};
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AOutOfCombatZoneVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AOutOfCombatZoneVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OutOfCombatZoneVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638F20
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume_Box.OnRep_BoxParams
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AOutOfCombatZoneVolume_Box::OnRep_BoxParams()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume_Box.OnRep_BoxParams");
		
		AOutOfCombatZoneVolume_Box_OnRep_BoxParams_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume_Box.OnBoxParamsUpdated
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void AOutOfCombatZoneVolume_Box::OnBoxParamsUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume_Box.OnBoxParamsUpdated");
		
		AOutOfCombatZoneVolume_Box_OnBoxParamsUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638840
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume_Box.GetOverlappingCharacters
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class ATBLCharacter*>                       OutChars                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneVolume_Box::GetOverlappingCharacters(TArray<class ATBLCharacter*>* OutChars)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume_Box.GetOverlappingCharacters");
		
		AOutOfCombatZoneVolume_Box_GetOverlappingCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutChars != nullptr)
			*OutChars = params.OutChars;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AOutOfCombatZoneVolume_Box.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AOutOfCombatZoneVolume_Box::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OutOfCombatZoneVolume_Box");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume_Ellipse.RecheckCollisions
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void AOutOfCombatZoneVolume_Ellipse::RecheckCollisions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume_Ellipse.RecheckCollisions");
		
		AOutOfCombatZoneVolume_Ellipse_RecheckCollisions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638F40
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume_Ellipse.OnRep_EllipseParams
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AOutOfCombatZoneVolume_Ellipse::OnRep_EllipseParams()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume_Ellipse.OnRep_EllipseParams");
		
		AOutOfCombatZoneVolume_Ellipse_OnRep_EllipseParams_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume_Ellipse.OnEllipseParamsUpdated
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void AOutOfCombatZoneVolume_Ellipse::OnEllipseParamsUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume_Ellipse.OnEllipseParamsUpdated");
		
		AOutOfCombatZoneVolume_Ellipse_OnEllipseParamsUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638840
	 * 		Name   -> Function TBL.OutOfCombatZoneVolume_Ellipse.GetOverlappingCharacters
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class ATBLCharacter*>                       OutChars                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AOutOfCombatZoneVolume_Ellipse::GetOverlappingCharacters(TArray<class ATBLCharacter*>* OutChars)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OutOfCombatZoneVolume_Ellipse.GetOverlappingCharacters");
		
		AOutOfCombatZoneVolume_Ellipse_GetOverlappingCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutChars != nullptr)
			*OutChars = params.OutChars;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AOutOfCombatZoneVolume_Ellipse.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AOutOfCombatZoneVolume_Ellipse::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OutOfCombatZoneVolume_Ellipse");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UParryComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UParryComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ParryComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UParryTracers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UParryTracers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ParryTracers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016391D0
	 * 		Name   -> Function TBL.PartyList.OnVOIPTick
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPartyList::OnVOIPTick()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnVOIPTick");
		
		UPartyList_OnVOIPTick_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638EA0
	 * 		Name   -> Function TBL.PartyList.OnPostLoadMap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class UWorld*                                      LoadedWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPostLoadMap(class UWorld* LoadedWorld)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPostLoadMap");
		
		UPartyList_OnPostLoadMap_Params params {};
		params.LoadedWorld = LoadedWorld;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638CF0
	 * 		Name   -> Function TBL.PartyList.OnPartyMemberRemove
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DisplayName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyMemberRemove(const class FString& UserId, const class FString& DisplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyMemberRemove");
		
		UPartyList_OnPartyMemberRemove_Params params {};
		params.UserId = UserId;
		params.DisplayName = DisplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638CF0
	 * 		Name   -> Function TBL.PartyList.OnPartyMemberLeave
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DisplayName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyMemberLeave(const class FString& UserId, const class FString& DisplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyMemberLeave");
		
		UPartyList_OnPartyMemberLeave_Params params {};
		params.UserId = UserId;
		params.DisplayName = DisplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638BC0
	 * 		Name   -> Function TBL.PartyList.OnPartyMemberKick
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyMemberKick(const class FString& UserId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyMemberKick");
		
		UPartyList_OnPartyMemberKick_Params params {};
		params.UserId = UserId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638CF0
	 * 		Name   -> Function TBL.PartyList.OnPartyMemberJoin
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DisplayName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyMemberJoin(const class FString& UserId, const class FString& DisplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyMemberJoin");
		
		UPartyList_OnPartyMemberJoin_Params params {};
		params.UserId = UserId;
		params.DisplayName = DisplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638C60
	 * 		Name   -> Function TBL.PartyList.OnPartyLeave
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bResult                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyLeave(bool bResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyLeave");
		
		UPartyList_OnPartyLeave_Params params {};
		params.bResult = bResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638CF0
	 * 		Name   -> Function TBL.PartyList.OnPartyLeaderChange
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      UserId                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DisplayName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyLeaderChange(const class FString& UserId, const class FString& DisplayName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyLeaderChange");
		
		UPartyList_OnPartyLeaderChange_Params params {};
		params.UserId = UserId;
		params.DisplayName = DisplayName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638C60
	 * 		Name   -> Function TBL.PartyList.OnPartyInviteSendResult
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bResult                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyInviteSendResult(bool bResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyInviteSendResult");
		
		UPartyList_OnPartyInviteSendResult_Params params {};
		params.bResult = bResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638BC0
	 * 		Name   -> Function TBL.PartyList.OnPartyInviteAccept
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      PartyId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPartyList::OnPartyInviteAccept(const class FString& PartyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyInviteAccept");
		
		UPartyList_OnPartyInviteAccept_Params params {};
		params.PartyId = PartyId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638BA0
	 * 		Name   -> Function TBL.PartyList.OnPartyDisband
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPartyList::OnPartyDisband()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.OnPartyDisband");
		
		UPartyList_OnPartyDisband_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PartyList.IsPlayingMenu
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 */
	bool UPartyList::IsPlayingMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.IsPlayingMenu");
		
		UPartyList_IsPlayingMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016389D0
	 * 		Name   -> Function TBL.PartyList.InitPartyWidget
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UPartyList::InitPartyWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PartyList.InitPartyWidget");
		
		UPartyList_InitPartyWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPartyList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPartyList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PartyList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPartyListEntry.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPartyListEntry::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PartyListEntry");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction APendingLevelPlayerController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* APendingLevelPlayerController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PendingLevelPlayerController");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638FE0
	 * 		Name   -> Function TBL.PerksComponent.OnStartHeal
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      HealedActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPerksComponent::OnStartHeal(class AActor* HealedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PerksComponent.OnStartHeal");
		
		UPerksComponent_OnStartHeal_Params params {};
		params.HealedActor = HealedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638DE0
	 * 		Name   -> Function TBL.PerksComponent.OnPawnRevived
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       RevivedPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       RevivorPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPerksComponent::OnPawnRevived(class APawn* RevivedPlayer, class APawn* RevivorPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PerksComponent.OnPawnRevived");
		
		UPerksComponent_OnPawnRevived_Params params {};
		params.RevivedPlayer = RevivedPlayer;
		params.RevivorPlayer = RevivorPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638AC0
	 * 		Name   -> Function TBL.PerksComponent.OnKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UPerksComponent::OnKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PerksComponent.OnKilled");
		
		UPerksComponent_OnKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01638450
	 * 		Name   -> Function TBL.PerksComponent.ApplyHelperBonus
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UPerksComponent::ApplyHelperBonus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PerksComponent.ApplyHelperBonus");
		
		UPerksComponent_ApplyHelperBonus_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPerksComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPerksComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PerksComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D0A0
	 * 		Name   -> Function TBL.PlayerClassData.GetCustomizationClassIndexFromClassEnum
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioClassType                                ClassType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UPlayerClassData::STATIC_GetCustomizationClassIndexFromClassEnum(TBL_EAudioClassType ClassType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerClassData.GetCustomizationClassIndexFromClassEnum");
		
		UPlayerClassData_GetCustomizationClassIndexFromClassEnum_Params params {};
		params.ClassType = ClassType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPlayerClassData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerClassData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PlayerClassData");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163D820
	 * 		Name   -> Function TBL.PlayerInHudMarkerZoneInterface.IsLocalPlayerInHudMarkerZone
	 * 		Flags  -> (Native, Public)
	 */
	bool UPlayerInHudMarkerZoneInterface::IsLocalPlayerInHudMarkerZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerInHudMarkerZoneInterface.IsLocalPlayerInHudMarkerZone");
		
		UPlayerInHudMarkerZoneInterface_IsLocalPlayerInHudMarkerZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPlayerInHudMarkerZoneInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerInHudMarkerZoneInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PlayerInHudMarkerZoneInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163EA00
	 * 		Name   -> Function TBL.PlayerScoreList.PlayerStateReplicated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerScoreList::PlayerStateReplicated(class APlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreList.PlayerStateReplicated");
		
		UPlayerScoreList_PlayerStateReplicated_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E660
	 * 		Name   -> Function TBL.PlayerScoreList.OnPlayerScoreEvent
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FScoreEventStruct                           ScoreEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void UPlayerScoreList::OnPlayerScoreEvent(const struct FScoreEventStruct& ScoreEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreList.OnPlayerScoreEvent");
		
		UPlayerScoreList_OnPlayerScoreEvent_Params params {};
		params.ScoreEvent = ScoreEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E590
	 * 		Name   -> Function TBL.PlayerScoreList.OnPlayerLevelUpEvents
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		TArray<struct FLevelUpResult>                      LevelUpEvents                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerScoreList::OnPlayerLevelUpEvents(TArray<struct FLevelUpResult> LevelUpEvents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreList.OnPlayerLevelUpEvents");
		
		UPlayerScoreList_OnPlayerLevelUpEvents_Params params {};
		params.LevelUpEvents = LevelUpEvents;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163E490
	 * 		Name   -> Function TBL.PlayerScoreList.OnInitialized
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        PlayerOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerScoreList::OnInitialized(class ATBLPlayerController* PlayerOwner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreList.OnInitialized");
		
		UPlayerScoreList_OnInitialized_Params params {};
		params.PlayerOwner = PlayerOwner;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0163CB70
	 * 		Name   -> Function TBL.PlayerScoreList.CheckForPlayerState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UPlayerScoreList::CheckForPlayerState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreList.CheckForPlayerState");
		
		UPlayerScoreList_CheckForPlayerState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPlayerScoreList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerScoreList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PlayerScoreList");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PlayerScoreUiInterface.OnRemoved
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UPlayerScoreUiInterface::OnRemoved()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreUiInterface.OnRemoved");
		
		UPlayerScoreUiInterface_OnRemoved_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PlayerScoreUiInterface.AddSubScoreEvent
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		struct FScoreEventStruct                           ScoreEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void UPlayerScoreUiInterface::AddSubScoreEvent(const struct FScoreEventStruct& ScoreEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreUiInterface.AddSubScoreEvent");
		
		UPlayerScoreUiInterface_AddSubScoreEvent_Params params {};
		params.ScoreEvent = ScoreEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.PlayerScoreUiInterface.AddScore
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		int                                                Score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UPlayerScoreUiInterface::AddScore(int Score)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.PlayerScoreUiInterface.AddScore");
		
		UPlayerScoreUiInterface_AddScore_Params params {};
		params.Score = Score;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPlayerScoreUiInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerScoreUiInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PlayerScoreUiInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPlayerTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPlayerTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PlayerTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UPodiumLocationComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UPodiumLocationComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.PodiumLocationComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLAutoNavLink.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLAutoNavLink::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLAutoNavLink");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLBallistaAnimInstance.OnRepaired
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLBallistaAnimInstance::OnRepaired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBallistaAnimInstance.OnRepaired");
		
		UTBLBallistaAnimInstance_OnRepaired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166F300
	 * 		Name   -> Function TBL.TBLBallistaAnimInstance.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                NewCombatState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLBallistaAnimInstance::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* NewCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBallistaAnimInstance.OnCombatStateChanged");
		
		UTBLBallistaAnimInstance_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.NewCombatState = NewCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166ED40
	 * 		Name   -> Function TBL.TBLBallistaAnimInstance.OnBallistaRepaired
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLBallistaAnimInstance::OnBallistaRepaired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBallistaAnimInstance.OnBallistaRepaired");
		
		UTBLBallistaAnimInstance_OnBallistaRepaired_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166ECC0
	 * 		Name   -> Function TBL.TBLBallistaAnimInstance.OnBallistaMounted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLBallistaAnimInstance::OnBallistaMounted(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBallistaAnimInstance.OnBallistaMounted");
		
		UTBLBallistaAnimInstance_OnBallistaMounted_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EC00
	 * 		Name   -> Function TBL.TBLBallistaAnimInstance.OnBallistaDismounted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLBallistaAnimInstance::OnBallistaDismounted(class ATBLCharacter* Character, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBallistaAnimInstance.OnBallistaDismounted");
		
		UTBLBallistaAnimInstance_OnBallistaDismounted_Params params {};
		params.Character = Character;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLBallistaAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLBallistaAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLBallistaAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLBatteringRamAnimInstance.EventOnCombatStateChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLBatteringRamAnimInstance::EventOnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBatteringRamAnimInstance.EventOnCombatStateChanged");
		
		UTBLBatteringRamAnimInstance_EventOnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A680
	 * 		Name   -> Function TBL.TBLBatteringRamAnimInstance.AnimNotify_ramRecovery_End
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLBatteringRamAnimInstance::AnimNotify_ramRecovery_End()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBatteringRamAnimInstance.AnimNotify_ramRecovery_End");
		
		UTBLBatteringRamAnimInstance_AnimNotify_ramRecovery_End_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A660
	 * 		Name   -> Function TBL.TBLBatteringRamAnimInstance.AnimNotify_ramFire_Action
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLBatteringRamAnimInstance::AnimNotify_ramFire_Action()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBatteringRamAnimInstance.AnimNotify_ramFire_Action");
		
		UTBLBatteringRamAnimInstance_AnimNotify_ramFire_Action_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLBatteringRamAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLBatteringRamAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLBatteringRamAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLBlueprintCompilerInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLBlueprintCompilerInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLBlueprintCompilerInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCameraShake.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCameraShake::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCameraShake");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166F300
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                NewCombatState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCatapultAnimInstance::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* NewCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.OnCombatStateChanged");
		
		UTBLCatapultAnimInstance_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.NewCombatState = NewCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EEC0
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.OnCatapultStateChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		unsigned char                                      State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCatapultAnimInstance::OnCatapultStateChanged(unsigned char State, unsigned char PreviousState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.OnCatapultStateChanged");
		
		UTBLCatapultAnimInstance_OnCatapultStateChanged_Params params {};
		params.State = State;
		params.PreviousState = PreviousState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EE40
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.OnCatapultMounted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCatapultAnimInstance::OnCatapultMounted(class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.OnCatapultMounted");
		
		UTBLCatapultAnimInstance_OnCatapultMounted_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EE20
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.OnCatapultFireNoDriver
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCatapultAnimInstance::OnCatapultFireNoDriver()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.OnCatapultFireNoDriver");
		
		UTBLCatapultAnimInstance_OnCatapultFireNoDriver_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166ED60
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.OnCatapultDismounted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCatapultAnimInstance::OnCatapultDismounted(class ATBLCharacter* Character, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.OnCatapultDismounted");
		
		UTBLCatapultAnimInstance_OnCatapultDismounted_Params params {};
		params.Character = Character;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B150
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.CatapultLaunchCharacters
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCatapultAnimInstance::CatapultLaunchCharacters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.CatapultLaunchCharacters");
		
		UTBLCatapultAnimInstance_CatapultLaunchCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B130
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.CatapultFireAction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCatapultAnimInstance::CatapultFireAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.CatapultFireAction");
		
		UTBLCatapultAnimInstance_CatapultFireAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A640
	 * 		Name   -> Function TBL.TBLCatapultAnimInstance.AnimNotify_catapultFireEnd_Action
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCatapultAnimInstance::AnimNotify_catapultFireEnd_Action()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCatapultAnimInstance.AnimNotify_catapultFireEnd_Action");
		
		UTBLCatapultAnimInstance_AnimNotify_catapultFireEnd_Action_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCatapultAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCatapultAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCatapultAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672C50
	 * 		Name   -> Function TBL.TBLCharacter.WasHitEarly
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::WasHitEarly(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.WasHitEarly");
		
		ATBLCharacter_WasHitEarly_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672B20
	 * 		Name   -> Function TBL.TBLCharacter.WasHitAfterDeath
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OtherCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::WasHitAfterDeath(struct FHitResult* Hit, class ATBLCharacter* OtherCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.WasHitAfterDeath");
		
		ATBLCharacter_WasHitAfterDeath_Params params {};
		params.OtherCharacter = OtherCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672A50
	 * 		Name   -> Function TBL.TBLCharacter.UpdateThirdPersonCamera
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSpectator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::UpdateThirdPersonCamera(float DeltaSeconds, bool bSpectator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdateThirdPersonCamera");
		
		ATBLCharacter_UpdateThirdPersonCamera_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		params.bSpectator = bSpectator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016729D0
	 * 		Name   -> Function TBL.TBLCharacter.UpdateSpecialItemAbility
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              SpecialItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::UpdateSpecialItemAbility(class AInventoryItem* SpecialItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdateSpecialItemAbility");
		
		ATBLCharacter_UpdateSpecialItemAbility_Params params {};
		params.SpecialItem = SpecialItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672950
	 * 		Name   -> Function TBL.TBLCharacter.UpdateRagdoll
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::UpdateRagdoll(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdateRagdoll");
		
		ATBLCharacter_UpdateRagdoll_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016728D0
	 * 		Name   -> Function TBL.TBLCharacter.UpdatePlayingVO
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::UpdatePlayingVO(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdatePlayingVO");
		
		ATBLCharacter_UpdatePlayingVO_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672850
	 * 		Name   -> Function TBL.TBLCharacter.UpdateParryAim
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::UpdateParryAim(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdateParryAim");
		
		ATBLCharacter_UpdateParryAim_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672830
	 * 		Name   -> Function TBL.TBLCharacter.UpdateLockMeshRotation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::UpdateLockMeshRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdateLockMeshRotation");
		
		ATBLCharacter_UpdateLockMeshRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016727B0
	 * 		Name   -> Function TBL.TBLCharacter.UpdateBlending
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::UpdateBlending(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdateBlending");
		
		ATBLCharacter_UpdateBlending_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672730
	 * 		Name   -> Function TBL.TBLCharacter.UpdateAttachedSmoothing
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::UpdateAttachedSmoothing(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UpdateAttachedSmoothing");
		
		ATBLCharacter_UpdateAttachedSmoothing_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672710
	 * 		Name   -> Function TBL.TBLCharacter.UnfreezeRagdoll
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::UnfreezeRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.UnfreezeRagdoll");
		
		ATBLCharacter_UnfreezeRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672660
	 * 		Name   -> Function TBL.TBLCharacter.TutorialPlayerControl
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FTutorialPlayerControlParams                Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::TutorialPlayerControl(const struct FTutorialPlayerControlParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.TutorialPlayerControl");
		
		ATBLCharacter_TutorialPlayerControl_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016725A0
	 * 		Name   -> Function TBL.TBLCharacter.TrapEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ETrapEventResult                               Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     TrapObject                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::TrapEvent(TBL_ETrapEventResult Result, class UObject* TrapObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.TrapEvent");
		
		ATBLCharacter_TrapEvent_Params params {};
		params.Result = Result;
		params.TrapObject = TrapObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672520
	 * 		Name   -> Function TBL.TBLCharacter.SwitchAttachedItemMesh
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class USkeletalMeshComponent*                      ParentMesh                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::SwitchAttachedItemMesh(class USkeletalMeshComponent* ParentMesh)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SwitchAttachedItemMesh");
		
		ATBLCharacter_SwitchAttachedItemMesh_Params params {};
		params.ParentMesh = ParentMesh;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016724A0
	 * 		Name   -> Function TBL.TBLCharacter.Suicide
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EKillReason                                    KillReason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::Suicide(TBL_EKillReason KillReason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.Suicide");
		
		ATBLCharacter_Suicide_Params params {};
		params.KillReason = KillReason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672420
	 * 		Name   -> Function TBL.TBLCharacter.StopRevive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               DownedCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::StopRevive(class ATBLCharacter* DownedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.StopRevive");
		
		ATBLCharacter_StopRevive_Params params {};
		params.DownedCharacter = DownedCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016723E0
	 * 		Name   -> Function TBL.TBLCharacter.StopLowPriorityCharacterActionEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::StopLowPriorityCharacterActionEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.StopLowPriorityCharacterActionEvent");
		
		ATBLCharacter_StopLowPriorityCharacterActionEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016723C0
	 * 		Name   -> Function TBL.TBLCharacter.StopHighPriorityCharacterActionEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::StopHighPriorityCharacterActionEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.StopHighPriorityCharacterActionEvent");
		
		ATBLCharacter_StopHighPriorityCharacterActionEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016723A0
	 * 		Name   -> Function TBL.TBLCharacter.StopCharacterActionEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::StopCharacterActionEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.StopCharacterActionEvent");
		
		ATBLCharacter_StopCharacterActionEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01672320
	 * 		Name   -> Function TBL.TBLCharacter.StartRevive
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               DownedCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::StartRevive(class ATBLCharacter* DownedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.StartRevive");
		
		ATBLCharacter_StartRevive_Params params {};
		params.DownedCharacter = DownedCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016722D0
	 * 		Name   -> Function TBL.TBLCharacter.ShouldIgnoreAI
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLCharacter::ShouldIgnoreAI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ShouldIgnoreAI");
		
		ATBLCharacter_ShouldIgnoreAI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016721C0
	 * 		Name   -> Function TBL.TBLCharacter.ShouldClash
	 * 		Flags  -> (Final, Native, Public, HasDefaults, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               InitiatorCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               TargetCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ClashLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::ShouldClash(class ATBLCharacter* InitiatorCharacter, class ATBLCharacter* TargetCharacter, const struct FVector& ClashLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ShouldClash");
		
		ATBLCharacter_ShouldClash_Params params {};
		params.InitiatorCharacter = InitiatorCharacter;
		params.TargetCharacter = TargetCharacter;
		params.ClashLocation = ClashLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671FC0
	 * 		Name   -> Function TBL.TBLCharacter.ShouldBlockCharacter
	 * 		Flags  -> (Final, Native, Public, HasOutParms, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FActionContext                              Context                                                    (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::ShouldBlockCharacter(class ATBLCharacter* AttackingCharacter, class ATBLCharacter* HitCharacter, struct FActionContext* Context)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ShouldBlockCharacter");
		
		ATBLCharacter_ShouldBlockCharacter_Params params {};
		params.AttackingCharacter = AttackingCharacter;
		params.HitCharacter = HitCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Context != nullptr)
			*Context = params.Context;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671EC0
	 * 		Name   -> Function TBL.TBLCharacter.ShouldAttackBeCountered
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              AttackingItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              DefenderItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::ShouldAttackBeCountered(class ATBLCharacter* AttackingCharacter, class AInventoryItem* AttackingItem, class AInventoryItem* DefenderItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ShouldAttackBeCountered");
		
		ATBLCharacter_ShouldAttackBeCountered_Params params {};
		params.AttackingCharacter = AttackingCharacter;
		params.AttackingItem = AttackingItem;
		params.DefenderItem = DefenderItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FFB0
	 * 		Name   -> Function TBL.TBLCharacter.SetupAI
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLCharacter::SetupAI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetupAI");
		
		ATBLCharacter_SetupAI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671EA0
	 * 		Name   -> Function TBL.TBLCharacter.SetThirdPersonDeathCamera
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::SetThirdPersonDeathCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetThirdPersonDeathCamera");
		
		ATBLCharacter_SetThirdPersonDeathCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671E20
	 * 		Name   -> Function TBL.TBLCharacter.SetSpectatingPawn
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLSpectatorPawn*                           SpectatingPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::SetSpectatingPawn(class ATBLSpectatorPawn* SpectatingPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetSpectatingPawn");
		
		ATBLCharacter_SetSpectatingPawn_Params params {};
		params.SpectatingPawn = SpectatingPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671E00
	 * 		Name   -> Function TBL.TBLCharacter.SetRagdollPhysics
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::SetRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetRagdollPhysics");
		
		ATBLCharacter_SetRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671D70
	 * 		Name   -> Function TBL.TBLCharacter.SetPlayerDrunk
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsDrunk                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::SetPlayerDrunk(bool IsDrunk)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetPlayerDrunk");
		
		ATBLCharacter_SetPlayerDrunk_Params params {};
		params.IsDrunk = IsDrunk;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671CD0
	 * 		Name   -> Function TBL.TBLCharacter.SetIsInitialAutorun
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::SetIsInitialAutorun()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetIsInitialAutorun");
		
		ATBLCharacter_SetIsInitialAutorun_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671BB0
	 * 		Name   -> Function TBL.TBLCharacter.SetIgnoreAI
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bNewIgnoreAI                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::SetIgnoreAI(bool bNewIgnoreAI)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetIgnoreAI");
		
		ATBLCharacter_SetIgnoreAI_Params params {};
		params.bNewIgnoreAI = bNewIgnoreAI;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671B90
	 * 		Name   -> Function TBL.TBLCharacter.SetFirstPersonDeathCamera
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::SetFirstPersonDeathCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetFirstPersonDeathCamera");
		
		ATBLCharacter_SetFirstPersonDeathCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671AE0
	 * 		Name   -> Function TBL.TBLCharacter.SetDeathAnimationParameters
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::SetDeathAnimationParameters(const struct FDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetDeathAnimationParameters");
		
		ATBLCharacter_SetDeathAnimationParameters_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671A50
	 * 		Name   -> Function TBL.TBLCharacter.SetCinematicRestrictedControl
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bRestricted                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::SetCinematicRestrictedControl(bool bRestricted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.SetCinematicRestrictedControl");
		
		ATBLCharacter_SetCinematicRestrictedControl_Params params {};
		params.bRestricted = bRestricted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671950
	 * 		Name   -> Function TBL.TBLCharacter.ServerUseTornOffItem
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UClass*                                      ItemClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        TornOffName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerUseTornOffItem(class UClass* ItemClass, const class FName& TornOffName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerUseTornOffItem");
		
		ATBLCharacter_ServerUseTornOffItem_Params params {};
		params.ItemClass = ItemClass;
		params.TornOffName = TornOffName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671890
	 * 		Name   -> Function TBL.TBLCharacter.ServerUseHeldStart
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerUseHeldStart(class UInteractableComponent* Interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerUseHeldStart");
		
		ATBLCharacter_ServerUseHeldStart_Params params {};
		params.Interactable = Interactable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016717D0
	 * 		Name   -> Function TBL.TBLCharacter.ServerUseHeldRelease
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerUseHeldRelease(class UInteractableComponent* Interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerUseHeldRelease");
		
		ATBLCharacter_ServerUseHeldRelease_Params params {};
		params.Interactable = Interactable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671710
	 * 		Name   -> Function TBL.TBLCharacter.ServerUseHeldComplete
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerUseHeldComplete(class UInteractableComponent* Interactable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerUseHeldComplete");
		
		ATBLCharacter_ServerUseHeldComplete_Params params {};
		params.Interactable = Interactable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671610
	 * 		Name   -> Function TBL.TBLCharacter.ServerUse
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UInteractableComponent*                      Interactable                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsAutoPickup                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerUse(class UInteractableComponent* Interactable, bool bIsAutoPickup)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerUse");
		
		ATBLCharacter_ServerUse_Params params {};
		params.Interactable = Interactable;
		params.bIsAutoPickup = bIsAutoPickup;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016714E0
	 * 		Name   -> Function TBL.TBLCharacter.ServerTrapEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		TBL_ETrapEventResult                               Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     TrapObject                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerTrapEvent(TBL_ETrapEventResult Result, class UObject* TrapObject, float ClientTimeStamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerTrapEvent");
		
		ATBLCharacter_ServerTrapEvent_Params params {};
		params.Result = Result;
		params.TrapObject = TrapObject;
		params.ClientTimeStamp = ClientTimeStamp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671420
	 * 		Name   -> Function TBL.TBLCharacter.ServerSetFireSource
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		class UFireSourceComponent*                        NewFireSource                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerSetFireSource(class UFireSourceComponent* NewFireSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerSetFireSource");
		
		ATBLCharacter_ServerSetFireSource_Params params {};
		params.NewFireSource = NewFireSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671260
	 * 		Name   -> Function TBL.TBLCharacter.ServerPlayEmote
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		unsigned char                                      EmoteRowNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioPersonalityType                          PersonalityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      EmotePlayingSeqNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      bIsOverrideEmote                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      EmoteType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerPlayEmote(unsigned char EmoteRowNum, TBL_EAudioPersonalityType PersonalityType, unsigned char EmotePlayingSeqNum, unsigned char bIsOverrideEmote, unsigned char EmoteType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerPlayEmote");
		
		ATBLCharacter_ServerPlayEmote_Params params {};
		params.EmoteRowNum = EmoteRowNum;
		params.PersonalityType = PersonalityType;
		params.EmotePlayingSeqNum = EmotePlayingSeqNum;
		params.bIsOverrideEmote = bIsOverrideEmote;
		params.EmoteType = EmoteType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671210
	 * 		Name   -> Function TBL.TBLCharacter.ServerPlayChickenEmote
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLCharacter::ServerPlayChickenEmote()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerPlayChickenEmote");
		
		ATBLCharacter_ServerPlayChickenEmote_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671110
	 * 		Name   -> Function TBL.TBLCharacter.ServerHitWorld
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FHitWorldParams                             Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ServerHitWorld(const struct FHitWorldParams& Params, float ClientTimeStamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerHitWorld");
		
		ATBLCharacter_ServerHitWorld_Params params {};
		params.Params = Params;
		params.ClientTimeStamp = ClientTimeStamp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016710C0
	 * 		Name   -> Function TBL.TBLCharacter.ServerHandleOnCustomizationJobsEmptied
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLCharacter::ServerHandleOnCustomizationJobsEmptied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerHandleOnCustomizationJobsEmptied");
		
		ATBLCharacter_ServerHandleOnCustomizationJobsEmptied_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01671070
	 * 		Name   -> Function TBL.TBLCharacter.ServerEnterPostGameState
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void ATBLCharacter::ServerEnterPostGameState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerEnterPostGameState");
		
		ATBLCharacter_ServerEnterPostGameState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01649D00
	 * 		Name   -> Function TBL.TBLCharacter.ServerDismountPressed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 */
	void ATBLCharacter::ServerDismountPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ServerDismountPressed");
		
		ATBLCharacter_ServerDismountPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670FF0
	 * 		Name   -> Function TBL.TBLCharacter.Revive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               DownedCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::Revive(class ATBLCharacter* DownedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.Revive");
		
		ATBLCharacter_Revive_Params params {};
		params.DownedCharacter = DownedCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670F70
	 * 		Name   -> Function TBL.TBLCharacter.RemoveEmoteFromQueue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                EmoteId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::RemoveEmoteFromQueue(int EmoteId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.RemoveEmoteFromQueue");
		
		ATBLCharacter_RemoveEmoteFromQueue_Params params {};
		params.EmoteId = EmoteId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670EF0
	 * 		Name   -> Function TBL.TBLCharacter.RemoveConstructableActor
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::RemoveConstructableActor(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.RemoveConstructableActor");
		
		ATBLCharacter_RemoveConstructableActor_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670EB0
	 * 		Name   -> Function TBL.TBLCharacter.PushRespawnState
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::PushRespawnState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PushRespawnState");
		
		ATBLCharacter_PushRespawnState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670DF0
	 * 		Name   -> Function TBL.TBLCharacter.ProcessTurnAndLookInputRate
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		CoreUObject_EAxis                                  Axis                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Rate                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ProcessTurnAndLookInputRate(CoreUObject_EAxis Axis, float Rate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ProcessTurnAndLookInputRate");
		
		ATBLCharacter_ProcessTurnAndLookInputRate_Params params {};
		params.Axis = Axis;
		params.Rate = Rate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670D30
	 * 		Name   -> Function TBL.TBLCharacter.ProcessTurnAndLookInput
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		CoreUObject_EAxis                                  Axis                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ProcessTurnAndLookInput(CoreUObject_EAxis Axis, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ProcessTurnAndLookInput");
		
		ATBLCharacter_ProcessTurnAndLookInput_Params params {};
		params.Axis = Axis;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670C00
	 * 		Name   -> Function TBL.TBLCharacter.PlayLowPriorityCharacterActionEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, Const)
	 * Parameters:
	 * 		struct FSoundSwitchEntry                           SoundSwitch                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::PlayLowPriorityCharacterActionEvent(const struct FSoundSwitchEntry& SoundSwitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayLowPriorityCharacterActionEvent");
		
		ATBLCharacter_PlayLowPriorityCharacterActionEvent_Params params {};
		params.SoundSwitch = SoundSwitch;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670AD0
	 * 		Name   -> Function TBL.TBLCharacter.PlayHighPriorityCharacterActionEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSoundSwitchEntry                           SoundSwitch                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::PlayHighPriorityCharacterActionEvent(const struct FSoundSwitchEntry& SoundSwitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayHighPriorityCharacterActionEvent");
		
		ATBLCharacter_PlayHighPriorityCharacterActionEvent_Params params {};
		params.SoundSwitch = SoundSwitch;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670A50
	 * 		Name   -> Function TBL.TBLCharacter.PlayEmoteFromServer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EmoteName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::PlayEmoteFromServer(const class FName& EmoteName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayEmoteFromServer");
		
		ATBLCharacter_PlayEmoteFromServer_Params params {};
		params.EmoteName = EmoteName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670840
	 * 		Name   -> Function TBL.TBLCharacter.PlayEmote
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FPersonalityEmoteTableRow                   Emote                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_ERadialVOMenuPage                              Page                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::PlayEmote(const struct FPersonalityEmoteTableRow& Emote, TBL_ERadialVOMenuPage Page)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayEmote");
		
		ATBLCharacter_PlayEmote_Params params {};
		params.Emote = Emote;
		params.Page = Page;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670820
	 * 		Name   -> Function TBL.TBLCharacter.PlayChickenEmote
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::PlayChickenEmote()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayChickenEmote");
		
		ATBLCharacter_PlayChickenEmote_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016706A0
	 * 		Name   -> Function TBL.TBLCharacter.PlayCharacterActionEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, Const)
	 * Parameters:
	 * 		struct FSoundSwitchEntry                           SoundSwitch                                                (ConstParm, Parm, NativeAccessSpecifierPublic)
	 * 		bool                                               IsLocalPlayerInvolved                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::PlayCharacterActionEvent(const struct FSoundSwitchEntry& SoundSwitch, bool IsLocalPlayerInvolved)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayCharacterActionEvent");
		
		ATBLCharacter_PlayCharacterActionEvent_Params params {};
		params.SoundSwitch = SoundSwitch;
		params.IsLocalPlayerInvolved = IsLocalPlayerInvolved;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016705D0
	 * 		Name   -> Function TBL.TBLCharacter.PlayAutoVOFromServer
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioAutoVOType                               AutoVoType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               SkipLocalPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::PlayAutoVOFromServer(TBL_EAudioAutoVOType AutoVoType, bool SkipLocalPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayAutoVOFromServer");
		
		ATBLCharacter_PlayAutoVOFromServer_Params params {};
		params.AutoVoType = AutoVoType;
		params.SkipLocalPlayer = SkipLocalPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670550
	 * 		Name   -> Function TBL.TBLCharacter.PlayAutoVO
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioAutoVOType                               AutoVoType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::PlayAutoVO(TBL_EAudioAutoVOType AutoVoType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PlayAutoVO");
		
		ATBLCharacter_PlayAutoVO_Params params {};
		params.AutoVoType = AutoVoType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016704C0
	 * 		Name   -> Function TBL.TBLCharacter.PauseCharacter
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bPaused                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::PauseCharacter(bool bPaused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.PauseCharacter");
		
		ATBLCharacter_PauseCharacter_Params params {};
		params.bPaused = bPaused;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670440
	 * 		Name   -> Function TBL.TBLCharacter.OnTeamChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLTeam*                                    OwnerTeam                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnTeamChanged(class ATBLTeam* OwnerTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnTeamChanged");
		
		ATBLCharacter_OnTeamChanged_Params params {};
		params.OwnerTeam = OwnerTeam;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670400
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_SpecialItemCharge
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::OnRep_SpecialItemCharge()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_SpecialItemCharge");
		
		ATBLCharacter_OnRep_SpecialItemCharge_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016703E0
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_SpawnedAtSpawnComp
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::OnRep_SpawnedAtSpawnComp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_SpawnedAtSpawnComp");
		
		ATBLCharacter_OnRep_SpawnedAtSpawnComp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016703C0
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_ShouldCharacterBeHidden
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::OnRep_ShouldCharacterBeHidden()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_ShouldCharacterBeHidden");
		
		ATBLCharacter_OnRep_ShouldCharacterBeHidden_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670340
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_RandomSeed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		int                                                PreviousRandomInt                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnRep_RandomSeed(int PreviousRandomInt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_RandomSeed");
		
		ATBLCharacter_OnRep_RandomSeed_Params params {};
		params.PreviousRandomInt = PreviousRandomInt;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670320
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_LockMeshRotation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::OnRep_LockMeshRotation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_LockMeshRotation");
		
		ATBLCharacter_OnRep_LockMeshRotation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670300
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_InventorySlots
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::OnRep_InventorySlots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_InventorySlots");
		
		ATBLCharacter_OnRep_InventorySlots_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016702E0
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_CinematicRestrictedControl
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLCharacter::OnRep_CinematicRestrictedControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_CinematicRestrictedControl");
		
		ATBLCharacter_OnRep_CinematicRestrictedControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016702C0
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_BeingRevivedBy
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::OnRep_BeingRevivedBy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_BeingRevivedBy");
		
		ATBLCharacter_OnRep_BeingRevivedBy_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01670240
	 * 		Name   -> Function TBL.TBLCharacter.OnRep_AttachToProjectile
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Projectile                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnRep_AttachToProjectile(class AInventoryItem* Projectile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnRep_AttachToProjectile");
		
		ATBLCharacter_OnRep_AttachToProjectile_Params params {};
		params.Projectile = Projectile;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016701C0
	 * 		Name   -> Function TBL.TBLCharacter.OnMeleeHitSuccess
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnMeleeHitSuccess(class AActor* HitActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnMeleeHitSuccess");
		
		ATBLCharacter_OnMeleeHitSuccess_Params params {};
		params.HitActor = HitActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016700E0
	 * 		Name   -> Function TBL.TBLCharacter.OnKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnKilled");
		
		ATBLCharacter_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166FF80
	 * 		Name   -> Function TBL.TBLCharacter.OnInteractableUsePawnChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnInteractableUsePawnChanged(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnInteractableUsePawnChanged");
		
		ATBLCharacter_OnInteractableUsePawnChanged_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacter.OnInitializeAltWeightsState
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLCharacter::OnInitializeAltWeightsState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnInitializeAltWeightsState");
		
		ATBLCharacter_OnInitializeAltWeightsState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166FED0
	 * 		Name   -> Function TBL.TBLCharacter.OnDamageTaken
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnDamageTaken(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnDamageTaken");
		
		ATBLCharacter_OnDamageTaken_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacter.OnCustomized
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLCharacter::OnCustomized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnCustomized");
		
		ATBLCharacter_OnCustomized_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166FD40
	 * 		Name   -> Function TBL.TBLCharacter.OnConstructableActorKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnConstructableActorKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnConstructableActorKilled");
		
		ATBLCharacter_OnConstructableActorKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166FCC0
	 * 		Name   -> Function TBL.TBLCharacter.OnConstructableActorDestroyed
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnConstructableActorDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnConstructableActorDestroyed");
		
		ATBLCharacter_OnConstructableActorDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166FAB0
	 * 		Name   -> Function TBL.TBLCharacter.OnComponentOverlap
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  OverlapInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnComponentOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnComponentOverlap");
		
		ATBLCharacter_OnComponentOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.Other = Other;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.OverlapInfo = OverlapInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166F8E0
	 * 		Name   -> Function TBL.TBLCharacter.OnComponentHit
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         HitComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnComponentHit");
		
		ATBLCharacter_OnComponentHit_Params params {};
		params.HitComponent = HitComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166F610
	 * 		Name   -> Function TBL.TBLCharacter.OnCombatStateEnd
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnCombatStateEnd(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnCombatStateEnd");
		
		ATBLCharacter_OnCombatStateEnd_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166F030
	 * 		Name   -> Function TBL.TBLCharacter.OnCombatStateBegin
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnCombatStateBegin(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnCombatStateBegin");
		
		ATBLCharacter_OnCombatStateBegin_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EF80
	 * 		Name   -> Function TBL.TBLCharacter.OnCausedDamage
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnCausedDamage(const struct FDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnCausedDamage");
		
		ATBLCharacter_OnCausedDamage_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EB80
	 * 		Name   -> Function TBL.TBLCharacter.OnAttachedRagdollActorDestroyed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnAttachedRagdollActorDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnAttachedRagdollActorDestroyed");
		
		ATBLCharacter_OnAttachedRagdollActorDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166EAC0
	 * 		Name   -> Function TBL.TBLCharacter.OnApplyCondition
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::OnApplyCondition(class AActor* Actor, TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.OnApplyCondition");
		
		ATBLCharacter_OnApplyCondition_Params params {};
		params.Actor = Actor;
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E930
	 * 		Name   -> Function TBL.TBLCharacter.NetMulticastFastSharedReplication
	 * 		Flags  -> (Net, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		struct FFastSharedProperties_TBLCharacter          Properties                                                 (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::NetMulticastFastSharedReplication(const struct FFastSharedProperties_TBLCharacter& Properties)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.NetMulticastFastSharedReplication");
		
		ATBLCharacter_NetMulticastFastSharedReplication_Params params {};
		params.Properties = Properties;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E6D0
	 * 		Name   -> Function TBL.TBLCharacter.LoserEnterPostGameState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::LoserEnterPostGameState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.LoserEnterPostGameState");
		
		ATBLCharacter_LoserEnterPostGameState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E490
	 * 		Name   -> Function TBL.TBLCharacter.KillWithHitParams
	 * 		Flags  -> (Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EKillReason                                    KillReason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSwitchedTeamsInLoadoutVolume                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Killer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::KillWithHitParams(TBL_EKillReason KillReason, bool bSwitchedTeamsInLoadoutVolume, const struct FHitResult& HitResult, const struct FVector& HitDirection, class AActor* Killer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.KillWithHitParams");
		
		ATBLCharacter_KillWithHitParams_Params params {};
		params.KillReason = KillReason;
		params.bSwitchedTeamsInLoadoutVolume = bSwitchedTeamsInLoadoutVolume;
		params.HitResult = HitResult;
		params.HitDirection = HitDirection;
		params.Killer = Killer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E380
	 * 		Name   -> Function TBL.TBLCharacter.Kill
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EKillReason                                    KillReason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSwitchedTeamsInLoadoutVolume                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Killer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::Kill(TBL_EKillReason KillReason, bool bSwitchedTeamsInLoadoutVolume, class AActor* Killer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.Kill");
		
		ATBLCharacter_Kill_Params params {};
		params.KillReason = KillReason;
		params.bSwitchedTeamsInLoadoutVolume = bSwitchedTeamsInLoadoutVolume;
		params.Killer = Killer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E350
	 * 		Name   -> Function TBL.TBLCharacter.IsSprinting
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLCharacter::IsSprinting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsSprinting");
		
		ATBLCharacter_IsSprinting_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E320
	 * 		Name   -> Function TBL.TBLCharacter.IsSpecialPawnClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::IsSpecialPawnClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsSpecialPawnClass");
		
		ATBLCharacter_IsSpecialPawnClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E2F0
	 * 		Name   -> Function TBL.TBLCharacter.IsSpawnFadeOutEnabled
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLCharacter::IsSpawnFadeOutEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsSpawnFadeOutEnabled");
		
		ATBLCharacter_IsSpawnFadeOutEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E2C0
	 * 		Name   -> Function TBL.TBLCharacter.IsRagdollCustomTick
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLCharacter::IsRagdollCustomTick()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsRagdollCustomTick");
		
		ATBLCharacter_IsRagdollCustomTick_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E280
	 * 		Name   -> Function TBL.TBLCharacter.IsPawnSubclass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::IsPawnSubclass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsPawnSubclass");
		
		ATBLCharacter_IsPawnSubclass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E250
	 * 		Name   -> Function TBL.TBLCharacter.IsInterpingToMountLocation
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::IsInterpingToMountLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsInterpingToMountLocation");
		
		ATBLCharacter_IsInterpingToMountLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E200
	 * 		Name   -> Function TBL.TBLCharacter.IsInRagdoll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::IsInRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsInRagdoll");
		
		ATBLCharacter_IsInRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E030
	 * 		Name   -> Function TBL.TBLCharacter.IsInParryView
	 * 		Flags  -> (Native, Public, HasOutParms, HasDefaults, Const)
	 * Parameters:
	 * 		class UParryComponent*                             ParryComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  BoxTransform                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     BoxExtents                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              IgnoreParryDepth                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::IsInParryView(class UParryComponent* ParryComp, const struct FTransform& BoxTransform, const struct FVector& BoxExtents, float IgnoreParryDepth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsInParryView");
		
		ATBLCharacter_IsInParryView_Params params {};
		params.ParryComp = ParryComp;
		params.BoxTransform = BoxTransform;
		params.BoxExtents = BoxExtents;
		params.IgnoreParryDepth = IgnoreParryDepth;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166E230
	 * 		Name   -> Function TBL.TBLCharacter.IsInitialAutorun
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLCharacter::IsInitialAutorun()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsInitialAutorun");
		
		ATBLCharacter_IsInitialAutorun_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DFA0
	 * 		Name   -> Function TBL.TBLCharacter.IsHoldingAltAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              Tolerance                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::IsHoldingAltAttack(float Tolerance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsHoldingAltAttack");
		
		ATBLCharacter_IsHoldingAltAttack_Params params {};
		params.Tolerance = Tolerance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DF70
	 * 		Name   -> Function TBL.TBLCharacter.IsFollowAnimationEnabled
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLCharacter::IsFollowAnimationEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsFollowAnimationEnabled");
		
		ATBLCharacter_IsFollowAnimationEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DE00
	 * 		Name   -> Function TBL.TBLCharacter.IsFacingTarget
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FFacingTargetParams                         Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::IsFacingTarget(const struct FHitResult& Hit, const struct FFacingTargetParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsFacingTarget");
		
		ATBLCharacter_IsFacingTarget_Params params {};
		params.Hit = Hit;
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DDD0
	 * 		Name   -> Function TBL.TBLCharacter.IsCinematicRestrictedControl
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLCharacter::IsCinematicRestrictedControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsCinematicRestrictedControl");
		
		ATBLCharacter_IsCinematicRestrictedControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DDA0
	 * 		Name   -> Function TBL.TBLCharacter.IsCharacterPaused
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLCharacter::IsCharacterPaused()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsCharacterPaused");
		
		ATBLCharacter_IsCharacterPaused_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DD20
	 * 		Name   -> Function TBL.TBLCharacter.IsCharacterClassArchetype
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECharacterClass                                Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::STATIC_IsCharacterClassArchetype(TBL_ECharacterClass Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsCharacterClassArchetype");
		
		ATBLCharacter_IsCharacterClassArchetype_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DC90
	 * 		Name   -> Function TBL.TBLCharacter.IsBlocking
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::IsBlocking(class ATBLCharacter* AttackingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsBlocking");
		
		ATBLCharacter_IsBlocking_Params params {};
		params.AttackingCharacter = AttackingCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DC60
	 * 		Name   -> Function TBL.TBLCharacter.IsArrowCameraEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::IsArrowCameraEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.IsArrowCameraEnabled");
		
		ATBLCharacter_IsArrowCameraEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DBE0
	 * 		Name   -> Function TBL.TBLCharacter.InterruptUse
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        NextCombatState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::InterruptUse(const class FName& NextCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.InterruptUse");
		
		ATBLCharacter_InterruptUse_Params params {};
		params.NextCombatState = NextCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DB60
	 * 		Name   -> Function TBL.TBLCharacter.InitiateAbilityByName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        AbilityName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::InitiateAbilityByName(const class FName& AbilityName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.InitiateAbilityByName");
		
		ATBLCharacter_InitiateAbilityByName_Params params {};
		params.AbilityName = AbilityName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166DA00
	 * 		Name   -> Function TBL.TBLCharacter.HitWorldWithStats
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bParried                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::HitWorldWithStats(const struct FHitResult& Hit, bool bParried)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.HitWorldWithStats");
		
		ATBLCharacter_HitWorldWithStats_Params params {};
		params.Hit = Hit;
		params.bParried = bParried;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D920
	 * 		Name   -> Function TBL.TBLCharacter.HitWorld
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::HitWorld(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.HitWorld");
		
		ATBLCharacter_HitWorld_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D7F0
	 * 		Name   -> Function TBL.TBLCharacter.HitClash
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OtherCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::HitClash(struct FHitResult* Hit, class ATBLCharacter* OtherCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.HitClash");
		
		ATBLCharacter_HitClash_Params params {};
		params.OtherCharacter = OtherCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D760
	 * 		Name   -> Function TBL.TBLCharacter.HideCharacterAndEquipment
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bHide                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::HideCharacterAndEquipment(bool bHide)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.HideCharacterAndEquipment");
		
		ATBLCharacter_HideCharacterAndEquipment_Params params {};
		params.bHide = bHide;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D6D0
	 * 		Name   -> Function TBL.TBLCharacter.HasCondition
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::HasCondition(TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.HasCondition");
		
		ATBLCharacter_HasCondition_Params params {};
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D6B0
	 * 		Name   -> Function TBL.TBLCharacter.HandleOnCustomizationJobsEmptied
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLCharacter::HandleOnCustomizationJobsEmptied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.HandleOnCustomizationJobsEmptied");
		
		ATBLCharacter_HandleOnCustomizationJobsEmptied_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D650
	 * 		Name   -> Function TBL.TBLCharacter.GetThirdPersonCameraParams
	 * 		Flags  -> (Final, Native, Public)
	 */
	struct FThirdPersonCameraParams ATBLCharacter::GetThirdPersonCameraParams()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetThirdPersonCameraParams");
		
		ATBLCharacter_GetThirdPersonCameraParams_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D630
	 * 		Name   -> Function TBL.TBLCharacter.GetSpecialItemAbility
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class USpecialItemAbility* ATBLCharacter::GetSpecialItemAbility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetSpecialItemAbility");
		
		ATBLCharacter_GetSpecialItemAbility_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D5F0
	 * 		Name   -> Function TBL.TBLCharacter.GetPersonalityType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EAudioPersonalityType ATBLCharacter::GetPersonalityType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetPersonalityType");
		
		ATBLCharacter_GetPersonalityType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D550
	 * 		Name   -> Function TBL.TBLCharacter.GetPawnMesh
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               WantFirstPerson                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USkeletalMeshComponent* ATBLCharacter::GetPawnMesh(bool WantFirstPerson)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetPawnMesh");
		
		ATBLCharacter_GetPawnMesh_Params params {};
		params.WantFirstPerson = WantFirstPerson;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D530
	 * 		Name   -> Function TBL.TBLCharacter.GetPawnClassType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_ECharacterClass ATBLCharacter::GetPawnClassType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetPawnClassType");
		
		ATBLCharacter_GetPawnClassType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D4F0
	 * 		Name   -> Function TBL.TBLCharacter.GetPawnClassArchetype
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_ECharacterClass ATBLCharacter::GetPawnClassArchetype()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetPawnClassArchetype");
		
		ATBLCharacter_GetPawnClassArchetype_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D470
	 * 		Name   -> Function TBL.TBLCharacter.GetParryComponents
	 * 		Flags  -> (Native, Public)
	 */
	TArray<class UParryComponent*> ATBLCharacter::GetParryComponents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetParryComponents");
		
		ATBLCharacter_GetParryComponents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D450
	 * 		Name   -> Function TBL.TBLCharacter.GetLastController
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	class AController* ATBLCharacter::GetLastController()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetLastController");
		
		ATBLCharacter_GetLastController_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D420
	 * 		Name   -> Function TBL.TBLCharacter.GetInventory
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UInventory* ATBLCharacter::GetInventory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetInventory");
		
		ATBLCharacter_GetInventory_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D400
	 * 		Name   -> Function TBL.TBLCharacter.GetFocusedInteractable
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UInteractableComponent* ATBLCharacter::GetFocusedInteractable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetFocusedInteractable");
		
		ATBLCharacter_GetFocusedInteractable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D3C0
	 * 		Name   -> Function TBL.TBLCharacter.GetFacingDirection
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FVector ATBLCharacter::GetFacingDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetFacingDirection");
		
		ATBLCharacter_GetFacingDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D390
	 * 		Name   -> Function TBL.TBLCharacter.GetEquippedWeapon
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class AInventoryItem* ATBLCharacter::GetEquippedWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetEquippedWeapon");
		
		ATBLCharacter_GetEquippedWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D300
	 * 		Name   -> Function TBL.TBLCharacter.GetEquippedItemByHand
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EEquippedHand                                  Hand                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* ATBLCharacter::GetEquippedItemByHand(TBL_EEquippedHand Hand)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetEquippedItemByHand");
		
		ATBLCharacter_GetEquippedItemByHand_Params params {};
		params.Hand = Hand;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D280
	 * 		Name   -> Function TBL.TBLCharacter.GetEquippedInventoryItems
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TArray<class AInventoryItem*> ATBLCharacter::GetEquippedInventoryItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetEquippedInventoryItems");
		
		ATBLCharacter_GetEquippedInventoryItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D150
	 * 		Name   -> Function TBL.TBLCharacter.GetDeathTime
	 * 		Flags  -> (Final, Native, Public)
	 */
	float ATBLCharacter::GetDeathTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetDeathTime");
		
		ATBLCharacter_GetDeathTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D120
	 * 		Name   -> Function TBL.TBLCharacter.GetCurrentMesh
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class USkeletalMeshComponent* ATBLCharacter::GetCurrentMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCurrentMesh");
		
		ATBLCharacter_GetCurrentMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D0A0
	 * 		Name   -> Function TBL.TBLCharacter.GetCurrentAttackingWeapons
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TArray<class AInventoryItem*> ATBLCharacter::GetCurrentAttackingWeapons()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCurrentAttackingWeapons");
		
		ATBLCharacter_GetCurrentAttackingWeapons_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166D070
	 * 		Name   -> Function TBL.TBLCharacter.GetCombatStateComponent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class UCombatStateComponent* ATBLCharacter::GetCombatStateComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCombatStateComponent");
		
		ATBLCharacter_GetCombatStateComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CFF0
	 * 		Name   -> Function TBL.TBLCharacter.GetCharacterClassType
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECharacterClass                                Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_ECharacterClassType ATBLCharacter::STATIC_GetCharacterClassType(TBL_ECharacterClass Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCharacterClassType");
		
		ATBLCharacter_GetCharacterClassType_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CEF0
	 * 		Name   -> Function TBL.TBLCharacter.GetCharacterClassAudioSwitch
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioClassType                                ClassType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString ATBLCharacter::STATIC_GetCharacterClassAudioSwitch(TBL_EAudioClassType ClassType, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCharacterClassAudioSwitch");
		
		ATBLCharacter_GetCharacterClassAudioSwitch_Params params {};
		params.ClassType = ClassType;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CE70
	 * 		Name   -> Function TBL.TBLCharacter.GetCharacterClassArchetype
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECharacterClass                                Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_ECharacterClass ATBLCharacter::STATIC_GetCharacterClassArchetype(TBL_ECharacterClass Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCharacterClassArchetype");
		
		ATBLCharacter_GetCharacterClassArchetype_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CE40
	 * 		Name   -> Function TBL.TBLCharacter.GetCharacterAudioType
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EAudioClassType ATBLCharacter::GetCharacterAudioType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCharacterAudioType");
		
		ATBLCharacter_GetCharacterAudioType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CE00
	 * 		Name   -> Function TBL.TBLCharacter.GetCenterPlayArea
	 * 		Flags  -> (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FVector ATBLCharacter::GetCenterPlayArea()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCenterPlayArea");
		
		ATBLCharacter_GetCenterPlayArea_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CDC0
	 * 		Name   -> Function TBL.TBLCharacter.GetCameraSocketLocation
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FVector ATBLCharacter::GetCameraSocketLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetCameraSocketLocation");
		
		ATBLCharacter_GetCameraSocketLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CD30
	 * 		Name   -> Function TBL.TBLCharacter.GetBlockingInventoryItem
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		class ATBLCharacter*                               AttackingCharacter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* ATBLCharacter::GetBlockingInventoryItem(class ATBLCharacter* AttackingCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetBlockingInventoryItem");
		
		ATBLCharacter_GetBlockingInventoryItem_Params params {};
		params.AttackingCharacter = AttackingCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CC50
	 * 		Name   -> Function TBL.TBLCharacter.GetBattlecryActionEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UAkAudioEvent*                               StartEvent                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               StopEvent                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::GetBattlecryActionEvent(class UAkAudioEvent** StartEvent, class UAkAudioEvent** StopEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetBattlecryActionEvent");
		
		ATBLCharacter_GetBattlecryActionEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (StartEvent != nullptr)
			*StartEvent = params.StartEvent;
		if (StopEvent != nullptr)
			*StopEvent = params.StopEvent;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CBC0
	 * 		Name   -> Function TBL.TBLCharacter.GetAutoVODistanceSqrdByType
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EAudioAutoVOType                               Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ATBLCharacter::GetAutoVODistanceSqrdByType(TBL_EAudioAutoVOType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetAutoVODistanceSqrdByType");
		
		ATBLCharacter_GetAutoVODistanceSqrdByType_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CB90
	 * 		Name   -> Function TBL.TBLCharacter.GetAnimationPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float ATBLCharacter::GetAnimationPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetAnimationPercent");
		
		ATBLCharacter_GetAnimationPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C9A0
	 * 		Name   -> Function TBL.TBLCharacter.GetAIObjectiveDebugString
	 * 		Flags  -> (Final, Native, Public)
	 */
	class FString ATBLCharacter::GetAIObjectiveDebugString()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetAIObjectiveDebugString");
		
		ATBLCharacter_GetAIObjectiveDebugString_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C920
	 * 		Name   -> Function TBL.TBLCharacter.GetAIObjectiveActors
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TArray<class AActor*> ATBLCharacter::GetAIObjectiveActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetAIObjectiveActors");
		
		ATBLCharacter_GetAIObjectiveActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CB00
	 * 		Name   -> Function TBL.TBLCharacter.GetActorWhoAppliedCondition
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EConditionType                                 ConditionApplied                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* ATBLCharacter::GetActorWhoAppliedCondition(TBL_EConditionType ConditionApplied)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetActorWhoAppliedCondition");
		
		ATBLCharacter_GetActorWhoAppliedCondition_Params params {};
		params.ConditionApplied = ConditionApplied;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166CA20
	 * 		Name   -> Function TBL.TBLCharacter.GetActionEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UAkAudioEvent*                               StartEvent                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAkAudioEvent*                               StopEvent                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::GetActionEvent(class UAkAudioEvent** StartEvent, class UAkAudioEvent** StopEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.GetActionEvent");
		
		ATBLCharacter_GetActionEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (StartEvent != nullptr)
			*StartEvent = params.StartEvent;
		if (StopEvent != nullptr)
			*StopEvent = params.StopEvent;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C8E0
	 * 		Name   -> Function TBL.TBLCharacter.FellOutOfWorldTimer
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLCharacter::FellOutOfWorldTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.FellOutOfWorldTimer");
		
		ATBLCharacter_FellOutOfWorldTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C7D0
	 * 		Name   -> Function TBL.TBLCharacter.DoKeyEvent
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		Engine_EInputEvent                                 KeyEvent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::DoKeyEvent(const class FName& ActionName, Engine_EInputEvent KeyEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DoKeyEvent");
		
		ATBLCharacter_DoKeyEvent_Params params {};
		params.ActionName = ActionName;
		params.KeyEvent = KeyEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C700
	 * 		Name   -> Function TBL.TBLCharacter.DoKeyAxis
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AxisValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::DoKeyAxis(const class FName& ActionName, float AxisValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DoKeyAxis");
		
		ATBLCharacter_DoKeyAxis_Params params {};
		params.ActionName = ActionName;
		params.AxisValue = AxisValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C8A0
	 * 		Name   -> Function TBL.TBLCharacter.DoesCountTowardKillsAndKnockdowns
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::DoesCountTowardKillsAndKnockdowns()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DoesCountTowardKillsAndKnockdowns");
		
		ATBLCharacter_DoesCountTowardKillsAndKnockdowns_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C680
	 * 		Name   -> Function TBL.TBLCharacter.DebugDrawShield
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLPlayerController*                        DebugController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::DebugDrawShield(class ATBLPlayerController* DebugController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DebugDrawShield");
		
		ATBLCharacter_DebugDrawShield_Params params {};
		params.DebugController = DebugController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C600
	 * 		Name   -> Function TBL.TBLCharacter.DebugDrawParryBox
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::DebugDrawParryBox(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DebugDrawParryBox");
		
		ATBLCharacter_DebugDrawParryBox_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C580
	 * 		Name   -> Function TBL.TBLCharacter.DebugDrawCamera
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::DebugDrawCamera(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DebugDrawCamera");
		
		ATBLCharacter_DebugDrawCamera_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C560
	 * 		Name   -> Function TBL.TBLCharacter.DeathAnimationOverlap
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLCharacter::DeathAnimationOverlap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DeathAnimationOverlap");
		
		ATBLCharacter_DeathAnimationOverlap_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C360
	 * 		Name   -> Function TBL.TBLCharacter.DamageWithHitParams
	 * 		Flags  -> (Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLoseLimbCheat                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::DamageWithHitParams(float Damage, const struct FHitResult& HitResult, const struct FVector& HitDirection, bool bLoseLimbCheat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.DamageWithHitParams");
		
		ATBLCharacter_DamageWithHitParams_Params params {};
		params.Damage = Damage;
		params.HitResult = HitResult;
		params.HitDirection = HitDirection;
		params.bLoseLimbCheat = bLoseLimbCheat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91490
	 * 		Name   -> Function TBL.TBLCharacter.ConsumeCurrentInput
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLCharacter::ConsumeCurrentInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ConsumeCurrentInput");
		
		ATBLCharacter_ConsumeCurrentInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C2A0
	 * 		Name   -> Function TBL.TBLCharacter.ConditionAppliedByActor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EConditionType                                 ConditionApplied                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      ConditionCauser                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ConditionAppliedByActor(TBL_EConditionType ConditionApplied, class AActor* ConditionCauser)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ConditionAppliedByActor");
		
		ATBLCharacter_ConditionAppliedByActor_Params params {};
		params.ConditionApplied = ConditionApplied;
		params.ConditionCauser = ConditionCauser;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C1C0
	 * 		Name   -> Function TBL.TBLCharacter.ClientTeleportTo
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     vecTargetPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    vecTargetRot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientTeleportTo(const struct FVector& vecTargetPos, const struct FRotator& vecTargetRot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientTeleportTo");
		
		ATBLCharacter_ClientTeleportTo_Params params {};
		params.vecTargetPos = vecTargetPos;
		params.vecTargetRot = vecTargetRot;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C0A0
	 * 		Name   -> Function TBL.TBLCharacter.ClientSuicideReceived
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		struct FDamageTakenEventCompressed                 DamageEventCompressed                                      (Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientSuicideReceived(const struct FDamageTakenEventCompressed& DamageEventCompressed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientSuicideReceived");
		
		ATBLCharacter_ClientSuicideReceived_Params params {};
		params.DamageEventCompressed = DamageEventCompressed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166C000
	 * 		Name   -> Function TBL.TBLCharacter.ClientSetCustomizationSwatches
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		TArray<struct FSwatchSelection>                    Swatches                                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientSetCustomizationSwatches(TArray<struct FSwatchSelection> Swatches)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientSetCustomizationSwatches");
		
		ATBLCharacter_ClientSetCustomizationSwatches_Params params {};
		params.Swatches = Swatches;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166BF80
	 * 		Name   -> Function TBL.TBLCharacter.ClientReliableNotifySuicide
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		TBL_EKillReason                                    KillReason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientReliableNotifySuicide(TBL_EKillReason KillReason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientReliableNotifySuicide");
		
		ATBLCharacter_ClientReliableNotifySuicide_Params params {};
		params.KillReason = KillReason;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166BDE0
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugString
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Text                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FontScale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugString(const struct FVector& Location, const class FString& Text, const struct FColor& Clr, float Duration, float FontScale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugString");
		
		ATBLCharacter_ClientDrawDebugString_Params params {};
		params.Location = Location;
		params.Text = Text;
		params.Clr = Clr;
		params.Duration = Duration;
		params.FontScale = FontScale;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166BC30
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugSphere
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     Center                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Segments                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPersistentLines                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugSphere(const struct FVector& Center, float Radius, int Segments, const struct FColor& Clr, bool bPersistentLines)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugSphere");
		
		ATBLCharacter_ClientDrawDebugSphere_Params params {};
		params.Center = Center;
		params.Radius = Radius;
		params.Segments = Segments;
		params.Clr = Clr;
		params.bPersistentLines = bPersistentLines;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166BB70
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugPose
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugPose(class ATBLCharacter* Character, const struct FColor& Clr)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugPose");
		
		ATBLCharacter_ClientDrawDebugPose_Params params {};
		params.Character = Character;
		params.Clr = Clr;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B9A0
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugPoint
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPersistentLines                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Lifetime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugPoint(const struct FVector& Location, float Size, const struct FColor& Clr, bool bPersistentLines, float Lifetime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugPoint");
		
		ATBLCharacter_ClientDrawDebugPoint_Params params {};
		params.Location = Location;
		params.Size = Size;
		params.Clr = Clr;
		params.bPersistentLines = bPersistentLines;
		params.Lifetime = Lifetime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B7C0
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugLine
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     LineStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPersistentLines                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Lifetime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Clr, bool bPersistentLines, float Lifetime, float Thickness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugLine");
		
		ATBLCharacter_ClientDrawDebugLine_Params params {};
		params.LineStart = LineStart;
		params.LineEnd = LineEnd;
		params.Clr = Clr;
		params.bPersistentLines = bPersistentLines;
		params.Lifetime = Lifetime;
		params.Thickness = Thickness;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B670
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugCapsule
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     Center                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HalfHeight                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugCapsule(const struct FVector& Center, float HalfHeight, float Radius, const struct FColor& Color)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugCapsule");
		
		ATBLCharacter_ClientDrawDebugCapsule_Params params {};
		params.Center = Center;
		params.HalfHeight = HalfHeight;
		params.Radius = Radius;
		params.Color = Color;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B430
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugBox
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     Center                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Box                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  Transform                                                  (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Color                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPersistentLines                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Lifetime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugBox(const struct FVector& Center, const struct FVector& Box, const struct FTransform& Transform, const struct FColor& Color, bool bPersistentLines, float Lifetime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugBox");
		
		ATBLCharacter_ClientDrawDebugBox_Params params {};
		params.Center = Center;
		params.Box = Box;
		params.Transform = Transform;
		params.Color = Color;
		params.bPersistentLines = bPersistentLines;
		params.Lifetime = Lifetime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B250
	 * 		Name   -> Function TBL.TBLCharacter.ClientDrawDebugArrow
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
	 * Parameters:
	 * 		struct FVector                                     LineStart                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     LineEnd                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FColor                                      Clr                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPersistentLines                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Lifetime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Thickness                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientDrawDebugArrow(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Clr, bool bPersistentLines, float Lifetime, float Thickness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientDrawDebugArrow");
		
		ATBLCharacter_ClientDrawDebugArrow_Params params {};
		params.LineStart = LineStart;
		params.LineEnd = LineEnd;
		params.Clr = Clr;
		params.bPersistentLines = bPersistentLines;
		params.Lifetime = Lifetime;
		params.Thickness = Thickness;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01648CE0
	 * 		Name   -> Function TBL.TBLCharacter.ClientApplyCondition
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetClient)
	 * Parameters:
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::ClientApplyCondition(TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClientApplyCondition");
		
		ATBLCharacter_ClientApplyCondition_Params params {};
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B230
	 * 		Name   -> Function TBL.TBLCharacter.ClearTutorialPlayerControl
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::ClearTutorialPlayerControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.ClearTutorialPlayerControl");
		
		ATBLCharacter_ClearTutorialPlayerControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B170
	 * 		Name   -> Function TBL.TBLCharacter.CheckTeamCollision
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::CheckTeamCollision(class AActor* OtherActor, class UPrimitiveComponent* OtherComp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CheckTeamCollision");
		
		ATBLCharacter_CheckTeamCollision_Params params {};
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166B070
	 * 		Name   -> Function TBL.TBLCharacter.CarryableCharacterEvent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               ParentCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::CarryableCharacterEvent(const class FName& EventName, class ATBLCharacter* ParentCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CarryableCharacterEvent");
		
		ATBLCharacter_CarryableCharacterEvent_Params params {};
		params.EventName = EventName;
		params.ParentCharacter = ParentCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AFF0
	 * 		Name   -> Function TBL.TBLCharacter.CarryableAnimationEvent
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::CarryableAnimationEvent(const class FName& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CarryableAnimationEvent");
		
		ATBLCharacter_CarryableAnimationEvent_Params params {};
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AF00
	 * 		Name   -> Function TBL.TBLCharacter.CanSprintShove
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::CanSprintShove()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CanSprintShove");
		
		ATBLCharacter_CanSprintShove_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AED0
	 * 		Name   -> Function TBL.TBLCharacter.CanSprintCharge
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::CanSprintCharge()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CanSprintCharge");
		
		ATBLCharacter_CanSprintCharge_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AEA0
	 * 		Name   -> Function TBL.TBLCharacter.CanSprintAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::CanSprintAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CanSprintAttack");
		
		ATBLCharacter_CanSprintAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AE10
	 * 		Name   -> Function TBL.TBLCharacter.CanRevive
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLCharacter::CanRevive(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CanRevive");
		
		ATBLCharacter_CanRevive_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166ADE0
	 * 		Name   -> Function TBL.TBLCharacter.CanFullSprint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLCharacter::CanFullSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CanFullSprint");
		
		ATBLCharacter_CanFullSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166ADB0
	 * 		Name   -> Function TBL.TBLCharacter.CanClash
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLCharacter::CanClash()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.CanClash");
		
		ATBLCharacter_CanClash_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AD20
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastWasHitEarly
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		struct FEarlyHitResult                             EarlyHit                                                   (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastWasHitEarly(const struct FEarlyHitResult& EarlyHit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastWasHitEarly");
		
		ATBLCharacter_BroadcastWasHitEarly_Params params {};
		params.EarlyHit = EarlyHit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AC90
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastPauseCharacter
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		bool                                               bPaused                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastPauseCharacter(bool bPaused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastPauseCharacter");
		
		ATBLCharacter_BroadcastPauseCharacter_Params params {};
		params.bPaused = bPaused;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AB80
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastParryEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventReplicated                       ParryEventReplicated                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastParryEvent(class AActor* Target, const struct FParryEventReplicated& ParryEventReplicated)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastParryEvent");
		
		ATBLCharacter_BroadcastParryEvent_Params params {};
		params.Target = Target;
		params.ParryEventReplicated = ParryEventReplicated;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91B10
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastLoseHelmet
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 */
	void ATBLCharacter::BroadcastLoseHelmet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastLoseHelmet");
		
		ATBLCharacter_BroadcastLoseHelmet_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AAF0
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastHitWorldWithStats
	 * 		Flags  -> (Net, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		struct FHitWorldParams                             Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastHitWorldWithStats(const struct FHitWorldParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastHitWorldWithStats");
		
		ATBLCharacter_BroadcastHitWorldWithStats_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166AA60
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastHitWorld
	 * 		Flags  -> (Net, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		struct FHitWorldParams                             Params                                                     (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastHitWorld(const struct FHitWorldParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastHitWorld");
		
		ATBLCharacter_BroadcastHitWorld_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91FD0
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastDetachFromController
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 */
	void ATBLCharacter::BroadcastDetachFromController()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastDetachFromController");
		
		ATBLCharacter_BroadcastDetachFromController_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A960
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastClashEvent
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FClashEventReplicated                       ClashEventReplicated                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastClashEvent(class ATBLCharacter* Target, const struct FClashEventReplicated& ClashEventReplicated)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastClashEvent");
		
		ATBLCharacter_BroadcastClashEvent_Params params {};
		params.Target = Target;
		params.ClashEventReplicated = ClashEventReplicated;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A940
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastCinematicRestrictControl
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::BroadcastCinematicRestrictControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastCinematicRestrictControl");
		
		ATBLCharacter_BroadcastCinematicRestrictControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A920
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastCinematicAllowControl
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
	 */
	void ATBLCharacter::BroadcastCinematicAllowControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastCinematicAllowControl");
		
		ATBLCharacter_BroadcastCinematicAllowControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90590
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastChickenEmote
	 * 		Flags  -> (Net, Native, Event, NetMulticast, Public)
	 */
	void ATBLCharacter::BroadcastChickenEmote()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastChickenEmote");
		
		ATBLCharacter_BroadcastChickenEmote_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A770
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastCharacterEmote
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		unsigned char                                      EmoteRowNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioPersonalityType                          PersonalityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      EmotePlayingSeqNum                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      EmoteRandomSeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      bIsOverrideEmote                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      EmoteType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastCharacterEmote(unsigned char EmoteRowNum, TBL_EAudioPersonalityType PersonalityType, unsigned char EmotePlayingSeqNum, unsigned char EmoteRandomSeed, unsigned char bIsOverrideEmote, unsigned char EmoteType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastCharacterEmote");
		
		ATBLCharacter_BroadcastCharacterEmote_Params params {};
		params.EmoteRowNum = EmoteRowNum;
		params.PersonalityType = PersonalityType;
		params.EmotePlayingSeqNum = EmotePlayingSeqNum;
		params.EmoteRandomSeed = EmoteRandomSeed;
		params.bIsOverrideEmote = bIsOverrideEmote;
		params.EmoteType = EmoteType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A6A0
	 * 		Name   -> Function TBL.TBLCharacter.BroadcastAutoVO
	 * 		Flags  -> (Net, Native, Event, NetMulticast, Public)
	 * Parameters:
	 * 		TBL_EAudioAutoVOType                               AutoVoType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               SkipLocalPlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::BroadcastAutoVO(TBL_EAudioAutoVOType AutoVoType, bool SkipLocalPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.BroadcastAutoVO");
		
		ATBLCharacter_BroadcastAutoVO_Params params {};
		params.AutoVoType = AutoVoType;
		params.SkipLocalPlayer = SkipLocalPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A580
	 * 		Name   -> Function TBL.TBLCharacter.AddConstructableActorToArray
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      NewActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::AddConstructableActorToArray(class AActor* NewActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.AddConstructableActorToArray");
		
		ATBLCharacter_AddConstructableActorToArray_Params params {};
		params.NewActor = NewActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A4C0
	 * 		Name   -> Function TBL.TBLCharacter.AddConstructableActor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AInventoryItem*                              CarryableItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      NewActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLCharacter::AddConstructableActor(class AInventoryItem* CarryableItem, class AActor* NewActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacter.AddConstructableActor");
		
		ATBLCharacter_AddConstructableActor_Params params {};
		params.CarryableItem = CarryableItem;
		params.NewActor = NewActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLCharacter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLCharacter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacter");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A600
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.UpdateFootStepSounds
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHidden                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::UpdateFootStepSounds(float DeltaSeconds, bool bHidden)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.UpdateFootStepSounds");
		
		UTBLCharacterAnimInstance_UpdateFootStepSounds_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		params.bHidden = bHidden;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A5E0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.TriggerRagdoll
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::TriggerRagdoll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.TriggerRagdoll");
		
		UTBLCharacterAnimInstance_TriggerRagdoll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A510
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.StopCurrentCombatStateMontage
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        NewCombatState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              BlendTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::StopCurrentCombatStateMontage(const class FName& NewCombatState, float BlendTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.StopCurrentCombatStateMontage");
		
		UTBLCharacterAnimInstance_StopCurrentCombatStateMontage_Params params {};
		params.NewCombatState = NewCombatState;
		params.BlendTime = BlendTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A490
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.StartPeasantAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::StartPeasantAnimation(const class FName& InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.StartPeasantAnimation");
		
		UTBLCharacterAnimInstance_StartPeasantAnimation_Params params {};
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A410
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.StartParryAttack
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimationSet*                               AnimSet                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::StartParryAttack(class UAnimationSet* AnimSet)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.StartParryAttack");
		
		UTBLCharacterAnimInstance_StartParryAttack_Params params {};
		params.AnimSet = AnimSet;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A380
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.StartAttack
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bIsHeavy                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::StartAttack(bool bIsHeavy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.StartAttack");
		
		UTBLCharacterAnimInstance_StartAttack_Params params {};
		params.bIsHeavy = bIsHeavy;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A350
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.ShouldStopAnimGraph
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLCharacterAnimInstance::ShouldStopAnimGraph()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.ShouldStopAnimGraph");
		
		UTBLCharacterAnimInstance_ShouldStopAnimGraph_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A2C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.SetOnHorse
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bIsOnHorse                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::SetOnHorse(bool bIsOnHorse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.SetOnHorse");
		
		UTBLCharacterAnimInstance_SetOnHorse_Params params {};
		params.bIsOnHorse = bIsOnHorse;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A1C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.SetDeathAnimationParameters
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		uint32_t                                           RandomSeed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::SetDeathAnimationParameters(const struct FDamageTakenEvent& Event, uint32_t RandomSeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.SetDeathAnimationParameters");
		
		UTBLCharacterAnimInstance_SetDeathAnimationParameters_Params params {};
		params.Event = Event;
		params.RandomSeed = RandomSeed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A1A0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.ReverseLadderAnimation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::ReverseLadderAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.ReverseLadderAnimation");
		
		UTBLCharacterAnimInstance_ReverseLadderAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A120
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlaySpawnAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::PlaySpawnAnimation(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlaySpawnAnimation");
		
		UTBLCharacterAnimInstance_PlaySpawnAnimation_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167A0A0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayLadderAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        SectionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::PlayLadderAnimation(const class FName& SectionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayLadderAnimation");
		
		UTBLCharacterAnimInstance_PlayLadderAnimation_Params params {};
		params.SectionName = SectionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679FD0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayInventoryItemUse
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPickup                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLCharacterAnimInstance::PlayInventoryItemUse(class AInventoryItem* Item, bool bPickup)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayInventoryItemUse");
		
		UTBLCharacterAnimInstance_PlayInventoryItemUse_Params params {};
		params.Item = Item;
		params.bPickup = bPickup;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679F30
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayInventoryItemUnequipped
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLCharacterAnimInstance::PlayInventoryItemUnequipped(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayInventoryItemUnequipped");
		
		UTBLCharacterAnimInstance_PlayInventoryItemUnequipped_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679E90
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayInventoryItemEquipped
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLCharacterAnimInstance::PlayInventoryItemEquipped(class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayInventoryItemEquipped");
		
		UTBLCharacterAnimInstance_PlayInventoryItemEquipped_Params params {};
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679DD0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayInventoryAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        Animation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::PlayInventoryAnimation(const class FName& Animation, class AInventoryItem* Item)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayInventoryAnimation");
		
		UTBLCharacterAnimInstance_PlayInventoryAnimation_Params params {};
		params.Animation = Animation;
		params.Item = Item;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679D50
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayHorseMountAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::PlayHorseMountAnimation(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayHorseMountAnimation");
		
		UTBLCharacterAnimInstance_PlayHorseMountAnimation_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679CD0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayHorseDismountAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::PlayHorseDismountAnimation(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayHorseDismountAnimation");
		
		UTBLCharacterAnimInstance_PlayHorseDismountAnimation_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679CB0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayDeathAnimation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::PlayDeathAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayDeathAnimation");
		
		UTBLCharacterAnimInstance_PlayDeathAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679B60
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.PlayCombatStateMontage
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        MontageName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SectionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAnimationSet*                               AnimSet                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::PlayCombatStateMontage(const class FName& InCombatState, const class FName& MontageName, const class FName& SectionName, class UAnimationSet* AnimSet)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.PlayCombatStateMontage");
		
		UTBLCharacterAnimInstance_PlayCombatStateMontage_Params params {};
		params.InCombatState = InCombatState;
		params.MontageName = MontageName;
		params.SectionName = SectionName;
		params.AnimSet = AnimSet;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679AC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnWasHitEarly
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FEarlyHitResult                             EarlyHit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnWasHitEarly(const struct FEarlyHitResult& EarlyHit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnWasHitEarly");
		
		UTBLCharacterAnimInstance_OnWasHitEarly_Params params {};
		params.EarlyHit = EarlyHit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679A40
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnVault
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AVaultMarker*                                VaultMarker                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnVault(class AVaultMarker* VaultMarker)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnVault");
		
		UTBLCharacterAnimInstance_OnVault_Params params {};
		params.VaultMarker = VaultMarker;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679A20
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnUnfreezeRagdollPhysics
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnUnfreezeRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnUnfreezeRagdollPhysics");
		
		UTBLCharacterAnimInstance_OnUnfreezeRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679A00
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnSwitchAttack
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnSwitchAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnSwitchAttack");
		
		UTBLCharacterAnimInstance_OnSwitchAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016799E0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnStartAttack
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnStartAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnStartAttack");
		
		UTBLCharacterAnimInstance_OnStartAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016799C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnSprintTurn
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnSprintTurn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnSprintTurn");
		
		UTBLCharacterAnimInstance_OnSprintTurn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016798F0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnSpawnAnimationComplete
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnSpawnAnimationComplete(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnSpawnAnimationComplete");
		
		UTBLCharacterAnimInstance_OnSpawnAnimationComplete_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679870
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnSignificanceChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_ECharacterSignificanceLevel                    InSignificance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnSignificanceChanged(TBL_ECharacterSignificanceLevel InSignificance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnSignificanceChanged");
		
		UTBLCharacterAnimInstance_OnSignificanceChanged_Params params {};
		params.InSignificance = InSignificance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679850
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnSetRagdollPhysics
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnSetRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnSetRagdollPhysics");
		
		UTBLCharacterAnimInstance_OnSetRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnResetForAnimInstancePool
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::OnResetForAnimInstancePool()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnResetForAnimInstancePool");
		
		UTBLCharacterAnimInstance_OnResetForAnimInstancePool_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016797C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnRecentlyRendered
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bInRecentlyRendered                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnRecentlyRendered(bool bInRecentlyRendered)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnRecentlyRendered");
		
		UTBLCharacterAnimInstance_OnRecentlyRendered_Params params {};
		params.bInRecentlyRendered = bInRecentlyRendered;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016794D0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnRagdollHitFxEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      HitTaker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      HitCauser                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  HitResult                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitDirection                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Projectile                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnRagdollHitFxEvent(class AActor* HitTaker, class AActor* HitCauser, class AInventoryItem* Weapon, const struct FHitResult& HitResult, const struct FVector& HitDirection, float Damage, class UDamageSource* DamageSource, class AActor* Projectile, const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnRagdollHitFxEvent");
		
		UTBLCharacterAnimInstance_OnRagdollHitFxEvent_Params params {};
		params.HitTaker = HitTaker;
		params.HitCauser = HitCauser;
		params.Weapon = Weapon;
		params.HitResult = HitResult;
		params.HitDirection = HitDirection;
		params.Damage = Damage;
		params.DamageSource = DamageSource;
		params.Projectile = Projectile;
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016793C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnPostDamage
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FPostDamageEventInfo                        PostDamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnPostDamage(const struct FDamageTakenEvent& DamageEvent, const struct FPostDamageEventInfo& PostDamageInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnPostDamage");
		
		UTBLCharacterAnimInstance_OnPostDamage_Params params {};
		params.DamageEvent = DamageEvent;
		params.PostDamageInfo = PostDamageInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679230
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnParrySuccess
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               ThisCharacter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OtherCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FParryEventState                            ParryEventState                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnParrySuccess(class ATBLCharacter* ThisCharacter, class ATBLCharacter* OtherCharacter, const struct FParryEventState& ParryEventState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnParrySuccess");
		
		UTBLCharacterAnimInstance_OnParrySuccess_Params params {};
		params.ThisCharacter = ThisCharacter;
		params.OtherCharacter = OtherCharacter;
		params.ParryEventState = ParryEventState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679160
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnParryInEnded
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnParryInEnded(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnParryInEnded");
		
		UTBLCharacterAnimInstance_OnParryInEnded_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016790E0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnMovementStateUpdate
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnMovementStateUpdate(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnMovementStateUpdate");
		
		UTBLCharacterAnimInstance_OnMovementStateUpdate_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01679060
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnMovementStateChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        MovementState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnMovementStateChanged(const class FName& MovementState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnMovementStateChanged");
		
		UTBLCharacterAnimInstance_OnMovementStateChanged_Params params {};
		params.MovementState = MovementState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678F90
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnMovementActionStarted
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 * Parameters:
	 * 		class FName                                        MovementName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnMovementActionStarted(const class FName& MovementName, const struct FRotator& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnMovementActionStarted");
		
		UTBLCharacterAnimInstance_OnMovementActionStarted_Params params {};
		params.MovementName = MovementName;
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678F10
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnMovementActionFinished
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        MovementName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnMovementActionFinished(const class FName& MovementName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnMovementActionFinished");
		
		UTBLCharacterAnimInstance_OnMovementActionFinished_Params params {};
		params.MovementName = MovementName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678E50
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnMount
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      AttachParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USiegeMountPoint*                            MountPoint                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnMount(class AActor* AttachParent, class USiegeMountPoint* MountPoint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnMount");
		
		UTBLCharacterAnimInstance_OnMount_Params params {};
		params.AttachParent = AttachParent;
		params.MountPoint = MountPoint;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678DD0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnMeleeSuccess
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               DamagedCharacter                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnMeleeSuccess(class ATBLCharacter* DamagedCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnMeleeSuccess");
		
		UTBLCharacterAnimInstance_OnMeleeSuccess_Params params {};
		params.DamagedCharacter = DamagedCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678CF0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnKilled");
		
		UTBLCharacterAnimInstance_OnKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678C40
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnHorseLanded
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FLandedResult                               LandedResult                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnHorseLanded(const struct FLandedResult& LandedResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnHorseLanded");
		
		UTBLCharacterAnimInstance_OnHorseLanded_Params params {};
		params.LandedResult = LandedResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678BC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnGetUp
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnGetUp(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnGetUp");
		
		UTBLCharacterAnimInstance_OnGetUp_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678BA0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnFreezeRagdollPhysics
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnFreezeRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnFreezeRagdollPhysics");
		
		UTBLCharacterAnimInstance_OnFreezeRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678B80
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnEquippedItemsChanged
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnEquippedItemsChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnEquippedItemsChanged");
		
		UTBLCharacterAnimInstance_OnEquippedItemsChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678AC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnDismount
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      AttachParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnDismount(class AActor* AttachParent, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnDismount");
		
		UTBLCharacterAnimInstance_OnDismount_Params params {};
		params.AttachParent = AttachParent;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016788F0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCustomizationApplied
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FCustomizationContext                       Context                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCustomizationApplied(const struct FCustomizationContext& Context)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCustomizationApplied");
		
		UTBLCharacterAnimInstance_OnCustomizationApplied_Params params {};
		params.Context = Context;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016787C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCrowdControlNoDamage
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OwningActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCrowdControlParams                         CrowdControlParams                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCrowdControlNoDamage(class AActor* OwningActor, const class FName& InCombatState, const struct FCrowdControlParams& CrowdControlParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCrowdControlNoDamage");
		
		UTBLCharacterAnimInstance_OnCrowdControlNoDamage_Params params {};
		params.OwningActor = OwningActor;
		params.InCombatState = InCombatState;
		params.CrowdControlParams = CrowdControlParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678660
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCrowdControl
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           CrowdControlVariant                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCrowdControl(const class FName& InCombatState, const struct FAnimDamageParams& DamageEvent, TBL_ECrowdControlVariant CrowdControlVariant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCrowdControl");
		
		UTBLCharacterAnimInstance_OnCrowdControl_Params params {};
		params.InCombatState = InCombatState;
		params.DamageEvent = DamageEvent;
		params.CrowdControlVariant = CrowdControlVariant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016785A0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnConditionAdded
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EConditionType                                 Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnConditionAdded(class AActor* Actor, TBL_EConditionType Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnConditionAdded");
		
		UTBLCharacterAnimInstance_OnConditionAdded_Params params {};
		params.Actor = Actor;
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678340
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCombatStateEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCombatStateEvent(class AActor* Actor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCombatStateEvent");
		
		UTBLCharacterAnimInstance_OnCombatStateEvent_Params params {};
		params.Actor = Actor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01678030
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCombatStateChanged");
		
		UTBLCharacterAnimInstance_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677D60
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCombatStateBegin
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCombatStateBegin(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCombatStateBegin");
		
		UTBLCharacterAnimInstance_OnCombatStateBegin_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677CE0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnChildAttachedToMesh
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class USceneComponent*                             Child                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnChildAttachedToMesh(class USceneComponent* Child)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnChildAttachedToMesh");
		
		UTBLCharacterAnimInstance_OnChildAttachedToMesh_Params params {};
		params.Child = Child;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677A10
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCarryableParent_CombatStateBegin
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InCombatStateName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCarryableParent_CombatStateBegin(class AActor* Actor, const class FName& InCombatStateName, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCarryableParent_CombatStateBegin");
		
		UTBLCharacterAnimInstance_OnCarryableParent_CombatStateBegin_Params params {};
		params.Actor = Actor;
		params.InCombatStateName = InCombatStateName;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677950
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnCarryableCharacterEvent
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               ParentCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnCarryableCharacterEvent(const class FName& EventName, class ATBLCharacter* ParentCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnCarryableCharacterEvent");
		
		UTBLCharacterAnimInstance_OnCarryableCharacterEvent_Params params {};
		params.EventName = EventName;
		params.ParentCharacter = ParentCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677930
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnBackToIdleTimer
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnBackToIdleTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnBackToIdleTimer");
		
		UTBLCharacterAnimInstance_OnBackToIdleTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016777F0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnAnimationSetChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimSetName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAnimationSetDataTable                      AnimInfo                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              InventoryItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::OnAnimationSetChanged(const class FName& AnimSetName, const struct FAnimationSetDataTable& AnimInfo, class AInventoryItem* InventoryItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnAnimationSetChanged");
		
		UTBLCharacterAnimInstance_OnAnimationSetChanged_Params params {};
		params.AnimSetName = AnimSetName;
		params.AnimInfo = AnimInfo;
		params.InventoryItem = InventoryItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.OnAnimationComplete
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::OnAnimationComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.OnAnimationComplete");
		
		UTBLCharacterAnimInstance_OnAnimationComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.NotifyCompleteDeathAnimation
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterAnimInstance::NotifyCompleteDeathAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.NotifyCompleteDeathAnimation");
		
		UTBLCharacterAnimInstance_NotifyCompleteDeathAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677730
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.LadderSectionChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::LadderSectionChanged(class UAnimMontage* Montage, int NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.LadderSectionChanged");
		
		UTBLCharacterAnimInstance_LadderSectionChanged_Params params {};
		params.Montage = Montage;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677660
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.LadderMontageEnded
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::LadderMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.LadderMontageEnded");
		
		UTBLCharacterAnimInstance_LadderMontageEnded_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677640
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.HideUnusedBonesOnServer
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::HideUnusedBonesOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.HideUnusedBonesOnServer");
		
		UTBLCharacterAnimInstance_HideUnusedBonesOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016774D0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.HideBones
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TArray<class FName>                                BoneList                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                VisibleBones                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::HideBones(TArray<class FName> BoneList, TArray<class FName> VisibleBones)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.HideBones");
		
		UTBLCharacterAnimInstance_HideBones_Params params {};
		params.BoneList = BoneList;
		params.VisibleBones = VisibleBones;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016774A0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetStopAnimGraphValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int UTBLCharacterAnimInstance::GetStopAnimGraphValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetStopAnimGraphValue");
		
		UTBLCharacterAnimInstance_GetStopAnimGraphValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677320
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetSpawnMontage
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAnimMontage*                                Montage                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        MontageName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SectionName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::GetSpawnMontage(const class FName& AnimationName, class UAnimMontage** Montage, class FName* MontageName, class FName* SectionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetSpawnMontage");
		
		UTBLCharacterAnimInstance_GetSpawnMontage_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Montage != nullptr)
			*Montage = params.Montage;
		if (MontageName != nullptr)
			*MontageName = params.MontageName;
		if (SectionName != nullptr)
			*SectionName = params.SectionName;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677280
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetPhysicsSpawnTime
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLCharacterAnimInstance::GetPhysicsSpawnTime(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetPhysicsSpawnTime");
		
		UTBLCharacterAnimInstance_GetPhysicsSpawnTime_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016771E0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetPeasantAnimationLength
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLCharacterAnimInstance::GetPeasantAnimationLength(const class FName& InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetPeasantAnimationLength");
		
		UTBLCharacterAnimInstance_GetPeasantAnimationLength_Params params {};
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677100
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetMountAnimationLength
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               MountUp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLCharacterAnimInstance::GetMountAnimationLength(bool MountUp, const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetMountAnimationLength");
		
		UTBLCharacterAnimInstance_GetMountAnimationLength_Params params {};
		params.MountUp = MountUp;
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01677010
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetLadderMountOffset
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 * Parameters:
	 * 		bool                                               MountUp                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromTop                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTBLCharacterAnimInstance::GetLadderMountOffset(bool MountUp, bool bFromTop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetLadderMountOffset");
		
		UTBLCharacterAnimInstance_GetLadderMountOffset_Params params {};
		params.MountUp = MountUp;
		params.bFromTop = bFromTop;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676FE0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetInventoryAnimationLength
	 * 		Flags  -> (Final, Native, Public)
	 */
	float UTBLCharacterAnimInstance::GetInventoryAnimationLength()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetInventoryAnimationLength");
		
		UTBLCharacterAnimInstance_GetInventoryAnimationLength_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676F40
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetHorseDismountOffset
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTBLCharacterAnimInstance::GetHorseDismountOffset(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetHorseDismountOffset");
		
		UTBLCharacterAnimInstance_GetHorseDismountOffset_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676DC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetCurrentSpawnRootMotion
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     OutTranslation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    OutRotation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::GetCurrentSpawnRootMotion(struct FVector* OutTranslation, struct FRotator* OutRotation, const class FName& AnimationName, float Position)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetCurrentSpawnRootMotion");
		
		UTBLCharacterAnimInstance_GetCurrentSpawnRootMotion_Params params {};
		params.AnimationName = AnimationName;
		params.Position = Position;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTranslation != nullptr)
			*OutTranslation = params.OutTranslation;
		if (OutRotation != nullptr)
			*OutRotation = params.OutRotation;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676D90
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetCurrentSpawnAnimationTime
	 * 		Flags  -> (Final, Native, Public)
	 */
	float UTBLCharacterAnimInstance::GetCurrentSpawnAnimationTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetCurrentSpawnAnimationTime");
		
		UTBLCharacterAnimInstance_GetCurrentSpawnAnimationTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676B80
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetCurrentRootMotion
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     OutTranslation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    OutRotation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SectionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEndAnimation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Position                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::GetCurrentRootMotion(struct FVector* OutTranslation, struct FRotator* OutRotation, class UAnimMontage* Montage, const class FName& SectionName, bool bEndAnimation, float Position)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetCurrentRootMotion");
		
		UTBLCharacterAnimInstance_GetCurrentRootMotion_Params params {};
		params.Montage = Montage;
		params.SectionName = SectionName;
		params.bEndAnimation = bEndAnimation;
		params.Position = Position;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTranslation != nullptr)
			*OutTranslation = params.OutTranslation;
		if (OutRotation != nullptr)
			*OutRotation = params.OutRotation;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676A00
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetCurrentLadderRootMotion
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     OutTranslation                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    OutRotation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FName                                        SectionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEndAnimation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::GetCurrentLadderRootMotion(struct FVector* OutTranslation, struct FRotator* OutRotation, const class FName& SectionName, bool bEndAnimation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetCurrentLadderRootMotion");
		
		UTBLCharacterAnimInstance_GetCurrentLadderRootMotion_Params params {};
		params.SectionName = SectionName;
		params.bEndAnimation = bEndAnimation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTranslation != nullptr)
			*OutTranslation = params.OutTranslation;
		if (OutRotation != nullptr)
			*OutRotation = params.OutRotation;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676920
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.GetAnimationSetFromData
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FAnimationSetDataTable                      AnimInfo                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	class UAnimationSet* UTBLCharacterAnimInstance::GetAnimationSetFromData(const struct FAnimationSetDataTable& AnimInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.GetAnimationSetFromData");
		
		UTBLCharacterAnimInstance_GetAnimationSetFromData_Params params {};
		params.AnimInfo = AnimInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventVOPlaying
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               IsPlaying                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventVOPlaying(bool IsPlaying)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventVOPlaying");
		
		UTBLCharacterAnimInstance_EventVOPlaying_Params params {};
		params.IsPlaying = IsPlaying;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventUnfreezeRagdollPhysics
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventUnfreezeRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventUnfreezeRagdollPhysics");
		
		UTBLCharacterAnimInstance_EventUnfreezeRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventSpawnMontageStart
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventSpawnMontageStart(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventSpawnMontageStart");
		
		UTBLCharacterAnimInstance_EventSpawnMontageStart_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventSpawnMontageComplete
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventSpawnMontageComplete(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventSpawnMontageComplete");
		
		UTBLCharacterAnimInstance_EventSpawnMontageComplete_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnWantsToGallop
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bWantsToGallop                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnWantsToGallop(bool bWantsToGallop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnWantsToGallop");
		
		UTBLCharacterAnimInstance_EventOnWantsToGallop_Params params {};
		params.bWantsToGallop = bWantsToGallop;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnStrafeStop
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnStrafeStop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnStrafeStop");
		
		UTBLCharacterAnimInstance_EventOnStrafeStop_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnStartAttack
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        InAbilityName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InComboState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAttackType*                                 InAttackType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnStartAttack(const class FName& InAbilityName, const class FName& InCombatState, const class FName& InComboState, class UAttackType* InAttackType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnStartAttack");
		
		UTBLCharacterAnimInstance_EventOnStartAttack_Params params {};
		params.InAbilityName = InAbilityName;
		params.InCombatState = InCombatState;
		params.InComboState = InComboState;
		params.InAttackType = InAttackType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnSprintStop
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bIsHoldingMoveKey                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnSprintStop(bool bIsHoldingMoveKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnSprintStop");
		
		UTBLCharacterAnimInstance_EventOnSprintStop_Params params {};
		params.bIsHoldingMoveKey = bIsHoldingMoveKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnSprintState
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        SprintState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnSprintState(const class FName& SprintState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnSprintState");
		
		UTBLCharacterAnimInstance_EventOnSprintState_Params params {};
		params.SprintState = SprintState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnSprintStart
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnSprintStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnSprintStart");
		
		UTBLCharacterAnimInstance_EventOnSprintStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnSignificanceChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnSignificanceChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnSignificanceChanged");
		
		UTBLCharacterAnimInstance_EventOnSignificanceChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnSiegeMounted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnSiegeMounted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnSiegeMounted");
		
		UTBLCharacterAnimInstance_EventOnSiegeMounted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnSiegeDismounted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnSiegeDismounted(TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnSiegeDismounted");
		
		UTBLCharacterAnimInstance_EventOnSiegeDismounted_Params params {};
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnMovementStateChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        InMovementState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InPreviousMovementState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnMovementStateChanged(const class FName& InMovementState, const class FName& InPreviousMovementState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnMovementStateChanged");
		
		UTBLCharacterAnimInstance_EventOnMovementStateChanged_Params params {};
		params.InMovementState = InMovementState;
		params.InPreviousMovementState = InPreviousMovementState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnMovementDirectionChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnMovementDirectionChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnMovementDirectionChanged");
		
		UTBLCharacterAnimInstance_EventOnMovementDirectionChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnMovementActionStarted
	 * 		Flags  -> (Event, Public, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        MovementName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnMovementActionStarted(const class FName& MovementName, const struct FRotator& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnMovementActionStarted");
		
		UTBLCharacterAnimInstance_EventOnMovementActionStarted_Params params {};
		params.MovementName = MovementName;
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnMissingLimb
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnMissingLimb(const class FName& Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnMissingLimb");
		
		UTBLCharacterAnimInstance_EventOnMissingLimb_Params params {};
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnMeleeHitSuccess
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttackComboState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnMeleeHitSuccess(const class FName& AttackName, const class FName& AttackComboState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnMeleeHitSuccess");
		
		UTBLCharacterAnimInstance_EventOnMeleeHitSuccess_Params params {};
		params.AttackName = AttackName;
		params.AttackComboState = AttackComboState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnLanded
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnLanded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnLanded");
		
		UTBLCharacterAnimInstance_EventOnLanded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnKilled
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDeathParams                            Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnKilled(const struct FAnimDeathParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnKilled");
		
		UTBLCharacterAnimInstance_EventOnKilled_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnJump
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnJump()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnJump");
		
		UTBLCharacterAnimInstance_EventOnJump_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnInterrupt
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnInterrupt(const struct FAnimDamageParams& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnInterrupt");
		
		UTBLCharacterAnimInstance_EventOnInterrupt_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnHorseStartMount
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnHorseStartMount(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnHorseStartMount");
		
		UTBLCharacterAnimInstance_EventOnHorseStartMount_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnHorseStartDismount
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnHorseStartDismount(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnHorseStartDismount");
		
		UTBLCharacterAnimInstance_EventOnHorseStartDismount_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnHorseMounted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnHorseMounted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnHorseMounted");
		
		UTBLCharacterAnimInstance_EventOnHorseMounted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnHorseDismounted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnHorseDismounted(TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnHorseDismounted");
		
		UTBLCharacterAnimInstance_EventOnHorseDismounted_Params params {};
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnHitAfterDeath
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDeathParams                            Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnHitAfterDeath(const struct FAnimDeathParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnHitAfterDeath");
		
		UTBLCharacterAnimInstance_EventOnHitAfterDeath_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnGetUp
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnGetUp(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnGetUp");
		
		UTBLCharacterAnimInstance_EventOnGetUp_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnDisarm
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnDisarm()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnDisarm");
		
		UTBLCharacterAnimInstance_EventOnDisarm_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnDashCooldownFinished
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnDashCooldownFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnDashCooldownFinished");
		
		UTBLCharacterAnimInstance_EventOnDashCooldownFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnDash
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              InDashDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnDash(float InDashDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnDash");
		
		UTBLCharacterAnimInstance_EventOnDash_Params params {};
		params.InDashDirection = InDashDirection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnCrowdControl
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           CrowdControlVariant                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnCrowdControl(const class FName& InCombatState, const struct FAnimDamageParams& DamageEvent, TBL_ECrowdControlVariant CrowdControlVariant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnCrowdControl");
		
		UTBLCharacterAnimInstance_EventOnCrowdControl_Params params {};
		params.InCombatState = InCombatState;
		params.DamageEvent = DamageEvent;
		params.CrowdControlVariant = CrowdControlVariant;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnCombatStateEnd
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnCombatStateEnd(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnCombatStateEnd");
		
		UTBLCharacterAnimInstance_EventOnCombatStateEnd_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnCombatStateChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnCombatStateChanged");
		
		UTBLCharacterAnimInstance_EventOnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnCombatStateBegin
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnCombatStateBegin(class AActor* Actor, const class FName& State, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnCombatStateBegin");
		
		UTBLCharacterAnimInstance_EventOnCombatStateBegin_Params params {};
		params.Actor = Actor;
		params.State = State;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnCameraOffsetEnd
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              AngleOffset                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventOnCameraOffsetEnd(float AngleOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnCameraOffsetEnd");
		
		UTBLCharacterAnimInstance_EventOnCameraOffsetEnd_Params params {};
		params.AngleOffset = AngleOffset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventOnCameraOffsetBegin
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventOnCameraOffsetBegin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventOnCameraOffsetBegin");
		
		UTBLCharacterAnimInstance_EventOnCameraOffsetBegin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventHiddenPositionUpdate
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventHiddenPositionUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventHiddenPositionUpdate");
		
		UTBLCharacterAnimInstance_EventHiddenPositionUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventFreezeRagdollPhysics
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::EventFreezeRagdollPhysics()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventFreezeRagdollPhysics");
		
		UTBLCharacterAnimInstance_EventFreezeRagdollPhysics_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventDamageNoInterrupt
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventDamageNoInterrupt(const struct FAnimDamageParams& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventDamageNoInterrupt");
		
		UTBLCharacterAnimInstance_EventDamageNoInterrupt_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.EventCarryableCharacter
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               ParentCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::EventCarryableCharacter(const class FName& EventName, class ATBLCharacter* ParentCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.EventCarryableCharacter");
		
		UTBLCharacterAnimInstance_EventCarryableCharacter_Params params {};
		params.EventName = EventName;
		params.ParentCharacter = ParentCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016768A0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.DisableSpawnRootMotion
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::DisableSpawnRootMotion(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.DisableSpawnRootMotion");
		
		UTBLCharacterAnimInstance_DisableSpawnRootMotion_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676880
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.DisableAttackRootMotion
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::DisableAttackRootMotion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.DisableAttackRootMotion");
		
		UTBLCharacterAnimInstance_DisableAttackRootMotion_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016767B0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.CustomizationWeaponToStand
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::CustomizationWeaponToStand(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.CustomizationWeaponToStand");
		
		UTBLCharacterAnimInstance_CustomizationWeaponToStand_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016766E0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.CustomizationStandToWeapon
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::CustomizationStandToWeapon(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.CustomizationStandToWeapon");
		
		UTBLCharacterAnimInstance_CustomizationStandToWeapon_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676620
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.CarryableSectionChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NextSection                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterAnimInstance::CarryableSectionChanged(class UAnimMontage* Montage, int NextSection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.CarryableSectionChanged");
		
		UTBLCharacterAnimInstance_CarryableSectionChanged_Params params {};
		params.Montage = Montage;
		params.NextSection = NextSection;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.BlueprintOnAnimationSetChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterAnimInstance::BlueprintOnAnimationSetChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.BlueprintOnAnimationSetChanged");
		
		UTBLCharacterAnimInstance_BlueprintOnAnimationSetChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016765E0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.AnimNotify_WeaponDetach
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::AnimNotify_WeaponDetach()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.AnimNotify_WeaponDetach");
		
		UTBLCharacterAnimInstance_AnimNotify_WeaponDetach_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016765C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.AnimNotify_WeaponAttach
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::AnimNotify_WeaponAttach()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.AnimNotify_WeaponAttach");
		
		UTBLCharacterAnimInstance_AnimNotify_WeaponAttach_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676600
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.AnimNotify_UseItem
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::AnimNotify_UseItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.AnimNotify_UseItem");
		
		UTBLCharacterAnimInstance_AnimNotify_UseItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016765E0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.AnimNotify_ShieldDetach
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::AnimNotify_ShieldDetach()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.AnimNotify_ShieldDetach");
		
		UTBLCharacterAnimInstance_AnimNotify_ShieldDetach_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016765C0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.AnimNotify_ShieldAttach
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::AnimNotify_ShieldAttach()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.AnimNotify_ShieldAttach");
		
		UTBLCharacterAnimInstance_AnimNotify_ShieldAttach_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016765A0
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.AnimNotify_Revive
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::AnimNotify_Revive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.AnimNotify_Revive");
		
		UTBLCharacterAnimInstance_AnimNotify_Revive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01676580
	 * 		Name   -> Function TBL.TBLCharacterAnimInstance.AnimNotify_DropWeapon
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterAnimInstance::AnimNotify_DropWeapon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterAnimInstance.AnimNotify_DropWeapon");
		
		UTBLCharacterAnimInstance_AnimNotify_DropWeapon_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCharacterAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCharacterAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCharacterAnimInstance_Customization.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCharacterAnimInstance_Customization::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterAnimInstance_Customization");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCharacterAnimInstance_Peasant.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCharacterAnimInstance_Peasant::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterAnimInstance_Peasant");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCharacterAnimInstance_Playable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCharacterAnimInstance_Playable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterAnimInstance_Playable");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F5E0
	 * 		Name   -> Function TBL.TBLCharacterMountableAnimInstance.OnHealthChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMountableAnimInstance::OnHealthChanged(float Amount, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMountableAnimInstance.OnHealthChanged");
		
		UTBLCharacterMountableAnimInstance_OnHealthChanged_Params params {};
		params.Amount = Amount;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterMountableAnimInstance.MountableActorDeadOnStartup
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterMountableAnimInstance::MountableActorDeadOnStartup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMountableAnimInstance.MountableActorDeadOnStartup");
		
		UTBLCharacterMountableAnimInstance_MountableActorDeadOnStartup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterMountableAnimInstance.EventOnKilled
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLCharacterMountableAnimInstance::EventOnKilled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMountableAnimInstance.EventOnKilled");
		
		UTBLCharacterMountableAnimInstance_EventOnKilled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCharacterMountableAnimInstance.EventOnCombatStateChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMountableAnimInstance::EventOnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMountableAnimInstance.EventOnCombatStateChanged");
		
		UTBLCharacterMountableAnimInstance_EventOnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E1E0
	 * 		Name   -> Function TBL.TBLCharacterMountableAnimInstance.AnimNotify_MountableActorKilledAnim_End
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterMountableAnimInstance::AnimNotify_MountableActorKilledAnim_End()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMountableAnimInstance.AnimNotify_MountableActorKilledAnim_End");
		
		UTBLCharacterMountableAnimInstance_AnimNotify_MountableActorKilledAnim_End_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A680
	 * 		Name   -> Function TBL.TBLCharacterMountableAnimInstance.AnimNotify_CharacterRecovery_End
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterMountableAnimInstance::AnimNotify_CharacterRecovery_End()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMountableAnimInstance.AnimNotify_CharacterRecovery_End");
		
		UTBLCharacterMountableAnimInstance_AnimNotify_CharacterRecovery_End_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166A660
	 * 		Name   -> Function TBL.TBLCharacterMountableAnimInstance.AnimNotify_CharacterFire_Action
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterMountableAnimInstance::AnimNotify_CharacterFire_Action()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMountableAnimInstance.AnimNotify_CharacterFire_Action");
		
		UTBLCharacterMountableAnimInstance_AnimNotify_CharacterFire_Action_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCharacterMountableAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCharacterMountableAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterMountableAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680A00
	 * 		Name   -> Function TBL.TBLCharacterMovement.WalkKeyReleased
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::WalkKeyReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.WalkKeyReleased");
		
		UTBLCharacterMovement_WalkKeyReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016809E0
	 * 		Name   -> Function TBL.TBLCharacterMovement.WalkKeyPressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::WalkKeyPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.WalkKeyPressed");
		
		UTBLCharacterMovement_WalkKeyPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680960
	 * 		Name   -> Function TBL.TBLCharacterMovement.UpdateSprint
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::UpdateSprint(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.UpdateSprint");
		
		UTBLCharacterMovement_UpdateSprint_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680940
	 * 		Name   -> Function TBL.TBLCharacterMovement.StopCrouch
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLCharacterMovement::StopCrouch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.StopCrouch");
		
		UTBLCharacterMovement_StopCrouch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680920
	 * 		Name   -> Function TBL.TBLCharacterMovement.StartJump
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::StartJump()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.StartJump");
		
		UTBLCharacterMovement_StartJump_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680900
	 * 		Name   -> Function TBL.TBLCharacterMovement.StartDash
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::StartDash()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.StartDash");
		
		UTBLCharacterMovement_StartDash_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016808E0
	 * 		Name   -> Function TBL.TBLCharacterMovement.StartAutoSprint
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterMovement::StartAutoSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.StartAutoSprint");
		
		UTBLCharacterMovement_StartAutoSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680860
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintTurnTick
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SprintTurnTick(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintTurnTick");
		
		UTBLCharacterMovement_SprintTurnTick_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680840
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintTurnDecelerate
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::SprintTurnDecelerate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintTurnDecelerate");
		
		UTBLCharacterMovement_SprintTurnDecelerate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016807C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintTick
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SprintTick(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintTick");
		
		UTBLCharacterMovement_SprintTick_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680740
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintStartTick
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SprintStartTick(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintStartTick");
		
		UTBLCharacterMovement_SprintStartTick_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680720
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintStart
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::SprintStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintStart");
		
		UTBLCharacterMovement_SprintStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680700
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintKeyReleased
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::SprintKeyReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintKeyReleased");
		
		UTBLCharacterMovement_SprintKeyReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016806E0
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintKeyPressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::SprintKeyPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintKeyPressed");
		
		UTBLCharacterMovement_SprintKeyPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016806C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintFinished
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::SprintFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintFinished");
		
		UTBLCharacterMovement_SprintFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680640
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintDecelerateToSprint
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Speed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SprintDecelerateToSprint(float Speed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintDecelerateToSprint");
		
		UTBLCharacterMovement_SprintDecelerateToSprint_Params params {};
		params.Speed = Speed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016805C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintDecelerateTick
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SprintDecelerateTick(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintDecelerateTick");
		
		UTBLCharacterMovement_SprintDecelerateTick_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016805A0
	 * 		Name   -> Function TBL.TBLCharacterMovement.SprintDecelerate
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::SprintDecelerate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SprintDecelerate");
		
		UTBLCharacterMovement_SprintDecelerate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680510
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetWalkKey
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bWalk                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetWalkKey(bool bWalk)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetWalkKey");
		
		UTBLCharacterMovement_SetWalkKey_Params params {};
		params.bWalk = bWalk;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680480
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetSprintLocked
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bSprintLock                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetSprintLocked(bool bSprintLock)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetSprintLocked");
		
		UTBLCharacterMovement_SetSprintLocked_Params params {};
		params.bSprintLock = bSprintLock;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016803F0
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetSprintKey
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bSprint                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetSprintKey(bool bSprint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetSprintKey");
		
		UTBLCharacterMovement_SetSprintKey_Params params {};
		params.bSprint = bSprint;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680360
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetDownedTurnRate
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bDowned                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetDownedTurnRate(bool bDowned)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetDownedTurnRate");
		
		UTBLCharacterMovement_SetDownedTurnRate_Params params {};
		params.bDowned = bDowned;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680340
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetDownedAutonomous
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::SetDownedAutonomous()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetDownedAutonomous");
		
		UTBLCharacterMovement_SetDownedAutonomous_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680170
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetAutoSprintKey
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bSprint                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetAutoSprintKey(bool bSprint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetAutoSprintKey");
		
		UTBLCharacterMovement_SetAutoSprintKey_Params params {};
		params.bSprint = bSprint;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016800E0
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetAutoSprint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetAutoSprint(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetAutoSprint");
		
		UTBLCharacterMovement_SetAutoSprint_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680200
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetAutorunElapsedTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              ElapsedTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetAutorunElapsedTime(float ElapsedTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetAutorunElapsedTime");
		
		UTBLCharacterMovement_SetAutorunElapsedTime_Params params {};
		params.ElapsedTime = ElapsedTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01680050
	 * 		Name   -> Function TBL.TBLCharacterMovement.SetAltAttackWithMovement
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::SetAltAttackWithMovement(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.SetAltAttackWithMovement");
		
		UTBLCharacterMovement_SetAltAttackWithMovement_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167FFA0
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerStartSpawnBonus
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FStartSpawnBonus                            Params                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerStartSpawnBonus(const struct FStartSpawnBonus& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerStartSpawnBonus");
		
		UTBLCharacterMovement_ServerStartSpawnBonus_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167FEE0
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerSetMoveRight
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bPressed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerSetMoveRight(bool bPressed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerSetMoveRight");
		
		UTBLCharacterMovement_ServerSetMoveRight_Params params {};
		params.bPressed = bPressed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167FE20
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerSetMoveLeft
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bPressed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerSetMoveLeft(bool bPressed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerSetMoveLeft");
		
		UTBLCharacterMovement_ServerSetMoveLeft_Params params {};
		params.bPressed = bPressed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167FD60
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerSetMoveBackward
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bPressed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerSetMoveBackward(bool bPressed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerSetMoveBackward");
		
		UTBLCharacterMovement_ServerSetMoveBackward_Params params {};
		params.bPressed = bPressed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167FC60
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerSetDowned
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		bool                                               bDowned                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerSetDowned(bool bDowned, float ClientTimeStamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerSetDowned");
		
		UTBLCharacterMovement_ServerSetDowned_Params params {};
		params.bDowned = bDowned;
		params.ClientTimeStamp = ClientTimeStamp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167FB30
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerPlaySpawnAnimation
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 * Parameters:
	 * 		class FName                                        Animation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ActorYaw                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerPlaySpawnAnimation(const class FName& Animation, float ActorYaw, float ClientTimeStamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerPlaySpawnAnimation");
		
		UTBLCharacterMovement_ServerPlaySpawnAnimation_Params params {};
		params.Animation = Animation;
		params.ActorYaw = ActorYaw;
		params.ClientTimeStamp = ClientTimeStamp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167FA60
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerPlayLadderAnimation
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FTBL_FPlayLadderAnimation                   Params                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerPlayLadderAnimation(const struct FTBL_FPlayLadderAnimation& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerPlayLadderAnimation");
		
		UTBLCharacterMovement_ServerPlayLadderAnimation_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F9B0
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerMountLadder
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		float                                              ClientTimeStamp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerMountLadder(float ClientTimeStamp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerMountLadder");
		
		UTBLCharacterMovement_ServerMountLadder_Params params {};
		params.ClientTimeStamp = ClientTimeStamp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F960
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerLadderDismountPressed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
	 */
	void UTBLCharacterMovement::ServerLadderDismountPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerLadderDismountPressed");
		
		UTBLCharacterMovement_ServerLadderDismountPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F8B0
	 * 		Name   -> Function TBL.TBLCharacterMovement.ServerEndLadderMovement
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
	 * Parameters:
	 * 		struct FTBL_FEndLadderMovement                     Params                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ServerEndLadderMovement(const struct FTBL_FEndLadderMovement& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ServerEndLadderMovement");
		
		UTBLCharacterMovement_ServerEndLadderMovement_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F890
	 * 		Name   -> Function TBL.TBLCharacterMovement.ResumeSprintCombatState
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::ResumeSprintCombatState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ResumeSprintCombatState");
		
		UTBLCharacterMovement_ResumeSprintCombatState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F7C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.PlaySpawnAnimation_Internal
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class FName                                        Animation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::PlaySpawnAnimation_Internal(const class FName& Animation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.PlaySpawnAnimation_Internal");
		
		UTBLCharacterMovement_PlaySpawnAnimation_Internal_Params params {};
		params.Animation = Animation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F730
	 * 		Name   -> Function TBL.TBLCharacterMovement.PlaySpawnAnimation
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Animation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::PlaySpawnAnimation(const class FName& Animation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.PlaySpawnAnimation");
		
		UTBLCharacterMovement_PlaySpawnAnimation_Params params {};
		params.Animation = Animation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F710
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnRep_ReplicatedSprintTurn
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::OnRep_ReplicatedSprintTurn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnRep_ReplicatedSprintTurn");
		
		UTBLCharacterMovement_OnRep_ReplicatedSprintTurn_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F6F0
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnRep_RepCurrentSpawnBoost
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::OnRep_RepCurrentSpawnBoost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnRep_RepCurrentSpawnBoost");
		
		UTBLCharacterMovement_OnRep_RepCurrentSpawnBoost_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F6D0
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnRep_CharacterMovementState
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::OnRep_CharacterMovementState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnRep_CharacterMovementState");
		
		UTBLCharacterMovement_OnRep_CharacterMovementState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F6B0
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnLadderAnimationEnded
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::OnLadderAnimationEnded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnLadderAnimationEnded");
		
		UTBLCharacterMovement_OnLadderAnimationEnded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F5C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnEquippedItemsChanged
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::OnEquippedItemsChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnEquippedItemsChanged");
		
		UTBLCharacterMovement_OnEquippedItemsChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F500
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnDismount
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      AttachParent                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::OnDismount(class AActor* AttachParent, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnDismount");
		
		UTBLCharacterMovement_OnDismount_Params params {};
		params.AttachParent = AttachParent;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F1F0
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* CombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnCombatStateChanged");
		
		UTBLCharacterMovement_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.CombatState = CombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167F060
	 * 		Name   -> Function TBL.TBLCharacterMovement.OnActorHit
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      SelfActor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.OnActorHit");
		
		UTBLCharacterMovement_OnActorHit_Params params {};
		params.SelfActor = SelfActor;
		params.OtherActor = OtherActor;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EFE0
	 * 		Name   -> Function TBL.TBLCharacterMovement.MoveIgnoreActorRemove
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      ActorToIgnore                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::MoveIgnoreActorRemove(class AActor* ActorToIgnore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.MoveIgnoreActorRemove");
		
		UTBLCharacterMovement_MoveIgnoreActorRemove_Params params {};
		params.ActorToIgnore = ActorToIgnore;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EF60
	 * 		Name   -> Function TBL.TBLCharacterMovement.MoveIgnoreActorAdd
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      ActorToIgnore                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::MoveIgnoreActorAdd(class AActor* ActorToIgnore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.MoveIgnoreActorAdd");
		
		UTBLCharacterMovement_MoveIgnoreActorAdd_Params params {};
		params.ActorToIgnore = ActorToIgnore;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EEC0
	 * 		Name   -> Function TBL.TBLCharacterMovement.MoveDirectionToVector
	 * 		Flags  -> (Final, Native, Public, HasDefaults, Const)
	 * Parameters:
	 * 		TBL_EMovementDirection                             Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTBLCharacterMovement::MoveDirectionToVector(TBL_EMovementDirection Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.MoveDirectionToVector");
		
		UTBLCharacterMovement_MoveDirectionToVector_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EE30
	 * 		Name   -> Function TBL.TBLCharacterMovement.MoveDirectionToAngle
	 * 		Flags  -> (Final, Native, Public, Const)
	 * Parameters:
	 * 		TBL_EMovementDirection                             Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLCharacterMovement::MoveDirectionToAngle(TBL_EMovementDirection Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.MoveDirectionToAngle");
		
		UTBLCharacterMovement_MoveDirectionToAngle_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EDB0
	 * 		Name   -> Function TBL.TBLCharacterMovement.LimitSprintTurnRate
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::LimitSprintTurnRate(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.LimitSprintTurnRate");
		
		UTBLCharacterMovement_LimitSprintTurnRate_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167ED90
	 * 		Name   -> Function TBL.TBLCharacterMovement.LadderDismountReleased
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterMovement::LadderDismountReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.LadderDismountReleased");
		
		UTBLCharacterMovement_LadderDismountReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167ED70
	 * 		Name   -> Function TBL.TBLCharacterMovement.LadderDismountPressed
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterMovement::LadderDismountPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.LadderDismountPressed");
		
		UTBLCharacterMovement_LadderDismountPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167ED10
	 * 		Name   -> Function TBL.TBLCharacterMovement.IsSprinting
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLCharacterMovement::IsSprinting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.IsSprinting");
		
		UTBLCharacterMovement_IsSprinting_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167ECE0
	 * 		Name   -> Function TBL.TBLCharacterMovement.IsSprintDecelerating
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLCharacterMovement::IsSprintDecelerating()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.IsSprintDecelerating");
		
		UTBLCharacterMovement_IsSprintDecelerating_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E92050
	 * 		Name   -> Function TBL.TBLCharacterMovement.HandleDelaySpawnAnimation
	 * 		Flags  -> (Native, Public)
	 */
	void UTBLCharacterMovement::HandleDelaySpawnAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.HandleDelaySpawnAnimation");
		
		UTBLCharacterMovement_HandleDelaySpawnAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EC10
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetSprintTime
	 * 		Flags  -> (Final, Native, Public)
	 */
	float UTBLCharacterMovement::GetSprintTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetSprintTime");
		
		UTBLCharacterMovement_GetSprintTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EBB0
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetSprintState
	 * 		Flags  -> (Final, Native, Public)
	 */
	struct FSprintState UTBLCharacterMovement::GetSprintState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetSprintState");
		
		UTBLCharacterMovement_GetSprintState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EB70
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetMovementState
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UTBLCharacterMovement::GetMovementState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetMovementState");
		
		UTBLCharacterMovement_GetMovementState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EB40
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetMovementSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UTBLCharacterMovement::GetMovementSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetMovementSpeed");
		
		UTBLCharacterMovement_GetMovementSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EB00
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetMovementInputName
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class FName UTBLCharacterMovement::GetMovementInputName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetMovementInputName");
		
		UTBLCharacterMovement_GetMovementInputName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EA50
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetMovementInputDirection
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               bUseLastNonZero                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTBLCharacterMovement::GetMovementInputDirection(bool bUseLastNonZero)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetMovementInputDirection");
		
		UTBLCharacterMovement_GetMovementInputDirection_Params params {};
		params.bUseLastNonZero = bUseLastNonZero;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E980
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetMovementDirection
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               bUseInputDirection                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseLastNonZero                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EMovementDirection UTBLCharacterMovement::GetMovementDirection(bool bUseInputDirection, bool bUseLastNonZero)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetMovementDirection");
		
		UTBLCharacterMovement_GetMovementDirection_Params params {};
		params.bUseInputDirection = bUseInputDirection;
		params.bUseLastNonZero = bUseLastNonZero;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E920
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetLastVerticalInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EMovementDirection UTBLCharacterMovement::GetLastVerticalInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetLastVerticalInput");
		
		UTBLCharacterMovement_GetLastVerticalInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E8E0
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetLastHorizontalInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EMovementDirection UTBLCharacterMovement::GetLastHorizontalInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetLastHorizontalInput");
		
		UTBLCharacterMovement_GetLastHorizontalInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E8C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetDefaultMovementSpeed
	 * 		Flags  -> (Final, Native, Public)
	 */
	float UTBLCharacterMovement::GetDefaultMovementSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetDefaultMovementSpeed");
		
		UTBLCharacterMovement_GetDefaultMovementSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E870
	 * 		Name   -> Function TBL.TBLCharacterMovement.GetChaseBonusPercent
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UTBLCharacterMovement::GetChaseBonusPercent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.GetChaseBonusPercent");
		
		UTBLCharacterMovement_GetChaseBonusPercent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E850
	 * 		Name   -> Function TBL.TBLCharacterMovement.ForceMaxSprint
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::ForceMaxSprint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ForceMaxSprint");
		
		UTBLCharacterMovement_ForceMaxSprint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E7C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.EndPhysSpawn
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		bool                                               bDisableRootMotion                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::EndPhysSpawn(bool bDisableRootMotion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.EndPhysSpawn");
		
		UTBLCharacterMovement_EndPhysSpawn_Params params {};
		params.bDisableRootMotion = bDisableRootMotion;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90E90
	 * 		Name   -> Function TBL.TBLCharacterMovement.EndLadderMovement
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCharacterMovement::EndLadderMovement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.EndLadderMovement");
		
		UTBLCharacterMovement_EndLadderMovement_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E7A0
	 * 		Name   -> Function TBL.TBLCharacterMovement.EnableCharacterCollision
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::EnableCharacterCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.EnableCharacterCollision");
		
		UTBLCharacterMovement_EnableCharacterCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E720
	 * 		Name   -> Function TBL.TBLCharacterMovement.DownedSprintTick
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::DownedSprintTick(float DeltaSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.DownedSprintTick");
		
		UTBLCharacterMovement_DownedSprintTick_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E700
	 * 		Name   -> Function TBL.TBLCharacterMovement.DownedSprintStart
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::DownedSprintStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.DownedSprintStart");
		
		UTBLCharacterMovement_DownedSprintStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E6E0
	 * 		Name   -> Function TBL.TBLCharacterMovement.DownedSprintFinished
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCharacterMovement::DownedSprintFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.DownedSprintFinished");
		
		UTBLCharacterMovement_DownedSprintFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E6C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.DisableCharacterCollision
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLCharacterMovement::DisableCharacterCollision()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.DisableCharacterCollision");
		
		UTBLCharacterMovement_DisableCharacterCollision_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E906F0
	 * 		Name   -> Function TBL.TBLCharacterMovement.ClientMountLadderFailed
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 */
	void UTBLCharacterMovement::ClientMountLadderFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ClientMountLadderFailed");
		
		UTBLCharacterMovement_ClientMountLadderFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E630
	 * 		Name   -> Function TBL.TBLCharacterMovement.ClientForceLadderMovement
	 * 		Flags  -> (Net, NetReliable, Native, Event, Protected, NetClient)
	 * Parameters:
	 * 		bool                                               bDirectionUp                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ClientForceLadderMovement(bool bDirectionUp)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ClientForceLadderMovement");
		
		UTBLCharacterMovement_ClientForceLadderMovement_Params params {};
		params.bDirectionUp = bDirectionUp;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E600
	 * 		Name   -> Function TBL.TBLCharacterMovement.CanSprintShove
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLCharacterMovement::CanSprintShove()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.CanSprintShove");
		
		UTBLCharacterMovement_CanSprintShove_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E5D0
	 * 		Name   -> Function TBL.TBLCharacterMovement.CanSprintAttack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLCharacterMovement::CanSprintAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.CanSprintAttack");
		
		UTBLCharacterMovement_CanSprintAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E540
	 * 		Name   -> Function TBL.TBLCharacterMovement.CanSprint
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               bStartSprint                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLCharacterMovement::CanSprint(bool bStartSprint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.CanSprint");
		
		UTBLCharacterMovement_CanSprint_Params params {};
		params.bStartSprint = bStartSprint;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E4B0
	 * 		Name   -> Function TBL.TBLCharacterMovement.BroadcastStartVault
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class AVaultMarker*                                VaultMarker                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::BroadcastStartVault(class AVaultMarker* VaultMarker)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.BroadcastStartVault");
		
		UTBLCharacterMovement_BroadcastStartVault_Params params {};
		params.VaultMarker = VaultMarker;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E420
	 * 		Name   -> Function TBL.TBLCharacterMovement.BroadcastSetCharacterCollision
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::BroadcastSetCharacterCollision(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.BroadcastSetCharacterCollision");
		
		UTBLCharacterMovement_BroadcastSetCharacterCollision_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E390
	 * 		Name   -> Function TBL.TBLCharacterMovement.BroadcastPlayLadderAnimation
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class FName                                        Animation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::BroadcastPlayLadderAnimation(const class FName& Animation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.BroadcastPlayLadderAnimation");
		
		UTBLCharacterMovement_BroadcastPlayLadderAnimation_Params params {};
		params.Animation = Animation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E2C0
	 * 		Name   -> Function TBL.TBLCharacterMovement.BroadcastIgnoreActorWhenMoving
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		class AActor*                                      ActorToIgnore                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bShouldIgnore                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::BroadcastIgnoreActorWhenMoving(class AActor* ActorToIgnore, bool bShouldIgnore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.BroadcastIgnoreActorWhenMoving");
		
		UTBLCharacterMovement_BroadcastIgnoreActorWhenMoving_Params params {};
		params.ActorToIgnore = ActorToIgnore;
		params.bShouldIgnore = bShouldIgnore;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E91330
	 * 		Name   -> Function TBL.TBLCharacterMovement.BroadcastDownToUpLadderAnimation
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 */
	void UTBLCharacterMovement::BroadcastDownToUpLadderAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.BroadcastDownToUpLadderAnimation");
		
		UTBLCharacterMovement_BroadcastDownToUpLadderAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167E200
	 * 		Name   -> Function TBL.TBLCharacterMovement.ApplyKnockback
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UMovementSequence*                           Sequence                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCharacterMovement::ApplyKnockback(class UMovementSequence* Sequence, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCharacterMovement.ApplyKnockback");
		
		UTBLCharacterMovement_ApplyKnockback_Params params {};
		params.Sequence = Sequence;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCharacterMovement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCharacterMovement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCharacterMovement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLChatWidgetStyle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLChatWidgetStyle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLChatWidgetStyle");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01688220
	 * 		Name   -> Function TBL.TBLCheatManager.UpdateVirtualGood
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::UpdateVirtualGood()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UpdateVirtualGood");
		
		UTBLCheatManager_UpdateVirtualGood_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016881A0
	 * 		Name   -> Function TBL.TBLCheatManager.UpdateRunAway
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::UpdateRunAway(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UpdateRunAway");
		
		UTBLCheatManager_UpdateRunAway_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01688120
	 * 		Name   -> Function TBL.TBLCheatManager.UpdateMoveToCharacter
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::UpdateMoveToCharacter(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UpdateMoveToCharacter");
		
		UTBLCheatManager_UpdateMoveToCharacter_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016880A0
	 * 		Name   -> Function TBL.TBLCheatManager.UpdateExecFileCommands
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::UpdateExecFileCommands(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UpdateExecFileCommands");
		
		UTBLCheatManager_UpdateExecFileCommands_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01688080
	 * 		Name   -> Function TBL.TBLCheatManager.UpdateAutoAttackHold
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCheatManager::UpdateAutoAttackHold()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UpdateAutoAttackHold");
		
		UTBLCheatManager_UpdateAutoAttackHold_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01688060
	 * 		Name   -> Function TBL.TBLCheatManager.UnpauseCharacter
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::UnpauseCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UnpauseCharacter");
		
		UTBLCheatManager_UnpauseCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01688040
	 * 		Name   -> Function TBL.TBLCheatManager.UnpauseAI
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::UnpauseAI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UnpauseAI");
		
		UTBLCheatManager_UnpauseAI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01688020
	 * 		Name   -> Function TBL.TBLCheatManager.UnlimitedAmmo
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::UnlimitedAmmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UnlimitedAmmo");
		
		UTBLCheatManager_UnlimitedAmmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01688000
	 * 		Name   -> Function TBL.TBLCheatManager.UncapFOV
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::UncapFOV()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.UncapFOV");
		
		UTBLCheatManager_UncapFOV_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687FE0
	 * 		Name   -> Function TBL.TBLCheatManager.ToggleShowBothMeshes
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ToggleShowBothMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ToggleShowBothMeshes");
		
		UTBLCheatManager_ToggleShowBothMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687FC0
	 * 		Name   -> Function TBL.TBLCheatManager.ToggleCameraAnimsAndShakes
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ToggleCameraAnimsAndShakes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ToggleCameraAnimsAndShakes");
		
		UTBLCheatManager_ToggleCameraAnimsAndShakes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687F40
	 * 		Name   -> Function TBL.TBLCheatManager.Tick
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::Tick(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.Tick");
		
		UTBLCheatManager_Tick_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687F20
	 * 		Name   -> Function TBL.TBLCheatManager.TestRPCDesync
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::TestRPCDesync()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.TestRPCDesync");
		
		UTBLCheatManager_TestRPCDesync_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687F00
	 * 		Name   -> Function TBL.TBLCheatManager.TestDrawTime
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::TestDrawTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.TestDrawTime");
		
		UTBLCheatManager_TestDrawTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687EE0
	 * 		Name   -> Function TBL.TBLCheatManager.StopHeldParry
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::StopHeldParry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.StopHeldParry");
		
		UTBLCheatManager_StopHeldParry_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687EC0
	 * 		Name   -> Function TBL.TBLCheatManager.StopExecFile
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::StopExecFile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.StopExecFile");
		
		UTBLCheatManager_StopExecFile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687EA0
	 * 		Name   -> Function TBL.TBLCheatManager.StopDumpingReplication
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::StopDumpingReplication()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.StopDumpingReplication");
		
		UTBLCheatManager_StopDumpingReplication_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687E80
	 * 		Name   -> Function TBL.TBLCheatManager.StopAllSounds
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::StopAllSounds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.StopAllSounds");
		
		UTBLCheatManager_StopAllSounds_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687E60
	 * 		Name   -> Function TBL.TBLCheatManager.StartHeldParry
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::StartHeldParry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.StartHeldParry");
		
		UTBLCheatManager_StartHeldParry_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687E40
	 * 		Name   -> Function TBL.TBLCheatManager.StartDumpingReplication
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::StartDumpingReplication()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.StartDumpingReplication");
		
		UTBLCheatManager_StartDumpingReplication_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687E20
	 * 		Name   -> Function TBL.TBLCheatManager.SpawnAsPeasant
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::SpawnAsPeasant()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SpawnAsPeasant");
		
		UTBLCheatManager_SpawnAsPeasant_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687D60
	 * 		Name   -> Function TBL.TBLCheatManager.SpamRPC
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                NumCalls                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NumBytesPerCall                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SpamRPC(int NumCalls, int NumBytesPerCall)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SpamRPC");
		
		UTBLCheatManager_SpamRPC_Params params {};
		params.NumCalls = NumCalls;
		params.NumBytesPerCall = NumBytesPerCall;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687CE0
	 * 		Name   -> Function TBL.TBLCheatManager.SkipPushableToEndPoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     PushableActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SkipPushableToEndPoint(class UObject* PushableActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SkipPushableToEndPoint");
		
		UTBLCheatManager_SkipPushableToEndPoint_Params params {};
		params.PushableActor = PushableActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCheatManager.SimulateLostServerConnection
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::SimulateLostServerConnection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SimulateLostServerConnection");
		
		UTBLCheatManager_SimulateLostServerConnection_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687CC0
	 * 		Name   -> Function TBL.TBLCheatManager.ShowThirdPersonMesh
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ShowThirdPersonMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ShowThirdPersonMesh");
		
		UTBLCheatManager_ShowThirdPersonMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687CA0
	 * 		Name   -> Function TBL.TBLCheatManager.ShowServerFollowMesh
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ShowServerFollowMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ShowServerFollowMesh");
		
		UTBLCheatManager_ShowServerFollowMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687C80
	 * 		Name   -> Function TBL.TBLCheatManager.ShowFirstPersonMesh
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ShowFirstPersonMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ShowFirstPersonMesh");
		
		UTBLCheatManager_ShowFirstPersonMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687C60
	 * 		Name   -> Function TBL.TBLCheatManager.ShowBothMeshes
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ShowBothMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ShowBothMeshes");
		
		UTBLCheatManager_ShowBothMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687C40
	 * 		Name   -> Function TBL.TBLCheatManager.SetWatchedCharacter
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::SetWatchedCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetWatchedCharacter");
		
		UTBLCheatManager_SetWatchedCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687B80
	 * 		Name   -> Function TBL.TBLCheatManager.SetStatBase
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SetStatBase(TBL_EStat Stat, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetStatBase");
		
		UTBLCheatManager_SetStatBase_Params params {};
		params.Stat = Stat;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687AB0
	 * 		Name   -> Function TBL.TBLCheatManager.SetPawnRVO
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SetPawnRVO(class ATBLCharacter* Character, bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetPawnRVO");
		
		UTBLCheatManager_SetPawnRVO_Params params {};
		params.Character = Character;
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687A20
	 * 		Name   -> Function TBL.TBLCheatManager.SetPauseCharacter
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bPaused                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SetPauseCharacter(bool bPaused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetPauseCharacter");
		
		UTBLCheatManager_SetPauseCharacter_Params params {};
		params.bPaused = bPaused;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687990
	 * 		Name   -> Function TBL.TBLCheatManager.SetPauseAI
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		bool                                               bPaused                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SetPauseAI(bool bPaused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetPauseAI");
		
		UTBLCheatManager_SetPauseAI_Params params {};
		params.bPaused = bPaused;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687910
	 * 		Name   -> Function TBL.TBLCheatManager.SetHealth
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SetHealth(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetHealth");
		
		UTBLCheatManager_SetHealth_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687830
	 * 		Name   -> Function TBL.TBLCheatManager.SetCulture
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Culture                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SetCulture(const class FString& Culture)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetCulture");
		
		UTBLCheatManager_SetCulture_Params params {};
		params.Culture = Culture;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016877B0
	 * 		Name   -> Function TBL.TBLCheatManager.SetAmmo
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                Ammo                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SetAmmo(int Ammo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SetAmmo");
		
		UTBLCheatManager_SetAmmo_Params params {};
		params.Ammo = Ammo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687540
	 * 		Name   -> Function TBL.TBLCheatManager.SendToTrace
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SendToTrace(const class FString& Command)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SendToTrace");
		
		UTBLCheatManager_SendToTrace_Params params {};
		params.Command = Command;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687460
	 * 		Name   -> Function TBL.TBLCheatManager.SendToAll
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Command                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SendToAll(const class FString& Command)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SendToAll");
		
		UTBLCheatManager_SendToAll_Params params {};
		params.Command = Command;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016873A0
	 * 		Name   -> Function TBL.TBLCheatManager.SendCheatToServerObj
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        CheatComand                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Obj                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SendCheatToServerObj(const class FName& CheatComand, class UObject* Obj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SendCheatToServerObj");
		
		UTBLCheatManager_SendCheatToServerObj_Params params {};
		params.CheatComand = CheatComand;
		params.Obj = Obj;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016872E0
	 * 		Name   -> Function TBL.TBLCheatManager.SendCheatToServer
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        CheatComand                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Param                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SendCheatToServer(const class FName& CheatComand, const class FName& Param)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SendCheatToServer");
		
		UTBLCheatManager_SendCheatToServer_Params params {};
		params.CheatComand = CheatComand;
		params.Param = Param;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641DC0
	 * 		Name   -> Function TBL.TBLCheatManager.SaveAll
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      ClassName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::SaveAll(const class FString& ClassName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.SaveAll");
		
		UTBLCheatManager_SaveAll_Params params {};
		params.ClassName = ClassName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016872C0
	 * 		Name   -> Function TBL.TBLCheatManager.Revive
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::Revive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.Revive");
		
		UTBLCheatManager_Revive_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016872A0
	 * 		Name   -> Function TBL.TBLCheatManager.RespawnLoadout
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::RespawnLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.RespawnLoadout");
		
		UTBLCheatManager_RespawnLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687280
	 * 		Name   -> Function TBL.TBLCheatManager.RespawnImmediately
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::RespawnImmediately()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.RespawnImmediately");
		
		UTBLCheatManager_RespawnImmediately_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687260
	 * 		Name   -> Function TBL.TBLCheatManager.ResetHeldParry
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCheatManager::ResetHeldParry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ResetHeldParry");
		
		UTBLCheatManager_ResetHeldParry_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687240
	 * 		Name   -> Function TBL.TBLCheatManager.RemoveStamina
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::RemoveStamina()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.RemoveStamina");
		
		UTBLCheatManager_RemoveStamina_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687220
	 * 		Name   -> Function TBL.TBLCheatManager.RechargeSpecialItem
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::RechargeSpecialItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.RechargeSpecialItem");
		
		UTBLCheatManager_RechargeSpecialItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687160
	 * 		Name   -> Function TBL.TBLCheatManager.ReceivedCheatFromClientObj
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        CheatCommand                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Param                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ReceivedCheatFromClientObj(const class FName& CheatCommand, class UObject* Param)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ReceivedCheatFromClientObj");
		
		UTBLCheatManager_ReceivedCheatFromClientObj_Params params {};
		params.CheatCommand = CheatCommand;
		params.Param = Param;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016870A0
	 * 		Name   -> Function TBL.TBLCheatManager.ReceivedCheatFromClient
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        CheatCommand                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Param                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ReceivedCheatFromClient(const class FName& CheatCommand, const class FName& Param)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ReceivedCheatFromClient");
		
		UTBLCheatManager_ReceivedCheatFromClient_Params params {};
		params.CheatCommand = CheatCommand;
		params.Param = Param;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01687010
	 * 		Name   -> Function TBL.TBLCheatManager.RandomizeLoadout
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::RandomizeLoadout(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.RandomizeLoadout");
		
		UTBLCheatManager_RandomizeLoadout_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686EA0
	 * 		Name   -> Function TBL.TBLCheatManager.PushLogs
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      SourcePath                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      DestPath                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::PushLogs(const class FString& SourcePath, const class FString& DestPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PushLogs");
		
		UTBLCheatManager_PushLogs_Params params {};
		params.SourcePath = SourcePath;
		params.DestPath = DestPath;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686DC0
	 * 		Name   -> Function TBL.TBLCheatManager.PushCmdToTrace
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Cmd                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::PushCmdToTrace(const class FString& Cmd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PushCmdToTrace");
		
		UTBLCheatManager_PushCmdToTrace_Params params {};
		params.Cmd = Cmd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686CE0
	 * 		Name   -> Function TBL.TBLCheatManager.PushCmd
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Cmd                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::PushCmd(const class FString& Cmd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PushCmd");
		
		UTBLCheatManager_PushCmd_Params params {};
		params.Cmd = Cmd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCheatManager.PromptForRemoteDebugging
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::PromptForRemoteDebugging()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PromptForRemoteDebugging");
		
		UTBLCheatManager_PromptForRemoteDebugging_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686CC0
	 * 		Name   -> Function TBL.TBLCheatManager.ProfileGpuTopMaterials
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ProfileGpuTopMaterials()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ProfileGpuTopMaterials");
		
		UTBLCheatManager_ProfileGpuTopMaterials_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686CA0
	 * 		Name   -> Function TBL.TBLCheatManager.PrintStats
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::PrintStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PrintStats");
		
		UTBLCheatManager_PrintStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686BE0
	 * 		Name   -> Function TBL.TBLCheatManager.PlayFromHere
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::PlayFromHere()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PlayFromHere");
		
		UTBLCheatManager_PlayFromHere_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686C20
	 * 		Name   -> Function TBL.TBLCheatManager.PlayerRVOEnable
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              AvoidanceRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::PlayerRVOEnable(float AvoidanceRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PlayerRVOEnable");
		
		UTBLCheatManager_PlayerRVOEnable_Params params {};
		params.AvoidanceRadius = AvoidanceRadius;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686C00
	 * 		Name   -> Function TBL.TBLCheatManager.PlayerRVODisable
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::PlayerRVODisable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PlayerRVODisable");
		
		UTBLCheatManager_PlayerRVODisable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686B40
	 * 		Name   -> Function TBL.TBLCheatManager.PingServer
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      ServerAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::PingServer(const class FString& ServerAddress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PingServer");
		
		UTBLCheatManager_PingServer_Params params {};
		params.ServerAddress = ServerAddress;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686B20
	 * 		Name   -> Function TBL.TBLCheatManager.PauseCharacter
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::PauseCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PauseCharacter");
		
		UTBLCheatManager_PauseCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686B00
	 * 		Name   -> Function TBL.TBLCheatManager.PauseAI
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::PauseAI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.PauseAI");
		
		UTBLCheatManager_PauseAI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686AA0
	 * 		Name   -> Function TBL.TBLCheatManager.OnPossess
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCheatManager::OnPossess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.OnPossess");
		
		UTBLCheatManager_OnPossess_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCheatManager.OnKilled
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLCheatManager::OnKilled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.OnKilled");
		
		UTBLCheatManager_OnKilled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCheatManager.NextLatentCommand
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::NextLatentCommand()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.NextLatentCommand");
		
		UTBLCheatManager_NextLatentCommand_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686A40
	 * 		Name   -> Function TBL.TBLCheatManager.MergeMeshes
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::MergeMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.MergeMeshes");
		
		UTBLCheatManager_MergeMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686A40
	 * 		Name   -> Function TBL.TBLCheatManager.MergeMaterials
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::MergeMaterials()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.MergeMaterials");
		
		UTBLCheatManager_MergeMaterials_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686A20
	 * 		Name   -> Function TBL.TBLCheatManager.ManualInterrupt
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ManualInterrupt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ManualInterrupt");
		
		UTBLCheatManager_ManualInterrupt_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686A00
	 * 		Name   -> Function TBL.TBLCheatManager.LoseHelmet
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::LoseHelmet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.LoseHelmet");
		
		UTBLCheatManager_LoseHelmet_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686950
	 * 		Name   -> Function TBL.TBLCheatManager.LoadCatapult
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::LoadCatapult()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.LoadCatapult");
		
		UTBLCheatManager_LoadCatapult_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686930
	 * 		Name   -> Function TBL.TBLCheatManager.LoadAllCustomizationAssets
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::LoadAllCustomizationAssets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.LoadAllCustomizationAssets");
		
		UTBLCheatManager_LoadAllCustomizationAssets_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686910
	 * 		Name   -> Function TBL.TBLCheatManager.KillHorse
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::KillHorse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.KillHorse");
		
		UTBLCheatManager_KillHorse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016868B0
	 * 		Name   -> Function TBL.TBLCheatManager.IsFOVUncapped
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UTBLCheatManager::IsFOVUncapped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.IsFOVUncapped");
		
		UTBLCheatManager_IsFOVUncapped_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686880
	 * 		Name   -> Function TBL.TBLCheatManager.IsAutoAttacking
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool UTBLCheatManager::IsAutoAttacking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.IsAutoAttacking");
		
		UTBLCheatManager_IsAutoAttacking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686860
	 * 		Name   -> Function TBL.TBLCheatManager.Invulnerable
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::Invulnerable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.Invulnerable");
		
		UTBLCheatManager_Invulnerable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016867A0
	 * 		Name   -> Function TBL.TBLCheatManager.InputAction
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		Engine_EInputEvent                                 Event                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::InputAction(const class FName& AttackName, Engine_EInputEvent Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.InputAction");
		
		UTBLCheatManager_InputAction_Params params {};
		params.AttackName = AttackName;
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686760
	 * 		Name   -> Function TBL.TBLCheatManager.IgnoreAI
	 * 		Flags  -> (Final, Exec, Native, Protected, BlueprintCallable)
	 */
	void UTBLCheatManager::IgnoreAI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.IgnoreAI");
		
		UTBLCheatManager_IgnoreAI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686660
	 * 		Name   -> Function TBL.TBLCheatManager.HorseGotoState
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Variant                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::HorseGotoState(const class FName& CombatState, const class FName& HitDirection, int Variant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.HorseGotoState");
		
		UTBLCheatManager_HorseGotoState_Params params {};
		params.CombatState = CombatState;
		params.HitDirection = HitDirection;
		params.Variant = Variant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016865D0
	 * 		Name   -> Function TBL.TBLCheatManager.HorseAutorun
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::HorseAutorun(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.HorseAutorun");
		
		UTBLCheatManager_HorseAutorun_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016865B0
	 * 		Name   -> Function TBL.TBLCheatManager.HideDebugActor
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::HideDebugActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.HideDebugActor");
		
		UTBLCheatManager_HideDebugActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686590
	 * 		Name   -> Function TBL.TBLCheatManager.HideBothMeshes
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::HideBothMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.HideBothMeshes");
		
		UTBLCheatManager_HideBothMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686570
	 * 		Name   -> Function TBL.TBLCheatManager.HeldParryLoop
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCheatManager::HeldParryLoop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.HeldParryLoop");
		
		UTBLCheatManager_HeldParryLoop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686270
	 * 		Name   -> Function TBL.TBLCheatManager.GoToStatePlaying
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::GoToStatePlaying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.GoToStatePlaying");
		
		UTBLCheatManager_GoToStatePlaying_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686390
	 * 		Name   -> Function TBL.TBLCheatManager.GotoStateOnComponent
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class UCombatStateComponent*                       Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Variant                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::GotoStateOnComponent(class UCombatStateComponent* Component, const class FName& CombatState, const class FName& HitDirection, int Variant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.GotoStateOnComponent");
		
		UTBLCheatManager_GotoStateOnComponent_Params params {};
		params.Component = Component;
		params.CombatState = CombatState;
		params.HitDirection = HitDirection;
		params.Variant = Variant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686290
	 * 		Name   -> Function TBL.TBLCheatManager.GotoState
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        CombatState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Variant                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::GotoState(const class FName& CombatState, const class FName& HitDirection, int Variant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.GotoState");
		
		UTBLCheatManager_GotoState_Params params {};
		params.CombatState = CombatState;
		params.HitDirection = HitDirection;
		params.Variant = Variant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686250
	 * 		Name   -> Function TBL.TBLCheatManager.GiveHorse
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::GiveHorse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.GiveHorse");
		
		UTBLCheatManager_GiveHorse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686230
	 * 		Name   -> Function TBL.TBLCheatManager.GiveArmoredHorse
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::GiveArmoredHorse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.GiveArmoredHorse");
		
		UTBLCheatManager_GiveArmoredHorse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686140
	 * 		Name   -> Function TBL.TBLCheatManager.GetAnotherCharacter
	 * 		Flags  -> (Final, Native, Protected)
	 */
	class ATBLCharacter* UTBLCheatManager::GetAnotherCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.GetAnotherCharacter");
		
		UTBLCheatManager_GetAnotherCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686120
	 * 		Name   -> Function TBL.TBLCheatManager.ForceGC
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ForceGC()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ForceGC");
		
		UTBLCheatManager_ForceGC_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686040
	 * 		Name   -> Function TBL.TBLCheatManager.FakeGameIntent
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      ActivityId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::FakeGameIntent(const class FString& ActivityId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.FakeGameIntent");
		
		UTBLCheatManager_FakeGameIntent_Params params {};
		params.ActivityId = ActivityId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685F60
	 * 		Name   -> Function TBL.TBLCheatManager.Exi
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Cmd                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::Exi(const class FString& Cmd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.Exi");
		
		UTBLCheatManager_Exi_Params params {};
		params.Cmd = Cmd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685EA0
	 * 		Name   -> Function TBL.TBLCheatManager.ExecFileDelay
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Variation                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ExecFileDelay(float Time, float Variation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ExecFileDelay");
		
		UTBLCheatManager_ExecFileDelay_Params params {};
		params.Time = Time;
		params.Variation = Variation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685DC0
	 * 		Name   -> Function TBL.TBLCheatManager.ExecFile
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ExecFile(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ExecFile");
		
		UTBLCheatManager_ExecFile_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685DA0
	 * 		Name   -> Function TBL.TBLCheatManager.EnableHUDPostProcess
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::EnableHUDPostProcess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.EnableHUDPostProcess");
		
		UTBLCheatManager_EnableHUDPostProcess_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685D80
	 * 		Name   -> Function TBL.TBLCheatManager.DumpReplicationCounts
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DumpReplicationCounts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DumpReplicationCounts");
		
		UTBLCheatManager_DumpReplicationCounts_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685D60
	 * 		Name   -> Function TBL.TBLCheatManager.DumpPlayers
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DumpPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DumpPlayers");
		
		UTBLCheatManager_DumpPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685D40
	 * 		Name   -> Function TBL.TBLCheatManager.DumpCharacters
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DumpCharacters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DumpCharacters");
		
		UTBLCheatManager_DumpCharacters_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685D20
	 * 		Name   -> Function TBL.TBLCheatManager.DumpCharacterReplicationCounts
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DumpCharacterReplicationCounts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DumpCharacterReplicationCounts");
		
		UTBLCheatManager_DumpCharacterReplicationCounts_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685CA0
	 * 		Name   -> Function TBL.TBLCheatManager.DrawUnits
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Distance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::DrawUnits(float Distance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DrawUnits");
		
		UTBLCheatManager_DrawUnits_Params params {};
		params.Distance = Distance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685C80
	 * 		Name   -> Function TBL.TBLCheatManager.DisableStaminaDrain
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DisableStaminaDrain()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DisableStaminaDrain");
		
		UTBLCheatManager_DisableStaminaDrain_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685C60
	 * 		Name   -> Function TBL.TBLCheatManager.DisableHUDPostProcess
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DisableHUDPostProcess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DisableHUDPostProcess");
		
		UTBLCheatManager_DisableHUDPostProcess_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685B50
	 * 		Name   -> Function TBL.TBLCheatManager.DestroyClientBot
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DestroyClientBot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DestroyClientBot");
		
		UTBLCheatManager_DestroyClientBot_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685AD0
	 * 		Name   -> Function TBL.TBLCheatManager.DestroyAllForcedMoveForTeam
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		int                                                Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::DestroyAllForcedMoveForTeam(int Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DestroyAllForcedMoveForTeam");
		
		UTBLCheatManager_DestroyAllForcedMoveForTeam_Params params {};
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641DC0
	 * 		Name   -> Function TBL.TBLCheatManager.DebugShowLoadingScreen
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::DebugShowLoadingScreen(const class FString& MapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DebugShowLoadingScreen");
		
		UTBLCheatManager_DebugShowLoadingScreen_Params params {};
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCheatManager.DebugHideLoadingScreen
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::DebugHideLoadingScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.DebugHideLoadingScreen");
		
		UTBLCheatManager_DebugHideLoadingScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685AB0
	 * 		Name   -> Function TBL.TBLCheatManager.CloseBlueprintDebugMenu
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::CloseBlueprintDebugMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.CloseBlueprintDebugMenu");
		
		UTBLCheatManager_CloseBlueprintDebugMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685760
	 * 		Name   -> Function TBL.TBLCheatManager.ClientForceGC
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ClientForceGC()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ClientForceGC");
		
		UTBLCheatManager_ClientForceGC_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685640
	 * 		Name   -> Function TBL.TBLCheatManager.ClientBot
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ClientBot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ClientBot");
		
		UTBLCheatManager_ClientBot_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685620
	 * 		Name   -> Function TBL.TBLCheatManager.ClearReplicationCounts
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ClearReplicationCounts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ClearReplicationCounts");
		
		UTBLCheatManager_ClearReplicationCounts_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685600
	 * 		Name   -> Function TBL.TBLCheatManager.ClearCharacterRuntimeAssetCache
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::ClearCharacterRuntimeAssetCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ClearCharacterRuntimeAssetCache");
		
		UTBLCheatManager_ClearCharacterRuntimeAssetCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685580
	 * 		Name   -> Function TBL.TBLCheatManager.ClearAllForceMoveToPlayer
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ClearAllForceMoveToPlayer(int Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ClearAllForceMoveToPlayer");
		
		UTBLCheatManager_ClearAllForceMoveToPlayer_Params params {};
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLCheatManager.CheckLightingBuilt
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::CheckLightingBuilt()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.CheckLightingBuilt");
		
		UTBLCheatManager_CheckLightingBuilt_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016851F0
	 * 		Name   -> Function TBL.TBLCheatManager.BpCheat
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FString                                      Cmd                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLCheatManager::BpCheat(const class FString& Cmd)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.BpCheat");
		
		UTBLCheatManager_BpCheat_Params params {};
		params.Cmd = Cmd;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016851D0
	 * 		Name   -> Function TBL.TBLCheatManager.BotsBecomeGods
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::BotsBecomeGods()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.BotsBecomeGods");
		
		UTBLCheatManager_BotsBecomeGods_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685150
	 * 		Name   -> Function TBL.TBLCheatManager.BotNearestForceMoveToPlayer
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::BotNearestForceMoveToPlayer(int Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.BotNearestForceMoveToPlayer");
		
		UTBLCheatManager_BotNearestForceMoveToPlayer_Params params {};
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685130
	 * 		Name   -> Function TBL.TBLCheatManager.BotGodsBecomeMortal
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::BotGodsBecomeMortal()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.BotGodsBecomeMortal");
		
		UTBLCheatManager_BotGodsBecomeMortal_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685070
	 * 		Name   -> Function TBL.TBLCheatManager.BotForceMoveToPlayer
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                bClearOtherForcedMoves                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::BotForceMoveToPlayer(int Team, int bClearOtherForcedMoves)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.BotForceMoveToPlayer");
		
		UTBLCheatManager_BotForceMoveToPlayer_Params params {};
		params.Team = Team;
		params.bClearOtherForcedMoves = bClearOtherForcedMoves;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01685050
	 * 		Name   -> Function TBL.TBLCheatManager.BlueprintDebugMenu
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::BlueprintDebugMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.BlueprintDebugMenu");
		
		UTBLCheatManager_BlueprintDebugMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684FC0
	 * 		Name   -> Function TBL.TBLCheatManager.AutoRunAway
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AutoRunAway(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoRunAway");
		
		UTBLCheatManager_AutoRunAway_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684F30
	 * 		Name   -> Function TBL.TBLCheatManager.AutoMoveToCharacter
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AutoMoveToCharacter(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoMoveToCharacter");
		
		UTBLCheatManager_AutoMoveToCharacter_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684EB0
	 * 		Name   -> Function TBL.TBLCheatManager.AutoClimbLadder
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AutoClimbLadder(float Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoClimbLadder");
		
		UTBLCheatManager_AutoClimbLadder_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684DB0
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttackStart
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ChargeTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LoopTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AutoAttackStart(const class FName& AttackName, float ChargeTime, float LoopTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttackStart");
		
		UTBLCheatManager_AutoAttackStart_Params params {};
		params.AttackName = AttackName;
		params.ChargeTime = ChargeTime;
		params.LoopTime = LoopTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684D90
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttackLoop
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCheatManager::AutoAttackLoop()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttackLoop");
		
		UTBLCheatManager_AutoAttackLoop_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684D10
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttackHold
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AutoAttackHold(const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttackHold");
		
		UTBLCheatManager_AutoAttackHold_Params params {};
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684C10
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttackEx
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ChargeTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LoopTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AutoAttackEx(const class FName& AttackName, float ChargeTime, float LoopTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttackEx");
		
		UTBLCheatManager_AutoAttackEx_Params params {};
		params.AttackName = AttackName;
		params.ChargeTime = ChargeTime;
		params.LoopTime = LoopTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684BF0
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttackEndCharge
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCheatManager::AutoAttackEndCharge()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttackEndCharge");
		
		UTBLCheatManager_AutoAttackEndCharge_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684BD0
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttackClearInternal
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLCheatManager::AutoAttackClearInternal()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttackClearInternal");
		
		UTBLCheatManager_AutoAttackClearInternal_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684BB0
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttackClear
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::AutoAttackClear()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttackClear");
		
		UTBLCheatManager_AutoAttackClear_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684B30
	 * 		Name   -> Function TBL.TBLCheatManager.AutoAttack
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AutoAttack(const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AutoAttack");
		
		UTBLCheatManager_AutoAttack_Params params {};
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016848D0
	 * 		Name   -> Function TBL.TBLCheatManager.ApplyStatBonus
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		TBL_EStat                                          Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ApplyStatBonus(TBL_EStat Stat, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ApplyStatBonus");
		
		UTBLCheatManager_ApplyStatBonus_Params params {};
		params.Stat = Stat;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684800
	 * 		Name   -> Function TBL.TBLCheatManager.ApplyDamage
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        DamageType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ApplyDamage(float Damage, const class FName& DamageType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ApplyDamage");
		
		UTBLCheatManager_ApplyDamage_Params params {};
		params.Damage = Damage;
		params.DamageType = DamageType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684780
	 * 		Name   -> Function TBL.TBLCheatManager.ApplyCondition
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::ApplyCondition(const class FName& Condition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.ApplyCondition");
		
		UTBLCheatManager_ApplyCondition_Params params {};
		params.Condition = Condition;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684740
	 * 		Name   -> Function TBL.TBLCheatManager.AKStopProfilerCapture
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::AKStopProfilerCapture()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AKStopProfilerCapture");
		
		UTBLCheatManager_AKStopProfilerCapture_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016846A0
	 * 		Name   -> Function TBL.TBLCheatManager.AKStartProfilerCapture
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCheatManager::AKStartProfilerCapture(const class FString& Filename)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AKStartProfilerCapture");
		
		UTBLCheatManager_AKStartProfilerCapture_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684680
	 * 		Name   -> Function TBL.TBLCheatManager.AIObjectiveHere
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::AIObjectiveHere()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AIObjectiveHere");
		
		UTBLCheatManager_AIObjectiveHere_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01684760
	 * 		Name   -> Function TBL.TBLCheatManager.AddAchievementProgress
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLCheatManager::AddAchievementProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCheatManager.AddAchievementProgress");
		
		UTBLCheatManager_AddAchievementProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCheatManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCheatManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCheatManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01686200
	 * 		Name   -> Function TBL.TBLBPCheatManager.GetOwnerPlayerController
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class ATBLPlayerController* UTBLBPCheatManager::GetOwnerPlayerController()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBPCheatManager.GetOwnerPlayerController");
		
		UTBLBPCheatManager_GetOwnerPlayerController_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016861D0
	 * 		Name   -> Function TBL.TBLBPCheatManager.GetOwnerCharacter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class ATBLCharacter* UTBLBPCheatManager::GetOwnerCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLBPCheatManager.GetOwnerCharacter");
		
		UTBLBPCheatManager_GetOwnerCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLBPCheatManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLBPCheatManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLBPCheatManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCloudStorage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCloudStorage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCloudStorage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLBoxCollision.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLBoxCollision::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLBoxCollision");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLConsole.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLConsole::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLConsole");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.EnableCombatCondition
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FString                                      Keybinding                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Condition                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Enable                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        HintText                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::EnableCombatCondition(const class FString& Keybinding, const class FName& Condition, bool Enable, const class FText& HintText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.EnableCombatCondition");
		
		UTBLCrosshairInterface_EnableCombatCondition_Params params {};
		params.Keybinding = Keybinding;
		params.Condition = Condition;
		params.Enable = Enable;
		params.HintText = HintText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairWasParried
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLCrosshairInterface::CrosshairWasParried()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairWasParried");
		
		UTBLCrosshairInterface_CrosshairWasParried_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairTutorialSuccessMessage
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        CustomText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairTutorialSuccessMessage(const class FText& CustomText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairTutorialSuccessMessage");
		
		UTBLCrosshairInterface_CrosshairTutorialSuccessMessage_Params params {};
		params.CustomText = CustomText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairTutorialNeutralMessage
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        CustomText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairTutorialNeutralMessage(const class FText& CustomText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairTutorialNeutralMessage");
		
		UTBLCrosshairInterface_CrosshairTutorialNeutralMessage_Params params {};
		params.CustomText = CustomText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairTutorialFailedMessage
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        CustomText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairTutorialFailedMessage(const class FText& CustomText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairTutorialFailedMessage");
		
		UTBLCrosshairInterface_CrosshairTutorialFailedMessage_Params params {};
		params.CustomText = CustomText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairProjectileFired
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLCrosshairInterface::CrosshairProjectileFired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairProjectileFired");
		
		UTBLCrosshairInterface_CrosshairProjectileFired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairPostShuffleMessage
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLCrosshairInterface::CrosshairPostShuffleMessage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairPostShuffleMessage");
		
		UTBLCrosshairInterface_CrosshairPostShuffleMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairPostRespawnMessage
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        ClassName                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairPostRespawnMessage(const class FText& ClassName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairPostRespawnMessage");
		
		UTBLCrosshairInterface_CrosshairPostRespawnMessage_Params params {};
		params.ClassName = ClassName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairOutOfCombatWarning
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bShowMessage                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairOutOfCombatWarning(bool bShowMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairOutOfCombatWarning");
		
		UTBLCrosshairInterface_CrosshairOutOfCombatWarning_Params params {};
		params.bShowMessage = bShowMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairLostLimbMessage
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLCrosshairInterface::CrosshairLostLimbMessage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairLostLimbMessage");
		
		UTBLCrosshairInterface_CrosshairLostLimbMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairHoldingProgress
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		float                                              Progress                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairHoldingProgress(float Progress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairHoldingProgress");
		
		UTBLCrosshairInterface_CrosshairHoldingProgress_Params params {};
		params.Progress = Progress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairHoldingInitiated
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               IsRangedAttack                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairHoldingInitiated(bool IsRangedAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairHoldingInitiated");
		
		UTBLCrosshairInterface_CrosshairHoldingInitiated_Params params {};
		params.IsRangedAttack = IsRangedAttack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairHoldingCompleted
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLCrosshairInterface::CrosshairHoldingCompleted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairHoldingCompleted");
		
		UTBLCrosshairInterface_CrosshairHoldingCompleted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairHoldingAborted
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               IsStateEnd                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Force                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairHoldingAborted(bool IsStateEnd, bool Force)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairHoldingAborted");
		
		UTBLCrosshairInterface_CrosshairHoldingAborted_Params params {};
		params.IsStateEnd = IsStateEnd;
		params.Force = Force;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairGameplayEvent
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Event                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Enable                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Scaling                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsPositive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairGameplayEvent(const class FName& Event, bool Enable, float Scaling, bool IsPositive)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairGameplayEvent");
		
		UTBLCrosshairInterface_CrosshairGameplayEvent_Params params {};
		params.Event = Event;
		params.Enable = Enable;
		params.Scaling = Scaling;
		params.IsPositive = IsPositive;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairDamageTakenEvent
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		float                                              Damage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairDamageTakenEvent(float Damage, float HitDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairDamageTakenEvent");
		
		UTBLCrosshairInterface_CrosshairDamageTakenEvent_Params params {};
		params.Damage = Damage;
		params.HitDirection = HitDirection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLCrosshairInterface.CrosshairDamageEvent
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Event                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDamageTakenEvent                           DamageTakenEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               IsEnemy                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLCrosshairInterface::CrosshairDamageEvent(const class FName& Event, const struct FDamageTakenEvent& DamageTakenEvent, bool IsEnemy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLCrosshairInterface.CrosshairDamageEvent");
		
		UTBLCrosshairInterface_CrosshairDamageEvent_Params params {};
		params.Event = Event;
		params.DamageTakenEvent = DamageTakenEvent;
		params.IsEnemy = IsEnemy;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLCrosshairInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLCrosshairInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLCrosshairInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C6D0
	 * 		Name   -> Function TBL.TBLDebugCameraController.DisplayDebugScrollUp
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLDebugCameraController::DisplayDebugScrollUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDebugCameraController.DisplayDebugScrollUp");
		
		ATBLDebugCameraController_DisplayDebugScrollUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C6B0
	 * 		Name   -> Function TBL.TBLDebugCameraController.DisplayDebugScrollReleased
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLDebugCameraController::DisplayDebugScrollReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDebugCameraController.DisplayDebugScrollReleased");
		
		ATBLDebugCameraController_DisplayDebugScrollReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C690
	 * 		Name   -> Function TBL.TBLDebugCameraController.DisplayDebugScrollDown
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLDebugCameraController::DisplayDebugScrollDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDebugCameraController.DisplayDebugScrollDown");
		
		ATBLDebugCameraController_DisplayDebugScrollDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLDebugCameraController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLDebugCameraController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLDebugCameraController");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLDebugCameraHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLDebugCameraHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLDebugCameraHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLDemoHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLDemoHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLDemoHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E640
	 * 		Name   -> Function TBL.TBLDemoPlayerController.ToggleHud
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLDemoPlayerController::ToggleHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.ToggleHud");
		
		ATBLDemoPlayerController_ToggleHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E620
	 * 		Name   -> Function TBL.TBLDemoPlayerController.ToggleDebugHud
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLDemoPlayerController::ToggleDebugHud()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.ToggleDebugHud");
		
		ATBLDemoPlayerController_ToggleDebugHud_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E600
	 * 		Name   -> Function TBL.TBLDemoPlayerController.ToggleCamera
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLDemoPlayerController::ToggleCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.ToggleCamera");
		
		ATBLDemoPlayerController_ToggleCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168DA20
	 * 		Name   -> Function TBL.TBLDemoPlayerController.ShowIngameMenu
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLDemoPlayerController::ShowIngameMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.ShowIngameMenu");
		
		ATBLDemoPlayerController_ShowIngameMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CE80
	 * 		Name   -> Function TBL.TBLDemoPlayerController.OnPausePlayback
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLDemoPlayerController::OnPausePlayback()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.OnPausePlayback");
		
		ATBLDemoPlayerController_OnPausePlayback_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CE00
	 * 		Name   -> Function TBL.TBLDemoPlayerController.OnIncreasePlaybackSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLDemoPlayerController::OnIncreasePlaybackSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.OnIncreasePlaybackSpeed");
		
		ATBLDemoPlayerController_OnIncreasePlaybackSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CDE0
	 * 		Name   -> Function TBL.TBLDemoPlayerController.OnDecreasePlaybackSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void ATBLDemoPlayerController::OnDecreasePlaybackSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.OnDecreasePlaybackSpeed");
		
		ATBLDemoPlayerController_OnDecreasePlaybackSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CBC0
	 * 		Name   -> Function TBL.TBLDemoPlayerController.IsPaused
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLDemoPlayerController::IsPaused()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.IsPaused");
		
		ATBLDemoPlayerController_IsPaused_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CA60
	 * 		Name   -> Function TBL.TBLDemoPlayerController.IsFirstPerson
	 * 		Flags  -> (Native, Public, Const)
	 */
	bool ATBLDemoPlayerController::IsFirstPerson()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.IsFirstPerson");
		
		ATBLDemoPlayerController_IsFirstPerson_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C830
	 * 		Name   -> Function TBL.TBLDemoPlayerController.GetPlaybackSpeed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float ATBLDemoPlayerController::GetPlaybackSpeed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDemoPlayerController.GetPlaybackSpeed");
		
		ATBLDemoPlayerController_GetPlaybackSpeed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLDemoPlayerController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLDemoPlayerController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLDemoPlayerController");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9D20
	 * 		Name   -> Function TBL.TBLScreenManager.SwapNamedScreenToFront
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ScreenName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    Overlay                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::SwapNamedScreenToFront(const class FName& ScreenName, class UOverlay* Overlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.SwapNamedScreenToFront");
		
		UTBLScreenManager_SwapNamedScreenToFront_Params params {};
		params.ScreenName = ScreenName;
		params.Overlay = Overlay;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9AA0
	 * 		Name   -> Function TBL.TBLScreenManager.SetWidgetAsRadioGroupSelection
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Group                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTBLUserWidget*                              InSelection                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::SetWidgetAsRadioGroupSelection(const class FName& Group, class UTBLUserWidget* InSelection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.SetWidgetAsRadioGroupSelection");
		
		UTBLScreenManager_SetWidgetAsRadioGroupSelection_Params params {};
		params.Group = Group;
		params.InSelection = InSelection;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9A10
	 * 		Name   -> Function TBL.TBLScreenManager.SetHudVisibility
	 * 		Flags  -> (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bVisible                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::SetHudVisibility(bool bVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.SetHudVisibility");
		
		UTBLScreenManager_SetHudVisibility_Params params {};
		params.bVisible = bVisible;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9990
	 * 		Name   -> Function TBL.TBLScreenManager.SetActiveCrosshair
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Crosshair                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::SetActiveCrosshair(class UWidget* Crosshair)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.SetActiveCrosshair");
		
		UTBLScreenManager_SetActiveCrosshair_Params params {};
		params.Crosshair = Crosshair;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D93D0
	 * 		Name   -> Function TBL.TBLScreenManager.RemoveScreenFromStack
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLScreenWidget*                            Screen                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    Overlay                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPopOnly                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bDontTellScreen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLScreenManager::RemoveScreenFromStack(class UTBLScreenWidget* Screen, class UOverlay* Overlay, bool bPopOnly, bool bDontTellScreen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.RemoveScreenFromStack");
		
		UTBLScreenManager_RemoveScreenFromStack_Params params {};
		params.Screen = Screen;
		params.Overlay = Overlay;
		params.bPopOnly = bPopOnly;
		params.bDontTellScreen = bDontTellScreen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9360
	 * 		Name   -> Function TBL.TBLScreenManager.PushShowMouseCursorStack
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::STATIC_PushShowMouseCursorStack(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.PushShowMouseCursorStack");
		
		UTBLScreenManager_PushShowMouseCursorStack_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D92A0
	 * 		Name   -> Function TBL.TBLScreenManager.PushScreenToStack
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLScreenWidget*                            Screen                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    Overlay                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::PushScreenToStack(class UTBLScreenWidget* Screen, class UOverlay* Overlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.PushScreenToStack");
		
		UTBLScreenManager_PushScreenToStack_Params params {};
		params.Screen = Screen;
		params.Overlay = Overlay;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9120
	 * 		Name   -> Function TBL.TBLScreenManager.PushNamedScreenToStack
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLScreenWidget*                            Screen                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    Overlay                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ScreenName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::PushNamedScreenToStack(class UTBLScreenWidget* Screen, class UOverlay* Overlay, const class FName& ScreenName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.PushNamedScreenToStack");
		
		UTBLScreenManager_PushNamedScreenToStack_Params params {};
		params.Screen = Screen;
		params.Overlay = Overlay;
		params.ScreenName = ScreenName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8F30
	 * 		Name   -> Function TBL.TBLScreenManager.PopShowMouseCursorStack
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::STATIC_PopShowMouseCursorStack(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.PopShowMouseCursorStack");
		
		UTBLScreenManager_PopShowMouseCursorStack_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8EB0
	 * 		Name   -> Function TBL.TBLScreenManager.PopScreenStack
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UOverlay*                                    Overlay                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::PopScreenStack(class UOverlay* Overlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.PopScreenStack");
		
		UTBLScreenManager_PopScreenStack_Params params {};
		params.Overlay = Overlay;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenManager.OpenDebugMenu
	 * 		Flags  -> (BlueprintCosmetic, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class UBlueprintDebugMenuComponent*                DebugMenuComponent                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::OpenDebugMenu(class UBlueprintDebugMenuComponent* DebugMenuComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.OpenDebugMenu");
		
		UTBLScreenManager_OpenDebugMenu_Params params {};
		params.DebugMenuComponent = DebugMenuComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8950
	 * 		Name   -> Function TBL.TBLScreenManager.GetTopScreen
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UOverlay*                                    Overlay                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OutScreenName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTBLScreenWidget*                            OutScreen                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::GetTopScreen(class UOverlay* Overlay, class FName* OutScreenName, class UTBLScreenWidget** OutScreen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.GetTopScreen");
		
		UTBLScreenManager_GetTopScreen_Params params {};
		params.Overlay = Overlay;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutScreenName != nullptr)
			*OutScreenName = params.OutScreenName;
		if (OutScreen != nullptr)
			*OutScreen = params.OutScreen;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8930
	 * 		Name   -> Function TBL.TBLScreenManager.GetGamepadNavigationMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TBL_EGamepadNavigationMode UTBLScreenManager::GetGamepadNavigationMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.GetGamepadNavigationMode");
		
		UTBLScreenManager_GetGamepadNavigationMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8910
	 * 		Name   -> Function TBL.TBLScreenManager.GetGamepadInputMove
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TBL_EGamepadInputMode UTBLScreenManager::GetGamepadInputMove()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.GetGamepadInputMove");
		
		UTBLScreenManager_GetGamepadInputMove_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D88E0
	 * 		Name   -> Function TBL.TBLScreenManager.GetActiveCrosshair
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UWidget* UTBLScreenManager::GetActiveCrosshair()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.GetActiveCrosshair");
		
		UTBLScreenManager_GetActiveCrosshair_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D86A0
	 * 		Name   -> Function TBL.TBLScreenManager.ClearScreenStack
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UOverlay*                                    Overlay                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::ClearScreenStack(class UOverlay* Overlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.ClearScreenStack");
		
		UTBLScreenManager_ClearScreenStack_Params params {};
		params.Overlay = Overlay;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenManager.BP_FadeOut
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              PlaybackSpeed                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::BP_FadeOut(float PlaybackSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.BP_FadeOut");
		
		UTBLScreenManager_BP_FadeOut_Params params {};
		params.PlaybackSpeed = PlaybackSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenManager.BP_FadeIn
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              PlaybackSpeed                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenManager::BP_FadeIn(float PlaybackSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenManager.BP_FadeIn");
		
		UTBLScreenManager_BP_FadeIn_Params params {};
		params.PlaybackSpeed = PlaybackSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLScreenManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLScreenManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLScreenManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E2F0
	 * 		Name   -> Function TBL.TBLDialogManager.ShowYesNoDialog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              YesDelegate                                                (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              NoDelegate                                                 (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ShowYesNoDialog(const class FText& Title, const class FText& Body, const class FScriptDelegate& YesDelegate, const class FScriptDelegate& NoDelegate, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ShowYesNoDialog");
		
		UTBLDialogManager_ShowYesNoDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		params.YesDelegate = YesDelegate;
		params.NoDelegate = NoDelegate;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E050
	 * 		Name   -> Function TBL.TBLDialogManager.ShowOkDialog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              OkDelegate                                                 (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ShowOkDialog(const class FText& Title, const class FText& Body, const class FScriptDelegate& OkDelegate, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ShowOkDialog");
		
		UTBLDialogManager_ShowOkDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		params.OkDelegate = OkDelegate;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168DDE0
	 * 		Name   -> Function TBL.TBLDialogManager.ShowOkCancelDialog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              OkDelegate                                                 (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              CancelDelegate                                             (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ShowOkCancelDialog(const class FText& Title, const class FText& Body, const class FScriptDelegate& OkDelegate, const class FScriptDelegate& CancelDelegate, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ShowOkCancelDialog");
		
		UTBLDialogManager_ShowOkCancelDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		params.OkDelegate = OkDelegate;
		params.CancelDelegate = CancelDelegate;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168DC10
	 * 		Name   -> Function TBL.TBLDialogManager.ShowNoButtonsWorkingDialog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ShowNoButtonsWorkingDialog(const class FText& Title, const class FText& Body, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ShowNoButtonsWorkingDialog");
		
		UTBLDialogManager_ShowNoButtonsWorkingDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168DA40
	 * 		Name   -> Function TBL.TBLDialogManager.ShowNoButtonsDialog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ShowNoButtonsDialog(const class FText& Title, const class FText& Body, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ShowNoButtonsDialog");
		
		UTBLDialogManager_ShowNoButtonsDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D780
	 * 		Name   -> Function TBL.TBLDialogManager.ShowExitDialog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              ExitDelegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ShowExitDialog(const class FText& Title, const class FText& Body, const class FScriptDelegate& ExitDelegate, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ShowExitDialog");
		
		UTBLDialogManager_ShowExitDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		params.ExitDelegate = ExitDelegate;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D560
	 * 		Name   -> Function TBL.TBLDialogManager.ShowCancelWorkingDialog
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              CancelDelegate                                             (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ShowCancelWorkingDialog(const class FText& Title, const class FText& Body, const class FScriptDelegate& CancelDelegate, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ShowCancelWorkingDialog");
		
		UTBLDialogManager_ShowCancelWorkingDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		params.CancelDelegate = CancelDelegate;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.PushDialog
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		class UTBLDialogWidget*                            Dialog                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                DialogPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLDialogManager::PushDialog(class UTBLDialogWidget* Dialog, int DialogPriority)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.PushDialog");
		
		UTBLDialogManager_PushDialog_Params params {};
		params.Dialog = Dialog;
		params.DialogPriority = DialogPriority;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.OnCreateYesNoDialog
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogWidget* UTBLDialogManager::OnCreateYesNoDialog(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.OnCreateYesNoDialog");
		
		UTBLDialogManager_OnCreateYesNoDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.OnCreateOkDialog
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogWidget* UTBLDialogManager::OnCreateOkDialog(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.OnCreateOkDialog");
		
		UTBLDialogManager_OnCreateOkDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.OnCreateOkCancelDialog
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogWidget* UTBLDialogManager::OnCreateOkCancelDialog(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.OnCreateOkCancelDialog");
		
		UTBLDialogManager_OnCreateOkCancelDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.OnCreateNoButtonsWorkingDialog
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogWidget* UTBLDialogManager::OnCreateNoButtonsWorkingDialog(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.OnCreateNoButtonsWorkingDialog");
		
		UTBLDialogManager_OnCreateNoButtonsWorkingDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.OnCreateNoButtonsDialog
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogWidget* UTBLDialogManager::OnCreateNoButtonsDialog(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.OnCreateNoButtonsDialog");
		
		UTBLDialogManager_OnCreateNoButtonsDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.OnCreateExitDialog
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogWidget* UTBLDialogManager::OnCreateExitDialog(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.OnCreateExitDialog");
		
		UTBLDialogManager_OnCreateExitDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogManager.OnCreateCancelWorkingDialog
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogWidget* UTBLDialogManager::OnCreateCancelWorkingDialog(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.OnCreateCancelWorkingDialog");
		
		UTBLDialogManager_OnCreateCancelWorkingDialog_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C9A0
	 * 		Name   -> Function TBL.TBLDialogManager.IsDialogActive
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FDialogHandle                               InDialogHandle                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UTBLDialogManager::IsDialogActive(const struct FDialogHandle& InDialogHandle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.IsDialogActive");
		
		UTBLDialogManager_IsDialogActive_Params params {};
		params.InDialogHandle = InDialogHandle;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C4F0
	 * 		Name   -> Function TBL.TBLDialogManager.CloseDialog
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FDialogHandle                               DialogHandle                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::CloseDialog(const struct FDialogHandle& DialogHandle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.CloseDialog");
		
		UTBLDialogManager_CloseDialog_Params params {};
		params.DialogHandle = DialogHandle;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C1E0
	 * 		Name   -> Function TBL.TBLDialogManager.ChangeDialogText
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FDialogHandle                               DialogHandle                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FDialogHandle UTBLDialogManager::ChangeDialogText(const struct FDialogHandle& DialogHandle, const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogManager.ChangeDialogText");
		
		UTBLDialogManager_ChangeDialogText_Params params {};
		params.DialogHandle = DialogHandle;
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLDialogManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLDialogManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLDialogManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenWidget.UpdateNotifications
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLScreenWidget::UpdateNotifications()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.UpdateNotifications");
		
		UTBLScreenWidget_UpdateNotifications_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9B90
	 * 		Name   -> Function TBL.TBLScreenWidget.ShouldShowMouseCursorOnInputCapture
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UTBLScreenWidget::ShouldShowMouseCursorOnInputCapture()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.ShouldShowMouseCursorOnInputCapture");
		
		UTBLScreenWidget_ShouldShowMouseCursorOnInputCapture_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9B60
	 * 		Name   -> Function TBL.TBLScreenWidget.ShouldOverrideIsFocusable
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent, Const)
	 */
	bool UTBLScreenWidget::ShouldOverrideIsFocusable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.ShouldOverrideIsFocusable");
		
		UTBLScreenWidget_ShouldOverrideIsFocusable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9530
	 * 		Name   -> Function TBL.TBLScreenWidget.RequestPlayerInput
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               WantsInput                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::RequestPlayerInput(bool WantsInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.RequestPlayerInput");
		
		UTBLScreenWidget_RequestPlayerInput_Params params {};
		params.WantsInput = WantsInput;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9220
	 * 		Name   -> Function TBL.TBLScreenWidget.PushScreenToParentStack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLScreenWidget*                            NextScreen                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::PushScreenToParentStack(class UTBLScreenWidget* NextScreen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.PushScreenToParentStack");
		
		UTBLScreenWidget_PushScreenToParentStack_Params params {};
		params.NextScreen = NextScreen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8E90
	 * 		Name   -> Function TBL.TBLScreenWidget.PopOffParentStack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLScreenWidget::PopOffParentStack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.PopOffParentStack");
		
		UTBLScreenWidget_PopOffParentStack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8D40
	 * 		Name   -> Function TBL.TBLScreenWidget.PlayOutroAnimation
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidgetAnimation*                            InAnimation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StartAtTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NumLoopsToPlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReverseExisting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::PlayOutroAnimation(class UWidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, bool bReverseExisting)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.PlayOutroAnimation");
		
		UTBLScreenWidget_PlayOutroAnimation_Params params {};
		params.InAnimation = InAnimation;
		params.StartAtTime = StartAtTime;
		params.NumLoopsToPlay = NumLoopsToPlay;
		params.bReverseExisting = bReverseExisting;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8BF0
	 * 		Name   -> Function TBL.TBLScreenWidget.PlayIntroAnimation
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidgetAnimation*                            InAnimation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StartAtTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NumLoopsToPlay                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReverseExisting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::PlayIntroAnimation(class UWidgetAnimation* InAnimation, float StartAtTime, int NumLoopsToPlay, bool bReverseExisting)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.PlayIntroAnimation");
		
		UTBLScreenWidget_PlayIntroAnimation_Params params {};
		params.InAnimation = InAnimation;
		params.StartAtTime = StartAtTime;
		params.NumLoopsToPlay = NumLoopsToPlay;
		params.bReverseExisting = bReverseExisting;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenWidget.OnResumedScreen
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLScreenWidget::OnResumedScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.OnResumedScreen");
		
		UTBLScreenWidget_OnResumedScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FA50
	 * 		Name   -> Function TBL.TBLScreenWidget.OnPausedScreen
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLScreenWidget::OnPausedScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.OnPausedScreen");
		
		UTBLScreenWidget_OnPausedScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenWidget.OnOutroAnimationDone
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bWasScreenClosed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::OnOutroAnimationDone(bool bWasScreenClosed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.OnOutroAnimationDone");
		
		UTBLScreenWidget_OnOutroAnimationDone_Params params {};
		params.bWasScreenClosed = bWasScreenClosed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FA90
	 * 		Name   -> Function TBL.TBLScreenWidget.OnOpenedScreen
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLScreenWidget::OnOpenedScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.OnOpenedScreen");
		
		UTBLScreenWidget_OnOpenedScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FAF0
	 * 		Name   -> Function TBL.TBLScreenWidget.OnClosedScreen
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLScreenWidget::OnClosedScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.OnClosedScreen");
		
		UTBLScreenWidget_OnClosedScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D88A0
	 * 		Name   -> Function TBL.TBLScreenWidget.FireUpdateNotifications
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLScreenWidget::FireUpdateNotifications()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.FireUpdateNotifications");
		
		UTBLScreenWidget_FireUpdateNotifications_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenWidget.FireDefaultButtonAction
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		int                                                ButtonIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::FireDefaultButtonAction(int ButtonIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.FireDefaultButtonAction");
		
		UTBLScreenWidget_FireDefaultButtonAction_Params params {};
		params.ButtonIndex = ButtonIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8820
	 * 		Name   -> Function TBL.TBLScreenWidget.FireButtonAction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ButtonID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::FireButtonAction(const class FName& ButtonID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.FireButtonAction");
		
		UTBLScreenWidget_FireButtonAction_Params params {};
		params.ButtonID = ButtonID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLScreenWidget.BP_OnBlockKeyPress
	 * 		Flags  -> (Event, Protected, BlueprintEvent, Const)
	 * Parameters:
	 * 		TBL_EWeaponAbilitySlotKey                          WeaponAbilitySlotKey                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLScreenWidget::BP_OnBlockKeyPress(TBL_EWeaponAbilitySlotKey WeaponAbilitySlotKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.BP_OnBlockKeyPress");
		
		UTBLScreenWidget_BP_OnBlockKeyPress_Params params {};
		params.WeaponAbilitySlotKey = WeaponAbilitySlotKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8610
	 * 		Name   -> Function TBL.TBLScreenWidget.BlockKeyPress
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		TBL_EWeaponAbilitySlotKey                          WeaponAbilitySlotKey                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLScreenWidget::BlockKeyPress(TBL_EWeaponAbilitySlotKey WeaponAbilitySlotKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.BlockKeyPress");
		
		UTBLScreenWidget_BlockKeyPress_Params params {};
		params.WeaponAbilitySlotKey = WeaponAbilitySlotKey;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8480
	 * 		Name   -> Function TBL.TBLScreenWidget.AddButtonAction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ButtonID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ButtonIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLScreenWidget::AddButtonAction(const class FName& ButtonID, int ButtonIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLScreenWidget.AddButtonAction");
		
		UTBLScreenWidget_AddButtonAction_Params params {};
		params.ButtonID = ButtonID;
		params.ButtonIndex = ButtonIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLScreenWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLScreenWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLScreenWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D1E0
	 * 		Name   -> Function TBL.TBLDialogWidget.ProcessButtonClick
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EDialogButtons                                 ButtonClicked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLDialogWidget::ProcessButtonClick(TBL_EDialogButtons ButtonClicked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogWidget.ProcessButtonClick");
		
		UTBLDialogWidget_ProcessButtonClick_Params params {};
		params.ButtonClicked = ButtonClicked;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C7C0
	 * 		Name   -> Function TBL.TBLDialogWidget.GetDialogHandle
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FDialogHandle UTBLDialogWidget::GetDialogHandle()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogWidget.GetDialogHandle");
		
		UTBLDialogWidget_GetDialogHandle_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLDialogWidget.ChangeText
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        Title                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLDialogWidget::ChangeText(const class FText& Title, const class FText& Body)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLDialogWidget.ChangeText");
		
		UTBLDialogWidget_ChangeText_Params params {};
		params.Title = Title;
		params.Body = Body;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLDialogWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLDialogWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLDialogWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C8B0
	 * 		Name   -> Function TBL.TBLEngine.GetStatMS
	 * 		Flags  -> (Final, Native, Public)
	 */
	float UTBLEngine::GetStatMS()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLEngine.GetStatMS");
		
		UTBLEngine_GetStatMS_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C880
	 * 		Name   -> Function TBL.TBLEngine.GetStatFPS
	 * 		Flags  -> (Final, Native, Public)
	 */
	float UTBLEngine::GetStatFPS()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLEngine.GetStatFPS");
		
		UTBLEngine_GetStatFPS_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C770
	 * 		Name   -> Function TBL.TBLEngine.GetAvailableCPU
	 * 		Flags  -> (Final, Native, Public)
	 */
	float UTBLEngine::GetAvailableCPU()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLEngine.GetAvailableCPU");
		
		UTBLEngine_GetAvailableCPU_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLEngine.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLEngine::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLEngine");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CF80
	 * 		Name   -> Function TBL.TBLFrontendGameMode.PlayerRequestSpawn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerStart*                             PlayerStart                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerController*                           Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                PawnClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLFrontendGameMode::PlayerRequestSpawn(class ATBLPlayerStart* PlayerStart, class APlayerController* Player, TBL_EFaction Faction, int PawnClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLFrontendGameMode.PlayerRequestSpawn");
		
		ATBLFrontendGameMode_PlayerRequestSpawn_Params params {};
		params.PlayerStart = PlayerStart;
		params.Player = Player;
		params.Faction = Faction;
		params.PawnClass = PawnClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLFrontendGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLFrontendGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLFrontendGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C6F0
	 * 		Name   -> Function TBL.TBLFrontendLevelScriptActor.FireLevelEvent
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLFrontendLevelScriptActor::FireLevelEvent(const class FName& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLFrontendLevelScriptActor.FireLevelEvent");
		
		ATBLFrontendLevelScriptActor_FireLevelEvent_Params params {};
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C590
	 * 		Name   -> Function TBL.TBLFrontendLevelScriptActor.CreateLevelEvent
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLFrontendLevelScriptActor::CreateLevelEvent(const class FName& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLFrontendLevelScriptActor.CreateLevelEvent");
		
		ATBLFrontendLevelScriptActor_CreateLevelEvent_Params params {};
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLFrontendLevelScriptActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLFrontendLevelScriptActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLFrontendLevelScriptActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLGameInstancePerformanceCaptureActor.Run
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLGameInstancePerformanceCaptureActor::Run()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstancePerformanceCaptureActor.Run");
		
		ATBLGameInstancePerformanceCaptureActor_Run_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLGameInstancePerformanceCaptureActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLGameInstancePerformanceCaptureActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameInstancePerformanceCaptureActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CC20
	 * 		Name   -> Function TBL.TBLGameInstance.TryLeaveNativeSession
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 */
	void UTBLGameInstance::TryLeaveNativeSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TryLeaveNativeSession");
		
		UTBLGameInstance_TryLeaveNativeSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E660
	 * 		Name   -> Function TBL.TBLGameInstance.TriggerNativeSessionSettingChange
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::TriggerNativeSessionSettingChange(const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TriggerNativeSessionSettingChange");
		
		UTBLGameInstance_TriggerNativeSessionSettingChange_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E5E0
	 * 		Name   -> Function TBL.TBLGameInstance.TestValidateDTLSCertificate
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void UTBLGameInstance::TestValidateDTLSCertificate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TestValidateDTLSCertificate");
		
		UTBLGameInstance_TestValidateDTLSCertificate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E5C0
	 * 		Name   -> Function TBL.TBLGameInstance.TestUserLoginDowngraded
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 */
	void UTBLGameInstance::TestUserLoginDowngraded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TestUserLoginDowngraded");
		
		UTBLGameInstance_TestUserLoginDowngraded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLGameInstance.TestRefreshDTLSCertificate
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void UTBLGameInstance::TestRefreshDTLSCertificate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TestRefreshDTLSCertificate");
		
		UTBLGameInstance_TestRefreshDTLSCertificate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E5A0
	 * 		Name   -> Function TBL.TBLGameInstance.TestNativeInviteUI
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void UTBLGameInstance::TestNativeInviteUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TestNativeInviteUI");
		
		UTBLGameInstance_TestNativeInviteUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E580
	 * 		Name   -> Function TBL.TBLGameInstance.TestHandleLoginDowngraded
	 * 		Flags  -> (Final, Exec, Native, Private)
	 */
	void UTBLGameInstance::TestHandleLoginDowngraded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TestHandleLoginDowngraded");
		
		UTBLGameInstance_TestHandleLoginDowngraded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E560
	 * 		Name   -> Function TBL.TBLGameInstance.TestControllerDialog
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 */
	void UTBLGameInstance::TestControllerDialog()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.TestControllerDialog");
		
		UTBLGameInstance_TestControllerDialog_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168E270
	 * 		Name   -> Function TBL.TBLGameInstance.ShowPlatformSpecificPlayerDetails
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::ShowPlatformSpecificPlayerDetails(class ATBLPlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ShowPlatformSpecificPlayerDetails");
		
		UTBLGameInstance_ShowPlatformSpecificPlayerDetails_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CF20
	 * 		Name   -> Function TBL.TBLGameInstance.ShowLoadingScreenDuringPostMatch
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 */
	void UTBLGameInstance::ShowLoadingScreenDuringPostMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ShowLoadingScreenDuringPostMatch");
		
		UTBLGameInstance_ShowLoadingScreenDuringPostMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D9A0
	 * 		Name   -> Function TBL.TBLGameInstance.ShowFreeWeekendUpsell
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                LocalUserNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::ShowFreeWeekendUpsell(int LocalUserNum)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ShowFreeWeekendUpsell");
		
		UTBLGameInstance_ShowFreeWeekendUpsell_Params params {};
		params.LocalUserNum = LocalUserNum;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D4C0
	 * 		Name   -> Function TBL.TBLGameInstance.SetPresenceExec
	 * 		Flags  -> (Final, Exec, Native, Private)
	 * Parameters:
	 * 		class FString                                      Presence                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::SetPresenceExec(const class FString& Presence)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.SetPresenceExec");
		
		UTBLGameInstance_SetPresenceExec_Params params {};
		params.Presence = Presence;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D3F0
	 * 		Name   -> Function TBL.TBLGameInstance.SetMatchmakingQueueSelected
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        QueueId                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsSelected                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::SetMatchmakingQueueSelected(const class FName& QueueId, bool IsSelected)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.SetMatchmakingQueueSelected");
		
		UTBLGameInstance_SetMatchmakingQueueSelected_Params params {};
		params.QueueId = QueueId;
		params.IsSelected = IsSelected;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D360
	 * 		Name   -> Function TBL.TBLGameInstance.SetFirstLoadCompleted
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsComplete                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::SetFirstLoadCompleted(bool IsComplete)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.SetFirstLoadCompleted");
		
		UTBLGameInstance_SetFirstLoadCompleted_Params params {};
		params.IsComplete = IsComplete;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLGameInstance.ResetProfileData
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLGameInstance::ResetProfileData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ResetProfileData");
		
		UTBLGameInstance_ResetProfileData_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D2E0
	 * 		Name   -> Function TBL.TBLGameInstance.PushShowMouseCursorStackSuppressor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::PushShowMouseCursorStackSuppressor(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.PushShowMouseCursorStackSuppressor");
		
		UTBLGameInstance_PushShowMouseCursorStackSuppressor_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D260
	 * 		Name   -> Function TBL.TBLGameInstance.PushShowMouseCursorStack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::PushShowMouseCursorStack(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.PushShowMouseCursorStack");
		
		UTBLGameInstance_PushShowMouseCursorStack_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D160
	 * 		Name   -> Function TBL.TBLGameInstance.PopShowMouseCursorStackSuppressor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::PopShowMouseCursorStackSuppressor(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.PopShowMouseCursorStackSuppressor");
		
		UTBLGameInstance_PopShowMouseCursorStackSuppressor_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D0E0
	 * 		Name   -> Function TBL.TBLGameInstance.PopShowMouseCursorStack
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::PopShowMouseCursorStack(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.PopShowMouseCursorStack");
		
		UTBLGameInstance_PopShowMouseCursorStack_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168D0C0
	 * 		Name   -> Function TBL.TBLGameInstance.PollTitleDataAndNews
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLGameInstance::PollTitleDataAndNews()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.PollTitleDataAndNews");
		
		UTBLGameInstance_PollTitleDataAndNews_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CF60
	 * 		Name   -> Function TBL.TBLGameInstance.OpenNativeInviteUI
	 * 		Flags  -> (Final, Native, Private, BlueprintCallable)
	 */
	void UTBLGameInstance::OpenNativeInviteUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OpenNativeInviteUI");
		
		UTBLGameInstance_OpenNativeInviteUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CF40
	 * 		Name   -> Function TBL.TBLGameInstance.OnYesLeaveMatch
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameInstance::OnYesLeaveMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnYesLeaveMatch");
		
		UTBLGameInstance_OnYesLeaveMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CF20
	 * 		Name   -> Function TBL.TBLGameInstance.OnShowLoadingScreenPostMatch
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLGameInstance::OnShowLoadingScreenPostMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnShowLoadingScreenPostMatch");
		
		UTBLGameInstance_OnShowLoadingScreenPostMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CEA0
	 * 		Name   -> Function TBL.TBLGameInstance.OnPostMatchEndTimeChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::OnPostMatchEndTimeChanged(float Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnPostMatchEndTimeChanged");
		
		UTBLGameInstance_OnPostMatchEndTimeChanged_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CE60
	 * 		Name   -> Function TBL.TBLGameInstance.OnPairingChangedYes
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLGameInstance::OnPairingChangedYes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnPairingChangedYes");
		
		UTBLGameInstance_OnPairingChangedYes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CE40
	 * 		Name   -> Function TBL.TBLGameInstance.OnPairingChangedNo
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLGameInstance::OnPairingChangedNo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnPairingChangedNo");
		
		UTBLGameInstance_OnPairingChangedNo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CE20
	 * 		Name   -> Function TBL.TBLGameInstance.OnNoLeaveMatch
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameInstance::OnNoLeaveMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnNoLeaveMatch");
		
		UTBLGameInstance_OnNoLeaveMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CC80
	 * 		Name   -> Function TBL.TBLGameInstance.OnCustomizationApplied
	 * 		Flags  -> (Final, Native, Private, HasOutParms)
	 * Parameters:
	 * 		struct FCustomizationContext                       Context                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::OnCustomizationApplied(const struct FCustomizationContext& Context)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnCustomizationApplied");
		
		UTBLGameInstance_OnCustomizationApplied_Params params {};
		params.Context = Context;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CC60
	 * 		Name   -> Function TBL.TBLGameInstance.OnConnectControllerDlgOK
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameInstance::OnConnectControllerDlgOK()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.OnConnectControllerDlgOK");
		
		UTBLGameInstance_OnConnectControllerDlgOK_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CC40
	 * 		Name   -> Function TBL.TBLGameInstance.ListLoadedStaticMeshWithNegativeScale
	 * 		Flags  -> (Final, Exec, Native, Protected)
	 */
	void UTBLGameInstance::ListLoadedStaticMeshWithNegativeScale()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ListLoadedStaticMeshWithNegativeScale");
		
		UTBLGameInstance_ListLoadedStaticMeshWithNegativeScale_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CC20
	 * 		Name   -> Function TBL.TBLGameInstance.LeaveNativeSession
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLGameInstance::LeaveNativeSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.LeaveNativeSession");
		
		UTBLGameInstance_LeaveNativeSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CBF0
	 * 		Name   -> Function TBL.TBLGameInstance.LastJoinFailed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameInstance::LastJoinFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.LastJoinFailed");
		
		UTBLGameInstance_LastJoinFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CB90
	 * 		Name   -> Function TBL.TBLGameInstance.IsNativeSessionHost
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameInstance::IsNativeSessionHost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.IsNativeSessionHost");
		
		UTBLGameInstance_IsNativeSessionHost_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CB60
	 * 		Name   -> Function TBL.TBLGameInstance.IsNativeSessionFull
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameInstance::IsNativeSessionFull()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.IsNativeSessionFull");
		
		UTBLGameInstance_IsNativeSessionFull_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CAC0
	 * 		Name   -> Function TBL.TBLGameInstance.IsMatchmakingQueueSelected
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class FName                                        QueueId                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameInstance::IsMatchmakingQueueSelected(const class FName& QueueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.IsMatchmakingQueueSelected");
		
		UTBLGameInstance_IsMatchmakingQueueSelected_Params params {};
		params.QueueId = QueueId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CA90
	 * 		Name   -> Function TBL.TBLGameInstance.IsInMainMenuMap
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameInstance::IsInMainMenuMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.IsInMainMenuMap");
		
		UTBLGameInstance_IsInMainMenuMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168CA30
	 * 		Name   -> Function TBL.TBLGameInstance.IsFirstLoadCompleted
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameInstance::IsFirstLoadCompleted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.IsFirstLoadCompleted");
		
		UTBLGameInstance_IsFirstLoadCompleted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C900
	 * 		Name   -> Function TBL.TBLGameInstance.GrantFlavorEntitlement
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Entitlement                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::GrantFlavorEntitlement(const class FString& Entitlement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.GrantFlavorEntitlement");
		
		UTBLGameInstance_GrantFlavorEntitlement_Params params {};
		params.Entitlement = Entitlement;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C8E0
	 * 		Name   -> Function TBL.TBLGameInstance.GoToTutorialMap
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLGameInstance::GoToTutorialMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.GoToTutorialMap");
		
		UTBLGameInstance_GoToTutorialMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C860
	 * 		Name   -> Function TBL.TBLGameInstance.GetShowMouseCursor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameInstance::GetShowMouseCursor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.GetShowMouseCursor");
		
		UTBLGameInstance_GetShowMouseCursor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C800
	 * 		Name   -> Function TBL.TBLGameInstance.GetNativeSessionMemberCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	int UTBLGameInstance::GetNativeSessionMemberCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.GetNativeSessionMemberCount");
		
		UTBLGameInstance_GetNativeSessionMemberCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C7E0
	 * 		Name   -> Function TBL.TBLGameInstance.GetLastGamepadInputMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EGamepadInputMode UTBLGameInstance::GetLastGamepadInputMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.GetLastGamepadInputMode");
		
		UTBLGameInstance_GetLastGamepadInputMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C7A0
	 * 		Name   -> Function TBL.TBLGameInstance.GetCurrentState
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	class FName UTBLGameInstance::GetCurrentState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.GetCurrentState");
		
		UTBLGameInstance_GetCurrentState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C610
	 * 		Name   -> Function TBL.TBLGameInstance.Disconnect
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::Disconnect(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.Disconnect");
		
		UTBLGameInstance_Disconnect_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C4D0
	 * 		Name   -> Function TBL.TBLGameInstance.ClickedOnMessage
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameInstance::ClickedOnMessage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ClickedOnMessage");
		
		UTBLGameInstance_ClickedOnMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C4B0
	 * 		Name   -> Function TBL.TBLGameInstance.ClickedLeavePartyYes
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameInstance::ClickedLeavePartyYes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ClickedLeavePartyYes");
		
		UTBLGameInstance_ClickedLeavePartyYes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C490
	 * 		Name   -> Function TBL.TBLGameInstance.ClickedLeavePartyNo
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameInstance::ClickedLeavePartyNo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ClickedLeavePartyNo");
		
		UTBLGameInstance_ClickedLeavePartyNo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C470
	 * 		Name   -> Function TBL.TBLGameInstance.ClickedExitGame
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameInstance::ClickedExitGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ClickedExitGame");
		
		UTBLGameInstance_ClickedExitGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C450
	 * 		Name   -> Function TBL.TBLGameInstance.ClickedCancelConnect
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLGameInstance::ClickedCancelConnect()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ClickedCancelConnect");
		
		UTBLGameInstance_ClickedCancelConnect_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C3C0
	 * 		Name   -> Function TBL.TBLGameInstance.ClearShowMouseCursorStackSuppressors
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bUpdateMouseCursorImmediately                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameInstance::ClearShowMouseCursorStackSuppressors(bool bUpdateMouseCursorImmediately)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.ClearShowMouseCursorStackSuppressors");
		
		UTBLGameInstance_ClearShowMouseCursorStackSuppressors_Params params {};
		params.bUpdateMouseCursorImmediately = bUpdateMouseCursorImmediately;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C1B0
	 * 		Name   -> Function TBL.TBLGameInstance.CanUseMatchmaker
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameInstance::CanUseMatchmaker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.CanUseMatchmaker");
		
		UTBLGameInstance_CanUseMatchmaker_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0168C180
	 * 		Name   -> Function TBL.TBLGameInstance.CanLeaveNativeSession
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameInstance::CanLeaveNativeSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameInstance.CanLeaveNativeSession");
		
		UTBLGameInstance_CanLeaveNativeSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016966D0
	 * 		Name   -> Function TBL.TBLGameModesLibrary.GetTBLWorldSettings
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLWorldSettings* UTBLGameModesLibrary::STATIC_GetTBLWorldSettings(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameModesLibrary.GetTBLWorldSettings");
		
		UTBLGameModesLibrary_GetTBLWorldSettings_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016964C0
	 * 		Name   -> Function TBL.TBLGameModesLibrary.GetAllSpawnWavesJoinableByController
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ASpawnWave*> UTBLGameModesLibrary::STATIC_GetAllSpawnWavesJoinableByController(class UObject* WorldContextObject, class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameModesLibrary.GetAllSpawnWavesJoinableByController");
		
		UTBLGameModesLibrary_GetAllSpawnWavesJoinableByController_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016963B0
	 * 		Name   -> Function TBL.TBLGameModesLibrary.GetAllOutOfCombatCharactersForFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLCharacter*> UTBLGameModesLibrary::STATIC_GetAllOutOfCombatCharactersForFaction(class UObject* WorldContextObject, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameModesLibrary.GetAllOutOfCombatCharactersForFaction");
		
		UTBLGameModesLibrary_GetAllOutOfCombatCharactersForFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01695FD0
	 * 		Name   -> Function TBL.TBLGameModesLibrary.ActivateDeactivateAllSpawnSequencesForFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ESpawnSequenceActivateDeactivateAction         Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameModesLibrary::STATIC_ActivateDeactivateAllSpawnSequencesForFaction(TBL_EFaction Faction, TBL_ESpawnSequenceActivateDeactivateAction Action, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameModesLibrary.ActivateDeactivateAllSpawnSequencesForFaction");
		
		UTBLGameModesLibrary_ActivateDeactivateAllSpawnSequencesForFaction_Params params {};
		params.Faction = Faction;
		params.Action = Action;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameModesLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameModesLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameModesLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696F00
	 * 		Name   -> Function TBL.TBLGameplayDebuggingComponent.ServerSetDebugTarget
	 * 		Flags  -> (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
	 * Parameters:
	 * 		class AActor*                                      DebugTarget                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameplayDebuggingComponent::ServerSetDebugTarget(class AActor* DebugTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameplayDebuggingComponent.ServerSetDebugTarget");
		
		UTBLGameplayDebuggingComponent_ServerSetDebugTarget_Params params {};
		params.DebugTarget = DebugTarget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696A10
	 * 		Name   -> Function TBL.TBLGameplayDebuggingComponent.OnRep_DesyncDebugInfo
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLGameplayDebuggingComponent::OnRep_DesyncDebugInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameplayDebuggingComponent.OnRep_DesyncDebugInfo");
		
		UTBLGameplayDebuggingComponent_OnRep_DesyncDebugInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameplayDebuggingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameplayDebuggingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameplayDebuggingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696C70
	 * 		Name   -> Function TBL.TBLGameScoringInfo.PlayerKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AController*                                 Killer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AController*                                 Killed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FDeathEvent                                 DeathEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void ATBLGameScoringInfo::PlayerKilled(class AController* Killer, class AController* Killed, class UDamageSource* DamageSource, const struct FDeathEvent& DeathEvent, const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameScoringInfo.PlayerKilled");
		
		ATBLGameScoringInfo_PlayerKilled_Params params {};
		params.Killer = Killer;
		params.Killed = Killed;
		params.DamageSource = DamageSource;
		params.DeathEvent = DeathEvent;
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696BB0
	 * 		Name   -> Function TBL.TBLGameScoringInfo.PawnRevived
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       RevivedPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APawn*                                       RevivorPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameScoringInfo::PawnRevived(class APawn* RevivedPlayer, class APawn* RevivorPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameScoringInfo.PawnRevived");
		
		ATBLGameScoringInfo_PawnRevived_Params params {};
		params.RevivedPlayer = RevivedPlayer;
		params.RevivorPlayer = RevivorPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696AF0
	 * 		Name   -> Function TBL.TBLGameScoringInfo.PawnDowned
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       DownedPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameScoringInfo::PawnDowned(class APawn* DownedPlayer, class AActor* DamageCauser)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameScoringInfo.PawnDowned");
		
		ATBLGameScoringInfo_PawnDowned_Params params {};
		params.DownedPlayer = DownedPlayer;
		params.DamageCauser = DamageCauser;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLGameScoringInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLGameScoringInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameScoringInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016966A0
	 * 		Name   -> Function TBL.TBLGameScoringComponent.GetScoringValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	int UTBLGameScoringComponent::GetScoringValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameScoringComponent.GetScoringValue");
		
		UTBLGameScoringComponent_GetScoringValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016965C0
	 * 		Name   -> Function TBL.TBLGameScoringComponent.GetScoringRow
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	struct FGameScoringDataTable UTBLGameScoringComponent::GetScoringRow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameScoringComponent.GetScoringRow");
		
		UTBLGameScoringComponent_GetScoringRow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016960C0
	 * 		Name   -> Function TBL.TBLGameScoringComponent.AwardScore
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ScoreValueOverride                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameScoringComponent::AwardScore(class ATBLPlayerState* PlayerState, TBL_EOnlineStat Stat, int ScoreValueOverride)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameScoringComponent.AwardScore");
		
		UTBLGameScoringComponent_AwardScore_Params params {};
		params.PlayerState = PlayerState;
		params.Stat = Stat;
		params.ScoreValueOverride = ScoreValueOverride;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameScoringComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameScoringComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameScoringComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01697160
	 * 		Name   -> Function TBL.TBLGameSession.StartServerListQuickMatch
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FServerFilterSetting                        Filters                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool ATBLGameSession::StartServerListQuickMatch(const struct FServerFilterSetting& Filters)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.StartServerListQuickMatch");
		
		ATBLGameSession_StartServerListQuickMatch_Params params {};
		params.Filters = Filters;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696FC0
	 * 		Name   -> Function TBL.TBLGameSession.StartMatchmaking
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FMatchmakingQueue>                   Queues                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLGameSession::StartMatchmaking(TArray<struct FMatchmakingQueue> Queues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.StartMatchmaking");
		
		ATBLGameSession_StartMatchmaking_Params params {};
		params.Queues = Queues;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696A30
	 * 		Name   -> Function TBL.TBLGameSession.OnServerListRefreshComplete
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EServerListType                                SearchType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameSession::OnServerListRefreshComplete(bool bSuccess, TBL_EServerListType SearchType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.OnServerListRefreshComplete");
		
		ATBLGameSession_OnServerListRefreshComplete_Params params {};
		params.bSuccess = bSuccess;
		params.SearchType = SearchType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696920
	 * 		Name   -> Function TBL.TBLGameSession.IsMatchmaking
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool ATBLGameSession::IsMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.IsMatchmaking");
		
		ATBLGameSession_IsMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016968F0
	 * 		Name   -> Function TBL.TBLGameSession.IsBusy
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLGameSession::IsBusy()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.IsBusy");
		
		ATBLGameSession_IsBusy_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696820
	 * 		Name   -> Function TBL.TBLGameSession.HandleMatchmakingComplete
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        MatchmadeSessionName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameSession::HandleMatchmakingComplete(const class FName& MatchmadeSessionName, bool bSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.HandleMatchmakingComplete");
		
		ATBLGameSession_HandleMatchmakingComplete_Params params {};
		params.MatchmadeSessionName = MatchmadeSessionName;
		params.bSuccess = bSuccess;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696750
	 * 		Name   -> Function TBL.TBLGameSession.HandleMatchmakingCancelled
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        MatchmadeSessionName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLGameSession::HandleMatchmakingCancelled(const class FName& MatchmadeSessionName, bool bSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.HandleMatchmakingCancelled");
		
		ATBLGameSession_HandleMatchmakingCancelled_Params params {};
		params.MatchmadeSessionName = MatchmadeSessionName;
		params.bSuccess = bSuccess;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016961F0
	 * 		Name   -> Function TBL.TBLGameSession.CanStartMatchmaking
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		bool                                               bIsBackfill                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ATBLGameSession::CanStartMatchmaking(bool bIsBackfill)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.CanStartMatchmaking");
		
		ATBLGameSession_CanStartMatchmaking_Params params {};
		params.bIsBackfill = bIsBackfill;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696280
	 * 		Name   -> Function TBL.TBLGameSession.CancelMatchmaking
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool ATBLGameSession::CancelMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.CancelMatchmaking");
		
		ATBLGameSession_CancelMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016961C0
	 * 		Name   -> Function TBL.TBLGameSession.CanCancelMatchMaking
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLGameSession::CanCancelMatchMaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSession.CanCancelMatchMaking");
		
		ATBLGameSession_CanCancelMatchMaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLGameSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLGameSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01696950
	 * 		Name   -> Function TBL.TBLGameSingleton.OnLevelAdded
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ULevel*                                      Level                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameSingleton::OnLevelAdded(class ULevel* Level, class UWorld* World)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSingleton.OnLevelAdded");
		
		UTBLGameSingleton_OnLevelAdded_Params params {};
		params.Level = Level;
		params.World = World;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016962B0
	 * 		Name   -> Function TBL.TBLGameSingleton.GetActorsWithTag
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AActor*> UTBLGameSingleton::GetActorsWithTag(const class FName& Tag, class UWorld* World)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameSingleton.GetActorsWithTag");
		
		UTBLGameSingleton_GetActorsWithTag_Params params {};
		params.Tag = Tag;
		params.World = World;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameSingleton.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameSingleton::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameSingleton");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameUpdateContentWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameUpdateContentWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameUpdateContentWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C9C0
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.ShouldShowGameUpdate
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FGameUpdateData                             GameUpdateData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameUpdatesLibrary::STATIC_ShouldShowGameUpdate(const struct FGameUpdateData& GameUpdateData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.ShouldShowGameUpdate");
		
		UTBLGameUpdatesLibrary_ShouldShowGameUpdate_Params params {};
		params.GameUpdateData = GameUpdateData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169C630
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.SetIsGameUpdateSeen
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      UpdateVersion                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsSeen                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUpdatesLibrary::STATIC_SetIsGameUpdateSeen(const class FString& UpdateVersion, class UObject* WorldContextObject, bool IsSeen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.SetIsGameUpdateSeen");
		
		UTBLGameUpdatesLibrary_SetIsGameUpdateSeen_Params params {};
		params.UpdateVersion = UpdateVersion;
		params.WorldContextObject = WorldContextObject;
		params.IsSeen = IsSeen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169BBE0
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetUnseenGameUpdatesCount
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLGameUpdatesLibrary::STATIC_GetUnseenGameUpdatesCount(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetUnseenGameUpdatesCount");
		
		UTBLGameUpdatesLibrary_GetUnseenGameUpdatesCount_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B500
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetNewestGameUpdate
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FGameUpdateData                             OutGameUpdateData                                          (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ShouldCheckIfSeen                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameUpdatesLibrary::STATIC_GetNewestGameUpdate(struct FGameUpdateData* OutGameUpdateData, class UObject* WorldContextObject, bool ShouldCheckIfSeen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetNewestGameUpdate");
		
		UTBLGameUpdatesLibrary_GetNewestGameUpdate_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ShouldCheckIfSeen = ShouldCheckIfSeen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutGameUpdateData != nullptr)
			*OutGameUpdateData = params.OutGameUpdateData;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B3B0
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetIsGameUpdateSeen
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      UpdateVersion                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameUpdatesLibrary::STATIC_GetIsGameUpdateSeen(const class FString& UpdateVersion, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetIsGameUpdateSeen");
		
		UTBLGameUpdatesLibrary_GetIsGameUpdateSeen_Params params {};
		params.UpdateVersion = UpdateVersion;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B270
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetIsGameUpdateNewest
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FGameUpdateData                             GameUpdateData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ShouldCheckIfSeen                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameUpdatesLibrary::STATIC_GetIsGameUpdateNewest(const struct FGameUpdateData& GameUpdateData, class UObject* WorldContextObject, bool ShouldCheckIfSeen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetIsGameUpdateNewest");
		
		UTBLGameUpdatesLibrary_GetIsGameUpdateNewest_Params params {};
		params.GameUpdateData = GameUpdateData;
		params.WorldContextObject = WorldContextObject;
		params.ShouldCheckIfSeen = ShouldCheckIfSeen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B1C0
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetIsGameUpdateActive
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FGameUpdateData                             GameUpdateData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameUpdatesLibrary::STATIC_GetIsGameUpdateActive(const struct FGameUpdateData& GameUpdateData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetIsGameUpdateActive");
		
		UTBLGameUpdatesLibrary_GetIsGameUpdateActive_Params params {};
		params.GameUpdateData = GameUpdateData;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169B140
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetHasUnseenGameUpdates
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameUpdatesLibrary::STATIC_GetHasUnseenGameUpdates(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetHasUnseenGameUpdates");
		
		UTBLGameUpdatesLibrary_GetHasUnseenGameUpdates_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169AF60
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetGameUpdates
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FGameUpdateData>                     OutGameUpdates                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      Count                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUpdatesLibrary::STATIC_GetGameUpdates(TArray<struct FGameUpdateData>* OutGameUpdates, class UObject* WorldContextObject, unsigned char Count)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetGameUpdates");
		
		UTBLGameUpdatesLibrary_GetGameUpdates_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Count = Count;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutGameUpdates != nullptr)
			*OutGameUpdates = params.OutGameUpdates;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169AE20
	 * 		Name   -> Function TBL.TBLGameUpdatesLibrary.GetGameUpdateData
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        UpdateVersion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameUpdateData                             OutGameUpdateData                                          (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLGameUpdatesLibrary::STATIC_GetGameUpdateData(const class FName& UpdateVersion, struct FGameUpdateData* OutGameUpdateData, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUpdatesLibrary.GetGameUpdateData");
		
		UTBLGameUpdatesLibrary_GetGameUpdateData_Params params {};
		params.UpdateVersion = UpdateVersion;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutGameUpdateData != nullptr)
			*OutGameUpdateData = params.OutGameUpdateData;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameUpdatesLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameUpdatesLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameUpdatesLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UGamepadLookResponseCurves.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UGamepadLookResponseCurves::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.GamepadLookResponseCurves");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCloudUserSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCloudUserSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CloudUserSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A1120
	 * 		Name   -> Function TBL.TBLGameUserSettings.SetServerBrowserNumFreeSlotServers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                Num                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUserSettings::SetServerBrowserNumFreeSlotServers(int Num)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.SetServerBrowserNumFreeSlotServers");
		
		UTBLGameUserSettings_SetServerBrowserNumFreeSlotServers_Params params {};
		params.Num = Num;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A1090
	 * 		Name   -> Function TBL.TBLGameUserSettings.SetServerBrowserHideHighPingEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUserSettings::SetServerBrowserHideHighPingEnabled(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.SetServerBrowserHideHighPingEnabled");
		
		UTBLGameUserSettings_SetServerBrowserHideHighPingEnabled_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A1000
	 * 		Name   -> Function TBL.TBLGameUserSettings.SetServerBrowserHideFullServers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUserSettings::SetServerBrowserHideFullServers(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.SetServerBrowserHideFullServers");
		
		UTBLGameUserSettings_SetServerBrowserHideFullServers_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0F70
	 * 		Name   -> Function TBL.TBLGameUserSettings.SetServerBrowserHideEmptyServersEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUserSettings::SetServerBrowserHideEmptyServersEnabled(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.SetServerBrowserHideEmptyServersEnabled");
		
		UTBLGameUserSettings_SetServerBrowserHideEmptyServersEnabled_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0EF0
	 * 		Name   -> Function TBL.TBLGameUserSettings.SetPreferredFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		unsigned char                                      InPreferredFaction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUserSettings::SetPreferredFaction(unsigned char InPreferredFaction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.SetPreferredFaction");
		
		UTBLGameUserSettings_SetPreferredFaction_Params params {};
		params.InPreferredFaction = InPreferredFaction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0E60
	 * 		Name   -> Function TBL.TBLGameUserSettings.SetDX12Enabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUserSettings::SetDX12Enabled(bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.SetDX12Enabled");
		
		UTBLGameUserSettings_SetDX12Enabled_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0E40
	 * 		Name   -> Function TBL.TBLGameUserSettings.SaveCloudUserSettingsIfDirty
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLGameUserSettings::SaveCloudUserSettingsIfDirty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.SaveCloudUserSettingsIfDirty");
		
		UTBLGameUserSettings_SaveCloudUserSettingsIfDirty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0980
	 * 		Name   -> Function TBL.TBLGameUserSettings.OnReadUserFileComplete
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FPlatformInterfaceDelegateResult            Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLGameUserSettings::OnReadUserFileComplete(const struct FPlatformInterfaceDelegateResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.OnReadUserFileComplete");
		
		UTBLGameUserSettings_OnReadUserFileComplete_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FAC0
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsServerBrowserHideHighPingEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameUserSettings::IsServerBrowserHideHighPingEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsServerBrowserHideHighPingEnabled");
		
		UTBLGameUserSettings_IsServerBrowserHideHighPingEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FA90
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsServerBrowserHideFullServersEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameUserSettings::IsServerBrowserHideFullServersEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsServerBrowserHideFullServersEnabled");
		
		UTBLGameUserSettings_IsServerBrowserHideFullServersEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FA60
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsServerBrowserHideEmptyServersEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameUserSettings::IsServerBrowserHideEmptyServersEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsServerBrowserHideEmptyServersEnabled");
		
		UTBLGameUserSettings_IsServerBrowserHideEmptyServersEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FA30
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsRagdollEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameUserSettings::IsRagdollEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsRagdollEnabled");
		
		UTBLGameUserSettings_IsRagdollEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F9D0
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsLoadoutDisplayOnFirstDeathEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameUserSettings::IsLoadoutDisplayOnFirstDeathEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsLoadoutDisplayOnFirstDeathEnabled");
		
		UTBLGameUserSettings_IsLoadoutDisplayOnFirstDeathEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F9A0
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsHeadBobEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameUserSettings::IsHeadBobEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsHeadBobEnabled");
		
		UTBLGameUserSettings_IsHeadBobEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F970
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsGamepadYInverted
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameUserSettings::IsGamepadYInverted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsGamepadYInverted");
		
		UTBLGameUserSettings_IsGamepadYInverted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F940
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsDynamicCrosshairEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameUserSettings::IsDynamicCrosshairEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsDynamicCrosshairEnabled");
		
		UTBLGameUserSettings_IsDynamicCrosshairEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F910
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsDX12Enabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameUserSettings::IsDX12Enabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsDX12Enabled");
		
		UTBLGameUserSettings_IsDX12Enabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F8E0
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsCombatNumbersEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameUserSettings::IsCombatNumbersEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsCombatNumbersEnabled");
		
		UTBLGameUserSettings_IsCombatNumbersEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F8B0
	 * 		Name   -> Function TBL.TBLGameUserSettings.IsAmbientFXEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLGameUserSettings::IsAmbientFXEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.IsAmbientFXEnabled");
		
		UTBLGameUserSettings_IsAmbientFXEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F880
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetServerBrowserNumFreeSlotServers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int UTBLGameUserSettings::GetServerBrowserNumFreeSlotServers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetServerBrowserNumFreeSlotServers");
		
		UTBLGameUserSettings_GetServerBrowserNumFreeSlotServers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F850
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetPreferredFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	unsigned char UTBLGameUserSettings::GetPreferredFaction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetPreferredFaction");
		
		UTBLGameUserSettings_GetPreferredFaction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F820
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetOptionsScreen
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class UTBLOptionsScreen* UTBLGameUserSettings::GetOptionsScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetOptionsScreen");
		
		UTBLGameUserSettings_GetOptionsScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F7F0
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetMotionBlurQuality
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int UTBLGameUserSettings::GetMotionBlurQuality()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetMotionBlurQuality");
		
		UTBLGameUserSettings_GetMotionBlurQuality_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F7C0
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetMasterVolume
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	float UTBLGameUserSettings::GetMasterVolume()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetMasterVolume");
		
		UTBLGameUserSettings_GetMasterVolume_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F780
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetKillFeedFilter
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EKillFeedFilter UTBLGameUserSettings::GetKillFeedFilter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetKillFeedFilter");
		
		UTBLGameUserSettings_GetKillFeedFilter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F740
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetGoreLevel
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EGoreLevel UTBLGameUserSettings::GetGoreLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetGoreLevel");
		
		UTBLGameUserSettings_GetGoreLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F710
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetEnableCrossPlayMatchmaking
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameUserSettings::GetEnableCrossPlayMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetEnableCrossPlayMatchmaking");
		
		UTBLGameUserSettings_GetEnableCrossPlayMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F6E0
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetBloodDecalLifeTime
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float UTBLGameUserSettings::GetBloodDecalLifeTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetBloodDecalLifeTime");
		
		UTBLGameUserSettings_GetBloodDecalLifeTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F6B0
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetAmbientCorpseQuality
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int UTBLGameUserSettings::GetAmbientCorpseQuality()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetAmbientCorpseQuality");
		
		UTBLGameUserSettings_GetAmbientCorpseQuality_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F670
	 * 		Name   -> Function TBL.TBLGameUserSettings.GetAllyMarkerLevel
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EAllyMarkerLevel UTBLGameUserSettings::GetAllyMarkerLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.GetAllyMarkerLevel");
		
		UTBLGameUserSettings_GetAllyMarkerLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F5B0
	 * 		Name   -> Function TBL.TBLGameUserSettings.AreHintsEnabled
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLGameUserSettings::AreHintsEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameUserSettings.AreHintsEnabled");
		
		UTBLGameUserSettings_AreHintsEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameUserSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameUserSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameUserSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F5E0
	 * 		Name   -> Function TBL.TBLGameViewportClient.FadeOutLoadingPanel
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bIsInitialLoadingScreen                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLGameViewportClient::FadeOutLoadingPanel(bool bIsInitialLoadingScreen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLGameViewportClient.FadeOutLoadingPanel");
		
		UTBLGameViewportClient_FadeOutLoadingPanel_Params params {};
		params.bIsInitialLoadingScreen = bIsInitialLoadingScreen;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLGameViewportClient.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLGameViewportClient::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLGameViewportClient");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.UpdateFootStepSounds
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		float                                              DeltaSeconds                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHidden                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::UpdateFootStepSounds(float DeltaSeconds, bool bHidden)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.UpdateFootStepSounds");
		
		UTBLHorseAnimInstance_UpdateFootStepSounds_Params params {};
		params.DeltaSeconds = DeltaSeconds;
		params.bHidden = bHidden;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A11A0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.StopDismountAnimation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLHorseAnimInstance::StopDismountAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.StopDismountAnimation");
		
		UTBLHorseAnimInstance_StopDismountAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0DC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.PlayMountAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::PlayMountAnimation(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.PlayMountAnimation");
		
		UTBLHorseAnimInstance_PlayMountAnimation_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0D40
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.PlayDismountAnimation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::PlayDismountAnimation(const class FName& AnimationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.PlayDismountAnimation");
		
		UTBLHorseAnimInstance_PlayDismountAnimation_Params params {};
		params.AnimationName = AnimationName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0D20
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnStartAttack
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLHorseAnimInstance::OnStartAttack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnStartAttack");
		
		UTBLHorseAnimInstance_OnStartAttack_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0CA0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnSignificanceChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_ECharacterSignificanceLevel                    InSignificance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnSignificanceChanged(TBL_ECharacterSignificanceLevel InSignificance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnSignificanceChanged");
		
		UTBLHorseAnimInstance_OnSignificanceChanged_Params params {};
		params.InSignificance = InSignificance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0A40
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnRiderCombatStateEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnRiderCombatStateEvent(class AActor* Actor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnRiderCombatStateEvent");
		
		UTBLHorseAnimInstance_OnRiderCombatStateEvent_Params params {};
		params.Actor = Actor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0166F300
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnRiderCombatStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnRiderCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnRiderCombatStateChanged");
		
		UTBLHorseAnimInstance_OnRiderCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0870
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnPostDamage
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDamageTakenEvent                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FPostDamageEventInfo                        PostDamageInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnPostDamage(const struct FDamageTakenEvent& DamageEvent, const struct FPostDamageEventInfo& PostDamageInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnPostDamage");
		
		UTBLHorseAnimInstance_OnPostDamage_Params params {};
		params.DamageEvent = DamageEvent;
		params.PostDamageInfo = PostDamageInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A07A0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnMovementActionStarted
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 * Parameters:
	 * 		class FName                                        MovementName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnMovementActionStarted(const class FName& MovementName, const struct FRotator& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnMovementActionStarted");
		
		UTBLHorseAnimInstance_OnMovementActionStarted_Params params {};
		params.MovementName = MovementName;
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0720
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnMovementActionFinished
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        MovementName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnMovementActionFinished(const class FName& MovementName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnMovementActionFinished");
		
		UTBLHorseAnimInstance_OnMovementActionFinished_Params params {};
		params.MovementName = MovementName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A06A0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnMounted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Driver                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnMounted(class ATBLCharacter* Driver)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnMounted");
		
		UTBLHorseAnimInstance_OnMounted_Params params {};
		params.Driver = Driver;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A05F0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnLanded
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FLandedResult                               LandedResult                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnLanded(const struct FLandedResult& LandedResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnLanded");
		
		UTBLHorseAnimInstance_OnLanded_Params params {};
		params.LandedResult = LandedResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0510
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnKilled
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnKilled");
		
		UTBLHorseAnimInstance_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A04F0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnKickNoDriver
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLHorseAnimInstance::OnKickNoDriver()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnKickNoDriver");
		
		UTBLHorseAnimInstance_OnKickNoDriver_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0430
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnInterpToMountLocation
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimationName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnInterpToMountLocation(const class FName& AnimationName, class ATBLCharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnInterpToMountLocation");
		
		UTBLHorseAnimInstance_OnInterpToMountLocation_Params params {};
		params.AnimationName = AnimationName;
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0370
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnDismounted
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class ATBLCharacter*                               Driver                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnDismounted(class ATBLCharacter* Driver, TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnDismounted");
		
		UTBLHorseAnimInstance_OnDismounted_Params params {};
		params.Driver = Driver;
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A0240
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnCrowdControlNoDamage
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OwningActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCrowdControlParams                         CrowdControlParams                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnCrowdControlNoDamage(class AActor* OwningActor, const class FName& InCombatState, const struct FCrowdControlParams& CrowdControlParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnCrowdControlNoDamage");
		
		UTBLHorseAnimInstance_OnCrowdControlNoDamage_Params params {};
		params.OwningActor = OwningActor;
		params.InCombatState = InCombatState;
		params.CrowdControlParams = CrowdControlParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A00E0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnCrowdControl
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TBL_ECrowdControlVariant                           CrowdControlVariant                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnCrowdControl(const class FName& InCombatState, const struct FAnimDamageParams& DamageEvent, TBL_ECrowdControlVariant CrowdControlVariant)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnCrowdControl");
		
		UTBLHorseAnimInstance_OnCrowdControl_Params params {};
		params.InCombatState = InCombatState;
		params.DamageEvent = DamageEvent;
		params.CrowdControlVariant = CrowdControlVariant;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FE80
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnCombatStateEvent
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnCombatStateEvent(class AActor* Actor, const class FName& EventName, const struct FAttackInfo& EventAttackInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnCombatStateEvent");
		
		UTBLHorseAnimInstance_OnCombatStateEvent_Params params {};
		params.Actor = Actor;
		params.EventName = EventName;
		params.EventAttackInfo = EventAttackInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FB70
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnCombatStateChanged
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnCombatStateChanged");
		
		UTBLHorseAnimInstance_OnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FAF0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.OnAnimationSetChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class UClass*                                      AnimationSet                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::OnAnimationSetChanged(class UClass* AnimationSet)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.OnAnimationSetChanged");
		
		UTBLHorseAnimInstance_OnAnimationSetChanged_Params params {};
		params.AnimationSet = AnimationSet;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169FA00
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.IsPlayingMountAnimation
	 * 		Flags  -> (Final, Native, Public)
	 */
	bool UTBLHorseAnimInstance::IsPlayingMountAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.IsPlayingMountAnimation");
		
		UTBLHorseAnimInstance_IsPlayingMountAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnWantsToGallop
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bWantsToGallop                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnWantsToGallop(bool bWantsToGallop)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnWantsToGallop");
		
		UTBLHorseAnimInstance_EventOnWantsToGallop_Params params {};
		params.bWantsToGallop = bWantsToGallop;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnStartDismount
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnStartDismount(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnStartDismount");
		
		UTBLHorseAnimInstance_EventOnStartDismount_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnStartAttack
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        InAbilityName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InComboState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UAttackType*                                 InAttackType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnStartAttack(const class FName& InAbilityName, const class FName& InCombatState, const class FName& InComboState, class UAttackType* InAttackType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnStartAttack");
		
		UTBLHorseAnimInstance_EventOnStartAttack_Params params {};
		params.InAbilityName = InAbilityName;
		params.InCombatState = InCombatState;
		params.InComboState = InComboState;
		params.InAttackType = InAttackType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnStagger
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnStagger(const struct FAnimDamageParams& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnStagger");
		
		UTBLHorseAnimInstance_EventOnStagger_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnRiderCombatStateChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnRiderCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnRiderCombatStateChanged");
		
		UTBLHorseAnimInstance_EventOnRiderCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnMovementStateChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        InMovementState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InPreviousMovementState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnMovementStateChanged(const class FName& InMovementState, const class FName& InPreviousMovementState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnMovementStateChanged");
		
		UTBLHorseAnimInstance_EventOnMovementStateChanged_Params params {};
		params.InMovementState = InMovementState;
		params.InPreviousMovementState = InPreviousMovementState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnMovementActionStarted
	 * 		Flags  -> (Event, Public, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        MovementName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnMovementActionStarted(const class FName& MovementName, const struct FRotator& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnMovementActionStarted");
		
		UTBLHorseAnimInstance_EventOnMovementActionStarted_Params params {};
		params.MovementName = MovementName;
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnMounted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnMounted(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnMounted");
		
		UTBLHorseAnimInstance_EventOnMounted_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnLanded
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FLandedResult                               LandedResult                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnLanded(const struct FLandedResult& LandedResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnLanded");
		
		UTBLHorseAnimInstance_EventOnLanded_Params params {};
		params.LandedResult = LandedResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnKnockdown
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnKnockdown(const struct FAnimDamageParams& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnKnockdown");
		
		UTBLHorseAnimInstance_EventOnKnockdown_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnKilled
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLHorseAnimInstance::EventOnKilled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnKilled");
		
		UTBLHorseAnimInstance_EventOnKilled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnInterrupt
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnInterrupt(const struct FAnimDamageParams& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnInterrupt");
		
		UTBLHorseAnimInstance_EventOnInterrupt_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnDismounted
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_EDismountType                                  DismountType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnDismounted(TBL_EDismountType DismountType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnDismounted");
		
		UTBLHorseAnimInstance_EventOnDismounted_Params params {};
		params.DismountType = DismountType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventOnCombatStateChanged
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAttackInfo                                 EventAttackInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UCombatState*                                InCombatState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventOnCombatStateChanged(class AActor* Actor, const class FName& PreviousState, const class FName& NewState, const struct FAttackInfo& EventAttackInfo, class UCombatState* InCombatState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventOnCombatStateChanged");
		
		UTBLHorseAnimInstance_EventOnCombatStateChanged_Params params {};
		params.Actor = Actor;
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		params.EventAttackInfo = EventAttackInfo;
		params.InCombatState = InCombatState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.EventDamageNoInterrupt
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FAnimDamageParams                           DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLHorseAnimInstance::EventDamageNoInterrupt(const struct FAnimDamageParams& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.EventDamageNoInterrupt");
		
		UTBLHorseAnimInstance_EventDamageNoInterrupt_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0169F590
	 * 		Name   -> Function TBL.TBLHorseAnimInstance.AnimNotify_DeathAnim_End
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLHorseAnimInstance::AnimNotify_DeathAnim_End()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHorseAnimInstance.AnimNotify_DeathAnim_End");
		
		UTBLHorseAnimInstance_AnimNotify_DeathAnim_End_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLHorseAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLHorseAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLHorseAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ShowTeamSelectScreen
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bGameStart                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::ShowTeamSelectScreen(bool bGameStart)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ShowTeamSelectScreen");
		
		ATBLHUD_ShowTeamSelectScreen_Params params {};
		params.bGameStart = bGameStart;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ShowLoadoutScreenFirstTime
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::ShowLoadoutScreenFirstTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ShowLoadoutScreenFirstTime");
		
		ATBLHUD_ShowLoadoutScreenFirstTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ShowLoadoutScreen
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::ShowLoadoutScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ShowLoadoutScreen");
		
		ATBLHUD_ShowLoadoutScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ShowIngameMenu
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::ShowIngameMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ShowIngameMenu");
		
		ATBLHUD_ShowIngameMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ShowHint
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class FText                                        HintToShow                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        HintTitle                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FName                                        HintTableRowName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::ShowHint(const class FText& HintToShow, const class FText& HintTitle, const class FName& HintTableRowName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ShowHint");
		
		ATBLHUD_ShowHint_Params params {};
		params.HintToShow = HintToShow;
		params.HintTitle = HintTitle;
		params.HintTableRowName = HintTableRowName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A4000
	 * 		Name   -> Function TBL.TBLHUD.ShowHideRadialEmote
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               Show                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::ShowHideRadialEmote(bool Show)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ShowHideRadialEmote");
		
		ATBLHUD_ShowHideRadialEmote_Params params {};
		params.Show = Show;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3F80
	 * 		Name   -> Function TBL.TBLHUD.SetShowDebugTargetActor
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::SetShowDebugTargetActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.SetShowDebugTargetActor");
		
		ATBLHUD_SetShowDebugTargetActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3F00
	 * 		Name   -> Function TBL.TBLHUD.SetRadialVOMaterial
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		class UMaterialInstanceDynamic*                    inRadialVOMID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::SetRadialVOMaterial(class UMaterialInstanceDynamic* inRadialVOMID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.SetRadialVOMaterial");
		
		ATBLHUD_SetRadialVOMaterial_Params params {};
		params.inRadialVOMID = inRadialVOMID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.SetMiniMapVisibility
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               Visible                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::SetMiniMapVisibility(bool Visible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.SetMiniMapVisibility");
		
		ATBLHUD_SetMiniMapVisibility_Params params {};
		params.Visible = Visible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.RequestGuiBackground
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bImmediate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::RequestGuiBackground(bool bImmediate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.RequestGuiBackground");
		
		ATBLHUD_RequestGuiBackground_Params params {};
		params.bImmediate = bImmediate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ReleaseGuiBackgroundRequest
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::ReleaseGuiBackgroundRequest()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ReleaseGuiBackgroundRequest");
		
		ATBLHUD_ReleaseGuiBackgroundRequest_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.PS4TouchpadPressed
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::PS4TouchpadPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.PS4TouchpadPressed");
		
		ATBLHUD_PS4TouchpadPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.OnPossessedPawn
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 * Parameters:
	 * 		class APawn*                                       NewPawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::OnPossessedPawn(class APawn* NewPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.OnPossessedPawn");
		
		ATBLHUD_OnPossessedPawn_Params params {};
		params.NewPawn = NewPawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3DA0
	 * 		Name   -> Function TBL.TBLHUD.NotifyPossessedPawn
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       NewPawn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::NotifyPossessedPawn(class APawn* NewPawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.NotifyPossessedPawn");
		
		ATBLHUD_NotifyPossessedPawn_Params params {};
		params.NewPawn = NewPawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.InGameMenuReleased
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::InGameMenuReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.InGameMenuReleased");
		
		ATBLHUD_InGameMenuReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.InGameMenuPressed
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::InGameMenuPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.InGameMenuPressed");
		
		ATBLHUD_InGameMenuPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3D70
	 * 		Name   -> Function TBL.TBLHUD.GetShowDebugTargetActor
	 * 		Flags  -> (Final, Native, Public)
	 */
	class AActor* ATBLHUD::GetShowDebugTargetActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.GetShowDebugTargetActor");
		
		ATBLHUD_GetShowDebugTargetActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3C30
	 * 		Name   -> Function TBL.TBLHUD.GetRadialVOMouseAngle
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		int                                                ButtonIndex                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               RadialDeselected                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   MousePositionByCanvas                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::GetRadialVOMouseAngle(int* ButtonIndex, bool* RadialDeselected, struct FVector2D* MousePositionByCanvas)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.GetRadialVOMouseAngle");
		
		ATBLHUD_GetRadialVOMouseAngle_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ButtonIndex != nullptr)
			*ButtonIndex = params.ButtonIndex;
		if (RadialDeselected != nullptr)
			*RadialDeselected = params.RadialDeselected;
		if (MousePositionByCanvas != nullptr)
			*MousePositionByCanvas = params.MousePositionByCanvas;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3B30
	 * 		Name   -> Function TBL.TBLHUD.GetImportantMessage
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FImportantGameMsg                           ImportantMessageOut                                        (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ATBLHUD::GetImportantMessage(struct FImportantGameMsg* ImportantMessageOut)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.GetImportantMessage");
		
		ATBLHUD_GetImportantMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ImportantMessageOut != nullptr)
			*ImportantMessageOut = params.ImportantMessageOut;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3AF0
	 * 		Name   -> Function TBL.TBLHUD.GetCrosshairPositionInViewport
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 */
	struct FVector2D ATBLHUD::GetCrosshairPositionInViewport()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.GetCrosshairPositionInViewport");
		
		ATBLHUD_GetCrosshairPositionInViewport_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.GamepadShowEmoteWheel
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLHUD::GamepadShowEmoteWheel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.GamepadShowEmoteWheel");
		
		ATBLHUD_GamepadShowEmoteWheel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.GamepadHideEmoteWheel
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void ATBLHUD::GamepadHideEmoteWheel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.GamepadHideEmoteWheel");
		
		ATBLHUD_GamepadHideEmoteWheel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ForceClearHint
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::ForceClearHint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ForceClearHint");
		
		ATBLHUD_ForceClearHint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3940
	 * 		Name   -> Function TBL.TBLHUD.DrawMaterialSimpleWithTriangles
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UMaterialInterface*                          Material                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ScreenX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ScreenY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ScreenW                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ScreenH                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLHUD::DrawMaterialSimpleWithTriangles(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.DrawMaterialSimpleWithTriangles");
		
		ATBLHUD_DrawMaterialSimpleWithTriangles_Params params {};
		params.Material = Material;
		params.ScreenX = ScreenX;
		params.ScreenY = ScreenY;
		params.ScreenW = ScreenW;
		params.ScreenH = ScreenH;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E92530
	 * 		Name   -> Function TBL.TBLHUD.DrawHUD
	 * 		Flags  -> (Native, Public)
	 */
	void ATBLHUD::DrawHUD()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.DrawHUD");
		
		ATBLHUD_DrawHUD_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLHUD.ClearHint
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLHUD::ClearHint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLHUD.ClearHint");
		
		ATBLHUD_ClearHint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLKeymapWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLKeymapWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLKeymapWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLKeymapWidgetInterface.ToggleKeymap
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void UTBLKeymapWidgetInterface::ToggleKeymap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLKeymapWidgetInterface.ToggleKeymap");
		
		UTBLKeymapWidgetInterface_ToggleKeymap_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLKeymapWidgetInterface.GetKeymapWidget
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
	 */
	class UTBLKeymapWidget* UTBLKeymapWidgetInterface::GetKeymapWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLKeymapWidgetInterface.GetKeymapWidget");
		
		UTBLKeymapWidgetInterface_GetKeymapWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLKeymapWidgetInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLKeymapWidgetInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLKeymapWidgetInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLLevelScriptActor.OnWarmupComplete
	 * 		Flags  -> (Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLLevelScriptActor::OnWarmupComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLevelScriptActor.OnWarmupComplete");
		
		ATBLLevelScriptActor_OnWarmupComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLLevelScriptActor.OnMatchStateChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLLevelScriptActor::OnMatchStateChanged(const class FName& NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLevelScriptActor.OnMatchStateChanged");
		
		ATBLLevelScriptActor_OnMatchStateChanged_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3AD0
	 * 		Name   -> Function TBL.TBLLevelScriptActor.GameStateSetup
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLLevelScriptActor::GameStateSetup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLevelScriptActor.GameStateSetup");
		
		ATBLLevelScriptActor_GameStateSetup_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLLevelScriptActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLLevelScriptActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLLevelScriptActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLLiveConfig.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLLiveConfig::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLLiveConfig");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLLoadingThrobberContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLLoadingThrobberContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLLoadingThrobberContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A4090
	 * 		Name   -> Function TBL.TBLLocalMessage.UnpackData
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                Data                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      Byte                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Value                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalMessage::STATIC_UnpackData(int Data, unsigned char* Byte, int* Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalMessage.UnpackData");
		
		UTBLLocalMessage_UnpackData_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Byte != nullptr)
			*Byte = params.Byte;
		if (Value != nullptr)
			*Value = params.Value;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3E20
	 * 		Name   -> Function TBL.TBLLocalMessage.PackData
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		unsigned char                                      Byte                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Value                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLLocalMessage::STATIC_PackData(unsigned char Byte, int Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalMessage.PackData");
		
		UTBLLocalMessage_PackData_Params params {};
		params.Byte = Byte;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLLocalMessage.OnMessageReceived
	 * 		Flags  -> (Event, Protected, BlueprintEvent, Const)
	 * Parameters:
	 * 		class APlayerController*                           Receiver                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Data                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                PlayerStateA                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                PlayerStateB                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalMessage::OnMessageReceived(class APlayerController* Receiver, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalMessage.OnMessageReceived");
		
		UTBLLocalMessage_OnMessageReceived_Params params {};
		params.Receiver = Receiver;
		params.Data = Data;
		params.PlayerStateA = PlayerStateA;
		params.PlayerStateB = PlayerStateB;
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A3790
	 * 		Name   -> Function TBL.TBLLocalMessage.BroadcastPrivateLocalMessage
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      MessageClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Data                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                PlayerStateA                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                PlayerStateB                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalMessage::STATIC_BroadcastPrivateLocalMessage(class APlayerController* PlayerController, class UClass* MessageClass, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalMessage.BroadcastPrivateLocalMessage");
		
		UTBLLocalMessage_BroadcastPrivateLocalMessage_Params params {};
		params.PlayerController = PlayerController;
		params.MessageClass = MessageClass;
		params.Data = Data;
		params.PlayerStateA = PlayerStateA;
		params.PlayerStateB = PlayerStateB;
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A35E0
	 * 		Name   -> Function TBL.TBLLocalMessage.BroadcastLocalMessage
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      MessageClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Data                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                PlayerStateA                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class APlayerState*                                PlayerStateB                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalMessage::STATIC_BroadcastLocalMessage(class UObject* WorldContextObject, class UClass* MessageClass, int Data, class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalMessage.BroadcastLocalMessage");
		
		UTBLLocalMessage_BroadcastLocalMessage_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.MessageClass = MessageClass;
		params.Data = Data;
		params.PlayerStateA = PlayerStateA;
		params.PlayerStateB = PlayerStateB;
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLLocalMessage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLLocalMessage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLLocalMessage");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLLocalMessageGameplayEvent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLLocalMessageGameplayEvent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLLocalMessageGameplayEvent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCloudBlockRecentPlayers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCloudBlockRecentPlayers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CloudBlockRecentPlayers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A83D0
	 * 		Name   -> Function TBL.TBLLocalPlayer.YesPartyCrossplayJoinListGame
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLLocalPlayer::YesPartyCrossplayJoinListGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.YesPartyCrossplayJoinListGame");
		
		UTBLLocalPlayer_YesPartyCrossplayJoinListGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A83B0
	 * 		Name   -> Function TBL.TBLLocalPlayer.YesPartyCrossplayJoin
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLLocalPlayer::YesPartyCrossplayJoin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.YesPartyCrossplayJoin");
		
		UTBLLocalPlayer_YesPartyCrossplayJoin_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLLocalPlayer.WhatBuild
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLLocalPlayer::WhatBuild()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.WhatBuild");
		
		UTBLLocalPlayer_WhatBuild_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A8310
	 * 		Name   -> Function TBL.TBLLocalPlayer.SendPartyInvitationToPlayerIdExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::SendPartyInvitationToPlayerIdExec(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.SendPartyInvitationToPlayerIdExec");
		
		UTBLLocalPlayer_SendPartyInvitationToPlayerIdExec_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A8220
	 * 		Name   -> Function TBL.TBLLocalPlayer.RemoveBlock
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::RemoveBlock(const class FString& PlayerId, const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.RemoveBlock");
		
		UTBLLocalPlayer_RemoveBlock_Params params {};
		params.PlayerId = PlayerId;
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A8180
	 * 		Name   -> Function TBL.TBLLocalPlayer.RejectPartyInvitationFromPlayer
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::RejectPartyInvitationFromPlayer(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.RejectPartyInvitationFromPlayer");
		
		UTBLLocalPlayer_RejectPartyInvitationFromPlayer_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7F90
	 * 		Name   -> Function TBL.TBLLocalPlayer.PartyKickExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::PartyKickExec(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.PartyKickExec");
		
		UTBLLocalPlayer_PartyKickExec_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7ED0
	 * 		Name   -> Function TBL.TBLLocalPlayer.OnReadUserFileComplete
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FPlatformInterfaceDelegateResult            Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::OnReadUserFileComplete(const struct FPlatformInterfaceDelegateResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.OnReadUserFileComplete");
		
		UTBLLocalPlayer_OnReadUserFileComplete_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7A40
	 * 		Name   -> Function TBL.TBLLocalPlayer.OnEnumerateCloudFilesComplete
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FPlatformInterfaceDelegateResult            Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::OnEnumerateCloudFilesComplete(const struct FPlatformInterfaceDelegateResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.OnEnumerateCloudFilesComplete");
		
		UTBLLocalPlayer_OnEnumerateCloudFilesComplete_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7A20
	 * 		Name   -> Function TBL.TBLLocalPlayer.NoPartyCrossplayJoin
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLLocalPlayer::NoPartyCrossplayJoin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.NoPartyCrossplayJoin");
		
		UTBLLocalPlayer_NoPartyCrossplayJoin_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A79E0
	 * 		Name   -> Function TBL.TBLLocalPlayer.ListRecents
	 * 		Flags  -> (Final, Exec, Native, Public, Const)
	 */
	void UTBLLocalPlayer::ListRecents()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.ListRecents");
		
		UTBLLocalPlayer_ListRecents_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A79C0
	 * 		Name   -> Function TBL.TBLLocalPlayer.ListPartyInvitationsExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLLocalPlayer::ListPartyInvitationsExec()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.ListPartyInvitationsExec");
		
		UTBLLocalPlayer_ListPartyInvitationsExec_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A79A0
	 * 		Name   -> Function TBL.TBLLocalPlayer.ListBlocks
	 * 		Flags  -> (Final, Exec, Native, Public, Const)
	 */
	void UTBLLocalPlayer::ListBlocks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.ListBlocks");
		
		UTBLLocalPlayer_ListBlocks_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7980
	 * 		Name   -> Function TBL.TBLLocalPlayer.LeavePartyExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLLocalPlayer::LeavePartyExec()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.LeavePartyExec");
		
		UTBLLocalPlayer_LeavePartyExec_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A78E0
	 * 		Name   -> Function TBL.TBLLocalPlayer.JoinPartyExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PartyId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::JoinPartyExec(const class FString& PartyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.JoinPartyExec");
		
		UTBLLocalPlayer_JoinPartyExec_Params params {};
		params.PartyId = PartyId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A78B0
	 * 		Name   -> Function TBL.TBLLocalPlayer.IsPartyLeader
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLLocalPlayer::IsPartyLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.IsPartyLeader");
		
		UTBLLocalPlayer_IsPartyLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7880
	 * 		Name   -> Function TBL.TBLLocalPlayer.IsInParty
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLLocalPlayer::IsInParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.IsInParty");
		
		UTBLLocalPlayer_IsInParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7780
	 * 		Name   -> Function TBL.TBLLocalPlayer.IsBlocked
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLLocalPlayer::IsBlocked(const class FString& PlayerId, const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.IsBlocked");
		
		UTBLLocalPlayer_IsBlocked_Params params {};
		params.PlayerId = PlayerId;
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7750
	 * 		Name   -> Function TBL.TBLLocalPlayer.GetPartyMemberCount
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	int UTBLLocalPlayer::GetPartyMemberCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.GetPartyMemberCount");
		
		UTBLLocalPlayer_GetPartyMemberCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7730
	 * 		Name   -> Function TBL.TBLLocalPlayer.GetPartyLeaderExec
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLLocalPlayer::GetPartyLeaderExec()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.GetPartyLeaderExec");
		
		UTBLLocalPlayer_GetPartyLeaderExec_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A75C0
	 * 		Name   -> Function TBL.TBLLocalPlayer.GetOnlineUser
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FBlueprintOnlineUser UTBLLocalPlayer::GetOnlineUser(const class FString& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.GetOnlineUser");
		
		UTBLLocalPlayer_GetOnlineUser_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7590
	 * 		Name   -> Function TBL.TBLLocalPlayer.GetIsPartyInMatchmakingQueue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLLocalPlayer::GetIsPartyInMatchmakingQueue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.GetIsPartyInMatchmakingQueue");
		
		UTBLLocalPlayer_GetIsPartyInMatchmakingQueue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7560
	 * 		Name   -> Function TBL.TBLLocalPlayer.GetCurrentSlateInputMode
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_ESlateInputMode UTBLLocalPlayer::GetCurrentSlateInputMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.GetCurrentSlateInputMode");
		
		UTBLLocalPlayer_GetCurrentSlateInputMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A74C0
	 * 		Name   -> Function TBL.TBLLocalPlayer.CreateAndSendPartyInvitationToPlayerId
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::CreateAndSendPartyInvitationToPlayerId(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.CreateAndSendPartyInvitationToPlayerId");
		
		UTBLLocalPlayer_CreateAndSendPartyInvitationToPlayerId_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A74A0
	 * 		Name   -> Function TBL.TBLLocalPlayer.CopyInfo
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLLocalPlayer::CopyInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.CopyInfo");
		
		UTBLLocalPlayer_CopyInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A73B0
	 * 		Name   -> Function TBL.TBLLocalPlayer.AddRecent
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::AddRecent(const class FString& PlayerId, const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.AddRecent");
		
		UTBLLocalPlayer_AddRecent_Params params {};
		params.PlayerId = PlayerId;
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A72C0
	 * 		Name   -> Function TBL.TBLLocalPlayer.AddBlock
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::AddBlock(const class FString& PlayerId, const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.AddBlock");
		
		UTBLLocalPlayer_AddBlock_Params params {};
		params.PlayerId = PlayerId;
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7220
	 * 		Name   -> Function TBL.TBLLocalPlayer.AcceptPartyInvitationFromPlayerExec
	 * 		Flags  -> (Final, Exec, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLLocalPlayer::AcceptPartyInvitationFromPlayerExec(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLLocalPlayer.AcceptPartyInvitationFromPlayerExec");
		
		UTBLLocalPlayer_AcceptPartyInvitationFromPlayerExec_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLLocalPlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLLocalPlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLLocalPlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7CA0
	 * 		Name   -> Function TBL.TBLMatchesSubsystem.OnPS5MatchResponsiblePlayerUpdated
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		struct FUniqueNetIdRepl                            Player                                                     (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMatchesSubsystem::OnPS5MatchResponsiblePlayerUpdated(const struct FUniqueNetIdRepl& Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMatchesSubsystem.OnPS5MatchResponsiblePlayerUpdated");
		
		UTBLMatchesSubsystem_OnPS5MatchResponsiblePlayerUpdated_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7C00
	 * 		Name   -> Function TBL.TBLMatchesSubsystem.OnPS5MatchIdChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      MatchID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMatchesSubsystem::OnPS5MatchIdChanged(const class FString& MatchID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMatchesSubsystem.OnPS5MatchIdChanged");
		
		UTBLMatchesSubsystem_OnPS5MatchIdChanged_Params params {};
		params.MatchID = MatchID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7E30
	 * 		Name   -> Function TBL.TBLMatchesSubsystem.OnPreLoadMap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMatchesSubsystem::OnPreLoadMap(const class FString& MapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMatchesSubsystem.OnPreLoadMap");
		
		UTBLMatchesSubsystem_OnPreLoadMap_Params params {};
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7DB0
	 * 		Name   -> Function TBL.TBLMatchesSubsystem.OnPostLoadMap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class UWorld*                                      LoadedWorld                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMatchesSubsystem::OnPostLoadMap(class UWorld* LoadedWorld)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMatchesSubsystem.OnPostLoadMap");
		
		UTBLMatchesSubsystem_OnPostLoadMap_Params params {};
		params.LoadedWorld = LoadedWorld;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7B80
	 * 		Name   -> Function TBL.TBLMatchesSubsystem.OnMatchStateChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class FName                                        NewMatchState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMatchesSubsystem::OnMatchStateChanged(const class FName& NewMatchState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMatchesSubsystem.OnMatchStateChanged");
		
		UTBLMatchesSubsystem_OnMatchStateChanged_Params params {};
		params.NewMatchState = NewMatchState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7B00
	 * 		Name   -> Function TBL.TBLMatchesSubsystem.OnGameStateSetEvent
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AGameStateBase*                              GameState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMatchesSubsystem::OnGameStateSetEvent(class AGameStateBase* GameState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMatchesSubsystem.OnGameStateSetEvent");
		
		UTBLMatchesSubsystem_OnGameStateSetEvent_Params params {};
		params.GameState = GameState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A7A00
	 * 		Name   -> Function TBL.TBLMatchesSubsystem.MatchUpdate
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLMatchesSubsystem::MatchUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMatchesSubsystem.MatchUpdate");
		
		UTBLMatchesSubsystem_MatchUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLMatchesSubsystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLMatchesSubsystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLMatchesSubsystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01641EA0
	 * 		Name   -> Function TBL.TBLMaterialButtonWidget.SetStartingInterpProgress
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMaterialButtonWidget::SetStartingInterpProgress(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMaterialButtonWidget.SetStartingInterpProgress");
		
		UTBLMaterialButtonWidget_SetStartingInterpProgress_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016A8030
	 * 		Name   -> Function TBL.TBLMaterialButtonWidget.PlayButtonAnimation
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FTBLButtonAnimation_deprecated              InAnimation                                                (Parm, NativeAccessSpecifierPublic)
	 * 		bool                                               ReverseAnim                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMaterialButtonWidget::PlayButtonAnimation(const struct FTBLButtonAnimation_deprecated& InAnimation, bool ReverseAnim)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMaterialButtonWidget.PlayButtonAnimation");
		
		UTBLMaterialButtonWidget_PlayButtonAnimation_Params params {};
		params.InAnimation = InAnimation;
		params.ReverseAnim = ReverseAnim;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLMaterialButtonWidget.OnUpdateMaterial
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        MaterialParamName                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InProgress                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLMaterialButtonWidget::OnUpdateMaterial(const class FName& MaterialParamName, float InProgress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLMaterialButtonWidget.OnUpdateMaterial");
		
		UTBLMaterialButtonWidget_OnUpdateMaterial_Params params {};
		params.MaterialParamName = MaterialParamName;
		params.InProgress = InProgress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLMaterialButtonWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLMaterialButtonWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLMaterialButtonWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLMenuItemWidgetStyle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLMenuItemWidgetStyle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLMenuItemWidgetStyle");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLMessageBus.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLMessageBus::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLMessageBus");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLNavLink.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLNavLink::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLNavLink");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLNavModifierComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLNavModifierComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLNavModifierComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AObjectAnchor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AObjectAnchor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.ObjectAnchor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD250
	 * 		Name   -> Function TBL.TBLOnlineLibrary.ViewProfileFromBlueprintOnlineUser
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_ViewProfileFromBlueprintOnlineUser(const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.ViewProfileFromBlueprintOnlineUser");
		
		UTBLOnlineLibrary_ViewProfileFromBlueprintOnlineUser_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE950
	 * 		Name   -> Function TBL.TBLOnlineLibrary.TBLJoinGameSession
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     SessionResult                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      Password                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_TBLJoinGameSession(const struct FBlueprintSessionResult& SessionResult, const class FString& Password, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.TBLJoinGameSession");
		
		UTBLOnlineLibrary_TBLJoinGameSession_Params params {};
		params.SessionResult = SessionResult;
		params.Password = Password;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE7B0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.SetMuteStateForRemotePlayer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               VoiceChatEnabled                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerController*                        LocalController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             NewPlayer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_SetMuteStateForRemotePlayer(bool VoiceChatEnabled, class ATBLPlayerController* LocalController, class ATBLPlayerState* NewPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.SetMuteStateForRemotePlayer");
		
		UTBLOnlineLibrary_SetMuteStateForRemotePlayer_Params params {};
		params.VoiceChatEnabled = VoiceChatEnabled;
		params.LocalController = LocalController;
		params.NewPlayer = NewPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE510
	 * 		Name   -> Function TBL.TBLOnlineLibrary.SessionInfoToDebugString
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class FString UTBLOnlineLibrary::STATIC_SessionInfoToDebugString(const struct FBlueprintSessionResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.SessionInfoToDebugString");
		
		UTBLOnlineLibrary_SessionInfoToDebugString_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE310
	 * 		Name   -> Function TBL.TBLOnlineLibrary.RemoveFriendFromBlueprintOnlineUser
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_RemoveFriendFromBlueprintOnlineUser(class ATBLPlayerController* InController, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.RemoveFriendFromBlueprintOnlineUser");
		
		UTBLOnlineLibrary_RemoveFriendFromBlueprintOnlineUser_Params params {};
		params.InController = InController;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE1B0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.RemoveBlockFromBlueprintOnlineUser
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_RemoveBlockFromBlueprintOnlineUser(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.RemoveBlockFromBlueprintOnlineUser");
		
		UTBLOnlineLibrary_RemoveBlockFromBlueprintOnlineUser_Params params {};
		params.InPlayer = InPlayer;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE190
	 * 		Name   -> Function TBL.TBLOnlineLibrary.OpenPartyInviteDialog
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	void UTBLOnlineLibrary::STATIC_OpenPartyInviteDialog()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.OpenPartyInviteDialog");
		
		UTBLOnlineLibrary_OpenPartyInviteDialog_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE0D0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.LocalUserHasLicenseToApp
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                AppId                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_LocalUserHasLicenseToApp(int AppId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.LocalUserHasLicenseToApp");
		
		UTBLOnlineLibrary_LocalUserHasLicenseToApp_Params params {};
		params.AppId = AppId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE060
	 * 		Name   -> Function TBL.TBLOnlineLibrary.LeaveParty
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_LeaveParty(class UTBLLocalPlayer* InPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.LeaveParty");
		
		UTBLOnlineLibrary_LeaveParty_Params params {};
		params.InPlayer = InPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ADF00
	 * 		Name   -> Function TBL.TBLOnlineLibrary.KickPlayer
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_KickPlayer(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.KickPlayer");
		
		UTBLOnlineLibrary_KickPlayer_Params params {};
		params.InPlayer = InPlayer;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ADD90
	 * 		Name   -> Function TBL.TBLOnlineLibrary.JoinGame
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerController*                        LocalController                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_JoinGame(const struct FBlueprintOnlineUser& User, class ATBLPlayerController* LocalController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.JoinGame");
		
		UTBLOnlineLibrary_JoinGame_Params params {};
		params.User = User;
		params.LocalController = LocalController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ADC60
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsUserMyself
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsUserMyself(const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsUserMyself");
		
		UTBLOnlineLibrary_IsUserMyself_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00AD0350
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsTutorialServer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLOnlineLibrary::STATIC_IsTutorialServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsTutorialServer");
		
		UTBLOnlineLibrary_IsTutorialServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ADB80
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsPlayerTalking
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsPlayerTalking(const class FString& PlayerId, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsPlayerTalking");
		
		UTBLOnlineLibrary_IsPlayerTalking_Params params {};
		params.PlayerId = PlayerId;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ADAB0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsPasswordProtectedServerBySessionResult
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsPasswordProtectedServerBySessionResult(const struct FBlueprintSessionResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsPasswordProtectedServerBySessionResult");
		
		UTBLOnlineLibrary_IsPasswordProtectedServerBySessionResult_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD980
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsPartyLeader
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsPartyLeader(const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsPartyLeader");
		
		UTBLOnlineLibrary_IsPartyLeader_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD8B0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsOfficialServerBySessionResult
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsOfficialServerBySessionResult(const struct FBlueprintSessionResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsOfficialServerBySessionResult");
		
		UTBLOnlineLibrary_IsOfficialServerBySessionResult_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD880
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsLocalPlayerPartyLeader
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLOnlineLibrary::STATIC_IsLocalPlayerPartyLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsLocalPlayerPartyLeader");
		
		UTBLOnlineLibrary_IsLocalPlayerPartyLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD710
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsInMyParty
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsInMyParty(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsInMyParty");
		
		UTBLOnlineLibrary_IsInMyParty_Params params {};
		params.InPlayer = InPlayer;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD6E0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsInMatchmadeGame
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLOnlineLibrary::STATIC_IsInMatchmadeGame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsInMatchmadeGame");
		
		UTBLOnlineLibrary_IsInMatchmadeGame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD5B0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsInAParty
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsInAParty(const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsInAParty");
		
		UTBLOnlineLibrary_IsInAParty_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00AD0350
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsGameJoinable
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLOnlineLibrary::STATIC_IsGameJoinable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsGameJoinable");
		
		UTBLOnlineLibrary_IsGameJoinable_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD550
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsAppOwnershipTemporary
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	bool UTBLOnlineLibrary::STATIC_IsAppOwnershipTemporary()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsAppOwnershipTemporary");
		
		UTBLOnlineLibrary_IsAppOwnershipTemporary_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD4D0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.IsAdminBP
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerController*                           Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_IsAdminBP(class APlayerController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.IsAdminBP");
		
		UTBLOnlineLibrary_IsAdminBP_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD370
	 * 		Name   -> Function TBL.TBLOnlineLibrary.InviteUserToParty
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_InviteUserToParty(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.InviteUserToParty");
		
		UTBLOnlineLibrary_InviteUserToParty_Params params {};
		params.InPlayer = InPlayer;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD250
	 * 		Name   -> Function TBL.TBLOnlineLibrary.InviteUserToGame
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_InviteUserToGame(const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.InviteUserToGame");
		
		UTBLOnlineLibrary_InviteUserToGame_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD000
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetTBLGameSession
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLGameSession* UTBLOnlineLibrary::STATIC_GetTBLGameSession(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetTBLGameSession");
		
		UTBLOnlineLibrary_GetTBLGameSession_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ACF80
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetTBLGameInstance
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTBLGameInstance* UTBLOnlineLibrary::STATIC_GetTBLGameInstance(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetTBLGameInstance");
		
		UTBLOnlineLibrary_GetTBLGameInstance_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD080
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetTalkingPlayers
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     OutPlayerStates                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_GetTalkingPlayers(TArray<class ATBLPlayerState*>* OutPlayerStates, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetTalkingPlayers");
		
		UTBLOnlineLibrary_GetTalkingPlayers_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlayerStates != nullptr)
			*OutPlayerStates = params.OutPlayerStates;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ACE20
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatRangeIntFromLevel
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                InLevel                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    OnlineStat                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Start                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                End                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatRangeIntFromLevel(int InLevel, TBL_EOnlineStat OnlineStat, int* Start, int* End)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatRangeIntFromLevel");
		
		UTBLOnlineLibrary_GetStatRangeIntFromLevel_Params params {};
		params.InLevel = InLevel;
		params.OnlineStat = OnlineStat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Start != nullptr)
			*Start = params.Start;
		if (End != nullptr)
			*End = params.End;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ACC60
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatRangeIntFromExperience
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                InExperience                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    OnlineStat                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Level                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                PreviousLevelExperience                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NextLevelExperience                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatRangeIntFromExperience(int InExperience, TBL_EOnlineStat OnlineStat, int* Level, int* PreviousLevelExperience, int* NextLevelExperience)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatRangeIntFromExperience");
		
		UTBLOnlineLibrary_GetStatRangeIntFromExperience_Params params {};
		params.InExperience = InExperience;
		params.OnlineStat = OnlineStat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Level != nullptr)
			*Level = params.Level;
		if (PreviousLevelExperience != nullptr)
			*PreviousLevelExperience = params.PreviousLevelExperience;
		if (NextLevelExperience != nullptr)
			*NextLevelExperience = params.NextLevelExperience;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ACAA0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatRangeInt
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    OnlineStat                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Level                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                PreviousLevelExperience                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NextLevelExperience                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatRangeInt(class ATBLPlayerController* InController, TBL_EOnlineStat OnlineStat, int* Level, int* PreviousLevelExperience, int* NextLevelExperience)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatRangeInt");
		
		UTBLOnlineLibrary_GetStatRangeInt_Params params {};
		params.InController = InController;
		params.OnlineStat = OnlineStat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Level != nullptr)
			*Level = params.Level;
		if (PreviousLevelExperience != nullptr)
			*PreviousLevelExperience = params.PreviousLevelExperience;
		if (NextLevelExperience != nullptr)
			*NextLevelExperience = params.NextLevelExperience;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC8E0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatRangeFromPlayerState
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    OnlineStat                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Level                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                PreviousLevelExperience                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NextLevelExperience                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatRangeFromPlayerState(class ATBLPlayerState* PlayerState, TBL_EOnlineStat OnlineStat, int* Level, int* PreviousLevelExperience, int* NextLevelExperience)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatRangeFromPlayerState");
		
		UTBLOnlineLibrary_GetStatRangeFromPlayerState_Params params {};
		params.PlayerState = PlayerState;
		params.OnlineStat = OnlineStat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Level != nullptr)
			*Level = params.Level;
		if (PreviousLevelExperience != nullptr)
			*PreviousLevelExperience = params.PreviousLevelExperience;
		if (NextLevelExperience != nullptr)
			*NextLevelExperience = params.NextLevelExperience;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC7E0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatOriginalInt
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                returnVal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatOriginalInt(class ATBLPlayerController* InController, TBL_EOnlineStat Stat, int* returnVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatOriginalInt");
		
		UTBLOnlineLibrary_GetStatOriginalInt_Params params {};
		params.InController = InController;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (returnVal != nullptr)
			*returnVal = params.returnVal;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC6D0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatOriginalFloat
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              returnVal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatOriginalFloat(class ATBLPlayerController* InController, TBL_EOnlineStat Stat, float* returnVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatOriginalFloat");
		
		UTBLOnlineLibrary_GetStatOriginalFloat_Params params {};
		params.InController = InController;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (returnVal != nullptr)
			*returnVal = params.returnVal;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC5D0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatInt
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                returnVal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatInt(class ATBLPlayerController* InController, TBL_EOnlineStat Stat, int* returnVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatInt");
		
		UTBLOnlineLibrary_GetStatInt_Params params {};
		params.InController = InController;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (returnVal != nullptr)
			*returnVal = params.returnVal;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC4C0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetStatFloat
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              returnVal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetStatFloat(class ATBLPlayerController* InController, TBL_EOnlineStat Stat, float* returnVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetStatFloat");
		
		UTBLOnlineLibrary_GetStatFloat_Params params {};
		params.InController = InController;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (returnVal != nullptr)
			*returnVal = params.returnVal;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC370
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetSessionSettingsValue
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FName                                        Key                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLOnlineLibrary::STATIC_GetSessionSettingsValue(const struct FBlueprintSessionResult& Result, const class FName& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetSessionSettingsValue");
		
		UTBLOnlineLibrary_GetSessionSettingsValue_Params params {};
		params.Result = Result;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC240
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetSessionSettingsKeys
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                OutSettingKeys                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_GetSessionSettingsKeys(const struct FBlueprintSessionResult& Result, TArray<class FName>* OutSettingKeys)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetSessionSettingsKeys");
		
		UTBLOnlineLibrary_GetSessionSettingsKeys_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSettingKeys != nullptr)
			*OutSettingKeys = params.OutSettingKeys;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AC0B0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetSessionSettingsAsStrings
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        SessionName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Keys                                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              Values                                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_GetSessionSettingsAsStrings(const class FName& SessionName, TArray<class FString>* Keys, TArray<class FString>* Values)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetSessionSettingsAsStrings");
		
		UTBLOnlineLibrary_GetSessionSettingsAsStrings_Params params {};
		params.SessionName = SessionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Keys != nullptr)
			*Keys = params.Keys;
		if (Values != nullptr)
			*Values = params.Values;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABFA0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetPartyMembers
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<struct FBlueprintOnlineUser>                OutPartyMembers                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_GetPartyMembers(TArray<struct FBlueprintOnlineUser>* OutPartyMembers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetPartyMembers");
		
		UTBLOnlineLibrary_GetPartyMembers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPartyMembers != nullptr)
			*OutPartyMembers = params.OutPartyMembers;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABF70
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetPartyMemberCount
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	int UTBLOnlineLibrary::STATIC_GetPartyMemberCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetPartyMemberCount");
		
		UTBLOnlineLibrary_GetPartyMemberCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABE70
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetNumBots
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	int UTBLOnlineLibrary::STATIC_GetNumBots(const struct FBlueprintSessionResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetNumBots");
		
		UTBLOnlineLibrary_GetNumBots_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABD60
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetMapName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintSessionResult                     Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class FString UTBLOnlineLibrary::STATIC_GetMapName(const struct FBlueprintSessionResult& Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetMapName");
		
		UTBLOnlineLibrary_GetMapName_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABCE0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetLocalPlayerId
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class FString UTBLOnlineLibrary::STATIC_GetLocalPlayerId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetLocalPlayerId");
		
		UTBLOnlineLibrary_GetLocalPlayerId_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABC40
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetListOfCurrentSessions
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class FName>                                CurrentSessions                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_GetListOfCurrentSessions(TArray<class FName>* CurrentSessions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetListOfCurrentSessions");
		
		UTBLOnlineLibrary_GetListOfCurrentSessions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (CurrentSessions != nullptr)
			*CurrentSessions = params.CurrentSessions;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABA70
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetFriendById
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      FriendId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        OutBlueprintUser                                           (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_GetFriendById(const class FString& FriendId, struct FBlueprintOnlineUser* OutBlueprintUser)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetFriendById");
		
		UTBLOnlineLibrary_GetFriendById_Params params {};
		params.FriendId = FriendId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBlueprintUser != nullptr)
			*OutBlueprintUser = params.OutBlueprintUser;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB9A0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetDebugStringForSessionSettingsKey
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        Key                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLOnlineLibrary::STATIC_GetDebugStringForSessionSettingsKey(const class FName& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetDebugStringForSessionSettingsKey");
		
		UTBLOnlineLibrary_GetDebugStringForSessionSettingsKey_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB850
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetAvatarImageFromPlayerState
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ESteamAvatarSize                               Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTexture* UTBLOnlineLibrary::STATIC_GetAvatarImageFromPlayerState(class APlayerState* PlayerState, TBL_ESteamAvatarSize Size)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetAvatarImageFromPlayerState");
		
		UTBLOnlineLibrary_GetAvatarImageFromPlayerState_Params params {};
		params.PlayerState = PlayerState;
		params.Size = Size;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB6E0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.GetAvatarImageFromOnlineUser
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TBL_ESteamAvatarSize                               Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTexture* UTBLOnlineLibrary::STATIC_GetAvatarImageFromOnlineUser(const struct FBlueprintOnlineUser& User, TBL_ESteamAvatarSize Size)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.GetAvatarImageFromOnlineUser");
		
		UTBLOnlineLibrary_GetAvatarImageFromOnlineUser_Params params {};
		params.User = User;
		params.Size = Size;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB6B0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.CheckAppOwnership
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	bool UTBLOnlineLibrary::STATIC_CheckAppOwnership()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.CheckAppOwnership");
		
		UTBLOnlineLibrary_CheckAppOwnership_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB680
	 * 		Name   -> Function TBL.TBLOnlineLibrary.CanSendPartyInvites
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLOnlineLibrary::STATIC_CanSendPartyInvites()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.CanSendPartyInvites");
		
		UTBLOnlineLibrary_CanSendPartyInvites_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB550
	 * 		Name   -> Function TBL.TBLOnlineLibrary.CanJoinGame
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLOnlineLibrary::STATIC_CanJoinGame(const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.CanJoinGame");
		
		UTBLOnlineLibrary_CanJoinGame_Params params {};
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB3A0
	 * 		Name   -> Function TBL.TBLOnlineLibrary.BroadcastLocalizedObjectiveMessage
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FObjectiveMessage                           ObjectiveMessage                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       ReceivingFaction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_BroadcastLocalizedObjectiveMessage(const struct FObjectiveMessage& ObjectiveMessage, TBL_EFaction ReceivingFaction, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.BroadcastLocalizedObjectiveMessage");
		
		UTBLOnlineLibrary_BroadcastLocalizedObjectiveMessage_Params params {};
		params.ObjectiveMessage = ObjectiveMessage;
		params.ReceivingFaction = ReceivingFaction;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB200
	 * 		Name   -> Function TBL.TBLOnlineLibrary.BroadcastLocalizedChat
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Msg                                                        (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       ReceivingFaction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_BroadcastLocalizedChat(const class FText& Msg, TBL_EChatType Type, TBL_EFaction ReceivingFaction, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.BroadcastLocalizedChat");
		
		UTBLOnlineLibrary_BroadcastLocalizedChat_Params params {};
		params.Msg = Msg;
		params.Type = Type;
		params.ReceivingFaction = ReceivingFaction;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB070
	 * 		Name   -> Function TBL.TBLOnlineLibrary.BroadcastGameModeMessages
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FGameModeMessageTable>               GameModeMessages                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_BroadcastGameModeMessages(TArray<struct FGameModeMessageTable> GameModeMessages, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.BroadcastGameModeMessages");
		
		UTBLOnlineLibrary_BroadcastGameModeMessages_Params params {};
		params.GameModeMessages = GameModeMessages;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00AD0350
	 * 		Name   -> Function TBL.TBLOnlineLibrary.AreWePartyHost
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLOnlineLibrary::STATIC_AreWePartyHost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.AreWePartyHost");
		
		UTBLOnlineLibrary_AreWePartyHost_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AAE90
	 * 		Name   -> Function TBL.TBLOnlineLibrary.AddFriendFromBlueprintOnlineUser
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InController                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_AddFriendFromBlueprintOnlineUser(class ATBLPlayerController* InController, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.AddFriendFromBlueprintOnlineUser");
		
		UTBLOnlineLibrary_AddFriendFromBlueprintOnlineUser_Params params {};
		params.InController = InController;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AAD30
	 * 		Name   -> Function TBL.TBLOnlineLibrary.AddBlockFromBlueprintOnlineUser
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_AddBlockFromBlueprintOnlineUser(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.AddBlockFromBlueprintOnlineUser");
		
		UTBLOnlineLibrary_AddBlockFromBlueprintOnlineUser_Params params {};
		params.InPlayer = InPlayer;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AAC60
	 * 		Name   -> Function TBL.TBLOnlineLibrary.ActivateGameOverlayToWebPage
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      URL                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_ActivateGameOverlayToWebPage(const class FString& URL)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.ActivateGameOverlayToWebPage");
		
		UTBLOnlineLibrary_ActivateGameOverlayToWebPage_Params params {};
		params.URL = URL;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AAB90
	 * 		Name   -> Function TBL.TBLOnlineLibrary.AcceptPartyInviteFromPlayerName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InviteeName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_AcceptPartyInviteFromPlayerName(class UTBLLocalPlayer* InPlayer, const class FString& InviteeName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.AcceptPartyInviteFromPlayerName");
		
		UTBLOnlineLibrary_AcceptPartyInviteFromPlayerName_Params params {};
		params.InPlayer = InPlayer;
		params.InviteeName = InviteeName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AAA30
	 * 		Name   -> Function TBL.TBLOnlineLibrary.AcceptPartyInviteFromPlayer
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UTBLLocalPlayer*                             InPlayer                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        User                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLOnlineLibrary::STATIC_AcceptPartyInviteFromPlayer(class UTBLLocalPlayer* InPlayer, const struct FBlueprintOnlineUser& User)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOnlineLibrary.AcceptPartyInviteFromPlayer");
		
		UTBLOnlineLibrary_AcceptPartyInviteFromPlayer_Params params {};
		params.InPlayer = InPlayer;
		params.User = User;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLOnlineLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLOnlineLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLOnlineLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AEB60
	 * 		Name   -> Function TBL.TBLOptionsScreen.UserRevertedResolution
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLOptionsScreen::UserRevertedResolution()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.UserRevertedResolution");
		
		UTBLOptionsScreen_UserRevertedResolution_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AEB40
	 * 		Name   -> Function TBL.TBLOptionsScreen.UserDeclinedCrossplayChange
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLOptionsScreen::UserDeclinedCrossplayChange()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.UserDeclinedCrossplayChange");
		
		UTBLOptionsScreen_UserDeclinedCrossplayChange_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AEB20
	 * 		Name   -> Function TBL.TBLOptionsScreen.UserConfirmedResolution
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLOptionsScreen::UserConfirmedResolution()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.UserConfirmedResolution");
		
		UTBLOptionsScreen_UserConfirmedResolution_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AEB00
	 * 		Name   -> Function TBL.TBLOptionsScreen.UserConfirmedCrossplayChange
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLOptionsScreen::UserConfirmedCrossplayChange()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.UserConfirmedCrossplayChange");
		
		UTBLOptionsScreen_UserConfirmedCrossplayChange_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE8B0
	 * 		Name   -> Function TBL.TBLOptionsScreen.SetOverallScalabilityLevelWithAuto
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOptionsScreen::SetOverallScalabilityLevelWithAuto(int Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.SetOverallScalabilityLevelWithAuto");
		
		UTBLOptionsScreen_SetOverallScalabilityLevelWithAuto_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE4F0
	 * 		Name   -> Function TBL.TBLOptionsScreen.SaveAll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLOptionsScreen::SaveAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.SaveAll");
		
		UTBLOptionsScreen_SaveAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE4B0
	 * 		Name   -> Function TBL.TBLOptionsScreen.ResetAll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLOptionsScreen::ResetAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.ResetAll");
		
		UTBLOptionsScreen_ResetAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE170
	 * 		Name   -> Function TBL.TBLOptionsScreen.OnGameUserSettingsUINeedsUpdate
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLOptionsScreen::OnGameUserSettingsUINeedsUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.OnGameUserSettingsUINeedsUpdate");
		
		UTBLOptionsScreen_OnGameUserSettingsUINeedsUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE150
	 * 		Name   -> Function TBL.TBLOptionsScreen.OnGameExit
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLOptionsScreen::OnGameExit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.OnGameExit");
		
		UTBLOptionsScreen_OnGameExit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016ABF40
	 * 		Name   -> Function TBL.TBLOptionsScreen.GetOverallScalabilityLevelWithAuto
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	int UTBLOptionsScreen::GetOverallScalabilityLevelWithAuto()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.GetOverallScalabilityLevelWithAuto");
		
		UTBLOptionsScreen_GetOverallScalabilityLevelWithAuto_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB050
	 * 		Name   -> Function TBL.TBLOptionsScreen.ApplyAll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLOptionsScreen::ApplyAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOptionsScreen.ApplyAll");
		
		UTBLOptionsScreen_ApplyAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLOptionsScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLOptionsScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLOptionsScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE4D0
	 * 		Name   -> Function TBL.OptionsScreenProperty.ResetToDefault
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenProperty::ResetToDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProperty.ResetToDefault");
		
		UOptionsScreenProperty_ResetToDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015DD9F0
	 * 		Name   -> Function TBL.OptionsScreenProperty.Reset
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenProperty::Reset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProperty.Reset");
		
		UOptionsScreenProperty_Reset_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD580
	 * 		Name   -> Function TBL.OptionsScreenProperty.IsDefaultValue
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	bool UOptionsScreenProperty::IsDefaultValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProperty.IsDefaultValue");
		
		UOptionsScreenProperty_IsDefaultValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AAFF0
	 * 		Name   -> Function TBL.OptionsScreenProperty.Apply
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenProperty::Apply()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProperty.Apply");
		
		UOptionsScreenProperty_Apply_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenProperty.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenProperty::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenProperty");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE620
	 * 		Name   -> Function TBL.OptionsScreenProp_CheckBox.SetCurrentValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               In                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOptionsScreenProp_CheckBox::SetCurrentValue(bool In)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProp_CheckBox.SetCurrentValue");
		
		UOptionsScreenProp_CheckBox_SetCurrentValue_Params params {};
		params.In = In;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB910
	 * 		Name   -> Function TBL.OptionsScreenProp_CheckBox.GetCurrentValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UOptionsScreenProp_CheckBox::GetCurrentValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProp_CheckBox.GetCurrentValue");
		
		UOptionsScreenProp_CheckBox_GetCurrentValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenProp_CheckBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenProp_CheckBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenProp_CheckBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE6B0
	 * 		Name   -> Function TBL.OptionsScreenProp_ComboBox.SetCurrentValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                In                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOptionsScreenProp_ComboBox::SetCurrentValue(int In)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProp_ComboBox.SetCurrentValue");
		
		UOptionsScreenProp_ComboBox_SetCurrentValue_Params params {};
		params.In = In;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB940
	 * 		Name   -> Function TBL.OptionsScreenProp_ComboBox.GetCurrentValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int UOptionsScreenProp_ComboBox::GetCurrentValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProp_ComboBox.GetCurrentValue");
		
		UOptionsScreenProp_ComboBox_GetCurrentValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenProp_ComboBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenProp_ComboBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenProp_ComboBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE730
	 * 		Name   -> Function TBL.OptionsScreenProp_Slider.SetCurrentValue
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              In                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UOptionsScreenProp_Slider::SetCurrentValue(float In)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProp_Slider.SetCurrentValue");
		
		UOptionsScreenProp_Slider_SetCurrentValue_Params params {};
		params.In = In;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AD160
	 * 		Name   -> Function TBL.OptionsScreenProp_Slider.GetValueText
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UOptionsScreenProp_Slider::GetValueText(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProp_Slider.GetValueText");
		
		UOptionsScreenProp_Slider_GetValueText_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB970
	 * 		Name   -> Function TBL.OptionsScreenProp_Slider.GetCurrentValue
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	float UOptionsScreenProp_Slider::GetCurrentValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenProp_Slider.GetCurrentValue");
		
		UOptionsScreenProp_Slider_GetCurrentValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenProp_Slider.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenProp_Slider::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenProp_Slider");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenProp_Slider_Toggle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenProp_Slider_Toggle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenProp_Slider_Toggle");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenProp_Keybind.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenProp_Keybind::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenProp_Keybind");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE490
	 * 		Name   -> Function TBL.OptionsScreenSubCategory.ResetAll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenSubCategory::ResetAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenSubCategory.ResetAll");
		
		UOptionsScreenSubCategory_ResetAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB030
	 * 		Name   -> Function TBL.OptionsScreenSubCategory.ApplyAll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenSubCategory::ApplyAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenSubCategory.ApplyAll");
		
		UOptionsScreenSubCategory_ApplyAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenSubCategory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenSubCategory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenSubCategory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE930
	 * 		Name   -> Function TBL.OptionsScreenCategory.SetToDefaults
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenCategory::SetToDefaults()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenCategory.SetToDefaults");
		
		UOptionsScreenCategory_SetToDefaults_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE470
	 * 		Name   -> Function TBL.OptionsScreenCategory.ResetAll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenCategory::ResetAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenCategory.ResetAll");
		
		UOptionsScreenCategory_ResetAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AB010
	 * 		Name   -> Function TBL.OptionsScreenCategory.ApplyAll
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UOptionsScreenCategory::ApplyAll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.OptionsScreenCategory.ApplyAll");
		
		UOptionsScreenCategory_ApplyAll_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UOptionsScreenCategory.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UOptionsScreenCategory::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.OptionsScreenCategory");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLOverviewScreen.BP_ShowLoadout
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		bool                                               bReset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLOverviewScreen::BP_ShowLoadout(bool bReset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLOverviewScreen.BP_ShowLoadout");
		
		UTBLOverviewScreen_BP_ShowLoadout_Params params {};
		params.bReset = bReset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLOverviewScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLOverviewScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLOverviewScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFB10
	 * 		Name   -> Function TBL.TBLPainVolume.EndOverlap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPainVolume::EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPainVolume.EndOverlap");
		
		ATBLPainVolume_EndOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BB600
	 * 		Name   -> Function TBL.TBLPainVolume.BeginOverlap
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPainVolume::BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPainVolume.BeginOverlap");
		
		ATBLPainVolume_BeginOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLPainVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLPainVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPainVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLParticleSystemComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLParticleSystemComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLParticleSystemComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C2650
	 * 		Name   -> Function TBL.TBLPathFollowingComponent.OnPathBlocked
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLPathFollowingComponent::OnPathBlocked()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPathFollowingComponent.OnPathBlocked");
		
		UTBLPathFollowingComponent_OnPathBlocked_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C24D0
	 * 		Name   -> Function TBL.TBLPathFollowingComponent.OnFinishedBlockedMovementResponse
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLPathFollowingComponent::OnFinishedBlockedMovementResponse()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPathFollowingComponent.OnFinishedBlockedMovementResponse");
		
		UTBLPathFollowingComponent_OnFinishedBlockedMovementResponse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C23F0
	 * 		Name   -> Function TBL.TBLPathFollowingComponent.OnBlockingActorExpired
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLPathFollowingComponent::OnBlockingActorExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPathFollowingComponent.OnBlockingActorExpired");
		
		UTBLPathFollowingComponent_OnBlockingActorExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPathFollowingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPathFollowingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPathFollowingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.ToggleSpectatorCamera
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLPlayerCameraManager::ToggleSpectatorCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.ToggleSpectatorCamera");
		
		ATBLPlayerCameraManager_ToggleSpectatorCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0167EC50
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.ShouldDoSpawnFadeOut
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLPlayerCameraManager::ShouldDoSpawnFadeOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.ShouldDoSpawnFadeOut");
		
		ATBLPlayerCameraManager_ShouldDoSpawnFadeOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016C1CA0
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.IsSpawnFadeOutEnabled
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool ATBLPlayerCameraManager::IsSpawnFadeOutEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.IsSpawnFadeOutEnabled");
		
		ATBLPlayerCameraManager_IsSpawnFadeOutEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFCE0
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.GetActualViewTarget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class AActor* ATBLPlayerCameraManager::GetActualViewTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.GetActualViewTarget");
		
		ATBLPlayerCameraManager_GetActualViewTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFC80
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.GetActiveCameraComponent
	 * 		Flags  -> (Final, Native, Protected)
	 */
	class UCameraComponent* ATBLPlayerCameraManager::GetActiveCameraComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.GetActiveCameraComponent");
		
		ATBLPlayerCameraManager_GetActiveCameraComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFA90
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.EnableSpawnFadeOut
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerCameraManager::EnableSpawnFadeOut(float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.EnableSpawnFadeOut");
		
		ATBLPlayerCameraManager_EnableSpawnFadeOut_Params params {};
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BFA10
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.EnableDeathCam_1P
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Killed                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerCameraManager::EnableDeathCam_1P(class AActor* Killed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.EnableDeathCam_1P");
		
		ATBLPlayerCameraManager_EnableDeathCam_1P_Params params {};
		params.Killed = Killed;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BF990
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.EnableDeathCam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               KilledCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerCameraManager::EnableDeathCam(class ATBLCharacter* KilledCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.EnableDeathCam");
		
		ATBLPlayerCameraManager_EnableDeathCam_Params params {};
		params.KilledCharacter = KilledCharacter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E906D0
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.DisableSpawnFadeOut
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 */
	void ATBLPlayerCameraManager::DisableSpawnFadeOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.DisableSpawnFadeOut");
		
		ATBLPlayerCameraManager_DisableSpawnFadeOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016BEBD0
	 * 		Name   -> Function TBL.TBLPlayerCameraManager.DisableDeathCam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bImmediate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLPlayerCameraManager::DisableDeathCam(bool bImmediate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerCameraManager.DisableDeathCam");
		
		ATBLPlayerCameraManager_DisableDeathCam_Params params {};
		params.bImmediate = bImmediate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLPlayerCameraManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLPlayerCameraManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerCameraManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCloudViewedItems.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCloudViewedItems::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CloudViewedItems");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UFlavorStats.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UFlavorStats::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.FlavorStats");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCloudMutedPlayers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCloudMutedPlayers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CloudMutedPlayers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPlayerControllerInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPlayerControllerInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerControllerInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0110
	 * 		Name   -> Function TBL.TBLPlayerInput.SetGamepadRYSens
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Sensitivity                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::SetGamepadRYSens(float Sensitivity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.SetGamepadRYSens");
		
		UTBLPlayerInput_SetGamepadRYSens_Params params {};
		params.Sensitivity = Sensitivity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D0090
	 * 		Name   -> Function TBL.TBLPlayerInput.SetGamepadRXSens
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		float                                              Sensitivity                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::SetGamepadRXSens(float Sensitivity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.SetGamepadRXSens");
		
		UTBLPlayerInput_SetGamepadRXSens_Params params {};
		params.Sensitivity = Sensitivity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CFFB0
	 * 		Name   -> Function TBL.TBLPlayerInput.SetConsoleKey
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::SetConsoleKey(const struct FKey& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.SetConsoleKey");
		
		UTBLPlayerInput_SetConsoleKey_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CFE20
	 * 		Name   -> Function TBL.TBLPlayerInput.SetAxisBinding
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Scale                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bBypassDialog                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::SetAxisBinding(const class FName& AxisName, const struct FKey& Key, float Scale, bool bBypassDialog)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.SetAxisBinding");
		
		UTBLPlayerInput_SetAxisBinding_Params params {};
		params.AxisName = AxisName;
		params.Key = Key;
		params.Scale = Scale;
		params.bBypassDialog = bBypassDialog;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CFBF0
	 * 		Name   -> Function TBL.TBLPlayerInput.SetActionBinding
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsShiftPressed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsCtrlPressed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsAltPressed                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bBypassDialog                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::SetActionBinding(const class FName& ActionName, const struct FKey& Key, bool bIsShiftPressed, bool bIsCtrlPressed, bool bIsAltPressed, bool bBypassDialog)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.SetActionBinding");
		
		UTBLPlayerInput_SetActionBinding_Params params {};
		params.ActionName = ActionName;
		params.Key = Key;
		params.bIsShiftPressed = bIsShiftPressed;
		params.bIsCtrlPressed = bIsCtrlPressed;
		params.bIsAltPressed = bIsAltPressed;
		params.bBypassDialog = bBypassDialog;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF930
	 * 		Name   -> Function TBL.TBLPlayerInput.ResetConsoleKey
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLPlayerInput::ResetConsoleKey()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.ResetConsoleKey");
		
		UTBLPlayerInput_ResetConsoleKey_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF8B0
	 * 		Name   -> Function TBL.TBLPlayerInput.ResetAxisBinding
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::ResetAxisBinding(const class FName& AxisName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.ResetAxisBinding");
		
		UTBLPlayerInput_ResetAxisBinding_Params params {};
		params.AxisName = AxisName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF890
	 * 		Name   -> Function TBL.TBLPlayerInput.ResetAllBindings
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLPlayerInput::ResetAllBindings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.ResetAllBindings");
		
		UTBLPlayerInput_ResetAllBindings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF810
	 * 		Name   -> Function TBL.TBLPlayerInput.ResetActionBinding
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::ResetActionBinding(const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.ResetActionBinding");
		
		UTBLPlayerInput_ResetActionBinding_Params params {};
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF5B0
	 * 		Name   -> Function TBL.TBLPlayerInput.OnIsKeyInUse_Yes
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLPlayerInput::OnIsKeyInUse_Yes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.OnIsKeyInUse_Yes");
		
		UTBLPlayerInput_OnIsKeyInUse_Yes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF590
	 * 		Name   -> Function TBL.TBLPlayerInput.OnIsKeyInUse_No
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTBLPlayerInput::OnIsKeyInUse_No()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.OnIsKeyInUse_No");
		
		UTBLPlayerInput_OnIsKeyInUse_No_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.TBLPlayerInput.KeybindsReset__DelegateSignature
	 * 		Flags  -> (MulticastDelegate, Public, Delegate)
	 */
	void UTBLPlayerInput::KeybindsReset__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.TBLPlayerInput.KeybindsReset__DelegateSignature");
		
		UTBLPlayerInput_KeybindsReset__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF280
	 * 		Name   -> Function TBL.TBLPlayerInput.IsShiftPressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLPlayerInput::IsShiftPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.IsShiftPressed");
		
		UTBLPlayerInput_IsShiftPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.TBLPlayerInput.IsKeyInUseDialogClosed__DelegateSignature
	 * 		Flags  -> (MulticastDelegate, Public, Delegate)
	 */
	void UTBLPlayerInput::IsKeyInUseDialogClosed__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.TBLPlayerInput.IsKeyInUseDialogClosed__DelegateSignature");
		
		UTBLPlayerInput_IsKeyInUseDialogClosed__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF170
	 * 		Name   -> Function TBL.TBLPlayerInput.IsKeybindingDefault
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        KeybindingName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ActionBinding                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               AxisBinding                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLPlayerInput::IsKeybindingDefault(const class FName& KeybindingName, bool ActionBinding, bool AxisBinding)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.IsKeybindingDefault");
		
		UTBLPlayerInput_IsKeybindingDefault_Params params {};
		params.KeybindingName = KeybindingName;
		params.ActionBinding = ActionBinding;
		params.AxisBinding = AxisBinding;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF110
	 * 		Name   -> Function TBL.TBLPlayerInput.IsCtrlPressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLPlayerInput::IsCtrlPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.IsCtrlPressed");
		
		UTBLPlayerInput_IsCtrlPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF0E0
	 * 		Name   -> Function TBL.TBLPlayerInput.IsAltPressed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLPlayerInput::IsAltPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.IsAltPressed");
		
		UTBLPlayerInput_IsAltPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CF0C0
	 * 		Name   -> Function TBL.TBLPlayerInput.InvertGamepad
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void UTBLPlayerInput::InvertGamepad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.InvertGamepad");
		
		UTBLPlayerInput_InvertGamepad_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CEEB0
	 * 		Name   -> Function TBL.TBLPlayerInput.GetKeysForConsole
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<struct FKey>                                ConsoleKeys                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::GetKeysForConsole(TArray<struct FKey>* ConsoleKeys)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetKeysForConsole");
		
		UTBLPlayerInput_GetKeysForConsole_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ConsoleKeys != nullptr)
			*ConsoleKeys = params.ConsoleKeys;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CED80
	 * 		Name   -> Function TBL.TBLPlayerInput.GetKeysForAxis
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FInputAxisKeyMapping>                Bindings                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::GetKeysForAxis(const class FName& AxisName, TArray<struct FInputAxisKeyMapping>* Bindings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetKeysForAxis");
		
		UTBLPlayerInput_GetKeysForAxis_Params params {};
		params.AxisName = AxisName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Bindings != nullptr)
			*Bindings = params.Bindings;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CEC50
	 * 		Name   -> Function TBL.TBLPlayerInput.GetKeysForAction
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FInputActionKeyMapping>              Bindings                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::GetKeysForAction(const class FName& ActionName, TArray<struct FInputActionKeyMapping>* Bindings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetKeysForAction");
		
		UTBLPlayerInput_GetKeysForAction_Params params {};
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Bindings != nullptr)
			*Bindings = params.Bindings;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CEAC0
	 * 		Name   -> Function TBL.TBLPlayerInput.GetDefaultKeysForAxis
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FInputAxisKeyMapping>                Bindings                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::GetDefaultKeysForAxis(const class FName& AxisName, TArray<struct FInputAxisKeyMapping>* Bindings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetDefaultKeysForAxis");
		
		UTBLPlayerInput_GetDefaultKeysForAxis_Params params {};
		params.AxisName = AxisName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Bindings != nullptr)
			*Bindings = params.Bindings;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE990
	 * 		Name   -> Function TBL.TBLPlayerInput.GetDefaultKeysForAction
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FInputActionKeyMapping>              Bindings                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::GetDefaultKeysForAction(const class FName& ActionName, TArray<struct FInputActionKeyMapping>* Bindings)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetDefaultKeysForAction");
		
		UTBLPlayerInput_GetDefaultKeysForAction_Params params {};
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Bindings != nullptr)
			*Bindings = params.Bindings;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE3F0
	 * 		Name   -> Function TBL.TBLPlayerInput.GetAllAxisKeyNames
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<class FName> UTBLPlayerInput::GetAllAxisKeyNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetAllAxisKeyNames");
		
		UTBLPlayerInput_GetAllAxisKeyNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE2C0
	 * 		Name   -> Function TBL.TBLPlayerInput.GetAllAxisKeyMappings
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<struct FInputAxisKeyMapping> UTBLPlayerInput::GetAllAxisKeyMappings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetAllAxisKeyMappings");
		
		UTBLPlayerInput_GetAllAxisKeyMappings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE240
	 * 		Name   -> Function TBL.TBLPlayerInput.GetAllActionKeyNames
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<class FName> UTBLPlayerInput::GetAllActionKeyNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetAllActionKeyNames");
		
		UTBLPlayerInput_GetAllActionKeyNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CE110
	 * 		Name   -> Function TBL.TBLPlayerInput.GetAllActionKeyMappings
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TArray<struct FInputActionKeyMapping> UTBLPlayerInput::GetAllActionKeyMappings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.GetAllActionKeyMappings");
		
		UTBLPlayerInput_GetAllActionKeyMappings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CDB70
	 * 		Name   -> Function TBL.TBLPlayerInput.ClearConsoleKey
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLPlayerInput::ClearConsoleKey()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.ClearConsoleKey");
		
		UTBLPlayerInput_ClearConsoleKey_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CDA60
	 * 		Name   -> Function TBL.TBLPlayerInput.ClearAxisBinding
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ClearMouseKeyboardBinding                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ClearGamepadBinding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::ClearAxisBinding(const class FName& AxisName, bool ClearMouseKeyboardBinding, bool ClearGamepadBinding)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.ClearAxisBinding");
		
		UTBLPlayerInput_ClearAxisBinding_Params params {};
		params.AxisName = AxisName;
		params.ClearMouseKeyboardBinding = ClearMouseKeyboardBinding;
		params.ClearGamepadBinding = ClearGamepadBinding;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016CD950
	 * 		Name   -> Function TBL.TBLPlayerInput.ClearActionBinding
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ClearMouseKeyboardBinding                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ClearGamepadBinding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPlayerInput::ClearActionBinding(const class FName& ActionName, bool ClearMouseKeyboardBinding, bool ClearGamepadBinding)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPlayerInput.ClearActionBinding");
		
		UTBLPlayerInput_ClearActionBinding_Params params {};
		params.ActionName = ActionName;
		params.ClearMouseKeyboardBinding = ClearMouseKeyboardBinding;
		params.ClearGamepadBinding = ClearGamepadBinding;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPlayerInput.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPlayerInput::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerInput");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPlayerStateInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPlayerStateInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPlayerStateInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D3C40
	 * 		Name   -> Function TBL.TBLProfanityFilter.Apply
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Input                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLProfanityFilter::STATIC_Apply(const class FString& Input)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProfanityFilter.Apply");
		
		UTBLProfanityFilter_Apply_Params params {};
		params.Input = Input;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLProfanityFilter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLProfanityFilter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLProfanityFilter");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D46D0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.StopOnBlockingHit
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::StopOnBlockingHit(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.StopOnBlockingHit");
		
		UTBLProjectileMovementComponent_StopOnBlockingHit_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D4510
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.RemoveIgnoredCollisionActor
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      ActorToRemove                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::RemoveIgnoredCollisionActor(class AActor* ActorToRemove)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.RemoveIgnoredCollisionActor");
		
		UTBLProjectileMovementComponent_RemoveIgnoredCollisionActor_Params params {};
		params.ActorToRemove = ActorToRemove;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.OnTornOff
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLProjectileMovementComponent::OnTornOff()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.OnTornOff");
		
		UTBLProjectileMovementComponent_OnTornOff_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D42B0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.OnKilled
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::OnKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.OnKilled");
		
		UTBLProjectileMovementComponent_OnKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D40E0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.OnHit
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         HitComponent                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.OnHit");
		
		UTBLProjectileMovementComponent_OnHit_Params params {};
		params.HitComponent = HitComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D4000
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.OnBounce
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::OnBounce(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.OnBounce");
		
		UTBLProjectileMovementComponent_OnBounce_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D3E70
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.OnBlocked
	 * 		Flags  -> (Final, Native, Public, HasOutParms, HasDefaults)
	 * Parameters:
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::OnBlocked(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.OnBlocked");
		
		UTBLProjectileMovementComponent_OnBlocked_Params params {};
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D3E50
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.IsFakeClientProjectile
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLProjectileMovementComponent::IsFakeClientProjectile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.IsFakeClientProjectile");
		
		UTBLProjectileMovementComponent_IsFakeClientProjectile_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.EventHit
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::EventHit(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.EventHit");
		
		UTBLProjectileMovementComponent_EventHit_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.EventBlocked
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::EventBlocked(const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.EventBlocked");
		
		UTBLProjectileMovementComponent_EventBlocked_Params params {};
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D3DA0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.DisableAndDestroy
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              LifeSpan                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::DisableAndDestroy(float LifeSpan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.DisableAndDestroy");
		
		UTBLProjectileMovementComponent_DisableAndDestroy_Params params {};
		params.LifeSpan = LifeSpan;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D3D20
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.CleanupAbilityActorsInternal
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLProjectileMovementComponent::CleanupAbilityActorsInternal(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.CleanupAbilityActorsInternal");
		
		UTBLProjectileMovementComponent_CleanupAbilityActorsInternal_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLProjectileMovementComponent.CleanupAbilityActors
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLProjectileMovementComponent::CleanupAbilityActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLProjectileMovementComponent.CleanupAbilityActors");
		
		UTBLProjectileMovementComponent_CleanupAbilityActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLProjectileMovementComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLProjectileMovementComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLProjectileMovementComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5HapticsAnimNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5HapticsAnimNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5HapticsAnimNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D4650
	 * 		Name   -> Function TBL.TBLPS5HapticsManager.SetVolumeSetting
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EHapticsVolumeSettings                         NewSetting                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPS5HapticsManager::SetVolumeSetting(TBL_EHapticsVolumeSettings NewSetting)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPS5HapticsManager.SetVolumeSetting");
		
		UTBLPS5HapticsManager_SetVolumeSetting_Params params {};
		params.NewSetting = NewSetting;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D4590
	 * 		Name   -> Function TBL.TBLPS5HapticsManager.SetIsUsingAdaptiveTriggers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               UsingAdaptiveTrigger                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerController*                        PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPS5HapticsManager::SetIsUsingAdaptiveTriggers(bool UsingAdaptiveTrigger, class ATBLPlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPS5HapticsManager.SetIsUsingAdaptiveTriggers");
		
		UTBLPS5HapticsManager_SetIsUsingAdaptiveTriggers_Params params {};
		params.UsingAdaptiveTrigger = UsingAdaptiveTrigger;
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4CC0
	 * 		Name   -> Function TBL.TBLPS5HapticsManager.IsUsingAdaptiveTriggers
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	bool UTBLPS5HapticsManager::IsUsingAdaptiveTriggers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPS5HapticsManager.IsUsingAdaptiveTriggers");
		
		UTBLPS5HapticsManager_IsUsingAdaptiveTriggers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D3E20
	 * 		Name   -> Function TBL.TBLPS5HapticsManager.GetVolumeSetting
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	TBL_EHapticsVolumeSettings UTBLPS5HapticsManager::GetVolumeSetting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPS5HapticsManager.GetVolumeSetting");
		
		UTBLPS5HapticsManager_GetVolumeSetting_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5HapticsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5HapticsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5HapticsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5HapticsContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5HapticsContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5HapticsContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D4390
	 * 		Name   -> Function TBL.TBLPS5BlockingHaptics.UpdateResistanceBasedOnStamina
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EStat                                          StatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FStatEntry                                  Stat                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPS5BlockingHaptics::UpdateResistanceBasedOnStamina(class AActor* Actor, TBL_EStat StatType, const struct FStatEntry& Stat, float DeltaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPS5BlockingHaptics.UpdateResistanceBasedOnStamina");
		
		UTBLPS5BlockingHaptics_UpdateResistanceBasedOnStamina_Params params {};
		params.Actor = Actor;
		params.StatType = StatType;
		params.Stat = Stat;
		params.DeltaValue = DeltaValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5BlockingHaptics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5BlockingHaptics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5BlockingHaptics");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5DamageHaptics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5DamageHaptics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5DamageHaptics");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D4390
	 * 		Name   -> Function TBL.TBLPS5RangedWeaponHaptics.UpdateVibrationBasedOnStamina
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EStat                                          StatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FStatEntry                                  Stat                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPS5RangedWeaponHaptics::UpdateVibrationBasedOnStamina(class AActor* Actor, TBL_EStat StatType, const struct FStatEntry& Stat, float DeltaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPS5RangedWeaponHaptics.UpdateVibrationBasedOnStamina");
		
		UTBLPS5RangedWeaponHaptics_UpdateVibrationBasedOnStamina_Params params {};
		params.Actor = Actor;
		params.StatType = StatType;
		params.Stat = Stat;
		params.DeltaValue = DeltaValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5RangedWeaponHaptics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5RangedWeaponHaptics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5RangedWeaponHaptics");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D4390
	 * 		Name   -> Function TBL.TBLPS5GeneralHaptics.PlayLowHealthEffect
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EStat                                          StatType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FStatEntry                                  Stat                                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLPS5GeneralHaptics::PlayLowHealthEffect(class AActor* Actor, TBL_EStat StatType, const struct FStatEntry& Stat, float DeltaValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLPS5GeneralHaptics.PlayLowHealthEffect");
		
		UTBLPS5GeneralHaptics_PlayLowHealthEffect_Params params {};
		params.Actor = Actor;
		params.StatType = StatType;
		params.Stat = Stat;
		params.DeltaValue = DeltaValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5GeneralHaptics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5GeneralHaptics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5GeneralHaptics");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLPS5SiegeEngineHaptics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLPS5SiegeEngineHaptics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLPS5SiegeEngineHaptics");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLReplicationGraphSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLReplicationGraphSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLReplicationGraphSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLReplicationGraph.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLReplicationGraph::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLReplicationGraph");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLReplicationGraphNode_AlwaysRelevant_ForConnection.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLReplicationGraphNode_AlwaysRelevant_ForConnection::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLReplicationGraphNode_AlwaysRelevant_ForConnection");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWidgetDecorator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWidgetDecorator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WidgetDecorator");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UDebugCanvasTriangles.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UDebugCanvasTriangles::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.DebugCanvasTriangles");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLTextureCacheBuilder.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLTextureCacheBuilder::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLTextureCacheBuilder");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSafeZone.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSafeZone::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSafeZone");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSaveProfileObject.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSaveProfileObject::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSaveProfileObject");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLScalabilitySettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLScalabilitySettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLScalabilitySettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLScrollBarStyleDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLScrollBarStyleDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLScrollBarStyleDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLScrollBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLScrollBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLScrollBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSignificanceManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSignificanceManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSignificanceManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D95C0
	 * 		Name   -> Function TBL.TBLSlackUtility.SendSlackMessage
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSlackMessage                               Message                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void UTBLSlackUtility::STATIC_SendSlackMessage(const struct FSlackMessage& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSlackUtility.SendSlackMessage");
		
		UTBLSlackUtility_SendSlackMessage_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSlackUtility.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSlackUtility::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSlackUtility");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLSocialScreen.OnAttemptedNavigationFailed
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		SlateCore_EUINavigation                            NavigationType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSocialScreen::OnAttemptedNavigationFailed(SlateCore_EUINavigation NavigationType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSocialScreen.OnAttemptedNavigationFailed");
		
		UTBLSocialScreen_OnAttemptedNavigationFailed_Params params {};
		params.NavigationType = NavigationType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSocialScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSocialScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSocialScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015F8590
	 * 		Name   -> Function TBL.TBLSocialSubScreen.RefreshLists
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLSocialSubScreen::RefreshLists()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSocialSubScreen.RefreshLists");
		
		UTBLSocialSubScreen_RefreshLists_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLSocialSubScreen.OnRefreshLists
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 */
	void UTBLSocialSubScreen::OnRefreshLists()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSocialSubScreen.OnRefreshLists");
		
		UTBLSocialSubScreen_OnRefreshLists_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8BD0
	 * 		Name   -> Function TBL.TBLSocialSubScreen.OnOpened
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLSocialSubScreen::OnOpened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSocialSubScreen.OnOpened");
		
		UTBLSocialSubScreen_OnOpened_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8BB0
	 * 		Name   -> Function TBL.TBLSocialSubScreen.OnClosed
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLSocialSubScreen::OnClosed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSocialSubScreen.OnClosed");
		
		UTBLSocialSubScreen_OnClosed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLSocialSubScreen.FocusOnEntry
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 */
	void UTBLSocialSubScreen::FocusOnEntry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSocialSubScreen.FocusOnEntry");
		
		UTBLSocialSubScreen_FocusOnEntry_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D88C0
	 * 		Name   -> Function TBL.TBLSocialSubScreen.FocusOnEntries
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLSocialSubScreen::FocusOnEntries()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSocialSubScreen.FocusOnEntries");
		
		UTBLSocialSubScreen_FocusOnEntries_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSocialSubScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSocialSubScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSocialSubScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9DE0
	 * 		Name   -> Function TBL.TBLSpectatorPawn.UpdateOnCinematicStateChanged
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		struct FGameplayTag                                PreviousStateTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCinematicState*                             PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTag                                NewStateTag                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCinematicState*                             NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::UpdateOnCinematicStateChanged(const struct FGameplayTag& PreviousStateTag, class UCinematicState* PreviousState, const struct FGameplayTag& NewStateTag, class UCinematicState* NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.UpdateOnCinematicStateChanged");
		
		ATBLSpectatorPawn_UpdateOnCinematicStateChanged_Params params {};
		params.PreviousStateTag = PreviousStateTag;
		params.PreviousState = PreviousState;
		params.NewStateTag = NewStateTag;
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9C40
	 * 		Name   -> Function TBL.TBLSpectatorPawn.SpectatorFollow
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::SpectatorFollow(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.SpectatorFollow");
		
		ATBLSpectatorPawn_SpectatorFollow_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9BC0
	 * 		Name   -> Function TBL.TBLSpectatorPawn.SpectatorCam
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                CameraNum                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::SpectatorCam(int CameraNum)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.SpectatorCam");
		
		ATBLSpectatorPawn_SpectatorCam_Params params {};
		params.CameraNum = CameraNum;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D9060
	 * 		Name   -> Function TBL.TBLSpectatorPawn.ProcessTurnAndLookInputRate
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		CoreUObject_EAxis                                  Axis                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Rate                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::ProcessTurnAndLookInputRate(CoreUObject_EAxis Axis, float Rate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.ProcessTurnAndLookInputRate");
		
		ATBLSpectatorPawn_ProcessTurnAndLookInputRate_Params params {};
		params.Axis = Axis;
		params.Rate = Rate;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8FA0
	 * 		Name   -> Function TBL.TBLSpectatorPawn.ProcessTurnAndLookInput
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		CoreUObject_EAxis                                  Axis                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::ProcessTurnAndLookInput(CoreUObject_EAxis Axis, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.ProcessTurnAndLookInput");
		
		ATBLSpectatorPawn_ProcessTurnAndLookInput_Params params {};
		params.Axis = Axis;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E92B50
	 * 		Name   -> Function TBL.TBLSpectatorPawn.PreviousCharacter
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	void ATBLSpectatorPawn::PreviousCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.PreviousCharacter");
		
		ATBLSpectatorPawn_PreviousCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E93060
	 * 		Name   -> Function TBL.TBLSpectatorPawn.NextCharacter
	 * 		Flags  -> (Native, Event, Public, BlueprintCallable, BlueprintEvent)
	 */
	void ATBLSpectatorPawn::NextCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.NextCharacter");
		
		ATBLSpectatorPawn_NextCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8AE0
	 * 		Name   -> Function TBL.TBLSpectatorPawn.LockSpectatorTranslationAxis
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		class FName                                        AxisName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Blocked                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::LockSpectatorTranslationAxis(const class FName& AxisName, bool Blocked)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.LockSpectatorTranslationAxis");
		
		ATBLSpectatorPawn_LockSpectatorTranslationAxis_Params params {};
		params.AxisName = AxisName;
		params.Blocked = Blocked;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8AB0
	 * 		Name   -> Function TBL.TBLSpectatorPawn.IsGhost
	 * 		Flags  -> (Final, Native, Public, Const)
	 */
	bool ATBLSpectatorPawn::IsGhost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.IsGhost");
		
		ATBLSpectatorPawn_IsGhost_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8A90
	 * 		Name   -> Function TBL.TBLSpectatorPawn.GhostOff
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLSpectatorPawn::GhostOff()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.GhostOff");
		
		ATBLSpectatorPawn_GhostOff_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8A70
	 * 		Name   -> Function TBL.TBLSpectatorPawn.Ghost
	 * 		Flags  -> (Final, Native, Public)
	 */
	void ATBLSpectatorPawn::Ghost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.Ghost");
		
		ATBLSpectatorPawn_Ghost_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E931F0
	 * 		Name   -> Function TBL.TBLSpectatorPawn.FreeCam
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 */
	void ATBLSpectatorPawn::FreeCam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.FreeCam");
		
		ATBLSpectatorPawn_FreeCam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D87A0
	 * 		Name   -> Function TBL.TBLSpectatorPawn.EnableSmoothCameraMode
	 * 		Flags  -> (Final, Exec, Native, Public)
	 * Parameters:
	 * 		int                                                CameraNum                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::EnableSmoothCameraMode(int CameraNum)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.EnableSmoothCameraMode");
		
		ATBLSpectatorPawn_EnableSmoothCameraMode_Params params {};
		params.CameraNum = CameraNum;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8780
	 * 		Name   -> Function TBL.TBLSpectatorPawn.DisplayDebugScrollUp
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLSpectatorPawn::DisplayDebugScrollUp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.DisplayDebugScrollUp");
		
		ATBLSpectatorPawn_DisplayDebugScrollUp_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8760
	 * 		Name   -> Function TBL.TBLSpectatorPawn.DisplayDebugScrollReleased
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLSpectatorPawn::DisplayDebugScrollReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.DisplayDebugScrollReleased");
		
		ATBLSpectatorPawn_DisplayDebugScrollReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8740
	 * 		Name   -> Function TBL.TBLSpectatorPawn.DisplayDebugScrollDown
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void ATBLSpectatorPawn::DisplayDebugScrollDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.DisplayDebugScrollDown");
		
		ATBLSpectatorPawn_DisplayDebugScrollDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8720
	 * 		Name   -> Function TBL.TBLSpectatorPawn.ClearSpectatorCams
	 * 		Flags  -> (Final, Exec, Native, Public)
	 */
	void ATBLSpectatorPawn::ClearSpectatorCams()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.ClearSpectatorCams");
		
		ATBLSpectatorPawn_ClearSpectatorCams_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016D8540
	 * 		Name   -> Function TBL.TBLSpectatorPawn.AddTurnAcceleration
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		float                                              Val                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Axis                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLSpectatorPawn::AddTurnAcceleration(float Val, int Axis)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSpectatorPawn.AddTurnAcceleration");
		
		ATBLSpectatorPawn_AddTurnAcceleration_Params params {};
		params.Val = Val;
		params.Axis = Axis;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLSpectatorPawn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLSpectatorPawn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSpectatorPawn");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7B80
	 * 		Name   -> Function TBL.TBLStoreWidget.OnStoreScreenOpen
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLStoreWidget::OnStoreScreenOpen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLStoreWidget.OnStoreScreenOpen");
		
		UTBLStoreWidget_OnStoreScreenOpen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLStoreWidget.BuildStoreOffers
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		TArray<struct FStoreOfferItem>                     OfferIds                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLStoreWidget::BuildStoreOffers(TArray<struct FStoreOfferItem> OfferIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLStoreWidget.BuildStoreOffers");
		
		UTBLStoreWidget_BuildStoreOffers_Params params {};
		params.OfferIds = OfferIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLStoreWidget.BuildAddOnOffers
	 * 		Flags  -> (Event, Public, HasOutParms, BlueprintEvent)
	 * Parameters:
	 * 		TArray<struct FStoreOfferItem>                     OfferIds                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLStoreWidget::BuildAddOnOffers(TArray<struct FStoreOfferItem> OfferIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLStoreWidget.BuildAddOnOffers");
		
		UTBLStoreWidget_BuildAddOnOffers_Params params {};
		params.OfferIds = OfferIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLStoreWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLStoreWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLStoreWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9FD0
	 * 		Name   -> Function TBL.TBLSystemLibrary.WasRecentlyRenderedOnScreen
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      InActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InTolerance                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_WasRecentlyRenderedOnScreen(class AActor* InActor, float InTolerance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.WasRecentlyRenderedOnScreen");
		
		UTBLSystemLibrary_WasRecentlyRenderedOnScreen_Params params {};
		params.InActor = InActor;
		params.InTolerance = InTolerance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9E80
	 * 		Name   -> Function TBL.TBLSystemLibrary.UpdateActorsTags
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                Tags                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_UpdateActorsTags(class AActor* Actor, TArray<class FName> Tags, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.UpdateActorsTags");
		
		UTBLSystemLibrary_UpdateActorsTags_Params params {};
		params.Actor = Actor;
		params.Tags = Tags;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9D80
	 * 		Name   -> Function TBL.TBLSystemLibrary.TBLSetEquippedItemsOnFire
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_TBLSetEquippedItemsOnFire(class AActor* Actor, float Amount, class UDamageSource* DamageSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.TBLSetEquippedItemsOnFire");
		
		UTBLSystemLibrary_TBLSetEquippedItemsOnFire_Params params {};
		params.Actor = Actor;
		params.Amount = Amount;
		params.DamageSource = DamageSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9B30
	 * 		Name   -> Function TBL.TBLSystemLibrary.TBLApplyDamage
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      DamagedActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               DamageSource                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DamageCauser                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              InventoryItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOverrideImpactPoint                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ImpactPointOverride                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      DamageInstigator                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_TBLApplyDamage(class AActor* DamagedActor, float Amount, class UDamageSource* DamageSource, class AActor* DamageCauser, class AInventoryItem* InventoryItem, bool bOverrideImpactPoint, const struct FVector& ImpactPointOverride, class AActor* DamageInstigator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.TBLApplyDamage");
		
		UTBLSystemLibrary_TBLApplyDamage_Params params {};
		params.DamagedActor = DamagedActor;
		params.Amount = Amount;
		params.DamageSource = DamageSource;
		params.DamageCauser = DamageCauser;
		params.InventoryItem = InventoryItem;
		params.bOverrideImpactPoint = bOverrideImpactPoint;
		params.ImpactPointOverride = ImpactPointOverride;
		params.DamageInstigator = DamageInstigator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9AC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.StopSoundById
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                PlayingID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_StopSoundById(int PlayingID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.StopSoundById");
		
		UTBLSystemLibrary_StopSoundById_Params params {};
		params.PlayingID = PlayingID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E99A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortTeamArrayByTickets
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLTeam*>                            Teams                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLTeam*> UTBLSystemLibrary::STATIC_SortTeamArrayByTickets(TArray<class ATBLTeam*> Teams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortTeamArrayByTickets");
		
		UTBLSystemLibrary_SortTeamArrayByTickets_Params params {};
		params.Teams = Teams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9880
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortTeamArrayByScore
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLTeam*>                            Teams                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLTeam*> UTBLSystemLibrary::STATIC_SortTeamArrayByScore(TArray<class ATBLTeam*> Teams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortTeamArrayByScore");
		
		UTBLSystemLibrary_SortTeamArrayByScore_Params params {};
		params.Teams = Teams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9760
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortPlayerStateArrayByRecentlyJoined
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLPlayerState*> UTBLSystemLibrary::STATIC_SortPlayerStateArrayByRecentlyJoined(TArray<class ATBLPlayerState*> PlayerStates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortPlayerStateArrayByRecentlyJoined");
		
		UTBLSystemLibrary_SortPlayerStateArrayByRecentlyJoined_Params params {};
		params.PlayerStates = PlayerStates;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9640
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortPlayerStateArrayByPlayerScoreNoMatchBonus
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLPlayerState*> UTBLSystemLibrary::STATIC_SortPlayerStateArrayByPlayerScoreNoMatchBonus(TArray<class ATBLPlayerState*> PlayerStates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortPlayerStateArrayByPlayerScoreNoMatchBonus");
		
		UTBLSystemLibrary_SortPlayerStateArrayByPlayerScoreNoMatchBonus_Params params {};
		params.PlayerStates = PlayerStates;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9520
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortPlayerStateArrayByPlayerScore
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLPlayerState*> UTBLSystemLibrary::STATIC_SortPlayerStateArrayByPlayerScore(TArray<class ATBLPlayerState*> PlayerStates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortPlayerStateArrayByPlayerScore");
		
		UTBLSystemLibrary_SortPlayerStateArrayByPlayerScore_Params params {};
		params.PlayerStates = PlayerStates;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9400
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortPlayerStateArrayByPlayerKills
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLPlayerState*> UTBLSystemLibrary::STATIC_SortPlayerStateArrayByPlayerKills(TArray<class ATBLPlayerState*> PlayerStates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortPlayerStateArrayByPlayerKills");
		
		UTBLSystemLibrary_SortPlayerStateArrayByPlayerKills_Params params {};
		params.PlayerStates = PlayerStates;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E92C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortGameModeMessagesByPriority
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<struct FGameModeMessage>                    GameModeMessages                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FGameModeMessage> UTBLSystemLibrary::STATIC_SortGameModeMessagesByPriority(TArray<struct FGameModeMessage> GameModeMessages)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortGameModeMessagesByPriority");
		
		UTBLSystemLibrary_SortGameModeMessagesByPriority_Params params {};
		params.GameModeMessages = GameModeMessages;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E90A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.SortActorArray
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class AActor*>                              InActors                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              SortDelegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     BoolContainer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BoolPropertyName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              OutActors                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SortActorArray(TArray<class AActor*> InActors, const class FScriptDelegate& SortDelegate, class UObject* BoolContainer, const class FName& BoolPropertyName, TArray<class AActor*>* OutActors)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SortActorArray");
		
		UTBLSystemLibrary_SortActorArray_Params params {};
		params.InActors = InActors;
		params.SortDelegate = SortDelegate;
		params.BoolContainer = BoolContainer;
		params.BoolPropertyName = BoolPropertyName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutActors != nullptr)
			*OutActors = params.OutActors;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E9020
	 * 		Name   -> Function TBL.TBLSystemLibrary.ShouldUsePIEJoinGameFlow
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_ShouldUsePIEJoinGameFlow(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.ShouldUsePIEJoinGameFlow");
		
		UTBLSystemLibrary_ShouldUsePIEJoinGameFlow_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8FA0
	 * 		Name   -> Function TBL.TBLSystemLibrary.ShouldUseLegacyFXSoundFunction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_ShouldUseLegacyFXSoundFunction(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.ShouldUseLegacyFXSoundFunction");
		
		UTBLSystemLibrary_ShouldUseLegacyFXSoundFunction_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8F30
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetupCubeBrushInConstructionScript
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AVolume*                                     Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SetupCubeBrushInConstructionScript(class AVolume* Volume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetupCubeBrushInConstructionScript");
		
		UTBLSystemLibrary_SetupCubeBrushInConstructionScript_Params params {};
		params.Volume = Volume;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8F30
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetupBlueprintVolumeSubclassBrushInConstructionScript
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AVolume*                                     Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SetupBlueprintVolumeSubclassBrushInConstructionScript(class AVolume* Volume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetupBlueprintVolumeSubclassBrushInConstructionScript");
		
		UTBLSystemLibrary_SetupBlueprintVolumeSubclassBrushInConstructionScript_Params params {};
		params.Volume = Volume;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8EC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetShowBigNotification
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SetShowBigNotification(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetShowBigNotification");
		
		UTBLSystemLibrary_SetShowBigNotification_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8D30
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetNonResettingTimer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Looping                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Event                                                      (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	struct FTimerHandle UTBLSystemLibrary::STATIC_SetNonResettingTimer(class UObject* WorldContextObject, float Time, bool Looping, const class FScriptDelegate& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetNonResettingTimer");
		
		UTBLSystemLibrary_SetNonResettingTimer_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Time = Time;
		params.Looping = Looping;
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8C70
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetNDASigned
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               NDASigned                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SetNDASigned(bool NDASigned, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetNDASigned");
		
		UTBLSystemLibrary_SetNDASigned_Params params {};
		params.NDASigned = NDASigned;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8B80
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetComponentsEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ComponentFlags                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SetComponentsEnabled(class AActor* Actor, int ComponentFlags, bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetComponentsEnabled");
		
		UTBLSystemLibrary_SetComponentsEnabled_Params params {};
		params.Actor = Actor;
		params.ComponentFlags = ComponentFlags;
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8AD0
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetAlwaysOnMusicManagerState
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EAlwaysOnMusicState                            NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SetAlwaysOnMusicManagerState(class UObject* WorldContextObject, TBL_EAlwaysOnMusicState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetAlwaysOnMusicManagerState");
		
		UTBLSystemLibrary_SetAlwaysOnMusicManagerState_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8A10
	 * 		Name   -> Function TBL.TBLSystemLibrary.SetActorComponentCanAffectNavigation
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCanAffectNavigation                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_SetActorComponentCanAffectNavigation(class UActorComponent* Component, bool bCanAffectNavigation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.SetActorComponentCanAffectNavigation");
		
		UTBLSystemLibrary_SetActorComponentCanAffectNavigation_Params params {};
		params.Component = Component;
		params.bCanAffectNavigation = bCanAffectNavigation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8970
	 * 		Name   -> Function TBL.TBLSystemLibrary.ReplicatedDateTime
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FDateTime                                   ReplDateTime                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FTBL_FReplicatedDateTime UTBLSystemLibrary::STATIC_ReplicatedDateTime(const struct FDateTime& ReplDateTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.ReplicatedDateTime");
		
		UTBLSystemLibrary_ReplicatedDateTime_Params params {};
		params.ReplDateTime = ReplDateTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8820
	 * 		Name   -> Function TBL.TBLSystemLibrary.RenameComponentToStableName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      NamePrefix                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                ComponentId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_RenameComponentToStableName(class UActorComponent* Component, const class FString& NamePrefix, int ComponentId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.RenameComponentToStableName");
		
		UTBLSystemLibrary_RenameComponentToStableName_Params params {};
		params.Component = Component;
		params.NamePrefix = NamePrefix;
		params.ComponentId = ComponentId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8770
	 * 		Name   -> Function TBL.TBLSystemLibrary.RemoveTagFromAllActors
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_RemoveTagFromAllActors(const class FName& Tag, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.RemoveTagFromAllActors");
		
		UTBLSystemLibrary_RemoveTagFromAllActors_Params params {};
		params.Tag = Tag;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8680
	 * 		Name   -> Function TBL.TBLSystemLibrary.RemoveTagFromActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_RemoveTagFromActor(class AActor* Actor, const class FName& Tag, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.RemoveTagFromActor");
		
		UTBLSystemLibrary_RemoveTagFromActor_Params params {};
		params.Actor = Actor;
		params.Tag = Tag;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E85E0
	 * 		Name   -> Function TBL.TBLSystemLibrary.RemovePlayersWhoAreDeadFromPlayerStateArray
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_RemovePlayersWhoAreDeadFromPlayerStateArray(TArray<class ATBLPlayerState*>* PlayerStates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.RemovePlayersWhoAreDeadFromPlayerStateArray");
		
		UTBLSystemLibrary_RemovePlayersWhoAreDeadFromPlayerStateArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (PlayerStates != nullptr)
			*PlayerStates = params.PlayerStates;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE020
	 * 		Name   -> Function TBL.TBLSystemLibrary.RemovePlayersInPartiesFromPlayerStateArray
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_RemovePlayersInPartiesFromPlayerStateArray(TArray<class ATBLPlayerState*>* PlayerStates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.RemovePlayersInPartiesFromPlayerStateArray");
		
		UTBLSystemLibrary_RemovePlayersInPartiesFromPlayerStateArray_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (PlayerStates != nullptr)
			*PlayerStates = params.PlayerStates;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E84C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.RemovePiePrefixFromMapName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      MapNameString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_RemovePiePrefixFromMapName(const class FString& MapNameString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.RemovePiePrefixFromMapName");
		
		UTBLSystemLibrary_RemovePiePrefixFromMapName_Params params {};
		params.MapNameString = MapNameString;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8270
	 * 		Name   -> Function TBL.TBLSystemLibrary.PlaySoundOnActorWithParams
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UAkAudioEvent*                               SoundEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttachSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSoundSwitchEntry>                   Switches                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSoundRTPCEntry>                     RtpcValues                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPrintEvents                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAkComponent* UTBLSystemLibrary::STATIC_PlaySoundOnActorWithParams(class UAkAudioEvent* SoundEvent, class AActor* Actor, const class FName& AttachSocket, TArray<struct FSoundSwitchEntry> Switches, TArray<struct FSoundRTPCEntry> RtpcValues, bool bPrintEvents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.PlaySoundOnActorWithParams");
		
		UTBLSystemLibrary_PlaySoundOnActorWithParams_Params params {};
		params.SoundEvent = SoundEvent;
		params.Actor = Actor;
		params.AttachSocket = AttachSocket;
		params.Switches = Switches;
		params.RtpcValues = RtpcValues;
		params.bPrintEvents = bPrintEvents;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E8140
	 * 		Name   -> Function TBL.TBLSystemLibrary.PlaySoundOnActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UAkAudioEvent*                               SoundEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        AttachSocket                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPrintEvents                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAkComponent* UTBLSystemLibrary::STATIC_PlaySoundOnActor(class UAkAudioEvent* SoundEvent, class AActor* Actor, const class FName& AttachSocket, bool bPrintEvents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.PlaySoundOnActor");
		
		UTBLSystemLibrary_PlaySoundOnActor_Params params {};
		params.SoundEvent = SoundEvent;
		params.Actor = Actor;
		params.AttachSocket = AttachSocket;
		params.bPrintEvents = bPrintEvents;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7E70
	 * 		Name   -> Function TBL.TBLSystemLibrary.PlaySoundAtLocationWithParams
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class UAkAudioEvent*                               SoundEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSoundStateEntry>                    States                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSoundRTPCEntry>                     RtpcValues                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPrintEvents                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_PlaySoundAtLocationWithParams(class UAkAudioEvent* SoundEvent, const struct FVector& Location, const struct FRotator& Rotation, TArray<struct FSoundStateEntry> States, TArray<struct FSoundRTPCEntry> RtpcValues, class UObject* WorldContextObject, bool bPrintEvents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.PlaySoundAtLocationWithParams");
		
		UTBLSystemLibrary_PlaySoundAtLocationWithParams_Params params {};
		params.SoundEvent = SoundEvent;
		params.Location = Location;
		params.Rotation = Rotation;
		params.States = States;
		params.RtpcValues = RtpcValues;
		params.WorldContextObject = WorldContextObject;
		params.bPrintEvents = bPrintEvents;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7CC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.PlaySoundAtLocation
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class UAkAudioEvent*                               SoundEvent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    Rotation                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPrintEvents                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_PlaySoundAtLocation(class UAkAudioEvent* SoundEvent, const struct FVector& Location, const struct FRotator& Rotation, class UObject* WorldContextObject, bool bPrintEvents)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.PlaySoundAtLocation");
		
		UTBLSystemLibrary_PlaySoundAtLocation_Params params {};
		params.SoundEvent = SoundEvent;
		params.Location = Location;
		params.Rotation = Rotation;
		params.WorldContextObject = WorldContextObject;
		params.bPrintEvents = bPrintEvents;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7BA0
	 * 		Name   -> Function TBL.TBLSystemLibrary.PlayDemo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      DemoName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_PlayDemo(const class FString& DemoName, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.PlayDemo");
		
		UTBLSystemLibrary_PlayDemo_Params params {};
		params.DemoName = DemoName;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7AF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.MarkReplicationDirty
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 */
	void UTBLSystemLibrary::STATIC_MarkReplicationDirty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.MarkReplicationDirty");
		
		UTBLSystemLibrary_MarkReplicationDirty_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7910
	 * 		Name   -> Function TBL.TBLSystemLibrary.MakeGoreEvent
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        InBoneName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHeadGoreAction                                InHeadGoreAction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ELimbGoreAction                                InLimbGoreAction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     InImpulse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInSpawnedItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bKillingBlow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FTBL_FGoreEvent UTBLSystemLibrary::STATIC_MakeGoreEvent(const class FName& InBoneName, TBL_EHeadGoreAction InHeadGoreAction, TBL_ELimbGoreAction InLimbGoreAction, const struct FVector& InImpulse, bool bInSpawnedItem, bool bKillingBlow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.MakeGoreEvent");
		
		UTBLSystemLibrary_MakeGoreEvent_Params params {};
		params.InBoneName = InBoneName;
		params.InHeadGoreAction = InHeadGoreAction;
		params.InLimbGoreAction = InLimbGoreAction;
		params.InImpulse = InImpulse;
		params.bInSpawnedItem = bInSpawnedItem;
		params.bKillingBlow = bKillingBlow;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E73B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.MakeDamageTakenEvent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		float                                              InDamage                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDamageSource*                               InDamageSource                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      InDamageCauser                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      InDamageTaker                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      InDamageInstigator                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               InbKillingBlow                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               InbSuicide                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               InbEnteredKillVolume                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  InHitResult                                                (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UAbilitySpec*                                InAbilitySpec                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector_NetQuantizeNormal                   InHitDirection                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InDamageTakerCombatState                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              InInventoryItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      InProjectile                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InAttackName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FDamageTakenEvent UTBLSystemLibrary::STATIC_MakeDamageTakenEvent(float InDamage, class UDamageSource* InDamageSource, class AActor* InDamageCauser, class AActor* InDamageTaker, class AActor* InDamageInstigator, bool InbKillingBlow, bool InbSuicide, bool InbEnteredKillVolume, const struct FHitResult& InHitResult, class UAbilitySpec* InAbilitySpec, const struct FVector_NetQuantizeNormal& InHitDirection, const class FName& InDamageTakerCombatState, class AInventoryItem* InInventoryItem, class AActor* InProjectile, const class FName& InAttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.MakeDamageTakenEvent");
		
		UTBLSystemLibrary_MakeDamageTakenEvent_Params params {};
		params.InDamage = InDamage;
		params.InDamageSource = InDamageSource;
		params.InDamageCauser = InDamageCauser;
		params.InDamageTaker = InDamageTaker;
		params.InDamageInstigator = InDamageInstigator;
		params.InbKillingBlow = InbKillingBlow;
		params.InbSuicide = InbSuicide;
		params.InbEnteredKillVolume = InbEnteredKillVolume;
		params.InHitResult = InHitResult;
		params.InAbilitySpec = InAbilitySpec;
		params.InHitDirection = InHitDirection;
		params.InDamageTakerCombatState = InDamageTakerCombatState;
		params.InInventoryItem = InInventoryItem;
		params.InProjectile = InProjectile;
		params.InAttackName = InAttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7270
	 * 		Name   -> Function TBL.TBLSystemLibrary.LoadSoftObjectSynchronously
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UObject* UTBLSystemLibrary::STATIC_LoadSoftObjectSynchronously(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.LoadSoftObjectSynchronously");
		
		UTBLSystemLibrary_LoadSoftObjectSynchronously_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E7130
	 * 		Name   -> Function TBL.TBLSystemLibrary.LoadSoftClassSynchronously
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* UTBLSystemLibrary::STATIC_LoadSoftClassSynchronously(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.LoadSoftClassSynchronously");
		
		UTBLSystemLibrary_LoadSoftClassSynchronously_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E70A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.LevelBlueprintGetFirstStage
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_LevelBlueprintGetFirstStage(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.LevelBlueprintGetFirstStage");
		
		UTBLSystemLibrary_LevelBlueprintGetFirstStage_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6FF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.LevelBlueprintEvent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        EventName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_LevelBlueprintEvent(class UObject* WorldContextObject, const class FName& EventName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.LevelBlueprintEvent");
		
		UTBLSystemLibrary_LevelBlueprintEvent_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.EventName = EventName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6CC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsWindowsOSSInitialized
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLSystemLibrary::STATIC_IsWindowsOSSInitialized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsWindowsOSSInitialized");
		
		UTBLSystemLibrary_IsWindowsOSSInitialized_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6EB0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsValidUser
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        InUser                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::IsValidUser(const struct FBlueprintOnlineUser& InUser)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsValidUser");
		
		UTBLSystemLibrary_IsValidUser_Params params {};
		params.InUser = InUser;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6DF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsValidClassID
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLSystemLibrary::STATIC_IsValidClassID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsValidClassID");
		
		UTBLSystemLibrary_IsValidClassID_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6D70
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsTutorial
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsTutorial(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsTutorial");
		
		UTBLSystemLibrary_IsTutorial_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6CF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsThrownImpactSoundDebugEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsThrownImpactSoundDebugEnabled(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsThrownImpactSoundDebugEnabled");
		
		UTBLSystemLibrary_IsThrownImpactSoundDebugEnabled_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6CC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsSteamInitialized
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLSystemLibrary::STATIC_IsSteamInitialized()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsSteamInitialized");
		
		UTBLSystemLibrary_IsSteamInitialized_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6C40
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsSoundEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsSoundEnabled(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsSoundEnabled");
		
		UTBLSystemLibrary_IsSoundEnabled_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00AD0350
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsSimulatingInEditor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLSystemLibrary::STATIC_IsSimulatingInEditor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsSimulatingInEditor");
		
		UTBLSystemLibrary_IsSimulatingInEditor_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6BC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsRunningAutomatedTesting
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsRunningAutomatedTesting(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsRunningAutomatedTesting");
		
		UTBLSystemLibrary_IsRunningAutomatedTesting_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6B40
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsRangedWeapon
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AInventoryItem*                              Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsRangedWeapon(class AInventoryItem* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsRangedWeapon");
		
		UTBLSystemLibrary_IsRangedWeapon_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6AC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsRangedOrThrownAttack
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        AttackName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsRangedOrThrownAttack(const class FName& AttackName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsRangedOrThrownAttack");
		
		UTBLSystemLibrary_IsRangedOrThrownAttack_Params params {};
		params.AttackName = AttackName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E69E0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsPartOfFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsPartOfFaction(TBL_EFaction Target, TBL_EFaction Other)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsPartOfFaction");
		
		UTBLSystemLibrary_IsPartOfFaction_Params params {};
		params.Target = Target;
		params.Other = Other;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E69B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsOfficialServer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	bool UTBLSystemLibrary::STATIC_IsOfficialServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsOfficialServer");
		
		UTBLSystemLibrary_IsOfficialServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6930
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsMergedMesh
	 * 		Flags  -> (Final, Native, Static, Public)
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsMergedMesh(class ACharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsMergedMesh");
		
		UTBLSystemLibrary_IsMergedMesh_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E68B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsMergedMaterial
	 * 		Flags  -> (Final, Native, Static, Public)
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsMergedMaterial(class ACharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsMergedMaterial");
		
		UTBLSystemLibrary_IsMergedMaterial_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6880
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsFirstMainMenuLoad
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLSystemLibrary::STATIC_IsFirstMainMenuLoad()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsFirstMainMenuLoad");
		
		UTBLSystemLibrary_IsFirstMainMenuLoad_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6800
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsDemoMode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsDemoMode(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsDemoMode");
		
		UTBLSystemLibrary_IsDemoMode_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6740
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsControllerMounted
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      SiegeEngineClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsControllerMounted(class AController* Controller, class UClass* SiegeEngineClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsControllerMounted");
		
		UTBLSystemLibrary_IsControllerMounted_Params params {};
		params.Controller = Controller;
		params.SiegeEngineClass = SiegeEngineClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E66C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsBot
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_IsBot(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsBot");
		
		UTBLSystemLibrary_IsBot_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E6690
	 * 		Name   -> Function TBL.TBLSystemLibrary.IsAutomationTesting
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLSystemLibrary::STATIC_IsAutomationTesting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.IsAutomationTesting");
		
		UTBLSystemLibrary_IsAutomationTesting_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E62E0
	 * 		Name   -> Function TBL.TBLSystemLibrary.InterpolateVectorOverTime
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     StartValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     EndValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEaseOut                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEaseIn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EasingExp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCurveFloat*                                 Curve                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              UpdateDelegate                                             (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TBL_EInterpolateOverTimeAction                     InterpolateAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLatentActionInfo                           LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	 * 		bool                                               bCallUpdatesParams                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_InterpolateVectorOverTime(class UObject* WorldContextObject, const struct FVector& StartValue, const struct FVector& EndValue, float Duration, bool bEaseOut, bool bEaseIn, float EasingExp, class UCurveFloat* Curve, const class FScriptDelegate& UpdateDelegate, TBL_EInterpolateOverTimeAction InterpolateAction, const struct FLatentActionInfo& LatentInfo, bool bCallUpdatesParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.InterpolateVectorOverTime");
		
		UTBLSystemLibrary_InterpolateVectorOverTime_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.StartValue = StartValue;
		params.EndValue = EndValue;
		params.Duration = Duration;
		params.bEaseOut = bEaseOut;
		params.bEaseIn = bEaseIn;
		params.EasingExp = EasingExp;
		params.Curve = Curve;
		params.UpdateDelegate = UpdateDelegate;
		params.InterpolateAction = InterpolateAction;
		params.LatentInfo = LatentInfo;
		params.bCallUpdatesParams = bCallUpdatesParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5F60
	 * 		Name   -> Function TBL.TBLSystemLibrary.InterpolateFloatOverTime
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              StartValue                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EndValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEaseOut                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEaseIn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EasingExp                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCurveFloat*                                 Curve                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              UpdateDelegate                                             (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TBL_EInterpolateOverTimeAction                     InterpolateAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLatentActionInfo                           LatentInfo                                                 (Parm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	 * 		bool                                               bCallUpdatesParams                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_InterpolateFloatOverTime(class UObject* WorldContextObject, float StartValue, float EndValue, float Duration, bool bEaseOut, bool bEaseIn, float EasingExp, class UCurveFloat* Curve, const class FScriptDelegate& UpdateDelegate, TBL_EInterpolateOverTimeAction InterpolateAction, const struct FLatentActionInfo& LatentInfo, bool bCallUpdatesParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.InterpolateFloatOverTime");
		
		UTBLSystemLibrary_InterpolateFloatOverTime_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.StartValue = StartValue;
		params.EndValue = EndValue;
		params.Duration = Duration;
		params.bEaseOut = bEaseOut;
		params.bEaseIn = bEaseIn;
		params.EasingExp = EasingExp;
		params.Curve = Curve;
		params.UpdateDelegate = UpdateDelegate;
		params.InterpolateAction = InterpolateAction;
		params.LatentInfo = LatentInfo;
		params.bCallUpdatesParams = bCallUpdatesParams;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5EA0
	 * 		Name   -> Function TBL.TBLSystemLibrary.HasRole
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Role                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_HasRole(class AActor* Actor, int Role)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.HasRole");
		
		UTBLSystemLibrary_HasRole_Params params {};
		params.Actor = Actor;
		params.Role = Role;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5E20
	 * 		Name   -> Function TBL.TBLSystemLibrary.HasActorBegunPlay
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_HasActorBegunPlay(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.HasActorBegunPlay");
		
		UTBLSystemLibrary_HasActorBegunPlay_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5D90
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetWorldType
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_ETBLWorldType UTBLSystemLibrary::STATIC_GetWorldType(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetWorldType");
		
		UTBLSystemLibrary_GetWorldType_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5C70
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetUnlocalizedGameModeFromMapString
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      MapNameString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetUnlocalizedGameModeFromMapString(const class FString& MapNameString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetUnlocalizedGameModeFromMapString");
		
		UTBLSystemLibrary_GetUnlocalizedGameModeFromMapString_Params params {};
		params.MapNameString = MapNameString;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5BF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTotalPlayerCount
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetTotalPlayerCount(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTotalPlayerCount");
		
		UTBLSystemLibrary_GetTotalPlayerCount_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5BC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTinyFont
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class UFont* UTBLSystemLibrary::STATIC_GetTinyFont()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTinyFont");
		
		UTBLSystemLibrary_GetTinyFont_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5B30
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTimeSeconds
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLSystemLibrary::STATIC_GetTimeSeconds(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTimeSeconds");
		
		UTBLSystemLibrary_GetTimeSeconds_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5960
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTextFromNamespace
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Namespace                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Key                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetTextFromNamespace(const class FString& Namespace, const class FString& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTextFromNamespace");
		
		UTBLSystemLibrary_GetTextFromNamespace_Params params {};
		params.Namespace = Namespace;
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5800
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTeamsFromFactions
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<TBL_EFaction>                               Factions                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLTeam*> UTBLSystemLibrary::STATIC_GetTeamsFromFactions(class UObject* WorldContextObject, TArray<TBL_EFaction> Factions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTeamsFromFactions");
		
		UTBLSystemLibrary_GetTeamsFromFactions_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Factions = Factions;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5740
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTeamFromFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLTeam* UTBLSystemLibrary::STATIC_GetTeamFromFaction(class UObject* WorldContextObject, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTeamFromFaction");
		
		UTBLSystemLibrary_GetTeamFromFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5670
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTBLLevelScriptActor
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsValid                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLLevelScriptActor* UTBLSystemLibrary::STATIC_GetTBLLevelScriptActor(class UObject* WorldContextObject, bool* bIsValid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTBLLevelScriptActor");
		
		UTBLSystemLibrary_GetTBLLevelScriptActor_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bIsValid != nullptr)
			*bIsValid = params.bIsValid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5640
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTBLGameUserSettings
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class UTBLGameUserSettings* UTBLSystemLibrary::STATIC_GetTBLGameUserSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTBLGameUserSettings");
		
		UTBLSystemLibrary_GetTBLGameUserSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E55C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTBLGameState
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLGameState* UTBLSystemLibrary::STATIC_GetTBLGameState(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTBLGameState");
		
		UTBLSystemLibrary_GetTBLGameState_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5540
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTBLGameMode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLGameMode* UTBLSystemLibrary::STATIC_GetTBLGameMode(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTBLGameMode");
		
		UTBLSystemLibrary_GetTBLGameMode_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E54C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTBLCharacterFromController
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AController*                                 Controller                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLCharacter* UTBLSystemLibrary::STATIC_GetTBLCharacterFromController(class AController* Controller)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTBLCharacterFromController");
		
		UTBLSystemLibrary_GetTBLCharacterFromController_Params params {};
		params.Controller = Controller;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5440
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetTBLCharacter
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLCharacter* UTBLSystemLibrary::STATIC_GetTBLCharacter(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetTBLCharacter");
		
		UTBLSystemLibrary_GetTBLCharacter_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E53C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetStatsComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStatsComponent* UTBLSystemLibrary::STATIC_GetStatsComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetStatsComponent");
		
		UTBLSystemLibrary_GetStatsComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5340
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetStaticMeshComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStaticMeshComponent* UTBLSystemLibrary::STATIC_GetStaticMeshComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetStaticMeshComponent");
		
		UTBLSystemLibrary_GetStaticMeshComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5310
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetSmallFont
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class UFont* UTBLSystemLibrary::STATIC_GetSmallFont()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetSmallFont");
		
		UTBLSystemLibrary_GetSmallFont_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5290
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetShowBigNotification
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_GetShowBigNotification(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetShowBigNotification");
		
		UTBLSystemLibrary_GetShowBigNotification_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5200
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetServerTimeoutTime
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLSystemLibrary::STATIC_GetServerTimeoutTime(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetServerTimeoutTime");
		
		UTBLSystemLibrary_GetServerTimeoutTime_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E5120
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetScreenPositionForLocation
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTBLSystemLibrary::STATIC_GetScreenPositionForLocation(class APlayerController* PlayerController, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetScreenPositionForLocation");
		
		UTBLSystemLibrary_GetScreenPositionForLocation_Params params {};
		params.PlayerController = PlayerController;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4FB0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetScreenPositionForActor
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     RelativeLocation                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseActorBoundsOrigin                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector UTBLSystemLibrary::STATIC_GetScreenPositionForActor(class APlayerController* PlayerController, class AActor* Actor, const struct FVector& RelativeLocation, bool bUseActorBoundsOrigin)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetScreenPositionForActor");
		
		UTBLSystemLibrary_GetScreenPositionForActor_Params params {};
		params.PlayerController = PlayerController;
		params.Actor = Actor;
		params.RelativeLocation = RelativeLocation;
		params.bUseActorBoundsOrigin = bUseActorBoundsOrigin;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4E50
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetScoredStageGameModeMessageRows
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UDataTable*                                  GameModeMessageDataTable                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                StageNum                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NewScore                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                LastScore                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FGameModeMessageTable> UTBLSystemLibrary::STATIC_GetScoredStageGameModeMessageRows(class UDataTable* GameModeMessageDataTable, int StageNum, int NewScore, int LastScore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetScoredStageGameModeMessageRows");
		
		UTBLSystemLibrary_GetScoredStageGameModeMessageRows_Params params {};
		params.GameModeMessageDataTable = GameModeMessageDataTable;
		params.StageNum = StageNum;
		params.NewScore = NewScore;
		params.LastScore = LastScore;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4DD0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPossessorActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* UTBLSystemLibrary::STATIC_GetPossessorActor(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPossessorActor");
		
		UTBLSystemLibrary_GetPossessorActor_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4AF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPlayerStatesFromFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLPlayerState*> UTBLSystemLibrary::STATIC_GetPlayerStatesFromFaction(class UObject* WorldContextObject, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPlayerStatesFromFaction");
		
		UTBLSystemLibrary_GetPlayerStatesFromFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4A20
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPlayerStates
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLPlayerState*> UTBLSystemLibrary::STATIC_GetPlayerStates(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPlayerStates");
		
		UTBLSystemLibrary_GetPlayerStates_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E48E0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPlayerStateFromUniqueNetId
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUniqueNetIdRepl                            UniqueId                                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLPlayerState* UTBLSystemLibrary::STATIC_GetPlayerStateFromUniqueNetId(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPlayerStateFromUniqueNetId");
		
		UTBLSystemLibrary_GetPlayerStateFromUniqueNetId_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.UniqueId = UniqueId;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4C00
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPlayersFromFactions
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<TBL_EFaction>                               Factions                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               AllowBots                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               AllowNPCs                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AController*> UTBLSystemLibrary::STATIC_GetPlayersFromFactions(class UObject* WorldContextObject, TArray<TBL_EFaction> Factions, bool AllowBots, bool AllowNPCs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPlayersFromFactions");
		
		UTBLSystemLibrary_GetPlayersFromFactions_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Factions = Factions;
		params.AllowBots = AllowBots;
		params.AllowNPCs = AllowNPCs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4810
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPlayerDebugName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetPlayerDebugName(class APlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPlayerDebugName");
		
		UTBLSystemLibrary_GetPlayerDebugName_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4740
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPlayerCountsFromFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FactionNumbers UTBLSystemLibrary::STATIC_GetPlayerCountsFromFaction(class UObject* WorldContextObject, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPlayerCountsFromFaction");
		
		UTBLSystemLibrary_GetPlayerCountsFromFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E45B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetPersonalityEmotes
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	TArray<struct FPersonalityEmoteTableRow> UTBLSystemLibrary::STATIC_GetPersonalityEmotes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetPersonalityEmotes");
		
		UTBLSystemLibrary_GetPersonalityEmotes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E44F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOppositeTeam
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLTeam*                                    Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLTeam* UTBLSystemLibrary::STATIC_GetOppositeTeam(class UObject* WorldContextObject, class ATBLTeam* Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOppositeTeam");
		
		UTBLSystemLibrary_GetOppositeTeam_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4470
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOppositeFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EFaction UTBLSystemLibrary::STATIC_GetOppositeFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOppositeFaction");
		
		UTBLSystemLibrary_GetOppositeFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E43B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatWeaponTakedowns
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             State                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EWeaponTag                                     WeaponTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatWeaponTakedowns(class ATBLPlayerState* State, TBL_EWeaponTag WeaponTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatWeaponTakedowns");
		
		UTBLSystemLibrary_GetOnlineStatWeaponTakedowns_Params params {};
		params.State = State;
		params.WeaponTag = WeaponTag;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E42F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatWeaponKills
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EWeaponTag                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatWeaponKills(class ATBLPlayerState* PlayerState, TBL_EWeaponTag Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatWeaponKills");
		
		UTBLSystemLibrary_GetOnlineStatWeaponKills_Params params {};
		params.PlayerState = PlayerState;
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4230
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatWeaponDeaths
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EWeaponTag                                     Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatWeaponDeaths(class ATBLPlayerState* PlayerState, TBL_EWeaponTag Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatWeaponDeaths");
		
		UTBLSystemLibrary_GetOnlineStatWeaponDeaths_Params params {};
		params.PlayerState = PlayerState;
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E4170
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatSubClassTakedowns
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECharacterClass                                CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatSubClassTakedowns(class ATBLPlayerState* PlayerState, TBL_ECharacterClass CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatSubClassTakedowns");
		
		UTBLSystemLibrary_GetOnlineStatSubClassTakedowns_Params params {};
		params.PlayerState = PlayerState;
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E40B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatSubClassPlaytime
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECharacterClass                                CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatSubClassPlaytime(class ATBLPlayerState* PlayerState, TBL_ECharacterClass CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatSubClassPlaytime");
		
		UTBLSystemLibrary_GetOnlineStatSubClassPlaytime_Params params {};
		params.PlayerState = PlayerState;
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3FF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatSubClassKills
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECharacterClass                                CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatSubClassKills(class ATBLPlayerState* PlayerState, TBL_ECharacterClass CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatSubClassKills");
		
		UTBLSystemLibrary_GetOnlineStatSubClassKills_Params params {};
		params.PlayerState = PlayerState;
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3F30
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatSubClassDeaths
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ECharacterClass                                CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatSubClassDeaths(class ATBLPlayerState* PlayerState, TBL_ECharacterClass CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatSubClassDeaths");
		
		UTBLSystemLibrary_GetOnlineStatSubClassDeaths_Params params {};
		params.PlayerState = PlayerState;
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3EB0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatFromWeaponTag
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EWeaponTag                                     WeaponTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EOnlineStat UTBLSystemLibrary::STATIC_GetOnlineStatFromWeaponTag(TBL_EWeaponTag WeaponTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatFromWeaponTag");
		
		UTBLSystemLibrary_GetOnlineStatFromWeaponTag_Params params {};
		params.WeaponTag = WeaponTag;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3E30
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatFromCharacterClass
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECharacterClass                                CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EOnlineStat UTBLSystemLibrary::STATIC_GetOnlineStatFromCharacterClass(TBL_ECharacterClass CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatFromCharacterClass");
		
		UTBLSystemLibrary_GetOnlineStatFromCharacterClass_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3DB0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatCommendations
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatCommendations(class ATBLPlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatCommendations");
		
		UTBLSystemLibrary_GetOnlineStatCommendations_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3D30
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetOnlineStatBattlecries
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLPlayerState*                             PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetOnlineStatBattlecries(class ATBLPlayerState* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetOnlineStatBattlecries");
		
		UTBLSystemLibrary_GetOnlineStatBattlecries_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3C50
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetObjectiveScoreTextFromEnum
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EObjectivePointCategory                        ObjPointCat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetObjectiveScoreTextFromEnum(TBL_EObjectivePointCategory ObjPointCat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetObjectiveScoreTextFromEnum");
		
		UTBLSystemLibrary_GetObjectiveScoreTextFromEnum_Params params {};
		params.ObjPointCat = ObjPointCat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3B40
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetNumPlayers
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IncludeBots                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IncludeNPCs                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetNumPlayers(class UObject* WorldContextObject, bool IncludeBots, bool IncludeNPCs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetNumPlayers");
		
		UTBLSystemLibrary_GetNumPlayers_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.IncludeBots = IncludeBots;
		params.IncludeNPCs = IncludeNPCs;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E39F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetNeutralTeamDisplayInfo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FTeamDisplayInfo UTBLSystemLibrary::STATIC_GetNeutralTeamDisplayInfo(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetNeutralTeamDisplayInfo");
		
		UTBLSystemLibrary_GetNeutralTeamDisplayInfo_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E39C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetNegativeMaxFloatVector
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 */
	struct FVector UTBLSystemLibrary::STATIC_GetNegativeMaxFloatVector()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetNegativeMaxFloatVector");
		
		UTBLSystemLibrary_GetNegativeMaxFloatVector_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E39A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetNegativeMaxFloat
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	float UTBLSystemLibrary::STATIC_GetNegativeMaxFloat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetNegativeMaxFloat");
		
		UTBLSystemLibrary_GetNegativeMaxFloat_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3840
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetNDASigned
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_GetNDASigned(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetNDASigned");
		
		UTBLSystemLibrary_GetNDASigned_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E38C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetNameFromCharacterClass
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetNameFromCharacterClass(class UClass* CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetNameFromCharacterClass");
		
		UTBLSystemLibrary_GetNameFromCharacterClass_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E37C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetMovementModifierComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UMovementModifierComponent* UTBLSystemLibrary::STATIC_GetMovementModifierComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetMovementModifierComponent");
		
		UTBLSystemLibrary_GetMovementModifierComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3740
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetMovementComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UMovementComponent* UTBLSystemLibrary::STATIC_GetMovementComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetMovementComponent");
		
		UTBLSystemLibrary_GetMovementComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E36C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetMaxPlayersForServer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetMaxPlayersForServer(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetMaxPlayersForServer");
		
		UTBLSystemLibrary_GetMaxPlayersForServer_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E36A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetMaxFloat
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	float UTBLSystemLibrary::STATIC_GetMaxFloat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetMaxFloat");
		
		UTBLSystemLibrary_GetMaxFloat_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3580
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetMapSummary
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MapFileNameWithOptions                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCheckGameInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTBLMapSummary* UTBLSystemLibrary::STATIC_GetMapSummary(class UObject* WorldContextObject, const class FString& MapFileNameWithOptions, bool bCheckGameInstance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetMapSummary");
		
		UTBLSystemLibrary_GetMapSummary_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.MapFileNameWithOptions = MapFileNameWithOptions;
		params.bCheckGameInstance = bCheckGameInstance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E34B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetMapNameString
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetMapNameString(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetMapNameString");
		
		UTBLSystemLibrary_GetMapNameString_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E33D0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLocalizedWeaponTagText
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EWeaponTag                                     WeaponTag                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetLocalizedWeaponTagText(TBL_EWeaponTag WeaponTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLocalizedWeaponTagText");
		
		UTBLSystemLibrary_GetLocalizedWeaponTagText_Params params {};
		params.WeaponTag = WeaponTag;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E32F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLocalizedTextFromItemUnlock
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EOnlineItemUnlockType                          ItemUnlockType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetLocalizedTextFromItemUnlock(TBL_EOnlineItemUnlockType ItemUnlockType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLocalizedTextFromItemUnlock");
		
		UTBLSystemLibrary_GetLocalizedTextFromItemUnlock_Params params {};
		params.ItemUnlockType = ItemUnlockType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3140
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLocalizedMapName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      MapNameString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MapNameKey                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetLocalizedMapName(const class FString& MapNameString, class FString* MapNameKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLocalizedMapName");
		
		UTBLSystemLibrary_GetLocalizedMapName_Params params {};
		params.MapNameString = MapNameString;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (MapNameKey != nullptr)
			*MapNameKey = params.MapNameKey;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E3060
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLocalizedItemLevelTypeText
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EOnlineStat                                    ItemLevelType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetLocalizedItemLevelTypeText(TBL_EOnlineStat ItemLevelType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLocalizedItemLevelTypeText");
		
		UTBLSystemLibrary_GetLocalizedItemLevelTypeText_Params params {};
		params.ItemLevelType = ItemLevelType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2F80
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLocalizedGameModeTypeText
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EGameModeType                                  GamemodeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetLocalizedGameModeTypeText(TBL_EGameModeType GamemodeType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLocalizedGameModeTypeText");
		
		UTBLSystemLibrary_GetLocalizedGameModeTypeText_Params params {};
		params.GamemodeType = GamemodeType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2D80
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLocalizedGameModeFromMapString
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      MapNameString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        LongForm                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        ShortForm                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_GetLocalizedGameModeFromMapString(const class FString& MapNameString, class FText* LongForm, class FText* ShortForm)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLocalizedGameModeFromMapString");
		
		UTBLSystemLibrary_GetLocalizedGameModeFromMapString_Params params {};
		params.MapNameString = MapNameString;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (LongForm != nullptr)
			*LongForm = params.LongForm;
		if (ShortForm != nullptr)
			*ShortForm = params.ShortForm;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2CA0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLocalizedCharacterClassText
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_ECharacterClass                                CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetLocalizedCharacterClassText(TBL_ECharacterClass CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLocalizedCharacterClassText");
		
		UTBLSystemLibrary_GetLocalizedCharacterClassText_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2C20
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLoadoutSelectionDefaultObj
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      LoadoutSelectionClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ULoadoutSelection* UTBLSystemLibrary::STATIC_GetLoadoutSelectionDefaultObj(class UClass* LoadoutSelectionClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLoadoutSelectionDefaultObj");
		
		UTBLSystemLibrary_GetLoadoutSelectionDefaultObj_Params params {};
		params.LoadoutSelectionClass = LoadoutSelectionClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2BA0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLevelScriptActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ALevelScriptActor* UTBLSystemLibrary::STATIC_GetLevelScriptActor(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLevelScriptActor");
		
		UTBLSystemLibrary_GetLevelScriptActor_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2B10
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetLastServerReceivePacketTime
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLSystemLibrary::STATIC_GetLastServerReceivePacketTime(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetLastServerReceivePacketTime");
		
		UTBLSystemLibrary_GetLastServerReceivePacketTime_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2A30
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetKilledActor
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	class AActor* UTBLSystemLibrary::STATIC_GetKilledActor(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetKilledActor");
		
		UTBLSystemLibrary_GetKilledActor_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2950
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetInventorySlotTextFromEnum
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EInventorySlot                                 InventorySlotType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetInventorySlotTextFromEnum(TBL_EInventorySlot InventorySlotType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetInventorySlotTextFromEnum");
		
		UTBLSystemLibrary_GetInventorySlotTextFromEnum_Params params {};
		params.InventorySlotType = InventorySlotType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E28D0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetIconFromCharacterClass
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTexture2D* UTBLSystemLibrary::STATIC_GetIconFromCharacterClass(class UClass* CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetIconFromCharacterClass");
		
		UTBLSystemLibrary_GetIconFromCharacterClass_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E27F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetHitDirectionName
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     HitDirection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UTBLSystemLibrary::STATIC_GetHitDirectionName(class AActor* HitActor, const struct FVector& HitDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetHitDirectionName");
		
		UTBLSystemLibrary_GetHitDirectionName_Params params {};
		params.HitActor = HitActor;
		params.HitDirection = HitDirection;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2720
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetGameModeNameString
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetGameModeNameString(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetGameModeNameString");
		
		UTBLSystemLibrary_GetGameModeNameString_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2550
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetGameModeMessageRows
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UDataTable*                                  GameModeMessageDataTable                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              EventTags                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FGameModeMessageTable> UTBLSystemLibrary::STATIC_GetGameModeMessageRows(class UDataTable* GameModeMessageDataTable, TArray<class FString> EventTags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetGameModeMessageRows");
		
		UTBLSystemLibrary_GetGameModeMessageRows_Params params {};
		params.GameModeMessageDataTable = GameModeMessageDataTable;
		params.EventTags = EventTags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E24D0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetFullBuildVersionString
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class FString UTBLSystemLibrary::STATIC_GetFullBuildVersionString()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetFullBuildVersionString");
		
		UTBLSystemLibrary_GetFullBuildVersionString_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2360
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetFriendUserId
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        InFriend                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetFriendUserId(const struct FBlueprintOnlineUser& InFriend)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetFriendUserId");
		
		UTBLSystemLibrary_GetFriendUserId_Params params {};
		params.InFriend = InFriend;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E21F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetFriendDisplayName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        InFriend                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetFriendDisplayName(const struct FBlueprintOnlineUser& InFriend)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetFriendDisplayName");
		
		UTBLSystemLibrary_GetFriendDisplayName_Params params {};
		params.InFriend = InFriend;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E2060
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDisplayInfoFromCharacterClass
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FCharacterDisplayInfo                       DisplayInfo                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_GetDisplayInfoFromCharacterClass(class UClass* CharacterClass, struct FCharacterDisplayInfo* DisplayInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDisplayInfoFromCharacterClass");
		
		UTBLSystemLibrary_GetDisplayInfoFromCharacterClass_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (DisplayInfo != nullptr)
			*DisplayInfo = params.DisplayInfo;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1FE0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDialogManager
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTBLDialogManager* UTBLSystemLibrary::STATIC_GetDialogManager(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDialogManager");
		
		UTBLSystemLibrary_GetDialogManager_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1F60
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDemoTeam
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTBLSystemLibrary::STATIC_GetDemoTeam(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDemoTeam");
		
		UTBLSystemLibrary_GetDemoTeam_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1E90
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDemoServer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetDemoServer(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDemoServer");
		
		UTBLSystemLibrary_GetDemoServer_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1DC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDemoPlayerName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetDemoPlayerName(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDemoPlayerName");
		
		UTBLSystemLibrary_GetDemoPlayerName_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1D40
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDefendingFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EFaction UTBLSystemLibrary::STATIC_GetDefendingFaction(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDefendingFaction");
		
		UTBLSystemLibrary_GetDefendingFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1C90
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDefaultObjectFromStringReference
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FSoftObjectPath                             StringReference                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UObject* UTBLSystemLibrary::STATIC_GetDefaultObjectFromStringReference(const struct FSoftObjectPath& StringReference)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDefaultObjectFromStringReference");
		
		UTBLSystemLibrary_GetDefaultObjectFromStringReference_Params params {};
		params.StringReference = StringReference;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1C10
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDefaultInventoryItemObject
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      InventoryItemClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UTBLSystemLibrary::STATIC_GetDefaultInventoryItemObject(class UClass* InventoryItemClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDefaultInventoryItemObject");
		
		UTBLSystemLibrary_GetDefaultInventoryItemObject_Params params {};
		params.InventoryItemClass = InventoryItemClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1B90
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDefaultCharacterFromCharacterClass
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLCharacter* UTBLSystemLibrary::STATIC_GetDefaultCharacterFromCharacterClass(class UClass* CharacterClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDefaultCharacterFromCharacterClass");
		
		UTBLSystemLibrary_GetDefaultCharacterFromCharacterClass_Params params {};
		params.CharacterClass = CharacterClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1AF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDateTime
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FTBL_FReplicatedDateTime                    ReplDateTime                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	struct FDateTime UTBLSystemLibrary::STATIC_GetDateTime(const struct FTBL_FReplicatedDateTime& ReplDateTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDateTime");
		
		UTBLSystemLibrary_GetDateTime_Params params {};
		params.ReplDateTime = ReplDateTime;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1A60
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDamageSourceName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UDamageSource*                               DamageSource                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UTBLSystemLibrary::STATIC_GetDamageSourceName(class UDamageSource* DamageSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDamageSourceName");
		
		UTBLSystemLibrary_GetDamageSourceName_Params params {};
		params.DamageSource = DamageSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E19E0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDamageSourceIconTexture
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UDamageSource*                               DamageSource                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTexture* UTBLSystemLibrary::STATIC_GetDamageSourceIconTexture(class UDamageSource* DamageSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDamageSourceIconTexture");
		
		UTBLSystemLibrary_GetDamageSourceIconTexture_Params params {};
		params.DamageSource = DamageSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1900
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetDamageSourceDisplayName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UDamageSource*                               DamageSource                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetDamageSourceDisplayName(class UDamageSource* DamageSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetDamageSourceDisplayName");
		
		UTBLSystemLibrary_GetDamageSourceDisplayName_Params params {};
		params.DamageSource = DamageSource;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1770
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCustomPersonalityEmotes
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	TArray<struct FCustomPersonalityEmotesTableRow> UTBLSystemLibrary::STATIC_GetCustomPersonalityEmotes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCustomPersonalityEmotes");
		
		UTBLSystemLibrary_GetCustomPersonalityEmotes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1480
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCustomPersonalityEmoteOverride
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FPersonalityEmoteTableRow                   Emote                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		TBL_EAudioPersonalityType                          PersonalityType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPersonalityEmoteTableRow                   OutRow                                                     (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_GetCustomPersonalityEmoteOverride(const struct FPersonalityEmoteTableRow& Emote, TBL_EAudioPersonalityType PersonalityType, struct FPersonalityEmoteTableRow* OutRow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCustomPersonalityEmoteOverride");
		
		UTBLSystemLibrary_GetCustomPersonalityEmoteOverride_Params params {};
		params.Emote = Emote;
		params.PersonalityType = PersonalityType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutRow != nullptr)
			*OutRow = params.OutRow;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1880
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCustomizationComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UCustomizationComponent* UTBLSystemLibrary::STATIC_GetCustomizationComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCustomizationComponent");
		
		UTBLSystemLibrary_GetCustomizationComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E13B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCurrentServerNameString
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetCurrentServerNameString(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCurrentServerNameString");
		
		UTBLSystemLibrary_GetCurrentServerNameString_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1330
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCrowdControlDirection
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        Direction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_ECrowdControlDirection UTBLSystemLibrary::STATIC_GetCrowdControlDirection(const class FName& Direction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCrowdControlDirection");
		
		UTBLSystemLibrary_GetCrowdControlDirection_Params params {};
		params.Direction = Direction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1220
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetControllersFromFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AController*> UTBLSystemLibrary::STATIC_GetControllersFromFaction(class UObject* WorldContextObject, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetControllersFromFaction");
		
		UTBLSystemLibrary_GetControllersFromFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E11A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetContextVoObject
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UContextVOManager* UTBLSystemLibrary::STATIC_GetContextVoObject(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetContextVoObject");
		
		UTBLSystemLibrary_GetContextVoObject_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1120
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetConditionsComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UConditionsComponent* UTBLSystemLibrary::STATIC_GetConditionsComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetConditionsComponent");
		
		UTBLSystemLibrary_GetConditionsComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E1050
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetClassPathName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      InClass                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GetClassPathName(class UClass* InClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetClassPathName");
		
		UTBLSystemLibrary_GetClassPathName_Params params {};
		params.InClass = InClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0D60
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCharacterSubclassForPrimaryWeapon
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      CharacterClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      PrimaryWeapon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* UTBLSystemLibrary::STATIC_GetCharacterSubclassForPrimaryWeapon(class UClass* CharacterClass, class UClass* PrimaryWeapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCharacterSubclassForPrimaryWeapon");
		
		UTBLSystemLibrary_GetCharacterSubclassForPrimaryWeapon_Params params {};
		params.CharacterClass = CharacterClass;
		params.PrimaryWeapon = PrimaryWeapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0E20
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCharacterSubclasses
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      ParentClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class UClass*> UTBLSystemLibrary::STATIC_GetCharacterSubclasses(class UClass* ParentClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCharacterSubclasses");
		
		UTBLSystemLibrary_GetCharacterSubclasses_Params params {};
		params.ParentClass = ParentClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0EF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCharactersFromFactions
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<TBL_EFaction>                               Factions                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLCharacter*> UTBLSystemLibrary::STATIC_GetCharactersFromFactions(class UObject* WorldContextObject, TArray<TBL_EFaction> Factions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCharactersFromFactions");
		
		UTBLSystemLibrary_GetCharactersFromFactions_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Factions = Factions;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0CD0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCharacterClassType
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EAudioClassType UTBLSystemLibrary::STATIC_GetCharacterClassType(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCharacterClassType");
		
		UTBLSystemLibrary_GetCharacterClassType_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0C40
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetCharacterClassFromSubclass
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      Subclass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* UTBLSystemLibrary::STATIC_GetCharacterClassFromSubclass(class UClass* Subclass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetCharacterClassFromSubclass");
		
		UTBLSystemLibrary_GetCharacterClassFromSubclass_Params params {};
		params.Subclass = Subclass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0BC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetBuildNumber
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class FString UTBLSystemLibrary::STATIC_GetBuildNumber()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetBuildNumber");
		
		UTBLSystemLibrary_GetBuildNumber_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00AD0350
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetBuildFinality
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	TBL_EBuildFinality UTBLSystemLibrary::STATIC_GetBuildFinality()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetBuildFinality");
		
		UTBLSystemLibrary_GetBuildFinality_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0B40
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAttackingFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EFaction UTBLSystemLibrary::STATIC_GetAttackingFaction(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAttackingFaction");
		
		UTBLSystemLibrary_GetAttackingFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0A70
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAttachedActors
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AActor*> UTBLSystemLibrary::STATIC_GetAttachedActors(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAttachedActors");
		
		UTBLSystemLibrary_GetAttachedActors_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E09F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAlwaysOnMusicManager
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AAlwaysOnMusicManager* UTBLSystemLibrary::STATIC_GetAlwaysOnMusicManager(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAlwaysOnMusicManager");
		
		UTBLSystemLibrary_GetAlwaysOnMusicManager_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0820
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllTeamsPlayersWithExclusion
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<TBL_EFaction>                               ExcludeFactions                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class ATBLTeam*>                            IncludedTeams                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AController*>                         IncludedPlayers                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_GetAllTeamsPlayersWithExclusion(class UObject* WorldContextObject, TArray<TBL_EFaction> ExcludeFactions, TArray<class ATBLTeam*>* IncludedTeams, TArray<class AController*>* IncludedPlayers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllTeamsPlayersWithExclusion");
		
		UTBLSystemLibrary_GetAllTeamsPlayersWithExclusion_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ExcludeFactions = ExcludeFactions;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IncludedTeams != nullptr)
			*IncludedTeams = params.IncludedTeams;
		if (IncludedPlayers != nullptr)
			*IncludedPlayers = params.IncludedPlayers;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0760
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllNames
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_ENameType                                      NameType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class FString> UTBLSystemLibrary::STATIC_GetAllNames(TBL_ENameType NameType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllNames");
		
		UTBLSystemLibrary_GetAllNames_Params params {};
		params.NameType = NameType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E06A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllMapNames_EditorOnly
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<class FString>                              MapNames                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_GetAllMapNames_EditorOnly(TArray<class FString>* MapNames)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllMapNames_EditorOnly");
		
		UTBLSystemLibrary_GetAllMapNames_EditorOnly_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (MapNames != nullptr)
			*MapNames = params.MapNames;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0620
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllFrontendMovieURLs
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	TArray<class FString> UTBLSystemLibrary::STATIC_GetAllFrontendMovieURLs()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllFrontendMovieURLs");
		
		UTBLSystemLibrary_GetAllFrontendMovieURLs_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0550
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllComponentsFromClass
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      ActorClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class UActorComponent*> UTBLSystemLibrary::STATIC_GetAllComponentsFromClass(class UClass* ActorClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllComponentsFromClass");
		
		UTBLSystemLibrary_GetAllComponentsFromClass_Params params {};
		params.ActorClass = ActorClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0440
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllCharactersFromFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class ATBLCharacter*> UTBLSystemLibrary::STATIC_GetAllCharactersFromFaction(class UObject* WorldContextObject, TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllCharactersFromFaction");
		
		UTBLSystemLibrary_GetAllCharactersFromFaction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0320
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllActorsWithTag
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              OutActors                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_GetAllActorsWithTag(class UObject* WorldContextObject, const class FName& Tag, TArray<class AActor*>* OutActors)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllActorsWithTag");
		
		UTBLSystemLibrary_GetAllActorsWithTag_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutActors != nullptr)
			*OutActors = params.OutActors;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016E0120
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllActorsWithComponentsWithExclusions
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class UClass*>                              ComponentClasses                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              ExcludeComponentClasses                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UClass*>                              OptionalActorClasses                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AActor*> UTBLSystemLibrary::STATIC_GetAllActorsWithComponentsWithExclusions(TArray<class UClass*> ComponentClasses, TArray<class UClass*> ExcludeComponentClasses, TArray<class UClass*> OptionalActorClasses, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllActorsWithComponentsWithExclusions");
		
		UTBLSystemLibrary_GetAllActorsWithComponentsWithExclusions_Params params {};
		params.ComponentClasses = ComponentClasses;
		params.ExcludeComponentClasses = ExcludeComponentClasses;
		params.OptionalActorClasses = OptionalActorClasses;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFFF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAllActorsWithComponents
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class UClass*>                              ComponentClasses                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AActor*> UTBLSystemLibrary::STATIC_GetAllActorsWithComponents(TArray<class UClass*> ComponentClasses, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAllActorsWithComponents");
		
		UTBLSystemLibrary_GetAllActorsWithComponents_Params params {};
		params.ComponentClasses = ComponentClasses;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFD10
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorTeam
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLTeam* UTBLSystemLibrary::STATIC_GetActorTeam(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorTeam");
		
		UTBLSystemLibrary_GetActorTeam_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFEA0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorsWithTagClassSpecifier
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ActorClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class AActor*>                              OutActors                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_GetActorsWithTagClassSpecifier(const class FName& Tag, class UClass* ActorClass, class UObject* WorldContextObject, TArray<class AActor*>* OutActors)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorsWithTagClassSpecifier");
		
		UTBLSystemLibrary_GetActorsWithTagClassSpecifier_Params params {};
		params.Tag = Tag;
		params.ActorClass = ActorClass;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutActors != nullptr)
			*OutActors = params.OutActors;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFD90
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorsWithTag
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms)
	 * Parameters:
	 * 		class FName                                        Tag                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AActor*> UTBLSystemLibrary::STATIC_GetActorsWithTag(const class FName& Tag, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorsWithTag");
		
		UTBLSystemLibrary_GetActorsWithTag_Params params {};
		params.Tag = Tag;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFBC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorMaterials
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UPrimitiveComponent*>                 OutComponents                                              (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UMaterialInstanceDynamic*>            OutMaterials                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_GetActorMaterials(class AActor* Actor, TArray<class UPrimitiveComponent*>* OutComponents, TArray<class UMaterialInstanceDynamic*>* OutMaterials)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorMaterials");
		
		UTBLSystemLibrary_GetActorMaterials_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutComponents != nullptr)
			*OutComponents = params.OutComponents;
		if (OutMaterials != nullptr)
			*OutMaterials = params.OutMaterials;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFB40
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorFaction
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TBL_EFaction UTBLSystemLibrary::STATIC_GetActorFaction(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorFaction");
		
		UTBLSystemLibrary_GetActorFaction_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFA80
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorEquippedWeaponByState
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EEquippedState                                 EquippedState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UTBLSystemLibrary::STATIC_GetActorEquippedWeaponByState(class AActor* Actor, TBL_EEquippedState EquippedState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorEquippedWeaponByState");
		
		UTBLSystemLibrary_GetActorEquippedWeaponByState_Params params {};
		params.Actor = Actor;
		params.EquippedState = EquippedState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DFA00
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorEquippedWeapon
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UTBLSystemLibrary::STATIC_GetActorEquippedWeapon(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorEquippedWeapon");
		
		UTBLSystemLibrary_GetActorEquippedWeapon_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF940
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorComponentWithTag
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UActorComponent* UTBLSystemLibrary::STATIC_GetActorComponentWithTag(class AActor* Actor, const class FName& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorComponentWithTag");
		
		UTBLSystemLibrary_GetActorComponentWithTag_Params params {};
		params.Actor = Actor;
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF880
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UActorComponent* UTBLSystemLibrary::STATIC_GetActorComponent(class AActor* Actor, class UClass* Class)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorComponent");
		
		UTBLSystemLibrary_GetActorComponent_Params params {};
		params.Actor = Actor;
		params.Class = Class;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF800
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActorAttackingWeapon
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AInventoryItem* UTBLSystemLibrary::STATIC_GetActorAttackingWeapon(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActorAttackingWeapon");
		
		UTBLSystemLibrary_GetActorAttackingWeapon_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF5F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetActionBindingTextForInventorySlot
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EInventoryItemSlot                             InventoryItemSlot                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInputActionKeyMapping                      ActionMapping                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	class FText UTBLSystemLibrary::STATIC_GetActionBindingTextForInventorySlot(TBL_EInventoryItemSlot InventoryItemSlot, class UObject* WorldContextObject, struct FInputActionKeyMapping* ActionMapping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetActionBindingTextForInventorySlot");
		
		UTBLSystemLibrary_GetActionBindingTextForInventorySlot_Params params {};
		params.InventoryItemSlot = InventoryItemSlot;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ActionMapping != nullptr)
			*ActionMapping = params.ActionMapping;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF570
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAbilityConfigLoaded
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_GetAbilityConfigLoaded(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAbilityConfigLoaded");
		
		UTBLSystemLibrary_GetAbilityConfigLoaded_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF4F0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAbilityConfig
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAbilityConfig* UTBLSystemLibrary::STATIC_GetAbilityConfig(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAbilityConfig");
		
		UTBLSystemLibrary_GetAbilityConfig_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF470
	 * 		Name   -> Function TBL.TBLSystemLibrary.GetAbilitiesComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UAbilitiesComponent* UTBLSystemLibrary::STATIC_GetAbilitiesComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GetAbilitiesComponent");
		
		UTBLSystemLibrary_GetAbilitiesComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF3B0
	 * 		Name   -> Function TBL.TBLSystemLibrary.GenerateRandomName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_ENameType                                      NameType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GenerateRandomName(TBL_ENameType NameType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GenerateRandomName");
		
		UTBLSystemLibrary_GenerateRandomName_Params params {};
		params.NameType = NameType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF240
	 * 		Name   -> Function TBL.TBLSystemLibrary.GenerateHashName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      StringToHash                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ENameType                                      NameType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLSystemLibrary::STATIC_GenerateHashName(const class FString& StringToHash, TBL_ENameType NameType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GenerateHashName");
		
		UTBLSystemLibrary_GenerateHashName_Params params {};
		params.StringToHash = StringToHash;
		params.NameType = NameType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF170
	 * 		Name   -> Function TBL.TBLSystemLibrary.GammaCorrectLinearColor
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FLinearColor                                LinCol                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Gamma                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FLinearColor UTBLSystemLibrary::STATIC_GammaCorrectLinearColor(const struct FLinearColor& LinCol, float Gamma)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.GammaCorrectLinearColor");
		
		UTBLSystemLibrary_GammaCorrectLinearColor_Params params {};
		params.LinCol = LinCol;
		params.Gamma = Gamma;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DF050
	 * 		Name   -> Function TBL.TBLSystemLibrary.FrameDelay
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                NumFramesToDelay                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLatentActionInfo                           LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_FrameDelay(class UObject* WorldContextObject, int NumFramesToDelay, const struct FLatentActionInfo& LatentInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.FrameDelay");
		
		UTBLSystemLibrary_FrameDelay_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.NumFramesToDelay = NumFramesToDelay;
		params.LatentInfo = LatentInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DEEF0
	 * 		Name   -> Function TBL.TBLSystemLibrary.FormatGameModeMessages
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TArray<struct FGameModeMessageTable>               Messages                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FGameModeMessage> UTBLSystemLibrary::STATIC_FormatGameModeMessages(TArray<struct FGameModeMessageTable> Messages)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.FormatGameModeMessages");
		
		UTBLSystemLibrary_FormatGameModeMessages_Params params {};
		params.Messages = Messages;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DEE80
	 * 		Name   -> Function TBL.TBLSystemLibrary.ForceUpdateChildTransforms
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class USceneComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_ForceUpdateChildTransforms(class USceneComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.ForceUpdateChildTransforms");
		
		UTBLSystemLibrary_ForceUpdateChildTransforms_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DED90
	 * 		Name   -> Function TBL.TBLSystemLibrary.ForcePlayersDropCarryable
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      InventoryType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_ForcePlayersDropCarryable(class UObject* WorldContextObject, TBL_EFaction Faction, class UClass* InventoryType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.ForcePlayersDropCarryable");
		
		UTBLSystemLibrary_ForcePlayersDropCarryable_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Faction = Faction;
		params.InventoryType = InventoryType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DECE0
	 * 		Name   -> Function TBL.TBLSystemLibrary.ForcePlayerDropCarryable
	 * 		Flags  -> (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      InventoryType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_ForcePlayerDropCarryable(class ATBLCharacter* Character, class UClass* InventoryType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.ForcePlayerDropCarryable");
		
		UTBLSystemLibrary_ForcePlayerDropCarryable_Params params {};
		params.Character = Character;
		params.InventoryType = InventoryType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DEBC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.FindBlueprintClass
	 * 		Flags  -> (Final, Native, Static, Public)
	 * Parameters:
	 * 		class FString                                      BlueprintName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      ParentClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UClass* UTBLSystemLibrary::STATIC_FindBlueprintClass(const class FString& BlueprintName, class UClass* ParentClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.FindBlueprintClass");
		
		UTBLSystemLibrary_FindBlueprintClass_Params params {};
		params.BlueprintName = BlueprintName;
		params.ParentClass = ParentClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE020
	 * 		Name   -> Function TBL.TBLSystemLibrary.EndProfilerStat
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FProfilerStat                               ProfilerStat                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_EndProfilerStat(const struct FProfilerStat& ProfilerStat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.EndProfilerStat");
		
		UTBLSystemLibrary_EndProfilerStat_Params params {};
		params.ProfilerStat = ProfilerStat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DEB50
	 * 		Name   -> Function TBL.TBLSystemLibrary.DumpPlayers
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_DumpPlayers(class UWorld* World)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.DumpPlayers");
		
		UTBLSystemLibrary_DumpPlayers_Params params {};
		params.World = World;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE970
	 * 		Name   -> Function TBL.TBLSystemLibrary.DoKeyEvent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		Engine_EInputEvent                                 KeyEvent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_DoKeyEvent(class AActor* Actor, const class FName& ActionName, Engine_EInputEvent KeyEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.DoKeyEvent");
		
		UTBLSystemLibrary_DoKeyEvent_Params params {};
		params.Actor = Actor;
		params.ActionName = ActionName;
		params.KeyEvent = KeyEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE870
	 * 		Name   -> Function TBL.TBLSystemLibrary.DoKeyAxis
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              AxisValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_DoKeyAxis(class AActor* Actor, const class FName& ActionName, float AxisValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.DoKeyAxis");
		
		UTBLSystemLibrary_DoKeyAxis_Params params {};
		params.Actor = Actor;
		params.ActionName = ActionName;
		params.AxisValue = AxisValue;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DEA60
	 * 		Name   -> Function TBL.TBLSystemLibrary.DoesActorHaveInventoryItem
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      InventoryItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bCanBeChildOf                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_DoesActorHaveInventoryItem(class AActor* Actor, class UClass* InventoryItem, bool bCanBeChildOf)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.DoesActorHaveInventoryItem");
		
		UTBLSystemLibrary_DoesActorHaveInventoryItem_Params params {};
		params.Actor = Actor;
		params.InventoryItem = InventoryItem;
		params.bCanBeChildOf = bCanBeChildOf;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE7C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.DisableComponentsOnServer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                DisableFlags                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_DisableComponentsOnServer(class AActor* Actor, int DisableFlags)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.DisableComponentsOnServer");
		
		UTBLSystemLibrary_DisableComponentsOnServer_Params params {};
		params.Actor = Actor;
		params.DisableFlags = DisableFlags;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE750
	 * 		Name   -> Function TBL.TBLSystemLibrary.DisableComponentsOnBotClient
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_DisableComponentsOnBotClient(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.DisableComponentsOnBotClient");
		
		UTBLSystemLibrary_DisableComponentsOnBotClient_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE6E0
	 * 		Name   -> Function TBL.TBLSystemLibrary.DestroyActorComponent
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_DestroyActorComponent(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.DestroyActorComponent");
		
		UTBLSystemLibrary_DestroyActorComponent_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE660
	 * 		Name   -> Function TBL.TBLSystemLibrary.CreateStatsComponent
	 * 		Flags  -> (Final, Native, Static, Public)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UStatsComponent* UTBLSystemLibrary::STATIC_CreateStatsComponent(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.CreateStatsComponent");
		
		UTBLSystemLibrary_CreateStatsComponent_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE590
	 * 		Name   -> Function TBL.TBLSystemLibrary.CreateSoundActor
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      ReferenceActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OffsetLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AActor* UTBLSystemLibrary::STATIC_CreateSoundActor(class AActor* ReferenceActor, const struct FVector& OffsetLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.CreateSoundActor");
		
		UTBLSystemLibrary_CreateSoundActor_Params params {};
		params.ReferenceActor = ReferenceActor;
		params.OffsetLocation = OffsetLocation;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE570
	 * 		Name   -> Function TBL.TBLSystemLibrary.ClearCharacterRuntimeAssetCache
	 * 		Flags  -> (Final, Native, Static, Public)
	 */
	void UTBLSystemLibrary::STATIC_ClearCharacterRuntimeAssetCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.ClearCharacterRuntimeAssetCache");
		
		UTBLSystemLibrary_ClearCharacterRuntimeAssetCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE500
	 * 		Name   -> Function TBL.TBLSystemLibrary.CancelAllLatentActionsForObject
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     Object                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_CancelAllLatentActionsForObject(class UObject* Object)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.CancelAllLatentActionsForObject");
		
		UTBLSystemLibrary_CancelAllLatentActionsForObject_Params params {};
		params.Object = Object;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE2D0
	 * 		Name   -> Function TBL.TBLSystemLibrary.BreakCanvasIcon
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FCanvasIcon                                 Icon                                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UTexture*                                    Texture                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              U                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              V                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              UL                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              VL                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_BreakCanvasIcon(const struct FCanvasIcon& Icon, class UTexture** Texture, float* U, float* V, float* UL, float* VL)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.BreakCanvasIcon");
		
		UTBLSystemLibrary_BreakCanvasIcon_Params params {};
		params.Icon = Icon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Texture != nullptr)
			*Texture = params.Texture;
		if (U != nullptr)
			*U = params.U;
		if (V != nullptr)
			*V = params.V;
		if (UL != nullptr)
			*UL = params.UL;
		if (VL != nullptr)
			*VL = params.VL;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE0C0
	 * 		Name   -> Function TBL.TBLSystemLibrary.BlueprintOnlineUserEquals
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FBlueprintOnlineUser                        A                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FBlueprintOnlineUser                        B                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_BlueprintOnlineUserEquals(const struct FBlueprintOnlineUser& A, const struct FBlueprintOnlineUser& B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.BlueprintOnlineUserEquals");
		
		UTBLSystemLibrary_BlueprintOnlineUserEquals_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DE020
	 * 		Name   -> Function TBL.TBLSystemLibrary.BeginProfilerStat
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FProfilerStat                               ProfilerStat                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_BeginProfilerStat(const struct FProfilerStat& ProfilerStat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.BeginProfilerStat");
		
		UTBLSystemLibrary_BeginProfilerStat_Params params {};
		params.ProfilerStat = ProfilerStat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DDE90
	 * 		Name   -> Function TBL.TBLSystemLibrary.AwardScoreToPlayers
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class ATBLPlayerState*>                     PlayerStates                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        RowName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EOnlineStat                                    Stat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_AwardScoreToPlayers(class UObject* WorldContextObject, TArray<class ATBLPlayerState*> PlayerStates, const class FName& RowName, TBL_EOnlineStat Stat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.AwardScoreToPlayers");
		
		UTBLSystemLibrary_AwardScoreToPlayers_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.PlayerStates = PlayerStates;
		params.RowName = RowName;
		params.Stat = Stat;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DDD60
	 * 		Name   -> Function TBL.TBLSystemLibrary.AwardOverrideScoreToPlayer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        RowName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                Score                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerState*                             OtherPlayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_AwardOverrideScoreToPlayer(const class FName& RowName, int Score, class ATBLPlayerState* Player, class ATBLPlayerState* OtherPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.AwardOverrideScoreToPlayer");
		
		UTBLSystemLibrary_AwardOverrideScoreToPlayer_Params params {};
		params.RowName = RowName;
		params.Score = Score;
		params.Player = Player;
		params.OtherPlayer = OtherPlayer;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DDC30
	 * 		Name   -> Function TBL.TBLSystemLibrary.AttachComponentFromSCS
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      TargetActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USceneComponent*                             TargetComponent                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ComponentName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USceneComponent* UTBLSystemLibrary::STATIC_AttachComponentFromSCS(class UClass* Class, class AActor* TargetActor, class USceneComponent* TargetComponent, const class FName& ComponentName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.AttachComponentFromSCS");
		
		UTBLSystemLibrary_AttachComponentFromSCS_Params params {};
		params.Class = Class;
		params.TargetActor = TargetActor;
		params.TargetComponent = TargetComponent;
		params.ComponentName = ComponentName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DDBC0
	 * 		Name   -> Function TBL.TBLSystemLibrary.AtlasCharacterTextures
	 * 		Flags  -> (Final, Native, Static, Public)
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_AtlasCharacterTextures(class ACharacter* Character)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.AtlasCharacterTextures");
		
		UTBLSystemLibrary_AtlasCharacterTextures_Params params {};
		params.Character = Character;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DDB00
	 * 		Name   -> Function TBL.TBLSystemLibrary.AreHardwarePlatformsFromTheSameFirstParty
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TBL_EHardwarePlatform                              A                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EHardwarePlatform                              B                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_AreHardwarePlatformsFromTheSameFirstParty(TBL_EHardwarePlatform A, TBL_EHardwarePlatform B)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.AreHardwarePlatformsFromTheSameFirstParty");
		
		UTBLSystemLibrary_AreHardwarePlatformsFromTheSameFirstParty_Params params {};
		params.A = A;
		params.B = B;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DD9A0
	 * 		Name   -> Function TBL.TBLSystemLibrary.AddTagsToActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                Tags                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLSystemLibrary::STATIC_AddTagsToActor(class AActor* Actor, TArray<class FName> Tags, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.AddTagsToActor");
		
		UTBLSystemLibrary_AddTagsToActor_Params params {};
		params.Actor = Actor;
		params.Tags = Tags;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016DD730
	 * 		Name   -> Function TBL.TBLSystemLibrary.AddClosedCaptionLine
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        OriginString                                               (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        ChatString                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OriginatingActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EClosedCaptionType                             Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IgnoreDistance                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLSystemLibrary::STATIC_AddClosedCaptionLine(const class FText& OriginString, const class FText& ChatString, class AActor* OriginatingActor, TBL_EClosedCaptionType Type, class UObject* WorldContextObject, bool IgnoreDistance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLSystemLibrary.AddClosedCaptionLine");
		
		UTBLSystemLibrary_AddClosedCaptionLine_Params params {};
		params.OriginString = OriginString;
		params.ChatString = ChatString;
		params.OriginatingActor = OriginatingActor;
		params.Type = Type;
		params.WorldContextObject = WorldContextObject;
		params.IgnoreDistance = IgnoreDistance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLSystemLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLSystemLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLSystemLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB920
	 * 		Name   -> Function TBL.TBLTeam.SwapWithTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLTeam*                                    Other                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::SwapWithTeam(class ATBLTeam* Other)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.SwapWithTeam");
		
		ATBLTeam_SwapWithTeam_Params params {};
		params.Other = Other;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB7F0
	 * 		Name   -> Function TBL.TBLTeam.SetTiebreakScore
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              SecondaryScore                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::SetTiebreakScore(float SecondaryScore)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.SetTiebreakScore");
		
		ATBLTeam_SetTiebreakScore_Params params {};
		params.SecondaryScore = SecondaryScore;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB770
	 * 		Name   -> Function TBL.TBLTeam.SetTeamTickets
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              NewTickets                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::SetTeamTickets(float NewTickets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.SetTeamTickets");
		
		ATBLTeam_SetTeamTickets_Params params {};
		params.NewTickets = NewTickets;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB640
	 * 		Name   -> Function TBL.TBLTeam.SetTeamScore
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FTeamScoreEvent                             ScoreEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::SetTeamScore(const struct FTeamScoreEvent& ScoreEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.SetTeamScore");
		
		ATBLTeam_SetTeamScore_Params params {};
		params.ScoreEvent = ScoreEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB5C0
	 * 		Name   -> Function TBL.TBLTeam.SetTeamMaxTickets
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              MaxNumTickets                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::SetTeamMaxTickets(float MaxNumTickets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.SetTeamMaxTickets");
		
		ATBLTeam_SetTeamMaxTickets_Params params {};
		params.MaxNumTickets = MaxNumTickets;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAC70
	 * 		Name   -> Function TBL.TBLTeam.IncrementKills
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                Delta                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::IncrementKills(int Delta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.IncrementKills");
		
		ATBLTeam_IncrementKills_Params params {};
		params.Delta = Delta;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA9B0
	 * 		Name   -> Function TBL.TBLTeam.GetTeamScore
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	float ATBLTeam::GetTeamScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.GetTeamScore");
		
		ATBLTeam_GetTeamScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA280
	 * 		Name   -> Function TBL.TBLTeam.CommitRoundResult
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               bWonRound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::CommitRoundResult(bool bWonRound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.CommitRoundResult");
		
		ATBLTeam_CommitRoundResult_Params params {};
		params.bWonRound = bWonRound;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA160
	 * 		Name   -> Function TBL.TBLTeam.BroadcastLocalizedChat
	 * 		Flags  -> (Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FText                                        Msg                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::BroadcastLocalizedChat(const class FText& Msg, TBL_EChatType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.BroadcastLocalizedChat");
		
		ATBLTeam_BroadcastLocalizedChat_Params params {};
		params.Msg = Msg;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA040
	 * 		Name   -> Function TBL.TBLTeam.BroadcastChat
	 * 		Flags  -> (Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Sender                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Msg                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EChatType                                      Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeam::BroadcastChat(class AActor* Sender, const class FString& Msg, TBL_EChatType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeam.BroadcastChat");
		
		ATBLTeam_BroadcastChat_Params params {};
		params.Sender = Sender;
		params.Msg = Msg;
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLTeam.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLTeam::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLTeam");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016F9F80
	 * 		Name   -> Function TBL.TBLTeamPlayerStart.AddRemoveFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_ETeamPlayerStartAction                         Action                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATBLTeamPlayerStart::AddRemoveFaction(TBL_EFaction Faction, TBL_ETeamPlayerStartAction Action)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTeamPlayerStart.AddRemoveFaction");
		
		ATBLTeamPlayerStart_AddRemoveFaction_Params params {};
		params.Faction = Faction;
		params.Action = Action;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLTeamPlayerStart.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLTeamPlayerStart::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLTeamPlayerStart");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB870
	 * 		Name   -> Function TBL.TBLTextBlock.SetWrapTextAt
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              InWrapTextAt                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTextBlock::SetWrapTextAt(float InWrapTextAt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTextBlock.SetWrapTextAt");
		
		UTBLTextBlock_SetWrapTextAt_Params params {};
		params.InWrapTextAt = InWrapTextAt;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB540
	 * 		Name   -> Function TBL.TBLTextBlock.SetShadowOffset
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FVector2D                                   InShadowOffset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTextBlock::SetShadowOffset(const struct FVector2D& InShadowOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTextBlock.SetShadowOffset");
		
		UTBLTextBlock_SetShadowOffset_Params params {};
		params.InShadowOffset = InShadowOffset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB4C0
	 * 		Name   -> Function TBL.TBLTextBlock.SetShadowColorAndOpacity
	 * 		Flags  -> (Final, Native, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FLinearColor                                InShadowColorAndOpacity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTextBlock::SetShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTextBlock.SetShadowColorAndOpacity");
		
		UTBLTextBlock_SetShadowColorAndOpacity_Params params {};
		params.InShadowColorAndOpacity = InShadowColorAndOpacity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB440
	 * 		Name   -> Function TBL.TBLTextBlock.SetFontSize
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                Size                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTextBlock::SetFontSize(int Size)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTextBlock.SetFontSize");
		
		UTBLTextBlock_SetFontSize_Params params {};
		params.Size = Size;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB330
	 * 		Name   -> Function TBL.TBLTextBlock.SetFont
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSlateFontInfo                              InFontInfo                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTextBlock::SetFont(const struct FSlateFontInfo& InFontInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTextBlock.SetFont");
		
		UTBLTextBlock_SetFont_Params params {};
		params.InFontInfo = InFontInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB240
	 * 		Name   -> Function TBL.TBLTextBlock.SetColorAndOpacity
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FSlateColor                                 InColorAndOpacity                                          (Parm, NativeAccessSpecifierPublic)
	 */
	void UTBLTextBlock::SetColorAndOpacity(const struct FSlateColor& InColorAndOpacity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTextBlock.SetColorAndOpacity");
		
		UTBLTextBlock_SetColorAndOpacity_Params params {};
		params.InColorAndOpacity = InColorAndOpacity;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLTextBlock.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLTextBlock::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLTextBlock");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAE30
	 * 		Name   -> Function TBL.TextureAtlasManager.OnAssetCacheComplete
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class URuntimeAssetCacheBuilder_ObjectBase*        CachedAssetBuilder                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Success                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTextureAtlasManager::OnAssetCacheComplete(class URuntimeAssetCacheBuilder_ObjectBase* CachedAssetBuilder, bool Success)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TextureAtlasManager.OnAssetCacheComplete");
		
		UTextureAtlasManager_OnAssetCacheComplete_Params params {};
		params.CachedAssetBuilder = CachedAssetBuilder;
		params.Success = Success;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTextureAtlasManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTextureAtlasManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TextureAtlasManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FADE0
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.IsTrialModeEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_IsTrialModeEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.IsTrialModeEnabled");
		
		UTBLTitleDataLibrary_IsTrialModeEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00AD0350
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.IsTrialModeClient
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_IsTrialModeClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.IsTrialModeClient");
		
		UTBLTitleDataLibrary_IsTrialModeClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FADB0
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.IsStoreEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_IsStoreEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.IsStoreEnabled");
		
		UTBLTitleDataLibrary_IsStoreEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAD80
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.IsServerBrowserEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_IsServerBrowserEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.IsServerBrowserEnabled");
		
		UTBLTitleDataLibrary_IsServerBrowserEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAD50
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.IsQuickMatchEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_IsQuickMatchEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.IsQuickMatchEnabled");
		
		UTBLTitleDataLibrary_IsQuickMatchEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAD20
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.IsMatchmakingEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_IsMatchmakingEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.IsMatchmakingEnabled");
		
		UTBLTitleDataLibrary_IsMatchmakingEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FACF0
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.IsGameEnabled
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_IsGameEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.IsGameEnabled");
		
		UTBLTitleDataLibrary_IsGameEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAC40
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.HasTitleNews
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_HasTitleNews()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.HasTitleNews");
		
		UTBLTitleDataLibrary_HasTitleNews_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAC10
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.HasTitleData
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_HasTitleData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.HasTitleData");
		
		UTBLTitleDataLibrary_HasTitleData_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FABE0
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.HasMotd
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTBLTitleDataLibrary::STATIC_HasMotd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.HasMotd");
		
		UTBLTitleDataLibrary_HasMotd_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAA80
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetTitleNews
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	TArray<struct FTitleNews> UTBLTitleDataLibrary::STATIC_GetTitleNews()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetTitleNews");
		
		UTBLTitleDataLibrary_GetTitleNews_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA9E0
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetTitleData
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	TMap<class FString, class FString> UTBLTitleDataLibrary::STATIC_GetTitleData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetTitleData");
		
		UTBLTitleDataLibrary_GetTitleData_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA970
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetSpecialEventName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class FName UTBLTitleDataLibrary::STATIC_GetSpecialEventName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetSpecialEventName");
		
		UTBLTitleDataLibrary_GetSpecialEventName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA8F0
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetQuickplayQueueName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	class FString UTBLTitleDataLibrary::STATIC_GetQuickplayQueueName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetQuickplayQueueName");
		
		UTBLTitleDataLibrary_GetQuickplayQueueName_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA880
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetMotd
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	struct FMotd UTBLTitleDataLibrary::STATIC_GetMotd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetMotd");
		
		UTBLTitleDataLibrary_GetMotd_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA680
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetMatchmakingQueue
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMatchmakingQueue                           Queue                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLTitleDataLibrary::STATIC_GetMatchmakingQueue(const class FName& ID, struct FMatchmakingQueue* Queue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetMatchmakingQueue");
		
		UTBLTitleDataLibrary_GetMatchmakingQueue_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Queue != nullptr)
			*Queue = params.Queue;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA4C0
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetHostedMatchmakingQueue
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FMatchmakingQueue                           OutQueue                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UTBLTitleDataLibrary::STATIC_GetHostedMatchmakingQueue(struct FMatchmakingQueue* OutQueue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetHostedMatchmakingQueue");
		
		UTBLTitleDataLibrary_GetHostedMatchmakingQueue_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutQueue != nullptr)
			*OutQueue = params.OutQueue;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FA310
	 * 		Name   -> Function TBL.TBLTitleDataLibrary.GetAllMatchmakingQueues
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		TArray<struct FMatchmakingQueue>                   Queues                                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTitleDataLibrary::STATIC_GetAllMatchmakingQueues(TArray<struct FMatchmakingQueue>* Queues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleDataLibrary.GetAllMatchmakingQueues");
		
		UTBLTitleDataLibrary_GetAllMatchmakingQueues_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Queues != nullptr)
			*Queues = params.Queues;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLTitleDataLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLTitleDataLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLTitleDataLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB8F0
	 * 		Name   -> Function TBL.TBLTitleScreen.ShouldUsePCStyleWelcomeScreen
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLTitleScreen::ShouldUsePCStyleWelcomeScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.ShouldUsePCStyleWelcomeScreen");
		
		UTBLTitleScreen_ShouldUsePCStyleWelcomeScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x015E4CC0
	 * 		Name   -> Function TBL.TBLTitleScreen.ShouldShowEgsDevLoginCredentials
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
	 */
	bool UTBLTitleScreen::ShouldShowEgsDevLoginCredentials()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.ShouldShowEgsDevLoginCredentials");
		
		UTBLTitleScreen_ShouldShowEgsDevLoginCredentials_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB1C0
	 * 		Name   -> Function TBL.TBLTitleScreen.OnUserPressedStart
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		int                                                ControllerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTitleScreen::OnUserPressedStart(int ControllerIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnUserPressedStart");
		
		UTBLTitleScreen_OnUserPressedStart_Params params {};
		params.ControllerIndex = ControllerIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FB140
	 * 		Name   -> Function TBL.TBLTitleScreen.OnUserPressedOfflineMode
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		int                                                ControllerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTitleScreen::OnUserPressedOfflineMode(int ControllerIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnUserPressedOfflineMode");
		
		UTBLTitleScreen_OnUserPressedOfflineMode_Params params {};
		params.ControllerIndex = ControllerIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAFA0
	 * 		Name   -> Function TBL.TBLTitleScreen.OnUserPressedLogin
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 * Parameters:
	 * 		int                                                ControllerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InEGSDevAuth_Address                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InEGSDevAuth_Client                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTitleScreen::OnUserPressedLogin(int ControllerIndex, const class FString& InEGSDevAuth_Address, const class FString& InEGSDevAuth_Client)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnUserPressedLogin");
		
		UTBLTitleScreen_OnUserPressedLogin_Params params {};
		params.ControllerIndex = ControllerIndex;
		params.InEGSDevAuth_Address = InEGSDevAuth_Address;
		params.InEGSDevAuth_Client = InEGSDevAuth_Client;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAF80
	 * 		Name   -> Function TBL.TBLTitleScreen.OnUserLoginDowngraded
	 * 		Flags  -> (Final, Native, Private)
	 */
	void UTBLTitleScreen::OnUserLoginDowngraded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnUserLoginDowngraded");
		
		UTBLTitleScreen_OnUserLoginDowngraded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAF60
	 * 		Name   -> Function TBL.TBLTitleScreen.OnTOSDeclined
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLTitleScreen::OnTOSDeclined()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnTOSDeclined");
		
		UTBLTitleScreen_OnTOSDeclined_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAF40
	 * 		Name   -> Function TBL.TBLTitleScreen.OnTOSAgreed
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLTitleScreen::OnTOSAgreed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnTOSAgreed");
		
		UTBLTitleScreen_OnTOSAgreed_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAF20
	 * 		Name   -> Function TBL.TBLTitleScreen.OnPlayTutorialDeclined
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLTitleScreen::OnPlayTutorialDeclined()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnPlayTutorialDeclined");
		
		UTBLTitleScreen_OnPlayTutorialDeclined_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAF00
	 * 		Name   -> Function TBL.TBLTitleScreen.OnPlayTutorialAccepted
	 * 		Flags  -> (Final, Native, Protected, BlueprintCallable)
	 */
	void UTBLTitleScreen::OnPlayTutorialAccepted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.OnPlayTutorialAccepted");
		
		UTBLTitleScreen_OnPlayTutorialAccepted_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FAE10
	 * 		Name   -> Function TBL.TBLTitleScreen.Logout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTBLTitleScreen::Logout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.Logout");
		
		UTBLTitleScreen_Logout_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLTitleScreen.K2_OnStateChanged
	 * 		Flags  -> (Event, Protected, BlueprintEvent)
	 * Parameters:
	 * 		TBL_ETitleScreenMode                               NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLTitleScreen::K2_OnStateChanged(TBL_ETitleScreenMode NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLTitleScreen.K2_OnStateChanged");
		
		UTBLTitleScreen_K2_OnStateChanged_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLTitleScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLTitleScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLTitleScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UCharacterCustomizationSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterCustomizationSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.CharacterCustomizationSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLUMGSequencePlayer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLUMGSequencePlayer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLUMGSequencePlayer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF1A0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.SetEnabledRenderMainScene
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bShouldRenderMainScene                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUtilityLibrary::STATIC_SetEnabledRenderMainScene(class UObject* WorldContextObject, bool bShouldRenderMainScene)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.SetEnabledRenderMainScene");
		
		UTBLUtilityLibrary_SetEnabledRenderMainScene_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bShouldRenderMainScene = bShouldRenderMainScene;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF0F0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.SetAudioEnemyRTPC
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UAkComponent*                                AkComponent                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      Initiator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUtilityLibrary::STATIC_SetAudioEnemyRTPC(class UAkComponent* AkComponent, class AActor* Initiator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.SetAudioEnemyRTPC");
		
		UTBLUtilityLibrary_SetAudioEnemyRTPC_Params params {};
		params.AkComponent = AkComponent;
		params.Initiator = Initiator;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF0D0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.SaveCustomizationSettings
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	void UTBLUtilityLibrary::STATIC_SaveCustomizationSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.SaveCustomizationSettings");
		
		UTBLUtilityLibrary_SaveCustomizationSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FEFC0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.RecursiveSetVisibility
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         Root                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOwnerNoSee                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOnlyOwnerSee                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUtilityLibrary::STATIC_RecursiveSetVisibility(class UPrimitiveComponent* Root, bool bOwnerNoSee, bool bOnlyOwnerSee)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.RecursiveSetVisibility");
		
		UTBLUtilityLibrary_RecursiveSetVisibility_Params params {};
		params.Root = Root;
		params.bOwnerNoSee = bOwnerNoSee;
		params.bOnlyOwnerSee = bOnlyOwnerSee;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FEEC0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.RandomWeightedIntegerFromStream
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		TArray<float>                                      Weights                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRandomStream                               InStream                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	int UTBLUtilityLibrary::STATIC_RandomWeightedIntegerFromStream(TArray<float> Weights, const struct FRandomStream& InStream)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.RandomWeightedIntegerFromStream");
		
		UTBLUtilityLibrary_RandomWeightedIntegerFromStream_Params params {};
		params.Weights = Weights;
		params.InStream = InStream;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE650
	 * 		Name   -> Function TBL.TBLUtilityLibrary.LogWithCallstacks
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUtilityLibrary::STATIC_LogWithCallstacks(const class FString& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.LogWithCallstacks");
		
		UTBLUtilityLibrary_LogWithCallstacks_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE4A0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.LoadCinematicSublevel
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        LevelName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bMakeVisibleAfterLoad                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bShouldBlockOnLoad                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLatentActionInfo                           LatentInfo                                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLUtilityLibrary::STATIC_LoadCinematicSublevel(class UObject* WorldContextObject, const class FName& LevelName, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad, const struct FLatentActionInfo& LatentInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.LoadCinematicSublevel");
		
		UTBLUtilityLibrary_LoadCinematicSublevel_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.LevelName = LevelName;
		params.bMakeVisibleAfterLoad = bMakeVisibleAfterLoad;
		params.bShouldBlockOnLoad = bShouldBlockOnLoad;
		params.LatentInfo = LatentInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE140
	 * 		Name   -> Function TBL.TBLUtilityLibrary.GetSonyPlatformRegion
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	TBL_ESonyAppType UTBLUtilityLibrary::STATIC_GetSonyPlatformRegion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.GetSonyPlatformRegion");
		
		UTBLUtilityLibrary_GetSonyPlatformRegion_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FDFE0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.GetSavedCustomizationSettings
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	TArray<struct FSwatchSelectionsByClass> UTBLUtilityLibrary::STATIC_GetSavedCustomizationSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.GetSavedCustomizationSettings");
		
		UTBLUtilityLibrary_GetSavedCustomizationSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FDF10
	 * 		Name   -> Function TBL.TBLUtilityLibrary.GetPlatformType
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	TBL_EPlatformType UTBLUtilityLibrary::STATIC_GetPlatformType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.GetPlatformType");
		
		UTBLUtilityLibrary_GetPlatformType_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FDDE0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.GetMatchingChildComponentsByName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class USceneComponent*                             RootComponent                                              (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MatchName                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class USceneComponent*>                     OutMatches                                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLUtilityLibrary::STATIC_GetMatchingChildComponentsByName(class USceneComponent* RootComponent, const class FString& MatchName, TArray<class USceneComponent*>* OutMatches)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.GetMatchingChildComponentsByName");
		
		UTBLUtilityLibrary_GetMatchingChildComponentsByName_Params params {};
		params.RootComponent = RootComponent;
		params.MatchName = MatchName;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMatches != nullptr)
			*OutMatches = params.OutMatches;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FDC80
	 * 		Name   -> Function TBL.TBLUtilityLibrary.GetClosestPointOnCollision
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Point                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		Engine_ECollisionChannel                           CollisionChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ClosestPointOnCollision                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLUtilityLibrary::STATIC_GetClosestPointOnCollision(class AActor* Actor, const struct FVector& Point, Engine_ECollisionChannel CollisionChannel, struct FVector* ClosestPointOnCollision)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.GetClosestPointOnCollision");
		
		UTBLUtilityLibrary_GetClosestPointOnCollision_Params params {};
		params.Actor = Actor;
		params.Point = Point;
		params.CollisionChannel = CollisionChannel;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ClosestPointOnCollision != nullptr)
			*ClosestPointOnCollision = params.ClosestPointOnCollision;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FDAC0
	 * 		Name   -> Function TBL.TBLUtilityLibrary.GetAzimuth
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FVector                                     Direction                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Forward                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float UTBLUtilityLibrary::STATIC_GetAzimuth(const struct FVector& Direction, const struct FVector& Forward)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.GetAzimuth");
		
		UTBLUtilityLibrary_GetAzimuth_Params params {};
		params.Direction = Direction;
		params.Forward = Forward;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FD960
	 * 		Name   -> Function TBL.TBLUtilityLibrary.FindClosestSocket
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		class USceneComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SocketSubstring                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UTBLUtilityLibrary::STATIC_FindClosestSocket(class USceneComponent* Component, const struct FVector& Location, const class FString& SocketSubstring)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLUtilityLibrary.FindClosestSocket");
		
		UTBLUtilityLibrary_FindClosestSocket_Params params {};
		params.Component = Component;
		params.Location = Location;
		params.SocketSubstring = SocketSubstring;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLUtilityLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLUtilityLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLUtilityLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF470
	 * 		Name   -> Function TBL.TBLWeaponAnimInstance.StartWeaponAnimation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLWeaponAnimInstance::StartWeaponAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWeaponAnimInstance.StartWeaponAnimation");
		
		UTBLWeaponAnimInstance_StartWeaponAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE860
	 * 		Name   -> Function TBL.TBLWeaponAnimInstance.OnDropped
	 * 		Flags  -> (Final, Native, Public, HasDefaults)
	 * Parameters:
	 * 		class AInventoryItem*                              Item                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  Transform                                                  (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UTBLWeaponAnimInstance::OnDropped(class AInventoryItem* Item, class ATBLCharacter* Character, const struct FTransform& Transform)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWeaponAnimInstance.OnDropped");
		
		UTBLWeaponAnimInstance_OnDropped_Params params {};
		params.Item = Item;
		params.Character = Character;
		params.Transform = Transform;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE720
	 * 		Name   -> Function TBL.TBLWeaponAnimInstance.OnAnimationSetChanged
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class FName                                        AnimSetName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FAnimationSetDataTable                      AnimInfo                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              InInventoryItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLWeaponAnimInstance::OnAnimationSetChanged(const class FName& AnimSetName, const struct FAnimationSetDataTable& AnimInfo, class AInventoryItem* InInventoryItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWeaponAnimInstance.OnAnimationSetChanged");
		
		UTBLWeaponAnimInstance_OnAnimationSetChanged_Params params {};
		params.AnimSetName = AnimSetName;
		params.AnimInfo = AnimInfo;
		params.InInventoryItem = InInventoryItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TBLWeaponAnimInstance.EventOnCombatStateChanged
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class FName                                        PreviousState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLWeaponAnimInstance::EventOnCombatStateChanged(const class FName& PreviousState, const class FName& NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWeaponAnimInstance.EventOnCombatStateChanged");
		
		UTBLWeaponAnimInstance_EventOnCombatStateChanged_Params params {};
		params.PreviousState = PreviousState;
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FD940
	 * 		Name   -> Function TBL.TBLWeaponAnimInstance.EndWeaponAnimation
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLWeaponAnimInstance::EndWeaponAnimation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWeaponAnimInstance.EndWeaponAnimation");
		
		UTBLWeaponAnimInstance_EndWeaponAnimation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FD700
	 * 		Name   -> Function TBL.TBLWeaponAnimInstance.AnimNotify_ShowArrow
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTBLWeaponAnimInstance::AnimNotify_ShowArrow()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWeaponAnimInstance.AnimNotify_ShowArrow");
		
		UTBLWeaponAnimInstance_AnimNotify_ShowArrow_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLWeaponAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLWeaponAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLWeaponAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE2C0
	 * 		Name   -> Function TBL.TBLWebWidget.InitializeWidget
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 */
	void UTBLWebWidget::InitializeWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWebWidget.InitializeWidget");
		
		UTBLWebWidget_InitializeWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FDBB0
	 * 		Name   -> Function TBL.TBLWebWidget.GetButtonText
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		int                                                ButtonIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UTBLWebWidget::GetButtonText(int ButtonIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWebWidget.GetButtonText");
		
		UTBLWebWidget_GetButtonText_Params params {};
		params.ButtonIndex = ButtonIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FD8C0
	 * 		Name   -> Function TBL.TBLWebWidget.ClickedButton
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		int                                                ButtonIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLWebWidget::ClickedButton(int ButtonIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWebWidget.ClickedButton");
		
		UTBLWebWidget_ClickedButton_Params params {};
		params.ButtonIndex = ButtonIndex;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FD7E0
	 * 		Name   -> Function TBL.TBLWebWidget.BrowseToUrl
	 * 		Flags  -> (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      URL                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLWebWidget::BrowseToUrl(const class FString& URL)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWebWidget.BrowseToUrl");
		
		UTBLWebWidget_BrowseToUrl_Params params {};
		params.URL = URL;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLWebWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLWebWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLWebWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLMapSummary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLMapSummary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLMapSummary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE170
	 * 		Name   -> Function TBL.TBLWorldSettings.GetSpawnerSequenceBindingPrefixes
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	TMap<class ASpawner*, class FString> ATBLWorldSettings::GetSpawnerSequenceBindingPrefixes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLWorldSettings.GetSpawnerSequenceBindingPrefixes");
		
		ATBLWorldSettings_GetSpawnerSequenceBindingPrefixes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATBLWorldSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATBLWorldSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLWorldSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UXCloudSizeBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UXCloudSizeBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.XCloudSizeBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF490
	 * 		Name   -> Function TBL.TBLXCloudManager.UnbindWidget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EXCloudWidgetBehavior                          WidgetType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLXCloudManager::UnbindWidget(class UWidget* Widget, TBL_EXCloudWidgetBehavior WidgetType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLXCloudManager.UnbindWidget");
		
		UTBLXCloudManager_UnbindWidget_Params params {};
		params.Widget = Widget;
		params.WidgetType = WidgetType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF3B0
	 * 		Name   -> Function TBL.TBLXCloudManager.SetUIScalingFactor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		float                                              ScaleFactor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLXCloudManager::STATIC_SetUIScalingFactor(float ScaleFactor, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLXCloudManager.SetUIScalingFactor");
		
		UTBLXCloudManager_SetUIScalingFactor_Params params {};
		params.ScaleFactor = ScaleFactor;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FF260
	 * 		Name   -> Function TBL.TBLXCloudManager.SetMaxScalingPhysicalDimensions
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		struct FIntPoint                                   MaxDimensions                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLXCloudManager::STATIC_SetMaxScalingPhysicalDimensions(const struct FIntPoint& MaxDimensions, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLXCloudManager.SetMaxScalingPhysicalDimensions");
		
		UTBLXCloudManager_SetMaxScalingPhysicalDimensions_Params params {};
		params.MaxDimensions = MaxDimensions;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE360
	 * 		Name   -> Function TBL.TBLXCloudManager.IsStreamingToDevice
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLXCloudManager::STATIC_IsStreamingToDevice(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLXCloudManager.IsStreamingToDevice");
		
		UTBLXCloudManager_IsStreamingToDevice_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FE2E0
	 * 		Name   -> Function TBL.TBLXCloudManager.IsDeviceSmallEnoughToScaleBP
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTBLXCloudManager::STATIC_IsDeviceSmallEnoughToScaleBP(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLXCloudManager.IsDeviceSmallEnoughToScaleBP");
		
		UTBLXCloudManager_IsDeviceSmallEnoughToScaleBP_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016FD720
	 * 		Name   -> Function TBL.TBLXCloudManager.BindWidget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EXCloudWidgetBehavior                          WidgetType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTBLXCloudManager::BindWidget(class UWidget* Widget, TBL_EXCloudWidgetBehavior WidgetType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TBLXCloudManager.BindWidget");
		
		UTBLXCloudManager_BindWidget_Params params {};
		params.Widget = Widget;
		params.WidgetType = WidgetType;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTBLXCloudManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTBLXCloudManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TBLXCloudManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702CC0
	 * 		Name   -> Function TBL.TDMLTSGameMode.PostWarmupGivePlayersControl
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATDMLTSGameMode::PostWarmupGivePlayersControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TDMLTSGameMode.PostWarmupGivePlayersControl");
		
		ATDMLTSGameMode_PostWarmupGivePlayersControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E90CF0
	 * 		Name   -> Function TBL.TDMLTSGameMode.OnReachedEndTime
	 * 		Flags  -> (Final, Native, Private)
	 */
	void ATDMLTSGameMode::OnReachedEndTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TDMLTSGameMode.OnReachedEndTime");
		
		ATDMLTSGameMode_OnReachedEndTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATDMLTSGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATDMLTSGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TDMLTSGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ULTSTDMGameModeSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ULTSTDMGameModeSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.LTSTDMGameModeSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702EA0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.SetTeamCapturePointProperties
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FTeamCapturePointComponentProperties        Props                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::SetTeamCapturePointProperties(const struct FTeamCapturePointComponentProperties& Props)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.SetTeamCapturePointProperties");
		
		UTeamCapturePointComponent_SetTeamCapturePointProperties_Params params {};
		params.Props = Props;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702D20
	 * 		Name   -> Function TBL.TeamCapturePointComponent.SetCaptureState
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		TBL_ETeamCapturePointComponentState                NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::SetCaptureState(TBL_ETeamCapturePointComponentState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.SetCaptureState");
		
		UTeamCapturePointComponent_SetCaptureState_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702D00
	 * 		Name   -> Function TBL.TeamCapturePointComponent.ResetCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTeamCapturePointComponent::ResetCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.ResetCapturePoint");
		
		UTeamCapturePointComponent_ResetCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702CE0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.RefreshActorsInCaptureZone
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTeamCapturePointComponent::RefreshActorsInCaptureZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.RefreshActorsInCaptureZone");
		
		UTeamCapturePointComponent_RefreshActorsInCaptureZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016391F0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.PlayerSatisfiesCaptureRequirments
	 * 		Flags  -> (Native, Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		class ATBLCharacter*                               Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UTeamCapturePointComponent::PlayerSatisfiesCaptureRequirments(class ATBLCharacter* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.PlayerSatisfiesCaptureRequirments");
		
		UTeamCapturePointComponent_PlayerSatisfiesCaptureRequirments_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702BE0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnTrackedCharacterKilled
	 * 		Flags  -> (Native, Public, HasOutParms)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      DamageEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::OnTrackedCharacterKilled(const struct FDeathDamageTakenEvent& DamageEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnTrackedCharacterKilled");
		
		UTeamCapturePointComponent_OnTrackedCharacterKilled_Params params {};
		params.DamageEvent = DamageEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EA5D10
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnTrackedCharacterDestroyed
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      DestroyedActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::OnTrackedCharacterDestroyed(class AActor* DestroyedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnTrackedCharacterDestroyed");
		
		UTeamCapturePointComponent_OnTrackedCharacterDestroyed_Params params {};
		params.DestroyedActor = DestroyedActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702BC0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnRep_Properties
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTeamCapturePointComponent::OnRep_Properties()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnRep_Properties");
		
		UTeamCapturePointComponent_OnRep_Properties_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702BA0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnRep_Progress
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTeamCapturePointComponent::OnRep_Progress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnRep_Progress");
		
		UTeamCapturePointComponent_OnRep_Progress_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702B80
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnRep_PlayersInTeamCapturePoint
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTeamCapturePointComponent::OnRep_PlayersInTeamCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnRep_PlayersInTeamCapturePoint");
		
		UTeamCapturePointComponent_OnRep_PlayersInTeamCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702B60
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnRep_OwningTeamChanged
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UTeamCapturePointComponent::OnRep_OwningTeamChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnRep_OwningTeamChanged");
		
		UTeamCapturePointComponent_OnRep_OwningTeamChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702B40
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnRep_ControllingTeamChanged
	 * 		Flags  -> (Final, Native, Public)
	 */
	void UTeamCapturePointComponent::OnRep_ControllingTeamChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnRep_ControllingTeamChanged");
		
		UTeamCapturePointComponent_OnRep_ControllingTeamChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E8FC70
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnRep_CaptureState
	 * 		Flags  -> (Native, Public)
	 */
	void UTeamCapturePointComponent::OnRep_CaptureState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnRep_CaptureState");
		
		UTeamCapturePointComponent_OnRep_CaptureState_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E96EF0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnDeactivated
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::OnDeactivated(class UActorComponent* Component)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnDeactivated");
		
		UTeamCapturePointComponent_OnDeactivated_Params params {};
		params.Component = Component;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702A70
	 * 		Name   -> Function TBL.TeamCapturePointComponent.OnActivated
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class UActorComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReset                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::OnActivated(class UActorComponent* Component, bool bReset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.OnActivated");
		
		UTeamCapturePointComponent_OnActivated_Params params {};
		params.Component = Component;
		params.bReset = bReset;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01610E60
	 * 		Name   -> Function TBL.TeamCapturePointComponent.GetProgressGainedByTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class ATBLTeam* UTeamCapturePointComponent::GetProgressGainedByTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.GetProgressGainedByTeam");
		
		UTeamCapturePointComponent_GetProgressGainedByTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017029E0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.GetPlayerNumbersForFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UTeamCapturePointComponent::GetPlayerNumbersForFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.GetPlayerNumbersForFaction");
		
		UTeamCapturePointComponent_GetPlayerNumbersForFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017029C0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.GetOwningTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class ATBLTeam* UTeamCapturePointComponent::GetOwningTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.GetOwningTeam");
		
		UTeamCapturePointComponent_GetOwningTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702880
	 * 		Name   -> Function TBL.TeamCapturePointComponent.GetIsImmune
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UTeamCapturePointComponent::GetIsImmune()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.GetIsImmune");
		
		UTeamCapturePointComponent_GetIsImmune_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017027B0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.GetControllingTeam
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		bool                                               IsTie                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLTeam* UTeamCapturePointComponent::GetControllingTeam(bool* IsTie)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.GetControllingTeam");
		
		UTeamCapturePointComponent_GetControllingTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (IsTie != nullptr)
			*IsTie = params.IsTie;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00E96F80
	 * 		Name   -> Function TBL.TeamCapturePointComponent.EndOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.EndOverlap");
		
		UTeamCapturePointComponent_EndOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702790
	 * 		Name   -> Function TBL.TeamCapturePointComponent.DeactivateTeamCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTeamCapturePointComponent::DeactivateTeamCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.DeactivateTeamCapturePoint");
		
		UTeamCapturePointComponent_DeactivateTeamCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017026C0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.BeginOverlap
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamCapturePointComponent::BeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.BeginOverlap");
		
		UTeamCapturePointComponent_BeginOverlap_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017026A0
	 * 		Name   -> Function TBL.TeamCapturePointComponent.ActivateTeamCapturePoint
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	void UTeamCapturePointComponent::ActivateTeamCapturePoint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamCapturePointComponent.ActivateTeamCapturePoint");
		
		UTeamCapturePointComponent_ActivateTeamCapturePoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTeamCapturePointComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeamCapturePointComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TeamCapturePointComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702E20
	 * 		Name   -> Function TBL.TeamOwnershipComponent.SetOwnerTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class ATBLTeam*                                    Team                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamOwnershipComponent::SetOwnerTeam(class ATBLTeam* Team)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamOwnershipComponent.SetOwnerTeam");
		
		UTeamOwnershipComponent_SetOwnerTeam_Params params {};
		params.Team = Team;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702DA0
	 * 		Name   -> Function TBL.TeamOwnershipComponent.SetOwnerFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamOwnershipComponent::SetOwnerFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamOwnershipComponent.SetOwnerFaction");
		
		UTeamOwnershipComponent_SetOwnerFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702DA0
	 * 		Name   -> Function TBL.TeamOwnershipComponent.SetFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFaction                                       Faction                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTeamOwnershipComponent::SetFaction(TBL_EFaction Faction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamOwnershipComponent.SetFaction");
		
		UTeamOwnershipComponent_SetFaction_Params params {};
		params.Faction = Faction;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00B74610
	 * 		Name   -> Function TBL.TeamOwnershipComponent.OnRep_OwnerFaction
	 * 		Flags  -> (Native, Public)
	 */
	void UTeamOwnershipComponent::OnRep_OwnerFaction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamOwnershipComponent.OnRep_OwnerFaction");
		
		UTeamOwnershipComponent_OnRep_OwnerFaction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702990
	 * 		Name   -> Function TBL.TeamOwnershipComponent.GetOwnerTeam
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	class ATBLTeam* UTeamOwnershipComponent::GetOwnerTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamOwnershipComponent.GetOwnerTeam");
		
		UTeamOwnershipComponent_GetOwnerTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01702850
	 * 		Name   -> Function TBL.TeamOwnershipComponent.GetFaction
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	TBL_EFaction UTeamOwnershipComponent::GetFaction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TeamOwnershipComponent.GetFaction");
		
		UTeamOwnershipComponent_GetFaction_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTeamOwnershipComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTeamOwnershipComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TeamOwnershipComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C5F0
	 * 		Name   -> Function TBL.UtilityAI_TargetGenerator.IsValidTarget
	 * 		Flags  -> (Native, Public, HasOutParms, Const)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          Context                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool UUtilityAI_TargetGenerator::IsValidTarget(const struct FUtilityAI_Context& Context)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_TargetGenerator.IsValidTarget");
		
		UUtilityAI_TargetGenerator_IsValidTarget_Params params {};
		params.Context = Context;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C3F0
	 * 		Name   -> Function TBL.UtilityAI_TargetGenerator.GetTargetObjects
	 * 		Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	TArray<class UObject*> UUtilityAI_TargetGenerator::GetTargetObjects(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_TargetGenerator.GetTargetObjects");
		
		UUtilityAI_TargetGenerator_GetTargetObjects_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C2F0
	 * 		Name   -> Function TBL.UtilityAI_TargetGenerator.GetTargetLocations
	 * 		Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	TArray<struct FVector> UUtilityAI_TargetGenerator::GetTargetLocations(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_TargetGenerator.GetTargetLocations");
		
		UUtilityAI_TargetGenerator_GetTargetLocations_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C1D0
	 * 		Name   -> Function TBL.UtilityAI_TargetGenerator.GetTargetHybridLocations
	 * 		Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FUtilityAITargetHybrid>              Locations                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUtilityAI_TargetGenerator::GetTargetHybridLocations(const struct FUtilityAI_Context& C, TArray<struct FUtilityAITargetHybrid>* Locations)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_TargetGenerator.GetTargetHybridLocations");
		
		UUtilityAI_TargetGenerator_GetTargetHybridLocations_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Locations != nullptr)
			*Locations = params.Locations;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C0D0
	 * 		Name   -> Function TBL.UtilityAI_TargetGenerator.GetTargetActors
	 * 		Flags  -> (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	TArray<class AActor*> UUtilityAI_TargetGenerator::GetTargetActors(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_TargetGenerator.GetTargetActors");
		
		UUtilityAI_TargetGenerator_GetTargetActors_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_TargetGenerator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_TargetGenerator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_TargetGenerator");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_ActorsWithAITag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_ActorsWithAITag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_ActorsWithAITag");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_ActorsWithTag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_ActorsWithTag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_ActorsWithTag");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_BlackboardValue.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_BlackboardValue::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_BlackboardValue");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_CharactersWithinRangeOfMe.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_CharactersWithinRangeOfMe::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_CharactersWithinRangeOfMe");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_DestinationVolume_WithAITag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_DestinationVolume_WithAITag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_DestinationVolume_WithAITag");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_InsideCombatZone.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_InsideCombatZone::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_InsideCombatZone");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_OwnCharacter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_OwnCharacter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_OwnCharacter");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_OwnLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_OwnLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_OwnLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_PerceivedCharacters.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_PerceivedCharacters::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_PerceivedCharacters");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017028A0
	 * 		Name   -> Function TBL.TG_PointsOnGrid.GetLocationsAroundTarget
	 * 		Flags  -> (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	TArray<struct FVector> UTG_PointsOnGrid::GetLocationsAroundTarget(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TG_PointsOnGrid.GetLocationsAroundTarget");
		
		UTG_PointsOnGrid_GetLocationsAroundTarget_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_PointsOnGrid.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_PointsOnGrid::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_PointsOnGrid");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_PointsAroundActorsWithAITag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_PointsAroundActorsWithAITag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_PointsAroundActorsWithAITag");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_PointsAroundMe.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_PointsAroundMe::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_PointsAroundMe");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_PointsBesideActorsWithAITag.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_PointsBesideActorsWithAITag::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_PointsBesideActorsWithAITag");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_PointsWithinActorBounds.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_PointsWithinActorBounds::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_PointsWithinActorBounds");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTG_RallyPoints.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTG_RallyPoints::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TG_RallyPoints");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATransition.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATransition::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.Transition");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.TrapEventInterface.HandleTrapEvent
	 * 		Flags  -> (Event, Public, BlueprintEvent)
	 * Parameters:
	 * 		TBL_ETrapEventResult                               Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               TargetCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UTrapEventInterface::HandleTrapEvent(TBL_ETrapEventResult Result, class ATBLCharacter* TargetCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TrapEventInterface.HandleTrapEvent");
		
		UTrapEventInterface_HandleTrapEvent_Params params {};
		params.Result = Result;
		params.TargetCharacter = TargetCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UTrapEventInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UTrapEventInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TrapEventInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708730
	 * 		Name   -> Function TBL.TutorialGameMode.SetPlayerStart
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATutorialGameMode::SetPlayerStart(class AActor* Actor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TutorialGameMode.SetPlayerStart");
		
		ATutorialGameMode_SetPlayerStart_Params params {};
		params.Actor = Actor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017086B0
	 * 		Name   -> Function TBL.TutorialGameMode.SetLoadout
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UClass*                                      Loadout                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ATutorialGameMode::SetLoadout(class UClass* Loadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.TutorialGameMode.SetLoadout");
		
		ATutorialGameMode_SetLoadout_Params params {};
		params.Loadout = Loadout;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction ATutorialGameMode.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATutorialGameMode::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.TutorialGameMode");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708AD0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.UnregisterDisplayComponent
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 */
	void UUIBlueprintLibrary::STATIC_UnregisterDisplayComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.UnregisterDisplayComponent");
		
		UUIBlueprintLibrary_UnregisterDisplayComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708830
	 * 		Name   -> Function TBL.UIBlueprintLibrary.StopListeningForKeybindings
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	void UUIBlueprintLibrary::STATIC_StopListeningForKeybindings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.StopListeningForKeybindings");
		
		UUIBlueprintLibrary_StopListeningForKeybindings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017087E0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.ShouldEnableNewHomeScreen
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UUIBlueprintLibrary::STATIC_ShouldEnableNewHomeScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.ShouldEnableNewHomeScreen");
		
		UUIBlueprintLibrary_ShouldEnableNewHomeScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017087B0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.ShouldDisableWorkInProgressFeatures
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UUIBlueprintLibrary::STATIC_ShouldDisableWorkInProgressFeatures()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.ShouldDisableWorkInProgressFeatures");
		
		UUIBlueprintLibrary_ShouldDisableWorkInProgressFeatures_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708600
	 * 		Name   -> Function TBL.UIBlueprintLibrary.SetInputActionMode
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APlayerController*                           InPlayerController                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EInputActionMode                               InInputActionMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUIBlueprintLibrary::STATIC_SetInputActionMode(class APlayerController* InPlayerController, TBL_EInputActionMode InInputActionMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.SetInputActionMode");
		
		UUIBlueprintLibrary_SetInputActionMode_Params params {};
		params.InPlayerController = InPlayerController;
		params.InInputActionMode = InInputActionMode;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708310
	 * 		Name   -> Function TBL.UIBlueprintLibrary.SendGlobalGameNotification
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EGlobalGameNotificationCategory                Category                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Title                                                      (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        Body                                                       (Parm, NativeAccessSpecifierPublic)
	 * 		class FName                                        Subcategory                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     Data                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUIBlueprintLibrary::STATIC_SendGlobalGameNotification(TBL_EGlobalGameNotificationCategory Category, const class FText& Title, const class FText& Body, const class FName& Subcategory, class UObject* Data, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.SendGlobalGameNotification");
		
		UUIBlueprintLibrary_SendGlobalGameNotification_Params params {};
		params.Category = Category;
		params.Title = Title;
		params.Body = Body;
		params.Subcategory = Subcategory;
		params.Data = Data;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708140
	 * 		Name   -> Function TBL.UIBlueprintLibrary.RouteOnKeyUpToWidget
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGeometry                                   MyGeometry                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FKeyEvent                                   InKeyEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FEventReply UUIBlueprintLibrary::STATIC_RouteOnKeyUpToWidget(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.RouteOnKeyUpToWidget");
		
		UUIBlueprintLibrary_RouteOnKeyUpToWidget_Params params {};
		params.Widget = Widget;
		params.MyGeometry = MyGeometry;
		params.InKeyEvent = InKeyEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707F70
	 * 		Name   -> Function TBL.UIBlueprintLibrary.RouteOnKeyDownToWidget
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGeometry                                   MyGeometry                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FKeyEvent                                   InKeyEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FEventReply UUIBlueprintLibrary::STATIC_RouteOnKeyDownToWidget(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.RouteOnKeyDownToWidget");
		
		UUIBlueprintLibrary_RouteOnKeyDownToWidget_Params params {};
		params.Widget = Widget;
		params.MyGeometry = MyGeometry;
		params.InKeyEvent = InKeyEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707DD0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.RouteOnKeyCharToWidget
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGeometry                                   MyGeometry                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FCharacterEvent                             InCharEvent                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FEventReply UUIBlueprintLibrary::STATIC_RouteOnKeyCharToWidget(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FCharacterEvent& InCharEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.RouteOnKeyCharToWidget");
		
		UUIBlueprintLibrary_RouteOnKeyCharToWidget_Params params {};
		params.Widget = Widget;
		params.MyGeometry = MyGeometry;
		params.InCharEvent = InCharEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707BF0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.RouteOnAnalogValueChanged
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FGeometry                                   MyGeometry                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FAnalogInputEvent                           InAnalogInputEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FEventReply UUIBlueprintLibrary::STATIC_RouteOnAnalogValueChanged(class UWidget* Widget, const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.RouteOnAnalogValueChanged");
		
		UUIBlueprintLibrary_RouteOnAnalogValueChanged_Params params {};
		params.Widget = Widget;
		params.MyGeometry = MyGeometry;
		params.InAnalogInputEvent = InAnalogInputEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707B80
	 * 		Name   -> Function TBL.UIBlueprintLibrary.ResetAllAnimations
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UUserWidget*                                 Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUIBlueprintLibrary::STATIC_ResetAllAnimations(class UUserWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.ResetAllAnimations");
		
		UUIBlueprintLibrary_ResetAllAnimations_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707AF0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.RegisterDisplayComponent
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 */
	void UUIBlueprintLibrary::STATIC_RegisterDisplayComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.RegisterDisplayComponent");
		
		UUIBlueprintLibrary_RegisterDisplayComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707920
	 * 		Name   -> Function TBL.UIBlueprintLibrary.RandomLinearColorFromHsluv
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		float                                              h_min                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              h_max                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              s_min                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              s_max                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              l_min                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              l_max                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FLinearColor UUIBlueprintLibrary::STATIC_RandomLinearColorFromHsluv(float h_min, float h_max, float s_min, float s_max, float l_min, float l_max)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.RandomLinearColorFromHsluv");
		
		UUIBlueprintLibrary_RandomLinearColorFromHsluv_Params params {};
		params.h_min = h_min;
		params.h_max = h_max;
		params.s_min = s_min;
		params.s_max = s_max;
		params.l_min = l_min;
		params.l_max = l_max;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707780
	 * 		Name   -> Function TBL.UIBlueprintLibrary.ListenForKeybindings
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	void UUIBlueprintLibrary::STATIC_ListenForKeybindings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.ListenForKeybindings");
		
		UUIBlueprintLibrary_ListenForKeybindings_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707670
	 * 		Name   -> Function TBL.UIBlueprintLibrary.LinearColorFromHsluv
	 * 		Flags  -> (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
	 * Parameters:
	 * 		float                                              H                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              S                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              L                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FLinearColor UUIBlueprintLibrary::STATIC_LinearColorFromHsluv(float H, float S, float L)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.LinearColorFromHsluv");
		
		UUIBlueprintLibrary_LinearColorFromHsluv_Params params {};
		params.H = H;
		params.S = S;
		params.L = L;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707550
	 * 		Name   -> Function TBL.UIBlueprintLibrary.Key_GetShortDisplayName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UUIBlueprintLibrary::STATIC_Key_GetShortDisplayName(const struct FKey& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.Key_GetShortDisplayName");
		
		UUIBlueprintLibrary_Key_GetShortDisplayName_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707480
	 * 		Name   -> Function TBL.UIBlueprintLibrary.Key_GetFName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UUIBlueprintLibrary::STATIC_Key_GetFName(const struct FKey& Key)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.Key_GetFName");
		
		UUIBlueprintLibrary_Key_GetFName_Params params {};
		params.Key = Key;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707380
	 * 		Name   -> Function TBL.UIBlueprintLibrary.IsHandled
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FEventReply                                 EventReply                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool UUIBlueprintLibrary::STATIC_IsHandled(const struct FEventReply& EventReply)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.IsHandled");
		
		UUIBlueprintLibrary_IsHandled_Params params {};
		params.EventReply = EventReply;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706FB0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetOwningTBLPlayerController
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class ATBLPlayerController* UUIBlueprintLibrary::STATIC_GetOwningTBLPlayerController(class UObject* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetOwningTBLPlayerController");
		
		UUIBlueprintLibrary_GetOwningTBLPlayerController_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706F30
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetOwningTBLLocalPlayer
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTBLLocalPlayer* UUIBlueprintLibrary::STATIC_GetOwningTBLLocalPlayer(class UObject* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetOwningTBLLocalPlayer");
		
		UUIBlueprintLibrary_GetOwningTBLLocalPlayer_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706D40
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetNavigationDirectionFromKey
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FKeyEvent                                   InKeyEvent                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bInvalid                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	SlateCore_EUINavigation UUIBlueprintLibrary::STATIC_GetNavigationDirectionFromKey(const struct FKeyEvent& InKeyEvent, bool* bInvalid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetNavigationDirectionFromKey");
		
		UUIBlueprintLibrary_GetNavigationDirectionFromKey_Params params {};
		params.InKeyEvent = InKeyEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bInvalid != nullptr)
			*bInvalid = params.bInvalid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706BD0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetNavigationDirectionFromAnalog
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		struct FAnalogInputEvent                           InAnalogEvent                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bInvalid                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	SlateCore_EUINavigation UUIBlueprintLibrary::STATIC_GetNavigationDirectionFromAnalog(const struct FAnalogInputEvent& InAnalogEvent, bool* bInvalid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetNavigationDirectionFromAnalog");
		
		UUIBlueprintLibrary_GetNavigationDirectionFromAnalog_Params params {};
		params.InAnalogEvent = InAnalogEvent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bInvalid != nullptr)
			*bInvalid = params.bInvalid;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706840
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetKeyTextFromActionBindingName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ActionName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FInputActionKeyMapping                      ActionMappingOut                                           (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bLongDisplayName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EGamepadInputMode                              InputMode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText UUIBlueprintLibrary::STATIC_GetKeyTextFromActionBindingName(const class FString& ActionName, struct FInputActionKeyMapping* ActionMappingOut, bool bLongDisplayName, TBL_EGamepadInputMode InputMode, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetKeyTextFromActionBindingName");
		
		UUIBlueprintLibrary_GetKeyTextFromActionBindingName_Params params {};
		params.ActionName = ActionName;
		params.bLongDisplayName = bLongDisplayName;
		params.InputMode = InputMode;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ActionMappingOut != nullptr)
			*ActionMappingOut = params.ActionMappingOut;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706620
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetKeyFromButtonCallout
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		struct FButtonCallout                              Callout                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		class UWidget*                                     WorldContextObject                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FKey UUIBlueprintLibrary::STATIC_GetKeyFromButtonCallout(const struct FButtonCallout& Callout, class UWidget* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetKeyFromButtonCallout");
		
		UUIBlueprintLibrary_GetKeyFromButtonCallout_Params params {};
		params.Callout = Callout;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017064B0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetKeyFromAxisBindingName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      ActionName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FKey UUIBlueprintLibrary::STATIC_GetKeyFromAxisBindingName(const class FString& ActionName, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetKeyFromAxisBindingName");
		
		UUIBlueprintLibrary_GetKeyFromAxisBindingName_Params params {};
		params.ActionName = ActionName;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706340
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetKeyFromActionBindingName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FString                                      ActionName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FKey UUIBlueprintLibrary::STATIC_GetKeyFromActionBindingName(const class FString& ActionName, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetKeyFromActionBindingName");
		
		UUIBlueprintLibrary_GetKeyFromActionBindingName_Params params {};
		params.ActionName = ActionName;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017061F0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetKeyDisplayInfoFromTable
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FKey                                        Key                                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDataTable*                                  Table                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FKeyDisplayInfo UUIBlueprintLibrary::STATIC_GetKeyDisplayInfoFromTable(const struct FKey& Key, class UDataTable* Table)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetKeyDisplayInfoFromTable");
		
		UUIBlueprintLibrary_GetKeyDisplayInfoFromTable_Params params {};
		params.Key = Key;
		params.Table = Table;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706100
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetGamepadBackButton
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	struct FKey UUIBlueprintLibrary::STATIC_GetGamepadBackButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetGamepadBackButton");
		
		UUIBlueprintLibrary_GetGamepadBackButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706090
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetGamepadAcceptButton
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 */
	struct FKey UUIBlueprintLibrary::STATIC_GetGamepadAcceptButton()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetGamepadAcceptButton");
		
		UUIBlueprintLibrary_GetGamepadAcceptButton_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705F30
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetButtonCallouts
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UWidget*                                     Target                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FButtonCallout> UUIBlueprintLibrary::STATIC_GetButtonCallouts(class UWidget* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetButtonCallouts");
		
		UUIBlueprintLibrary_GetButtonCallouts_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705DF0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetAllMapNames
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TArray<class FName>                                OutAssetNames                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MapPath                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUIBlueprintLibrary::STATIC_GetAllMapNames(TArray<class FName>* OutAssetNames, const class FString& MapPath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetAllMapNames");
		
		UUIBlueprintLibrary_GetAllMapNames_Params params {};
		params.MapPath = MapPath;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAssetNames != nullptr)
			*OutAssetNames = params.OutAssetNames;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705B90
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetAllKeysFromActionBindingName
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      ActionName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FKey>                                NonGamePad                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FKey>                                Gamepad                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUIBlueprintLibrary::STATIC_GetAllKeysFromActionBindingName(const class FString& ActionName, TArray<struct FKey>* NonGamePad, TArray<struct FKey>* Gamepad, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetAllKeysFromActionBindingName");
		
		UUIBlueprintLibrary_GetAllKeysFromActionBindingName_Params params {};
		params.ActionName = ActionName;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (NonGamePad != nullptr)
			*NonGamePad = params.NonGamePad;
		if (Gamepad != nullptr)
			*Gamepad = params.Gamepad;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705B10
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetActiveScreenManagerImpure
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTBLScreenManager* UUIBlueprintLibrary::STATIC_GetActiveScreenManagerImpure(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetActiveScreenManagerImpure");
		
		UUIBlueprintLibrary_GetActiveScreenManagerImpure_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705B10
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetActiveScreenManager
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTBLScreenManager* UUIBlueprintLibrary::STATIC_GetActiveScreenManager(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetActiveScreenManager");
		
		UUIBlueprintLibrary_GetActiveScreenManager_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017059D0
	 * 		Name   -> Function TBL.UIBlueprintLibrary.GetActionBindingFromName
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FInputActionKeyMapping UUIBlueprintLibrary::STATIC_GetActionBindingFromName(const class FName& ActionName, class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.GetActionBindingFromName");
		
		UUIBlueprintLibrary_GetActionBindingFromName_Params params {};
		params.ActionName = ActionName;
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705960
	 * 		Name   -> Function TBL.UIBlueprintLibrary.FocusOnBestWidgetOrChild
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWidget*                                     Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUIBlueprintLibrary::STATIC_FocusOnBestWidgetOrChild(class UWidget* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.FocusOnBestWidgetOrChild");
		
		UUIBlueprintLibrary_FocusOnBestWidgetOrChild_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705840
	 * 		Name   -> Function TBL.UIBlueprintLibrary.AttemptThrottledOnKilledUIActions
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		TBL_EFrameThrottleBranch                           Branches                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUIBlueprintLibrary::STATIC_AttemptThrottledOnKilledUIActions(TBL_EFrameThrottleBranch* Branches)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.AttemptThrottledOnKilledUIActions");
		
		UUIBlueprintLibrary_AttemptThrottledOnKilledUIActions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Branches != nullptr)
			*Branches = params.Branches;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705710
	 * 		Name   -> Function TBL.UIBlueprintLibrary.AddHudMarkerComponentToActor
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TBL_EFaction                                       VisibleToFaction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      Class                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bReplicates                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UHudMarkerDisplayComponent* UUIBlueprintLibrary::STATIC_AddHudMarkerComponentToActor(class AActor* Actor, TBL_EFaction VisibleToFaction, class UClass* Class, bool bReplicates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UIBlueprintLibrary.AddHudMarkerComponentToActor");
		
		UUIBlueprintLibrary_AddHudMarkerComponentToActor_Params params {};
		params.Actor = Actor;
		params.VisibleToFaction = VisibleToFaction;
		params.Class = Class;
		params.bReplicates = bReplicates;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUIBlueprintLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUIBlueprintLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UIBlueprintLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUseItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUseItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UseItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01708850
	 * 		Name   -> Function TBL.UserFeedbackAndBugReportsLibrary.SubmitUserFeedback
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FUserFeedback                               Report                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeHardwareInfo                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UUserFeedbackAndBugReportsLibrary::STATIC_SubmitUserFeedback(class UObject* WorldContextObject, const struct FUserFeedback& Report, bool bIncludeHardwareInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UserFeedbackAndBugReportsLibrary.SubmitUserFeedback");
		
		UUserFeedbackAndBugReportsLibrary_SubmitUserFeedback_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.Report = Report;
		params.bIncludeHardwareInfo = bIncludeHardwareInfo;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017072C0
	 * 		Name   -> Function TBL.UserFeedbackAndBugReportsLibrary.GetUserHashedID
	 * 		Flags  -> (Final, Native, Static, Public)
	 */
	class FString UUserFeedbackAndBugReportsLibrary::STATIC_GetUserHashedID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UserFeedbackAndBugReportsLibrary.GetUserHashedID");
		
		UUserFeedbackAndBugReportsLibrary_GetUserHashedID_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706170
	 * 		Name   -> Function TBL.UserFeedbackAndBugReportsLibrary.GetHardwareInformation
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 */
	class FString UUserFeedbackAndBugReportsLibrary::STATIC_GetHardwareInformation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UserFeedbackAndBugReportsLibrary.GetHardwareInformation");
		
		UUserFeedbackAndBugReportsLibrary_GetHardwareInformation_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01705FC0
	 * 		Name   -> Function TBL.UserFeedbackAndBugReportsLibrary.GetGameInfo
	 * 		Flags  -> (Final, Native, Static, Public, BlueprintCallable)
	 * Parameters:
	 * 		class UWorld*                                      World                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString UUserFeedbackAndBugReportsLibrary::STATIC_GetGameInfo(class UWorld* World)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UserFeedbackAndBugReportsLibrary.GetGameInfo");
		
		UUserFeedbackAndBugReportsLibrary_GetGameInfo_Params params {};
		params.World = World;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUserFeedbackAndBugReportsLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUserFeedbackAndBugReportsLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UserFeedbackAndBugReportsLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_Behavior.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_Behavior::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_Behavior");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_BehaviorSet.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_BehaviorSet::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_BehaviorSet");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707220
	 * 		Name   -> Function TBL.UtilityAI_BlueprintLibrary.GetTargetType
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	TBL_EUtilityAI_TargetType UUtilityAI_BlueprintLibrary::STATIC_GetTargetType(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_BlueprintLibrary.GetTargetType");
		
		UUtilityAI_BlueprintLibrary_GetTargetType_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707180
	 * 		Name   -> Function TBL.UtilityAI_BlueprintLibrary.GetTargetObject
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class UObject* UUtilityAI_BlueprintLibrary::STATIC_GetTargetObject(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_BlueprintLibrary.GetTargetObject");
		
		UUtilityAI_BlueprintLibrary_GetTargetObject_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017070D0
	 * 		Name   -> Function TBL.UtilityAI_BlueprintLibrary.GetTargetLocation
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	struct FVector UUtilityAI_BlueprintLibrary::STATIC_GetTargetLocation(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_BlueprintLibrary.GetTargetLocation");
		
		UUtilityAI_BlueprintLibrary_GetTargetLocation_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01707030
	 * 		Name   -> Function TBL.UtilityAI_BlueprintLibrary.GetTargetActor
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class AActor* UUtilityAI_BlueprintLibrary::STATIC_GetTargetActor(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_BlueprintLibrary.GetTargetActor");
		
		UUtilityAI_BlueprintLibrary_GetTargetActor_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706E90
	 * 		Name   -> Function TBL.UtilityAI_BlueprintLibrary.GetOwnerCharacter
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	class ATBLCharacter* UUtilityAI_BlueprintLibrary::STATIC_GetOwnerCharacter(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_BlueprintLibrary.GetOwnerCharacter");
		
		UUtilityAI_BlueprintLibrary_GetOwnerCharacter_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01706B20
	 * 		Name   -> Function TBL.UtilityAI_BlueprintLibrary.GetMoveTargetLocation
	 * 		Flags  -> (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		struct FUtilityAI_Context                          C                                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	struct FVector UUtilityAI_BlueprintLibrary::STATIC_GetMoveTargetLocation(const struct FUtilityAI_Context& C)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_BlueprintLibrary.GetMoveTargetLocation");
		
		UUtilityAI_BlueprintLibrary_GetMoveTargetLocation_Params params {};
		params.C = C;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_BlueprintLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_BlueprintLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_BlueprintLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_DecisionMaker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_DecisionMaker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_DecisionMaker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BD60
	 * 		Name   -> Function TBL.UtilityAI_CombatDecisionMaker.GetIncomingAttackInfo
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	struct FIncomingAttackInfo UUtilityAI_CombatDecisionMaker::GetIncomingAttackInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.UtilityAI_CombatDecisionMaker.GetIncomingAttackInfo");
		
		UUtilityAI_CombatDecisionMaker_GetIncomingAttackInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UUtilityAI_CombatDecisionMaker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUtilityAI_CombatDecisionMaker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.UtilityAI_CombatDecisionMaker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C7F0
	 * 		Name   -> Function TBL.VaultMarker.UsePressed
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UInteractableComponent*                      InteractableComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AVaultMarker::UsePressed(class APawn* Pawn, class UInteractableComponent* InteractableComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VaultMarker.UsePressed");
		
		AVaultMarker_UsePressed_Params params {};
		params.Pawn = Pawn;
		params.InteractableComponent = InteractableComponent;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BB00
	 * 		Name   -> Function TBL.VaultMarker.CanVault
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool AVaultMarker::CanVault(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VaultMarker.CanVault");
		
		AVaultMarker_CanVault_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AVaultMarker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AVaultMarker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VaultMarker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVelocityCurveMovement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVelocityCurveMovement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VelocityCurveMovement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C6C0
	 * 		Name   -> Function TBL.VideoPlayerWidget.OnUserLoginDowngraded
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UVideoPlayerWidget::OnUserLoginDowngraded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VideoPlayerWidget.OnUserLoginDowngraded");
		
		UVideoPlayerWidget_OnUserLoginDowngraded_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVideoPlayerWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVideoPlayerWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VideoPlayerWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVirtualGoodAnnouncement.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVirtualGoodAnnouncement::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VirtualGoodAnnouncement");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVirtualGoodLoadout.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVirtualGoodLoadout::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VirtualGoodLoadout");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVirtualGoodLoadoutItem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVirtualGoodLoadoutItem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VirtualGoodLoadoutItem");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVirtualGoodTitle.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVirtualGoodTitle::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VirtualGoodTitle");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C6A0
	 * 		Name   -> Function TBL.VotingInstance.OnRep_VoteOptions
	 * 		Flags  -> (Final, Native, Protected)
	 */
	void UVotingInstance::OnRep_VoteOptions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.OnRep_VoteOptions");
		
		UVotingInstance_OnRep_VoteOptions_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C550
	 * 		Name   -> Function TBL.VotingInstance.IsValidForVoter
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerState*                             Voter                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVotingInstance::IsValidForVoter(class ATBLPlayerState* Voter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.IsValidForVoter");
		
		UVotingInstance_IsValidForVoter_Params params {};
		params.Voter = Voter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C520
	 * 		Name   -> Function TBL.VotingInstance.GetVotesNeededToPass
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int UVotingInstance::GetVotesNeededToPass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.GetVotesNeededToPass");
		
		UVotingInstance_GetVotesNeededToPass_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C4F0
	 * 		Name   -> Function TBL.VotingInstance.GetTimeLeft
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 */
	float UVotingInstance::GetTimeLeft()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.GetTimeLeft");
		
		UVotingInstance_GetTimeLeft_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C040
	 * 		Name   -> Function TBL.VotingInstance.GetPlayerVote
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLPlayerState*                             Voter                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName UVotingInstance::GetPlayerVote(class ATBLPlayerState* Voter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.GetPlayerVote");
		
		UVotingInstance_GetPlayerVote_Params params {};
		params.Voter = Voter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BF80
	 * 		Name   -> Function TBL.VotingInstance.GetNumVotesForOption
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class FName                                        VoteOption                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UVotingInstance::GetNumVotesForOption(const class FName& VoteOption)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.GetNumVotesForOption");
		
		UVotingInstance_GetNumVotesForOption_Params params {};
		params.VoteOption = VoteOption;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C010
	 * 		Name   -> Function TBL.VotingInstance.GetNumberOfVotes
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 */
	int UVotingInstance::GetNumberOfVotes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.GetNumberOfVotes");
		
		UVotingInstance_GetNumberOfVotes_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BDB0
	 * 		Name   -> Function TBL.VotingInstance.GetInstigator
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class ATBLPlayerState* UVotingInstance::GetInstigator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.GetInstigator");
		
		UVotingInstance_GetInstigator_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BB90
	 * 		Name   -> Function TBL.VotingInstance.CanVoteOccur
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLPlayerController*                        InstigatingControlle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        VoteOption                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVotingInstance::CanVoteOccur(class ATBLPlayerController* InstigatingControlle, const class FName& VoteOption)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.CanVoteOccur");
		
		UVotingInstance_CanVoteOccur_Params params {};
		params.InstigatingControlle = InstigatingControlle;
		params.VoteOption = VoteOption;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BA30
	 * 		Name   -> Function TBL.VotingInstance.CanPlayerVote
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLPlayerState*                             Voter                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        VoteOption                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVotingInstance::CanPlayerVote(class ATBLPlayerState* Voter, const class FName& VoteOption)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.CanPlayerVote");
		
		UVotingInstance_CanPlayerVote_Params params {};
		params.Voter = Voter;
		params.VoteOption = VoteOption;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170B990
	 * 		Name   -> Function TBL.VotingInstance.CanPlayerBeParticipant
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure, Const)
	 * Parameters:
	 * 		class ATBLPlayerState*                             Voter                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVotingInstance::CanPlayerBeParticipant(class ATBLPlayerState* Voter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.CanPlayerBeParticipant");
		
		UVotingInstance_CanPlayerBeParticipant_Params params {};
		params.Voter = Voter;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170B960
	 * 		Name   -> Function TBL.VotingInstance.CanHaveMoreThanOneValid
	 * 		Flags  -> (Native, Public, BlueprintCallable, BlueprintPure)
	 */
	bool UVotingInstance::CanHaveMoreThanOneValid()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingInstance.CanHaveMoreThanOneValid");
		
		UVotingInstance_CanHaveMoreThanOneValid_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVotingInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVotingInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VotingInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BDF0
	 * 		Name   -> Function TBL.KickVotingInstance.GetKickTarget
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
	 */
	class ATBLPlayerState* UKickVotingInstance::GetKickTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.KickVotingInstance.GetKickTarget");
		
		UKickVotingInstance_GetKickTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UKickVotingInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UKickVotingInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.KickVotingInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C8B0
	 * 		Name   -> Function TBL.VotingManagerComponent.VoteFinished
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		class FName                                        VoteResult                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVotingManagerComponent::VoteFinished(const class FName& VoteResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingManagerComponent.VoteFinished");
		
		UVotingManagerComponent_VoteFinished_Params params {};
		params.VoteResult = VoteResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170C6E0
	 * 		Name   -> Function TBL.VotingManagerComponent.RemoveInstance
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class UVotingInstance*                             VotingInstance                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UVotingManagerComponent::RemoveInstance(class UVotingInstance* VotingInstance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingManagerComponent.RemoveInstance");
		
		UVotingManagerComponent_RemoveInstance_Params params {};
		params.VotingInstance = VotingInstance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BEF0
	 * 		Name   -> Function TBL.VotingManagerComponent.GetNumVoteInstancesForClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      VoteClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UVotingManagerComponent::GetNumVoteInstancesForClass(class UClass* VoteClass)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingManagerComponent.GetNumVoteInstancesForClass");
		
		UVotingManagerComponent_GetNumVoteInstancesForClass_Params params {};
		params.VoteClass = VoteClass;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BE30
	 * 		Name   -> Function TBL.VotingManagerComponent.GetNumValidInstancesForClass
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class UClass*                                      VoteClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ATBLPlayerController*                        VotingController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int UVotingManagerComponent::GetNumValidInstancesForClass(class UClass* VoteClass, class ATBLPlayerController* VotingController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingManagerComponent.GetNumValidInstancesForClass");
		
		UVotingManagerComponent_GetNumValidInstancesForClass_Params params {};
		params.VoteClass = VoteClass;
		params.VotingController = VotingController;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170BC60
	 * 		Name   -> Function TBL.VotingManagerComponent.CanVoteStart
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable, BlueprintPure)
	 * Parameters:
	 * 		class ATBLPlayerController*                        VotingController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        VoteOption                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UVotingInstance*                             VotingInstance                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UVotingManagerComponent::CanVoteStart(class ATBLPlayerController* VotingController, const class FName& VoteOption, class UVotingInstance* VotingInstance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingManagerComponent.CanVoteStart");
		
		UVotingManagerComponent_CanVoteStart_Params params {};
		params.VotingController = VotingController;
		params.VoteOption = VoteOption;
		params.VotingInstance = VotingInstance;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170B820
	 * 		Name   -> Function TBL.VotingManagerComponent.BroadcastVoteFinished
	 * 		Flags  -> (Net, NetReliable, Native, Event, NetMulticast, Protected)
	 * Parameters:
	 * 		struct FVotingResults                              VoteResults                                                (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UVotingManagerComponent::BroadcastVoteFinished(const struct FVotingResults& VoteResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.VotingManagerComponent.BroadcastVoteFinished");
		
		UVotingManagerComponent_BroadcastVoteFinished_Params params {};
		params.VoteResults = VoteResults;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UVotingManagerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UVotingManagerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.VotingManagerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170FEC0
	 * 		Name   -> Function TBL.WaterActor.PerformDeadCharactersIteration
	 * 		Flags  -> (Final, Native, Private)
	 */
	void AWaterActor::PerformDeadCharactersIteration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WaterActor.PerformDeadCharactersIteration");
		
		AWaterActor_PerformDeadCharactersIteration_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> Function TBL.WaterActor.OnWaterOverlapEvent
	 * 		Flags  -> (Event, Public, HasDefaults, BlueprintEvent)
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void AWaterActor::OnWaterOverlapEvent(class AActor* Actor, const struct FVector& Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WaterActor.OnWaterOverlapEvent");
		
		AWaterActor_OnWaterOverlapEvent_Params params {};
		params.Actor = Actor;
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170FCB0
	 * 		Name   -> Function TBL.WaterActor.OnWaterMeshBeginOverlap
	 * 		Flags  -> (Final, Native, Public, HasOutParms)
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int                                                OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AWaterActor::OnWaterMeshBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WaterActor.OnWaterMeshBeginOverlap");
		
		AWaterActor_OnWaterMeshBeginOverlap_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170FAD0
	 * 		Name   -> Function TBL.WaterActor.OnKilled
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		struct FDeathDamageTakenEvent                      Event                                                      (ConstParm, Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void AWaterActor::OnKilled(const struct FDeathDamageTakenEvent& Event)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WaterActor.OnKilled");
		
		AWaterActor_OnKilled_Params params {};
		params.Event = Event;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction AWaterActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AWaterActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WaterActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWaveSpawnQueuer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWaveSpawnQueuer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WaveSpawnQueuer");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWeaponGroup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponGroup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WeaponGroup");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170FEE0
	 * 		Name   -> Function TBL.WeaponRackComponent.RefillItemsForPawn
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class APawn*                                       Pawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponRackComponent::RefillItemsForPawn(class APawn* Pawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponRackComponent.RefillItemsForPawn");
		
		UWeaponRackComponent_RefillItemsForPawn_Params params {};
		params.Pawn = Pawn;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWeaponRackComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponRackComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WeaponRackComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x017100C0
	 * 		Name   -> Function TBL.WeaponTracers.StartWeaponTracers
	 * 		Flags  -> (Native, Public)
	 */
	void UWeaponTracers::StartWeaponTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.StartWeaponTracers");
		
		UWeaponTracers_StartWeaponTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EAABE0
	 * 		Name   -> Function TBL.WeaponTracers.SetTracerFrame
	 * 		Flags  -> (Native, Protected)
	 */
	void UWeaponTracers::SetTracerFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.SetTracerFrame");
		
		UWeaponTracers_SetTracerFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170FF60
	 * 		Name   -> Function TBL.WeaponTracers.SaveHitActor
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::SaveHitActor(class AActor* HitActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.SaveHitActor");
		
		UWeaponTracers_SaveHitActor_Params params {};
		params.HitActor = HitActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F9A0
	 * 		Name   -> Function TBL.WeaponTracers.IsValid
	 * 		Flags  -> (Native, Public, Const)
	 * Parameters:
	 * 		class AInventoryItem*                              Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::IsValid(class AInventoryItem* Weapon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.IsValid");
		
		UWeaponTracers_IsValid_Params params {};
		params.Weapon = Weapon;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F8D0
	 * 		Name   -> Function TBL.WeaponTracers.Initialize
	 * 		Flags  -> (Native, Public)
	 * Parameters:
	 * 		class AInventoryItem*                              Weapon                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UWeaponTracersBlueprint*                     SourceObj                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::Initialize(class AInventoryItem* Weapon, class UWeaponTracersBlueprint* SourceObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.Initialize");
		
		UWeaponTracers_Initialize_Params params {};
		params.Weapon = Weapon;
		params.SourceObj = SourceObj;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F7F0
	 * 		Name   -> Function TBL.WeaponTracers.IgnoreHitActorWithStats
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::IgnoreHitActorWithStats(struct FHitResult* Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.IgnoreHitActorWithStats");
		
		UWeaponTracers_IgnoreHitActorWithStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F6C0
	 * 		Name   -> Function TBL.WeaponTracers.HandleReleaseClash
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitChar                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::HandleReleaseClash(struct FHitResult* Hit, class ATBLCharacter* HitChar)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleReleaseClash");
		
		UWeaponTracers_HandleReleaseClash_Params params {};
		params.HitChar = HitChar;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F590
	 * 		Name   -> Function TBL.WeaponTracers.HandleHitWorld
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class UTracerShape*                                TracerShape                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::HandleHitWorld(struct FHitResult* Hit, class UTracerShape* TracerShape)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleHitWorld");
		
		UWeaponTracers_HandleHitWorld_Params params {};
		params.TracerShape = TracerShape;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F450
	 * 		Name   -> Function TBL.WeaponTracers.HandleHitParry
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitChar                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::HandleHitParry(struct FHitResult* Hit, class ATBLCharacter* HitChar)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleHitParry");
		
		UWeaponTracers_HandleHitParry_Params params {};
		params.HitChar = HitChar;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F320
	 * 		Name   -> Function TBL.WeaponTracers.HandleHitInventoryItem
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              HitInventoryItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::HandleHitInventoryItem(struct FHitResult* Hit, class AInventoryItem* HitInventoryItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleHitInventoryItem");
		
		UWeaponTracers_HandleHitInventoryItem_Params params {};
		params.HitInventoryItem = HitInventoryItem;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F1F0
	 * 		Name   -> Function TBL.WeaponTracers.HandleHitDeadHorse
	 * 		Flags  -> (Final, Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AHorse*                                      HitHorse                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::HandleHitDeadHorse(struct FHitResult* Hit, class AHorse* HitHorse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleHitDeadHorse");
		
		UWeaponTracers_HandleHitDeadHorse_Params params {};
		params.HitHorse = HitHorse;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170F0C0
	 * 		Name   -> Function TBL.WeaponTracers.HandleHitDeadCharacter
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitChar                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::HandleHitDeadCharacter(struct FHitResult* Hit, class ATBLCharacter* HitChar)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleHitDeadCharacter");
		
		UWeaponTracers_HandleHitDeadCharacter_Params params {};
		params.HitChar = HitChar;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170EF80
	 * 		Name   -> Function TBL.WeaponTracers.HandleHitCharacter
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitChar                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::HandleHitCharacter(struct FHitResult* Hit, class ATBLCharacter* HitChar)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleHitCharacter");
		
		UWeaponTracers_HandleHitCharacter_Params params {};
		params.HitChar = HitChar;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170EEA0
	 * 		Name   -> Function TBL.WeaponTracers.HandleHitActorWithStats
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::HandleHitActorWithStats(struct FHitResult* Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleHitActorWithStats");
		
		UWeaponTracers_HandleHitActorWithStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170ED70
	 * 		Name   -> Function TBL.WeaponTracers.HandleEarlyHitCharacter
	 * 		Flags  -> (Native, Protected, HasOutParms)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               HitChar                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::HandleEarlyHitCharacter(struct FHitResult* Hit, class ATBLCharacter* HitChar)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.HandleEarlyHitCharacter");
		
		UWeaponTracers_HandleEarlyHitCharacter_Params params {};
		params.HitChar = HitChar;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170ED50
	 * 		Name   -> Function TBL.WeaponTracers.EndWeaponTracers
	 * 		Flags  -> (Native, Public)
	 */
	void UWeaponTracers::EndWeaponTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.EndWeaponTracers");
		
		UWeaponTracers_EndWeaponTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170ECC0
	 * 		Name   -> Function TBL.WeaponTracers.DrawDebugParryHit
	 * 		Flags  -> (Native, Protected, HasDefaults)
	 * Parameters:
	 * 		struct FVector                                     Loc                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWeaponTracers::DrawDebugParryHit(const struct FVector& Loc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DrawDebugParryHit");
		
		UWeaponTracers_DrawDebugParryHit_Params params {};
		params.Loc = Loc;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170ECA0
	 * 		Name   -> Function TBL.WeaponTracers.DoWeaponTracers
	 * 		Flags  -> (Native, Public)
	 */
	void UWeaponTracers::DoWeaponTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DoWeaponTracers");
		
		UWeaponTracers_DoWeaponTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EAB080
	 * 		Name   -> Function TBL.WeaponTracers.DoTracerCollisionCheck
	 * 		Flags  -> (Native, Protected)
	 */
	void UWeaponTracers::DoTracerCollisionCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DoTracerCollisionCheck");
		
		UWeaponTracers_DoTracerCollisionCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170EB60
	 * 		Name   -> Function TBL.WeaponTracers.DidReleaseClash
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OutCharacter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidReleaseClash(struct FHitResult* Hit, class ATBLCharacter** OutCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidReleaseClash");
		
		UWeaponTracers_DidReleaseClash_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutCharacter != nullptr)
			*OutCharacter = params.OutCharacter;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170EA20
	 * 		Name   -> Function TBL.WeaponTracers.DidHitWorld
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OutCharacter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitWorld(struct FHitResult* Hit, class ATBLCharacter** OutCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitWorld");
		
		UWeaponTracers_DidHitWorld_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutCharacter != nullptr)
			*OutCharacter = params.OutCharacter;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E8E0
	 * 		Name   -> Function TBL.WeaponTracers.DidHitParryBox
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OutCharacter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitParryBox(struct FHitResult* Hit, class ATBLCharacter** OutCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitParryBox");
		
		UWeaponTracers_DidHitParryBox_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutCharacter != nullptr)
			*OutCharacter = params.OutCharacter;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E7A0
	 * 		Name   -> Function TBL.WeaponTracers.DidHitInventoryItem
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AInventoryItem*                              OutInventoryItem                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitInventoryItem(struct FHitResult* Hit, class AInventoryItem** OutInventoryItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitInventoryItem");
		
		UWeaponTracers_DidHitInventoryItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutInventoryItem != nullptr)
			*OutInventoryItem = params.OutInventoryItem;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E660
	 * 		Name   -> Function TBL.WeaponTracers.DidHitDeadHorse
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class AHorse*                                      OutHorse                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitDeadHorse(struct FHitResult* Hit, class AHorse** OutHorse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitDeadHorse");
		
		UWeaponTracers_DidHitDeadHorse_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutHorse != nullptr)
			*OutHorse = params.OutHorse;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E520
	 * 		Name   -> Function TBL.WeaponTracers.DidHitDeadCharacter
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OutCharacter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitDeadCharacter(struct FHitResult* Hit, class ATBLCharacter** OutCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitDeadCharacter");
		
		UWeaponTracers_DidHitDeadCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutCharacter != nullptr)
			*OutCharacter = params.OutCharacter;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E3E0
	 * 		Name   -> Function TBL.WeaponTracers.DidHitCharacter
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OutCharacter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitCharacter(struct FHitResult* Hit, class ATBLCharacter** OutCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitCharacter");
		
		UWeaponTracers_DidHitCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutCharacter != nullptr)
			*OutCharacter = params.OutCharacter;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E2A0
	 * 		Name   -> Function TBL.WeaponTracers.DidHitActorWithStats
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OutCharacter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitActorWithStats(struct FHitResult* Hit, class ATBLCharacter** OutCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitActorWithStats");
		
		UWeaponTracers_DidHitActorWithStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutCharacter != nullptr)
			*OutCharacter = params.OutCharacter;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E210
	 * 		Name   -> Function TBL.WeaponTracers.DidHitActor
	 * 		Flags  -> (Final, Native, Protected, Const)
	 * Parameters:
	 * 		class AActor*                                      HitActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHitActor(class AActor* HitActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHitActor");
		
		UWeaponTracers_DidHitActor_Params params {};
		params.HitActor = HitActor;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170E130
	 * 		Name   -> Function TBL.WeaponTracers.DidHeadShot
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidHeadShot(struct FHitResult* Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidHeadShot");
		
		UWeaponTracers_DidHeadShot_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170DFF0
	 * 		Name   -> Function TBL.WeaponTracers.DidEarlyHit
	 * 		Flags  -> (Final, Native, Protected, HasOutParms, Const)
	 * Parameters:
	 * 		struct FHitResult                                  Hit                                                        (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		class ATBLCharacter*                               OutCharacter                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::DidEarlyHit(struct FHitResult* Hit, class ATBLCharacter** OutCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.DidEarlyHit");
		
		UWeaponTracers_DidEarlyHit_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Hit != nullptr)
			*Hit = params.Hit;
		if (OutCharacter != nullptr)
			*OutCharacter = params.OutCharacter;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EAAC00
	 * 		Name   -> Function TBL.WeaponTracers.CopyPreviousFrame
	 * 		Flags  -> (Native, Protected)
	 */
	void UWeaponTracers::CopyPreviousFrame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.CopyPreviousFrame");
		
		UWeaponTracers_CopyPreviousFrame_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170DF60
	 * 		Name   -> Function TBL.WeaponTracers.CheckTargetVisibility
	 * 		Flags  -> (Final, Native, Protected)
	 * Parameters:
	 * 		class AActor*                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool UWeaponTracers::CheckTargetVisibility(class AActor* Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.CheckTargetVisibility");
		
		UWeaponTracers_CheckTargetVisibility_Params params {};
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00EAB5C0
	 * 		Name   -> Function TBL.WeaponTracers.CalcTracerPoints
	 * 		Flags  -> (Native, Protected)
	 */
	void UWeaponTracers::CalcTracerPoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.CalcTracerPoints");
		
		UWeaponTracers_CalcTracerPoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x016AE4D0
	 * 		Name   -> Function TBL.WeaponTracers.ActivateAttackTracers
	 * 		Flags  -> (Native, Public)
	 */
	void UWeaponTracers::ActivateAttackTracers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WeaponTracers.ActivateAttackTracers");
		
		UWeaponTracers_ActivateAttackTracers_Params params {};
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWeaponTracers.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponTracers::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WeaponTracers");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWeaponTracersBlueprint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponTracersBlueprint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WeaponTracersBlueprint");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWeaponVsWeaponWorker.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWeaponVsWeaponWorker::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WeaponVsWeaponWorker");
		return ptr;
	}

	/**
	 * Function:
	 * 		Offset -> 0x01A3BCC0
	 * 		Name   -> DelegateFunction TBL.WebImageWidget.WebImageWidgetImageDownloadedDelegate__DelegateSignature
	 * 		Flags  -> (MulticastDelegate, Public, Delegate)
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWebImageWidget::WebImageWidgetImageDownloadedDelegate__DelegateSignature(bool bSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction TBL.WebImageWidget.WebImageWidgetImageDownloadedDelegate__DelegateSignature");
		
		UWebImageWidget_WebImageWidgetImageDownloadedDelegate__DelegateSignature_Params params {};
		params.bSuccess = bSuccess;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170FFE0
	 * 		Name   -> Function TBL.WebImageWidget.SetUrl
	 * 		Flags  -> (Final, Native, Public, BlueprintCallable)
	 * Parameters:
	 * 		class FString                                      InUrl                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWebImageWidget::SetUrl(const class FString& InUrl)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WebImageWidget.SetUrl");
		
		UWebImageWidget_SetUrl_Params params {};
		params.InUrl = InUrl;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x0170FA40
	 * 		Name   -> Function TBL.WebImageWidget.OnImageDownloaded
	 * 		Flags  -> (Final, Native, Public)
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UWebImageWidget::OnImageDownloaded(bool bSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function TBL.WebImageWidget.OnImageDownloaded");
		
		UWebImageWidget_OnImageDownloaded_Params params {};
		params.bSuccess = bSuccess;
		
		auto flags = fn->FunctionFlags;
		fn->FunctionFlags |= 0x00000400;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		Offset -> 0x00000000
	 * 		Name   -> PredefindFunction UWebImageWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UWebImageWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class TBL.WebImageWidget");
		return ptr;
	}

}


